package main 

var WebContentURL = []string{`web/index.html`,
  `web/javascript/app.js`,
  `web/javascript/d3.v3.min.js`,
  `web/javascript/jquery-3.1.1.min.js`,
  `web/javascript/jquery-ui.js`,
  `web/javascript/sockjs.min.js`,
  `web/style/Style.css`,
  `web/style/images/ui-icons_444444_256x240.png`,
  `web/style/images/ui-icons_555555_256x240.png`,
  `web/style/images/ui-icons_777620_256x240.png`,
  `web/style/images/ui-icons_777777_256x240.png`,
  `web/style/images/ui-icons_cc0000_256x240.png`,
  `web/style/images/ui-icons_ffffff_256x240.png`,
  `web/style/jquery-ui.css`,
  `web/style/tableStyle.css`,
  }
var WebContent = []string{`PCFET0NUWVBFIGh0bWw+DQo8aHRtbCBsYW5nPSJlbiI+DQo8aGVhZD4NCgk8bWV0YSBjaGFyc2V0PSJVVEYtOCI+DQoJPG1ldGEgaHR0cC1lcXVpdj0iQ2FjaGUtQ29udHJvbCIgY29udGVudD0ibm8tY2FjaGUiCS8+DQoJPG1ldGEgaHR0cC1lcXVpdj0iQ2FjaGUtY29udHJvbCIgY29udGVudD0ibWF4LWFnZT0wIiAvPg0KCTx0aXRsZT5kZWZhdWx0IFdlYnNpZGUgUGluZzwvdGl0bGU+DQoJPCEtLSA8bGluayByZWw9InNob3J0Y3V0IGljb24iIGhyZWY9Ii9mYXZpY29uLmljbyIgdHlwZT0iaW1hZ2UveC1pY29uIiAvPiAtLT48IS0tIGlucyBnbGVpY2hlIHZlcnplaWNobmlzIHdpZSBkaWUgSW5kZXguaHRtbCBsZWdlbiAtLT4NCgk8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJzdHlsZS9qcXVlcnktdWkuY3NzIiAvPg0KCTxsaW5rIHJlbD0ic3R5bGVzaGVldCIgdHlwZT0idGV4dC9jc3MiIGhyZWY9InN0eWxlL1N0eWxlLmNzcyIgLz4NCgk8bGluayByZWw9InN0eWxlc2hlZXQiIHR5cGU9InRleHQvY3NzIiBocmVmPSJzdHlsZS90YWJsZVN0eWxlLmNzcyIgLz4NCgk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqYXZhc2NyaXB0L3NvY2tqcy5taW4uanMiPjwvc2NyaXB0Pg0KCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImphdmFzY3JpcHQvZDMudjMubWluLmpzIj48L3NjcmlwdD4NCgk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqYXZhc2NyaXB0L2pxdWVyeS0zLjEuMS5taW4uanMiPjwvc2NyaXB0Pg0KCTxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImphdmFzY3JpcHQvanF1ZXJ5LXVpLmpzIj48L3NjcmlwdD4NCgk8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqYXZhc2NyaXB0L2FwcC5qcyI+PC9zY3JpcHQ+DQo8L2hlYWQ+DQo8Ym9keSBpZD0iYm9keSI+DQoJPCEtLUluZm8gUG9wdXAtLT4NCgk8ZGl2IHN0eWxlPSJkaXNwbGF5OiBub25lIiBpZD0iSW5mb1BvcFVwIiB0aXRsZT0iRGlhbG9nIFRpdGxlIj48L2Rpdj4NCgk8YnV0dG9uIGlkPSJQaW5nIj5QaW5nPC9idXR0b24+DQoJPGJ1dHRvbiBpZD0iRGlhbG9nIj5PcGVuIERpYWxvZzwvYnV0dG9uPg0KCTxoMT5hYmdlc2V0enRlIFBpbmdzKFBpbmcgQnV0dG9uIGdlZHLDvGNrdCk8L2gxPg0KCTx0YWJsZSBpZD0iVGFibGUiIGNsYXNzPSJkYXRhZ3JpZCI+DQoJCTx0aGVhZD4NCgkJCTx0cj4NCgkJCQk8dGg+V288L3RoPg0KCQkJCTx0aD5BbnphaGw8L3RoPg0KCQkJPC90cj4NCgkJPC90aGVhZD4NCgkJPHRib2R5Pg0KCQkJPHRyPg0KCQkJCTx0ZD5EaWVzZXMgQnJvd3NlciBGZW5zdGVyPC90ZD4NCgkJCQk8dGQgaWQ9ImVpZ2VuZVBpbmdzIj4wPC90ZD4NCgkJCTwvdHI+DQoJCQk8dHI+DQoJCQkJPHRkPkFsbGUgQnJvd3NlciBGZW5zdGVyPC90ZD4NCgkJCQk8dGQgaWQ9ImFsbGVQaW5ncyI+MDwvdGQ+DQoJCQk8L3RyPg0KCQk8L3Rib2R5Pg0KCTwvdGFibGU+DQo8L2JvZHk+DQo8L2h0bWw+DQo=`,
  `dmFyIGRlYnVnID0gZmFsc2U7DQp2YXIgc29jayA9IG51bGw7DQp2YXIgb3JpZ2luID0gd2luZG93LmxvY2F0aW9uLm9yaWdpbjsNCnZhciByZWNJbnRlcnZhbCA9IG51bGw7DQp2YXIgcGFyYW1ldGVyPXt9Ow0KdmFyIG1lc3NhZ2U9e3BhcmFtZXRlcjogcGFyYW1ldGVyfTsNCg0KJCggZnVuY3Rpb24oKXsNCi8vICAJJCggIiNBa3R1YWxpc2llcmVuIiApLmJ1dHRvbih7DQovLyAgICAgICAgaWNvbjogInVpLWljb24tcmVmcmVzaCIsDQovLyAgICAgICAgc2hvd0xhYmVsOiBmYWxzZQ0KLy8gIAl9KTsNCiAgCSQoICIjUGluZyIgKS5idXR0b24oew0KICAJICB9KS5jbGljayhmdW5jdGlvbigpew0KICAJCWdldFBpbmcoKTsNCiAgCX0pOw0KICAJJCggIiNEaWFsb2ciICkuYnV0dG9uKHsNCiAgCSAgfSkuY2xpY2soZnVuY3Rpb24oKXsNCiAgCQlwb3B1cEluZm9UZXh0KCJUZXN0IFBvcHVwIiwiSGFsbG8gV29ybGQiKTsNCiAgCX0pOw0KfSk7DQoNCnZhciBnZXRQaW5nID0gZnVuY3Rpb24oKXsNCglpZiAoZGVidWcpIHsgY29uc29sZS5sb2coIiMjIyBzZXRQaW5nIHN0YXJ0ICMjIyIpOyB9DQoJbWVzc2FnZS5UeXA9ImdldFBpbmciOw0KCW1lc3NhZ2UucGFyYW1ldGVyLmR1bW15MT0iZHVtbXlWYWx1ZTEiOyAvL2RvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJkdW1teTEiKS52YWx1ZTsNCgltZXNzYWdlLnBhcmFtZXRlci5kdW1teTI9ImR1bW15VmFsdWUyIjsgLy9kb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZHVtbXkyIikudmFsdWU7DQoJc29jay5zZW5kKEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTsNCn0NCg0KZnVuY3Rpb24gcG9wdXBJbmZvVGV4dCh0aXRsZSxpbmZvaHRtbCl7DQoJaWYgKGRlYnVnKSB7IGNvbnNvbGUubG9nKCIjIyMgcG9wdXBJbmZvVGV4dCBzdGFydCAjIyMiKTsgfQ0KDQoJdmFyIGluZm9Qb3BVcCA9ICQoICIjSW5mb1BvcFVwIiApOw0KCWlmKGluZm9odG1sIT0iIil7DQoJCXZhciBJbmZvUG9wVXAgPSAkKCAiI0luZm9Qb3BVcCIgKTsNCgkJJCggIiNJbmZvUG9wVXAiICkuZGlhbG9nKHsNCgkJCXRpdGxlOiB0aXRsZSwNCgkJCWF1dG9PcGVuOiBmYWxzZSwNCgkJCXdpZHRoOiA4MDANCgkJfSk7CQkNCgkJSW5mb1BvcFVwLmNvbnRlbnRzKCkucmVtb3ZlKCk7DQoJCUluZm9Qb3BVcC5hcHBlbmQoaW5mb2h0bWwpOw0KCQlJbmZvUG9wVXAuZGlhbG9nKCAib3BlbiIgKTsNCgl9DQp9DQoNCnZhciBzb2Nrb25vcGVuID0gZnVuY3Rpb24oSW5zcGlyZVNlcnZlcikgew0KCWlmIChkZWJ1ZykgeyBjb25zb2xlLmxvZygiIyMjIHNvY2tvbm9wZW4gc3RhcnQgIyMjIik7IH0NCg0KfQ0KDQpmdW5jdGlvbiBzZXRQaW5nKG1zZykgew0KCWlmIChkZWJ1ZykgeyBjb25zb2xlLmxvZygiIyMjIFBpbmcgc3RhcnQgIyMjIik7IH0NCg0KCWNvbnNvbGUubG9nKCJtc2c6Iik7DQoJY29uc29sZS5sb2cobXNnKTsNCglkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZWlnZW5lUGluZ3MiKS5pbm5lckhUTUw9bXNnLmRhdGEuRWlnZW5lUGluZ3M7DQoJZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImFsbGVQaW5ncyIpLmlubmVySFRNTD1tc2cuZGF0YS5BbGxlUGluZ3M7DQp9DQoNCg0KZnVuY3Rpb24gbmV3X2Nvbm4oKXsNCglzb2NrID0gbmV3IFNvY2tKUyhvcmlnaW4gKyAnL3dzL3NlcnZlcmRhdGEnLCB7DQoJCWRlYnVnOiB0cnVlLA0KCQlkZXZlbDogdHJ1ZSwNCgkJcHJvdG9jb2xzX3doaXRlbGlzdDogIlsnd2Vic29ja2V0JywgJ3hkci1zdHJlYW1pbmcnLCAneGhyLXN0cmVhbWluZycsICdpZnJhbWUtZXZlbnRzb3VyY2UnLCAnaWZyYW1lLWh0bWxmaWxlJywgJ3hkci1wb2xsaW5nJywgJ3hoci1wb2xsaW5nJywgJ2lmcmFtZS14aHItcG9sbGluZycsICdqc29ucC1wb2xsaW5nJ10iLA0KCX0pOw0KDQoJY2xlYXJJbnRlcnZhbChyZWNJbnRlcnZhbCk7DQogICAgDQoJc29jay5vbm9wZW4gPSBmdW5jdGlvbihtc2cpew0KICAgICAgIAlzb2Nrb25vcGVuKCk7DQogICAgfTsNCiAgICANCiAgICBzb2NrLm9ubWVzc2FnZSA9IGZ1bmN0aW9uKG1zZyl7DQoJCW1zZy5kYXRhID0gSlNPTi5wYXJzZShtc2cuZGF0YSkNCgkJc3dpdGNoKG1zZy5kYXRhLlhNTE5hbWUuTG9jYWwpew0KCQkJY2FzZSAic2V0UGluZyI6DQoJCQkJc2V0UGluZyhtc2cpOw0KCQkJCWJyZWFrOw0KCQkJZGVmYXVsdDogDQoJCQkJY29uc29sZS5sb2coIiMjIyB1bmJla2FubnRlIE1lc3NhZ2U6ICIrbXNnLmRhdGEuWE1MTmFtZS5Mb2NhbCsiIGVyaGFsdGVuICMjIyIpOw0KCQl9DQogICAgfTsNCiAgICBzb2NrLm9uY2xvc2UgPSBmdW5jdGlvbigpew0KCQlyZWNJbnRlcnZhbCA9IHdpbmRvdy5zZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7DQoJCQljb25zb2xlLmxvZygidHJ5IHRvIHJlY29ubmVjdC4uLiIpOw0KCSAgICAgICAgbmV3X2Nvbm4oKTsNCgkgICAgfSwgMjAwMCk7ICAgIA0KCX07DQp9Ow0KbmV3X2Nvbm4oKTsNCg0K`,
  ``,
  ``,
  `LyohIGpRdWVyeSBVSSAtIHYxLjEyLjEgLSAyMDE2LTA5LTE0CiogaHR0cDovL2pxdWVyeXVpLmNvbQoqIEluY2x1ZGVzOiB3aWRnZXQuanMsIHBvc2l0aW9uLmpzLCBkYXRhLmpzLCBkaXNhYmxlLXNlbGVjdGlvbi5qcywgZWZmZWN0LmpzLCBlZmZlY3RzL2VmZmVjdC1ibGluZC5qcywgZWZmZWN0cy9lZmZlY3QtYm91bmNlLmpzLCBlZmZlY3RzL2VmZmVjdC1jbGlwLmpzLCBlZmZlY3RzL2VmZmVjdC1kcm9wLmpzLCBlZmZlY3RzL2VmZmVjdC1leHBsb2RlLmpzLCBlZmZlY3RzL2VmZmVjdC1mYWRlLmpzLCBlZmZlY3RzL2VmZmVjdC1mb2xkLmpzLCBlZmZlY3RzL2VmZmVjdC1oaWdobGlnaHQuanMsIGVmZmVjdHMvZWZmZWN0LXB1ZmYuanMsIGVmZmVjdHMvZWZmZWN0LXB1bHNhdGUuanMsIGVmZmVjdHMvZWZmZWN0LXNjYWxlLmpzLCBlZmZlY3RzL2VmZmVjdC1zaGFrZS5qcywgZWZmZWN0cy9lZmZlY3Qtc2l6ZS5qcywgZWZmZWN0cy9lZmZlY3Qtc2xpZGUuanMsIGVmZmVjdHMvZWZmZWN0LXRyYW5zZmVyLmpzLCBmb2N1c2FibGUuanMsIGZvcm0tcmVzZXQtbWl4aW4uanMsIGpxdWVyeS0xLTcuanMsIGtleWNvZGUuanMsIGxhYmVscy5qcywgc2Nyb2xsLXBhcmVudC5qcywgdGFiYmFibGUuanMsIHVuaXF1ZS1pZC5qcywgd2lkZ2V0cy9hY2NvcmRpb24uanMsIHdpZGdldHMvYXV0b2NvbXBsZXRlLmpzLCB3aWRnZXRzL2J1dHRvbi5qcywgd2lkZ2V0cy9jaGVja2JveHJhZGlvLmpzLCB3aWRnZXRzL2NvbnRyb2xncm91cC5qcywgd2lkZ2V0cy9kYXRlcGlja2VyLmpzLCB3aWRnZXRzL2RpYWxvZy5qcywgd2lkZ2V0cy9kcmFnZ2FibGUuanMsIHdpZGdldHMvZHJvcHBhYmxlLmpzLCB3aWRnZXRzL21lbnUuanMsIHdpZGdldHMvbW91c2UuanMsIHdpZGdldHMvcHJvZ3Jlc3NiYXIuanMsIHdpZGdldHMvcmVzaXphYmxlLmpzLCB3aWRnZXRzL3NlbGVjdGFibGUuanMsIHdpZGdldHMvc2VsZWN0bWVudS5qcywgd2lkZ2V0cy9zbGlkZXIuanMsIHdpZGdldHMvc29ydGFibGUuanMsIHdpZGdldHMvc3Bpbm5lci5qcywgd2lkZ2V0cy90YWJzLmpzLCB3aWRnZXRzL3Rvb2x0aXAuanMKKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yczsgTGljZW5zZWQgTUlUICovCgooZnVuY3Rpb24oIGZhY3RvcnkgKSB7CglpZiAoIHR5cGVvZiBkZWZpbmUgPT09ICJmdW5jdGlvbiIgJiYgZGVmaW5lLmFtZCApIHsKCgkJLy8gQU1ELiBSZWdpc3RlciBhcyBhbiBhbm9ueW1vdXMgbW9kdWxlLgoJCWRlZmluZShbICJqcXVlcnkiIF0sIGZhY3RvcnkgKTsKCX0gZWxzZSB7CgoJCS8vIEJyb3dzZXIgZ2xvYmFscwoJCWZhY3RvcnkoIGpRdWVyeSApOwoJfQp9KGZ1bmN0aW9uKCAkICkgewoKJC51aSA9ICQudWkgfHwge307Cgp2YXIgdmVyc2lvbiA9ICQudWkudmVyc2lvbiA9ICIxLjEyLjEiOwoKCi8qIQogKiBqUXVlcnkgVUkgV2lkZ2V0IDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogV2lkZ2V0Ci8vPj5ncm91cDogQ29yZQovLz4+ZGVzY3JpcHRpb246IFByb3ZpZGVzIGEgZmFjdG9yeSBmb3IgY3JlYXRpbmcgc3RhdGVmdWwgd2lkZ2V0cyB3aXRoIGEgY29tbW9uIEFQSS4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2pRdWVyeS53aWRnZXQvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS93aWRnZXQvCgoKCnZhciB3aWRnZXRVdWlkID0gMDsKdmFyIHdpZGdldFNsaWNlID0gQXJyYXkucHJvdG90eXBlLnNsaWNlOwoKJC5jbGVhbkRhdGEgPSAoIGZ1bmN0aW9uKCBvcmlnICkgewoJcmV0dXJuIGZ1bmN0aW9uKCBlbGVtcyApIHsKCQl2YXIgZXZlbnRzLCBlbGVtLCBpOwoJCWZvciAoIGkgPSAwOyAoIGVsZW0gPSBlbGVtc1sgaSBdICkgIT0gbnVsbDsgaSsrICkgewoJCQl0cnkgewoKCQkJCS8vIE9ubHkgdHJpZ2dlciByZW1vdmUgd2hlbiBuZWNlc3NhcnkgdG8gc2F2ZSB0aW1lCgkJCQlldmVudHMgPSAkLl9kYXRhKCBlbGVtLCAiZXZlbnRzIiApOwoJCQkJaWYgKCBldmVudHMgJiYgZXZlbnRzLnJlbW92ZSApIHsKCQkJCQkkKCBlbGVtICkudHJpZ2dlckhhbmRsZXIoICJyZW1vdmUiICk7CgkJCQl9CgoJCQkvLyBIdHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC84MjM1CgkJCX0gY2F0Y2ggKCBlICkge30KCQl9CgkJb3JpZyggZWxlbXMgKTsKCX07Cn0gKSggJC5jbGVhbkRhdGEgKTsKCiQud2lkZ2V0ID0gZnVuY3Rpb24oIG5hbWUsIGJhc2UsIHByb3RvdHlwZSApIHsKCXZhciBleGlzdGluZ0NvbnN0cnVjdG9yLCBjb25zdHJ1Y3RvciwgYmFzZVByb3RvdHlwZTsKCgkvLyBQcm94aWVkUHJvdG90eXBlIGFsbG93cyB0aGUgcHJvdmlkZWQgcHJvdG90eXBlIHRvIHJlbWFpbiB1bm1vZGlmaWVkCgkvLyBzbyB0aGF0IGl0IGNhbiBiZSB1c2VkIGFzIGEgbWl4aW4gZm9yIG11bHRpcGxlIHdpZGdldHMgKCM4ODc2KQoJdmFyIHByb3hpZWRQcm90b3R5cGUgPSB7fTsKCgl2YXIgbmFtZXNwYWNlID0gbmFtZS5zcGxpdCggIi4iIClbIDAgXTsKCW5hbWUgPSBuYW1lLnNwbGl0KCAiLiIgKVsgMSBdOwoJdmFyIGZ1bGxOYW1lID0gbmFtZXNwYWNlICsgIi0iICsgbmFtZTsKCglpZiAoICFwcm90b3R5cGUgKSB7CgkJcHJvdG90eXBlID0gYmFzZTsKCQliYXNlID0gJC5XaWRnZXQ7Cgl9CgoJaWYgKCAkLmlzQXJyYXkoIHByb3RvdHlwZSApICkgewoJCXByb3RvdHlwZSA9ICQuZXh0ZW5kLmFwcGx5KCBudWxsLCBbIHt9IF0uY29uY2F0KCBwcm90b3R5cGUgKSApOwoJfQoKCS8vIENyZWF0ZSBzZWxlY3RvciBmb3IgcGx1Z2luCgkkLmV4cHJbICI6IiBdWyBmdWxsTmFtZS50b0xvd2VyQ2FzZSgpIF0gPSBmdW5jdGlvbiggZWxlbSApIHsKCQlyZXR1cm4gISEkLmRhdGEoIGVsZW0sIGZ1bGxOYW1lICk7Cgl9OwoKCSRbIG5hbWVzcGFjZSBdID0gJFsgbmFtZXNwYWNlIF0gfHwge307CglleGlzdGluZ0NvbnN0cnVjdG9yID0gJFsgbmFtZXNwYWNlIF1bIG5hbWUgXTsKCWNvbnN0cnVjdG9yID0gJFsgbmFtZXNwYWNlIF1bIG5hbWUgXSA9IGZ1bmN0aW9uKCBvcHRpb25zLCBlbGVtZW50ICkgewoKCQkvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgIm5ldyIga2V5d29yZAoJCWlmICggIXRoaXMuX2NyZWF0ZVdpZGdldCApIHsKCQkJcmV0dXJuIG5ldyBjb25zdHJ1Y3Rvciggb3B0aW9ucywgZWxlbWVudCApOwoJCX0KCgkJLy8gQWxsb3cgaW5zdGFudGlhdGlvbiB3aXRob3V0IGluaXRpYWxpemluZyBmb3Igc2ltcGxlIGluaGVyaXRhbmNlCgkJLy8gbXVzdCB1c2UgIm5ldyIga2V5d29yZCAodGhlIGNvZGUgYWJvdmUgYWx3YXlzIHBhc3NlcyBhcmdzKQoJCWlmICggYXJndW1lbnRzLmxlbmd0aCApIHsKCQkJdGhpcy5fY3JlYXRlV2lkZ2V0KCBvcHRpb25zLCBlbGVtZW50ICk7CgkJfQoJfTsKCgkvLyBFeHRlbmQgd2l0aCB0aGUgZXhpc3RpbmcgY29uc3RydWN0b3IgdG8gY2Fycnkgb3ZlciBhbnkgc3RhdGljIHByb3BlcnRpZXMKCSQuZXh0ZW5kKCBjb25zdHJ1Y3RvciwgZXhpc3RpbmdDb25zdHJ1Y3RvciwgewoJCXZlcnNpb246IHByb3RvdHlwZS52ZXJzaW9uLAoKCQkvLyBDb3B5IHRoZSBvYmplY3QgdXNlZCB0byBjcmVhdGUgdGhlIHByb3RvdHlwZSBpbiBjYXNlIHdlIG5lZWQgdG8KCQkvLyByZWRlZmluZSB0aGUgd2lkZ2V0IGxhdGVyCgkJX3Byb3RvOiAkLmV4dGVuZCgge30sIHByb3RvdHlwZSApLAoKCQkvLyBUcmFjayB3aWRnZXRzIHRoYXQgaW5oZXJpdCBmcm9tIHRoaXMgd2lkZ2V0IGluIGNhc2UgdGhpcyB3aWRnZXQgaXMKCQkvLyByZWRlZmluZWQgYWZ0ZXIgYSB3aWRnZXQgaW5oZXJpdHMgZnJvbSBpdAoJCV9jaGlsZENvbnN0cnVjdG9yczogW10KCX0gKTsKCgliYXNlUHJvdG90eXBlID0gbmV3IGJhc2UoKTsKCgkvLyBXZSBuZWVkIHRvIG1ha2UgdGhlIG9wdGlvbnMgaGFzaCBhIHByb3BlcnR5IGRpcmVjdGx5IG9uIHRoZSBuZXcgaW5zdGFuY2UKCS8vIG90aGVyd2lzZSB3ZSdsbCBtb2RpZnkgdGhlIG9wdGlvbnMgaGFzaCBvbiB0aGUgcHJvdG90eXBlIHRoYXQgd2UncmUKCS8vIGluaGVyaXRpbmcgZnJvbQoJYmFzZVByb3RvdHlwZS5vcHRpb25zID0gJC53aWRnZXQuZXh0ZW5kKCB7fSwgYmFzZVByb3RvdHlwZS5vcHRpb25zICk7CgkkLmVhY2goIHByb3RvdHlwZSwgZnVuY3Rpb24oIHByb3AsIHZhbHVlICkgewoJCWlmICggISQuaXNGdW5jdGlvbiggdmFsdWUgKSApIHsKCQkJcHJveGllZFByb3RvdHlwZVsgcHJvcCBdID0gdmFsdWU7CgkJCXJldHVybjsKCQl9CgkJcHJveGllZFByb3RvdHlwZVsgcHJvcCBdID0gKCBmdW5jdGlvbigpIHsKCQkJZnVuY3Rpb24gX3N1cGVyKCkgewoJCQkJcmV0dXJuIGJhc2UucHJvdG90eXBlWyBwcm9wIF0uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQl9CgoJCQlmdW5jdGlvbiBfc3VwZXJBcHBseSggYXJncyApIHsKCQkJCXJldHVybiBiYXNlLnByb3RvdHlwZVsgcHJvcCBdLmFwcGx5KCB0aGlzLCBhcmdzICk7CgkJCX0KCgkJCXJldHVybiBmdW5jdGlvbigpIHsKCQkJCXZhciBfX3N1cGVyID0gdGhpcy5fc3VwZXI7CgkJCQl2YXIgX19zdXBlckFwcGx5ID0gdGhpcy5fc3VwZXJBcHBseTsKCQkJCXZhciByZXR1cm5WYWx1ZTsKCgkJCQl0aGlzLl9zdXBlciA9IF9zdXBlcjsKCQkJCXRoaXMuX3N1cGVyQXBwbHkgPSBfc3VwZXJBcHBseTsKCgkJCQlyZXR1cm5WYWx1ZSA9IHZhbHVlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCgkJCQl0aGlzLl9zdXBlciA9IF9fc3VwZXI7CgkJCQl0aGlzLl9zdXBlckFwcGx5ID0gX19zdXBlckFwcGx5OwoKCQkJCXJldHVybiByZXR1cm5WYWx1ZTsKCQkJfTsKCQl9ICkoKTsKCX0gKTsKCWNvbnN0cnVjdG9yLnByb3RvdHlwZSA9ICQud2lkZ2V0LmV4dGVuZCggYmFzZVByb3RvdHlwZSwgewoKCQkvLyBUT0RPOiByZW1vdmUgc3VwcG9ydCBmb3Igd2lkZ2V0RXZlbnRQcmVmaXgKCQkvLyBhbHdheXMgdXNlIHRoZSBuYW1lICsgYSBjb2xvbiBhcyB0aGUgcHJlZml4LCBlLmcuLCBkcmFnZ2FibGU6c3RhcnQKCQkvLyBkb24ndCBwcmVmaXggZm9yIHdpZGdldHMgdGhhdCBhcmVuJ3QgRE9NLWJhc2VkCgkJd2lkZ2V0RXZlbnRQcmVmaXg6IGV4aXN0aW5nQ29uc3RydWN0b3IgPyAoIGJhc2VQcm90b3R5cGUud2lkZ2V0RXZlbnRQcmVmaXggfHwgbmFtZSApIDogbmFtZQoJfSwgcHJveGllZFByb3RvdHlwZSwgewoJCWNvbnN0cnVjdG9yOiBjb25zdHJ1Y3RvciwKCQluYW1lc3BhY2U6IG5hbWVzcGFjZSwKCQl3aWRnZXROYW1lOiBuYW1lLAoJCXdpZGdldEZ1bGxOYW1lOiBmdWxsTmFtZQoJfSApOwoKCS8vIElmIHRoaXMgd2lkZ2V0IGlzIGJlaW5nIHJlZGVmaW5lZCB0aGVuIHdlIG5lZWQgdG8gZmluZCBhbGwgd2lkZ2V0cyB0aGF0CgkvLyBhcmUgaW5oZXJpdGluZyBmcm9tIGl0IGFuZCByZWRlZmluZSBhbGwgb2YgdGhlbSBzbyB0aGF0IHRoZXkgaW5oZXJpdCBmcm9tCgkvLyB0aGUgbmV3IHZlcnNpb24gb2YgdGhpcyB3aWRnZXQuIFdlJ3JlIGVzc2VudGlhbGx5IHRyeWluZyB0byByZXBsYWNlIG9uZQoJLy8gbGV2ZWwgaW4gdGhlIHByb3RvdHlwZSBjaGFpbi4KCWlmICggZXhpc3RpbmdDb25zdHJ1Y3RvciApIHsKCQkkLmVhY2goIGV4aXN0aW5nQ29uc3RydWN0b3IuX2NoaWxkQ29uc3RydWN0b3JzLCBmdW5jdGlvbiggaSwgY2hpbGQgKSB7CgkJCXZhciBjaGlsZFByb3RvdHlwZSA9IGNoaWxkLnByb3RvdHlwZTsKCgkJCS8vIFJlZGVmaW5lIHRoZSBjaGlsZCB3aWRnZXQgdXNpbmcgdGhlIHNhbWUgcHJvdG90eXBlIHRoYXQgd2FzCgkJCS8vIG9yaWdpbmFsbHkgdXNlZCwgYnV0IGluaGVyaXQgZnJvbSB0aGUgbmV3IHZlcnNpb24gb2YgdGhlIGJhc2UKCQkJJC53aWRnZXQoIGNoaWxkUHJvdG90eXBlLm5hbWVzcGFjZSArICIuIiArIGNoaWxkUHJvdG90eXBlLndpZGdldE5hbWUsIGNvbnN0cnVjdG9yLAoJCQkJY2hpbGQuX3Byb3RvICk7CgkJfSApOwoKCQkvLyBSZW1vdmUgdGhlIGxpc3Qgb2YgZXhpc3RpbmcgY2hpbGQgY29uc3RydWN0b3JzIGZyb20gdGhlIG9sZCBjb25zdHJ1Y3RvcgoJCS8vIHNvIHRoZSBvbGQgY2hpbGQgY29uc3RydWN0b3JzIGNhbiBiZSBnYXJiYWdlIGNvbGxlY3RlZAoJCWRlbGV0ZSBleGlzdGluZ0NvbnN0cnVjdG9yLl9jaGlsZENvbnN0cnVjdG9yczsKCX0gZWxzZSB7CgkJYmFzZS5fY2hpbGRDb25zdHJ1Y3RvcnMucHVzaCggY29uc3RydWN0b3IgKTsKCX0KCgkkLndpZGdldC5icmlkZ2UoIG5hbWUsIGNvbnN0cnVjdG9yICk7CgoJcmV0dXJuIGNvbnN0cnVjdG9yOwp9OwoKJC53aWRnZXQuZXh0ZW5kID0gZnVuY3Rpb24oIHRhcmdldCApIHsKCXZhciBpbnB1dCA9IHdpZGdldFNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMSApOwoJdmFyIGlucHV0SW5kZXggPSAwOwoJdmFyIGlucHV0TGVuZ3RoID0gaW5wdXQubGVuZ3RoOwoJdmFyIGtleTsKCXZhciB2YWx1ZTsKCglmb3IgKCA7IGlucHV0SW5kZXggPCBpbnB1dExlbmd0aDsgaW5wdXRJbmRleCsrICkgewoJCWZvciAoIGtleSBpbiBpbnB1dFsgaW5wdXRJbmRleCBdICkgewoJCQl2YWx1ZSA9IGlucHV0WyBpbnB1dEluZGV4IF1bIGtleSBdOwoJCQlpZiAoIGlucHV0WyBpbnB1dEluZGV4IF0uaGFzT3duUHJvcGVydHkoIGtleSApICYmIHZhbHVlICE9PSB1bmRlZmluZWQgKSB7CgoJCQkJLy8gQ2xvbmUgb2JqZWN0cwoJCQkJaWYgKCAkLmlzUGxhaW5PYmplY3QoIHZhbHVlICkgKSB7CgkJCQkJdGFyZ2V0WyBrZXkgXSA9ICQuaXNQbGFpbk9iamVjdCggdGFyZ2V0WyBrZXkgXSApID8KCQkJCQkJJC53aWRnZXQuZXh0ZW5kKCB7fSwgdGFyZ2V0WyBrZXkgXSwgdmFsdWUgKSA6CgoJCQkJCQkvLyBEb24ndCBleHRlbmQgc3RyaW5ncywgYXJyYXlzLCBldGMuIHdpdGggb2JqZWN0cwoJCQkJCQkkLndpZGdldC5leHRlbmQoIHt9LCB2YWx1ZSApOwoKCQkJCS8vIENvcHkgZXZlcnl0aGluZyBlbHNlIGJ5IHJlZmVyZW5jZQoJCQkJfSBlbHNlIHsKCQkJCQl0YXJnZXRbIGtleSBdID0gdmFsdWU7CgkJCQl9CgkJCX0KCQl9Cgl9CglyZXR1cm4gdGFyZ2V0Owp9OwoKJC53aWRnZXQuYnJpZGdlID0gZnVuY3Rpb24oIG5hbWUsIG9iamVjdCApIHsKCXZhciBmdWxsTmFtZSA9IG9iamVjdC5wcm90b3R5cGUud2lkZ2V0RnVsbE5hbWUgfHwgbmFtZTsKCSQuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJCXZhciBpc01ldGhvZENhbGwgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyI7CgkJdmFyIGFyZ3MgPSB3aWRnZXRTbGljZS5jYWxsKCBhcmd1bWVudHMsIDEgKTsKCQl2YXIgcmV0dXJuVmFsdWUgPSB0aGlzOwoKCQlpZiAoIGlzTWV0aG9kQ2FsbCApIHsKCgkJCS8vIElmIHRoaXMgaXMgYW4gZW1wdHkgY29sbGVjdGlvbiwgd2UgbmVlZCB0byBoYXZlIHRoZSBpbnN0YW5jZSBtZXRob2QKCQkJLy8gcmV0dXJuIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHRoZSBqUXVlcnkgaW5zdGFuY2UKCQkJaWYgKCAhdGhpcy5sZW5ndGggJiYgb3B0aW9ucyA9PT0gImluc3RhbmNlIiApIHsKCQkJCXJldHVyblZhbHVlID0gdW5kZWZpbmVkOwoJCQl9IGVsc2UgewoJCQkJdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCQl2YXIgbWV0aG9kVmFsdWU7CgkJCQkJdmFyIGluc3RhbmNlID0gJC5kYXRhKCB0aGlzLCBmdWxsTmFtZSApOwoKCQkJCQlpZiAoIG9wdGlvbnMgPT09ICJpbnN0YW5jZSIgKSB7CgkJCQkJCXJldHVyblZhbHVlID0gaW5zdGFuY2U7CgkJCQkJCXJldHVybiBmYWxzZTsKCQkJCQl9CgoJCQkJCWlmICggIWluc3RhbmNlICkgewoJCQkJCQlyZXR1cm4gJC5lcnJvciggImNhbm5vdCBjYWxsIG1ldGhvZHMgb24gIiArIG5hbWUgKwoJCQkJCQkJIiBwcmlvciB0byBpbml0aWFsaXphdGlvbjsgIiArCgkJCQkJCQkiYXR0ZW1wdGVkIHRvIGNhbGwgbWV0aG9kICciICsgb3B0aW9ucyArICInIiApOwoJCQkJCX0KCgkJCQkJaWYgKCAhJC5pc0Z1bmN0aW9uKCBpbnN0YW5jZVsgb3B0aW9ucyBdICkgfHwgb3B0aW9ucy5jaGFyQXQoIDAgKSA9PT0gIl8iICkgewoJCQkJCQlyZXR1cm4gJC5lcnJvciggIm5vIHN1Y2ggbWV0aG9kICciICsgb3B0aW9ucyArICInIGZvciAiICsgbmFtZSArCgkJCQkJCQkiIHdpZGdldCBpbnN0YW5jZSIgKTsKCQkJCQl9CgoJCQkJCW1ldGhvZFZhbHVlID0gaW5zdGFuY2VbIG9wdGlvbnMgXS5hcHBseSggaW5zdGFuY2UsIGFyZ3MgKTsKCgkJCQkJaWYgKCBtZXRob2RWYWx1ZSAhPT0gaW5zdGFuY2UgJiYgbWV0aG9kVmFsdWUgIT09IHVuZGVmaW5lZCApIHsKCQkJCQkJcmV0dXJuVmFsdWUgPSBtZXRob2RWYWx1ZSAmJiBtZXRob2RWYWx1ZS5qcXVlcnkgPwoJCQkJCQkJcmV0dXJuVmFsdWUucHVzaFN0YWNrKCBtZXRob2RWYWx1ZS5nZXQoKSApIDoKCQkJCQkJCW1ldGhvZFZhbHVlOwoJCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQkJfQoJCQkJfSApOwoJCQl9CgkJfSBlbHNlIHsKCgkJCS8vIEFsbG93IG11bHRpcGxlIGhhc2hlcyB0byBiZSBwYXNzZWQgb24gaW5pdAoJCQlpZiAoIGFyZ3MubGVuZ3RoICkgewoJCQkJb3B0aW9ucyA9ICQud2lkZ2V0LmV4dGVuZC5hcHBseSggbnVsbCwgWyBvcHRpb25zIF0uY29uY2F0KCBhcmdzICkgKTsKCQkJfQoKCQkJdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCXZhciBpbnN0YW5jZSA9ICQuZGF0YSggdGhpcywgZnVsbE5hbWUgKTsKCQkJCWlmICggaW5zdGFuY2UgKSB7CgkJCQkJaW5zdGFuY2Uub3B0aW9uKCBvcHRpb25zIHx8IHt9ICk7CgkJCQkJaWYgKCBpbnN0YW5jZS5faW5pdCApIHsKCQkJCQkJaW5zdGFuY2UuX2luaXQoKTsKCQkJCQl9CgkJCQl9IGVsc2UgewoJCQkJCSQuZGF0YSggdGhpcywgZnVsbE5hbWUsIG5ldyBvYmplY3QoIG9wdGlvbnMsIHRoaXMgKSApOwoJCQkJfQoJCQl9ICk7CgkJfQoKCQlyZXR1cm4gcmV0dXJuVmFsdWU7Cgl9Owp9OwoKJC5XaWRnZXQgPSBmdW5jdGlvbiggLyogb3B0aW9ucywgZWxlbWVudCAqLyApIHt9OwokLldpZGdldC5fY2hpbGRDb25zdHJ1Y3RvcnMgPSBbXTsKCiQuV2lkZ2V0LnByb3RvdHlwZSA9IHsKCXdpZGdldE5hbWU6ICJ3aWRnZXQiLAoJd2lkZ2V0RXZlbnRQcmVmaXg6ICIiLAoJZGVmYXVsdEVsZW1lbnQ6ICI8ZGl2PiIsCgoJb3B0aW9uczogewoJCWNsYXNzZXM6IHt9LAoJCWRpc2FibGVkOiBmYWxzZSwKCgkJLy8gQ2FsbGJhY2tzCgkJY3JlYXRlOiBudWxsCgl9LAoKCV9jcmVhdGVXaWRnZXQ6IGZ1bmN0aW9uKCBvcHRpb25zLCBlbGVtZW50ICkgewoJCWVsZW1lbnQgPSAkKCBlbGVtZW50IHx8IHRoaXMuZGVmYXVsdEVsZW1lbnQgfHwgdGhpcyApWyAwIF07CgkJdGhpcy5lbGVtZW50ID0gJCggZWxlbWVudCApOwoJCXRoaXMudXVpZCA9IHdpZGdldFV1aWQrKzsKCQl0aGlzLmV2ZW50TmFtZXNwYWNlID0gIi4iICsgdGhpcy53aWRnZXROYW1lICsgdGhpcy51dWlkOwoKCQl0aGlzLmJpbmRpbmdzID0gJCgpOwoJCXRoaXMuaG92ZXJhYmxlID0gJCgpOwoJCXRoaXMuZm9jdXNhYmxlID0gJCgpOwoJCXRoaXMuY2xhc3Nlc0VsZW1lbnRMb29rdXAgPSB7fTsKCgkJaWYgKCBlbGVtZW50ICE9PSB0aGlzICkgewoJCQkkLmRhdGEoIGVsZW1lbnQsIHRoaXMud2lkZ2V0RnVsbE5hbWUsIHRoaXMgKTsKCQkJdGhpcy5fb24oIHRydWUsIHRoaXMuZWxlbWVudCwgewoJCQkJcmVtb3ZlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQkJaWYgKCBldmVudC50YXJnZXQgPT09IGVsZW1lbnQgKSB7CgkJCQkJCXRoaXMuZGVzdHJveSgpOwoJCQkJCX0KCQkJCX0KCQkJfSApOwoJCQl0aGlzLmRvY3VtZW50ID0gJCggZWxlbWVudC5zdHlsZSA/CgoJCQkJLy8gRWxlbWVudCB3aXRoaW4gdGhlIGRvY3VtZW50CgkJCQllbGVtZW50Lm93bmVyRG9jdW1lbnQgOgoKCQkJCS8vIEVsZW1lbnQgaXMgd2luZG93IG9yIGRvY3VtZW50CgkJCQllbGVtZW50LmRvY3VtZW50IHx8IGVsZW1lbnQgKTsKCQkJdGhpcy53aW5kb3cgPSAkKCB0aGlzLmRvY3VtZW50WyAwIF0uZGVmYXVsdFZpZXcgfHwgdGhpcy5kb2N1bWVudFsgMCBdLnBhcmVudFdpbmRvdyApOwoJCX0KCgkJdGhpcy5vcHRpb25zID0gJC53aWRnZXQuZXh0ZW5kKCB7fSwKCQkJdGhpcy5vcHRpb25zLAoJCQl0aGlzLl9nZXRDcmVhdGVPcHRpb25zKCksCgkJCW9wdGlvbnMgKTsKCgkJdGhpcy5fY3JlYXRlKCk7CgoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkICkgewoJCQl0aGlzLl9zZXRPcHRpb25EaXNhYmxlZCggdGhpcy5vcHRpb25zLmRpc2FibGVkICk7CgkJfQoKCQl0aGlzLl90cmlnZ2VyKCAiY3JlYXRlIiwgbnVsbCwgdGhpcy5fZ2V0Q3JlYXRlRXZlbnREYXRhKCkgKTsKCQl0aGlzLl9pbml0KCk7Cgl9LAoKCV9nZXRDcmVhdGVPcHRpb25zOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4ge307Cgl9LAoKCV9nZXRDcmVhdGVFdmVudERhdGE6ICQubm9vcCwKCglfY3JlYXRlOiAkLm5vb3AsCgoJX2luaXQ6ICQubm9vcCwKCglkZXN0cm95OiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCXRoaXMuX2Rlc3Ryb3koKTsKCQkkLmVhY2goIHRoaXMuY2xhc3Nlc0VsZW1lbnRMb29rdXAsIGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCQl0aGF0Ll9yZW1vdmVDbGFzcyggdmFsdWUsIGtleSApOwoJCX0gKTsKCgkJLy8gV2UgY2FuIHByb2JhYmx5IHJlbW92ZSB0aGUgdW5iaW5kIGNhbGxzIGluIDIuMAoJCS8vIGFsbCBldmVudCBiaW5kaW5ncyBzaG91bGQgZ28gdGhyb3VnaCB0aGlzLl9vbigpCgkJdGhpcy5lbGVtZW50CgkJCS5vZmYoIHRoaXMuZXZlbnROYW1lc3BhY2UgKQoJCQkucmVtb3ZlRGF0YSggdGhpcy53aWRnZXRGdWxsTmFtZSApOwoJCXRoaXMud2lkZ2V0KCkKCQkJLm9mZiggdGhpcy5ldmVudE5hbWVzcGFjZSApCgkJCS5yZW1vdmVBdHRyKCAiYXJpYS1kaXNhYmxlZCIgKTsKCgkJLy8gQ2xlYW4gdXAgZXZlbnRzIGFuZCBzdGF0ZXMKCQl0aGlzLmJpbmRpbmdzLm9mZiggdGhpcy5ldmVudE5hbWVzcGFjZSApOwoJfSwKCglfZGVzdHJveTogJC5ub29wLAoKCXdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZWxlbWVudDsKCX0sCgoJb3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIgb3B0aW9ucyA9IGtleTsKCQl2YXIgcGFydHM7CgkJdmFyIGN1ck9wdGlvbjsKCQl2YXIgaTsKCgkJaWYgKCBhcmd1bWVudHMubGVuZ3RoID09PSAwICkgewoKCQkJLy8gRG9uJ3QgcmV0dXJuIGEgcmVmZXJlbmNlIHRvIHRoZSBpbnRlcm5hbCBoYXNoCgkJCXJldHVybiAkLndpZGdldC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnMgKTsKCQl9CgoJCWlmICggdHlwZW9mIGtleSA9PT0gInN0cmluZyIgKSB7CgoJCQkvLyBIYW5kbGUgbmVzdGVkIGtleXMsIGUuZy4sICJmb28uYmFyIiA9PiB7IGZvbzogeyBiYXI6IF9fXyB9IH0KCQkJb3B0aW9ucyA9IHt9OwoJCQlwYXJ0cyA9IGtleS5zcGxpdCggIi4iICk7CgkJCWtleSA9IHBhcnRzLnNoaWZ0KCk7CgkJCWlmICggcGFydHMubGVuZ3RoICkgewoJCQkJY3VyT3B0aW9uID0gb3B0aW9uc1sga2V5IF0gPSAkLndpZGdldC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnNbIGtleSBdICk7CgkJCQlmb3IgKCBpID0gMDsgaSA8IHBhcnRzLmxlbmd0aCAtIDE7IGkrKyApIHsKCQkJCQljdXJPcHRpb25bIHBhcnRzWyBpIF0gXSA9IGN1ck9wdGlvblsgcGFydHNbIGkgXSBdIHx8IHt9OwoJCQkJCWN1ck9wdGlvbiA9IGN1ck9wdGlvblsgcGFydHNbIGkgXSBdOwoJCQkJfQoJCQkJa2V5ID0gcGFydHMucG9wKCk7CgkJCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT09IDEgKSB7CgkJCQkJcmV0dXJuIGN1ck9wdGlvblsga2V5IF0gPT09IHVuZGVmaW5lZCA/IG51bGwgOiBjdXJPcHRpb25bIGtleSBdOwoJCQkJfQoJCQkJY3VyT3B0aW9uWyBrZXkgXSA9IHZhbHVlOwoJCQl9IGVsc2UgewoJCQkJaWYgKCBhcmd1bWVudHMubGVuZ3RoID09PSAxICkgewoJCQkJCXJldHVybiB0aGlzLm9wdGlvbnNbIGtleSBdID09PSB1bmRlZmluZWQgPyBudWxsIDogdGhpcy5vcHRpb25zWyBrZXkgXTsKCQkJCX0KCQkJCW9wdGlvbnNbIGtleSBdID0gdmFsdWU7CgkJCX0KCQl9CgoJCXRoaXMuX3NldE9wdGlvbnMoIG9wdGlvbnMgKTsKCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCV9zZXRPcHRpb25zOiBmdW5jdGlvbiggb3B0aW9ucyApIHsKCQl2YXIga2V5OwoKCQlmb3IgKCBrZXkgaW4gb3B0aW9ucyApIHsKCQkJdGhpcy5fc2V0T3B0aW9uKCBrZXksIG9wdGlvbnNbIGtleSBdICk7CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJaWYgKCBrZXkgPT09ICJjbGFzc2VzIiApIHsKCQkJdGhpcy5fc2V0T3B0aW9uQ2xhc3NlcyggdmFsdWUgKTsKCQl9CgoJCXRoaXMub3B0aW9uc1sga2V5IF0gPSB2YWx1ZTsKCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7CgkJCXRoaXMuX3NldE9wdGlvbkRpc2FibGVkKCB2YWx1ZSApOwoJCX0KCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCV9zZXRPcHRpb25DbGFzc2VzOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGNsYXNzS2V5LCBlbGVtZW50cywgY3VycmVudEVsZW1lbnRzOwoKCQlmb3IgKCBjbGFzc0tleSBpbiB2YWx1ZSApIHsKCQkJY3VycmVudEVsZW1lbnRzID0gdGhpcy5jbGFzc2VzRWxlbWVudExvb2t1cFsgY2xhc3NLZXkgXTsKCQkJaWYgKCB2YWx1ZVsgY2xhc3NLZXkgXSA9PT0gdGhpcy5vcHRpb25zLmNsYXNzZXNbIGNsYXNzS2V5IF0gfHwKCQkJCQkhY3VycmVudEVsZW1lbnRzIHx8CgkJCQkJIWN1cnJlbnRFbGVtZW50cy5sZW5ndGggKSB7CgkJCQljb250aW51ZTsKCQkJfQoKCQkJLy8gV2UgYXJlIGRvaW5nIHRoaXMgdG8gY3JlYXRlIGEgbmV3IGpRdWVyeSBvYmplY3QgYmVjYXVzZSB0aGUgX3JlbW92ZUNsYXNzKCkgY2FsbAoJCQkvLyBvbiB0aGUgbmV4dCBsaW5lIGlzIGdvaW5nIHRvIGRlc3Ryb3kgdGhlIHJlZmVyZW5jZSB0byB0aGUgY3VycmVudCBlbGVtZW50cyBiZWluZwoJCQkvLyB0cmFja2VkLiBXZSBuZWVkIHRvIHNhdmUgYSBjb3B5IG9mIHRoaXMgY29sbGVjdGlvbiBzbyB0aGF0IHdlIGNhbiBhZGQgdGhlIG5ldyBjbGFzc2VzCgkJCS8vIGJlbG93LgoJCQllbGVtZW50cyA9ICQoIGN1cnJlbnRFbGVtZW50cy5nZXQoKSApOwoJCQl0aGlzLl9yZW1vdmVDbGFzcyggY3VycmVudEVsZW1lbnRzLCBjbGFzc0tleSApOwoKCQkJLy8gV2UgZG9uJ3QgdXNlIF9hZGRDbGFzcygpIGhlcmUsIGJlY2F1c2UgdGhhdCB1c2VzIHRoaXMub3B0aW9ucy5jbGFzc2VzCgkJCS8vIGZvciBnZW5lcmF0aW5nIHRoZSBzdHJpbmcgb2YgY2xhc3Nlcy4gV2Ugd2FudCB0byB1c2UgdGhlIHZhbHVlIHBhc3NlZCBpbiBmcm9tCgkJCS8vIF9zZXRPcHRpb24oKSwgdGhpcyBpcyB0aGUgbmV3IHZhbHVlIG9mIHRoZSBjbGFzc2VzIG9wdGlvbiB3aGljaCB3YXMgcGFzc2VkIHRvCgkJCS8vIF9zZXRPcHRpb24oKS4gV2UgcGFzcyB0aGlzIHZhbHVlIGRpcmVjdGx5IHRvIF9jbGFzc2VzKCkuCgkJCWVsZW1lbnRzLmFkZENsYXNzKCB0aGlzLl9jbGFzc2VzKCB7CgkJCQllbGVtZW50OiBlbGVtZW50cywKCQkJCWtleXM6IGNsYXNzS2V5LAoJCQkJY2xhc3NlczogdmFsdWUsCgkJCQlhZGQ6IHRydWUKCQkJfSApICk7CgkJfQoJfSwKCglfc2V0T3B0aW9uRGlzYWJsZWQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy53aWRnZXQoKSwgdGhpcy53aWRnZXRGdWxsTmFtZSArICItZGlzYWJsZWQiLCBudWxsLCAhIXZhbHVlICk7CgoJCS8vIElmIHRoZSB3aWRnZXQgaXMgYmVjb21pbmcgZGlzYWJsZWQsIHRoZW4gbm90aGluZyBpcyBpbnRlcmFjdGl2ZQoJCWlmICggdmFsdWUgKSB7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmhvdmVyYWJsZSwgbnVsbCwgInVpLXN0YXRlLWhvdmVyIiApOwoJCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5mb2N1c2FibGUsIG51bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsKCQl9Cgl9LAoKCWVuYWJsZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuX3NldE9wdGlvbnMoIHsgZGlzYWJsZWQ6IGZhbHNlIH0gKTsKCX0sCgoJZGlzYWJsZTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuX3NldE9wdGlvbnMoIHsgZGlzYWJsZWQ6IHRydWUgfSApOwoJfSwKCglfY2xhc3NlczogZnVuY3Rpb24oIG9wdGlvbnMgKSB7CgkJdmFyIGZ1bGwgPSBbXTsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCW9wdGlvbnMgPSAkLmV4dGVuZCggewoJCQllbGVtZW50OiB0aGlzLmVsZW1lbnQsCgkJCWNsYXNzZXM6IHRoaXMub3B0aW9ucy5jbGFzc2VzIHx8IHt9CgkJfSwgb3B0aW9ucyApOwoKCQlmdW5jdGlvbiBwcm9jZXNzQ2xhc3NTdHJpbmcoIGNsYXNzZXMsIGNoZWNrT3B0aW9uICkgewoJCQl2YXIgY3VycmVudCwgaTsKCQkJZm9yICggaSA9IDA7IGkgPCBjbGFzc2VzLmxlbmd0aDsgaSsrICkgewoJCQkJY3VycmVudCA9IHRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXBbIGNsYXNzZXNbIGkgXSBdIHx8ICQoKTsKCQkJCWlmICggb3B0aW9ucy5hZGQgKSB7CgkJCQkJY3VycmVudCA9ICQoICQudW5pcXVlKCBjdXJyZW50LmdldCgpLmNvbmNhdCggb3B0aW9ucy5lbGVtZW50LmdldCgpICkgKSApOwoJCQkJfSBlbHNlIHsKCQkJCQljdXJyZW50ID0gJCggY3VycmVudC5ub3QoIG9wdGlvbnMuZWxlbWVudCApLmdldCgpICk7CgkJCQl9CgkJCQl0aGF0LmNsYXNzZXNFbGVtZW50TG9va3VwWyBjbGFzc2VzWyBpIF0gXSA9IGN1cnJlbnQ7CgkJCQlmdWxsLnB1c2goIGNsYXNzZXNbIGkgXSApOwoJCQkJaWYgKCBjaGVja09wdGlvbiAmJiBvcHRpb25zLmNsYXNzZXNbIGNsYXNzZXNbIGkgXSBdICkgewoJCQkJCWZ1bGwucHVzaCggb3B0aW9ucy5jbGFzc2VzWyBjbGFzc2VzWyBpIF0gXSApOwoJCQkJfQoJCQl9CgkJfQoKCQl0aGlzLl9vbiggb3B0aW9ucy5lbGVtZW50LCB7CgkJCSJyZW1vdmUiOiAiX3VudHJhY2tDbGFzc2VzRWxlbWVudCIKCQl9ICk7CgoJCWlmICggb3B0aW9ucy5rZXlzICkgewoJCQlwcm9jZXNzQ2xhc3NTdHJpbmcoIG9wdGlvbnMua2V5cy5tYXRjaCggL1xTKy9nICkgfHwgW10sIHRydWUgKTsKCQl9CgkJaWYgKCBvcHRpb25zLmV4dHJhICkgewoJCQlwcm9jZXNzQ2xhc3NTdHJpbmcoIG9wdGlvbnMuZXh0cmEubWF0Y2goIC9cUysvZyApIHx8IFtdICk7CgkJfQoKCQlyZXR1cm4gZnVsbC5qb2luKCAiICIgKTsKCX0sCgoJX3VudHJhY2tDbGFzc2VzRWxlbWVudDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciB0aGF0ID0gdGhpczsKCQkkLmVhY2goIHRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXAsIGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCQlpZiAoICQuaW5BcnJheSggZXZlbnQudGFyZ2V0LCB2YWx1ZSApICE9PSAtMSApIHsKCQkJCXRoYXQuY2xhc3Nlc0VsZW1lbnRMb29rdXBbIGtleSBdID0gJCggdmFsdWUubm90KCBldmVudC50YXJnZXQgKS5nZXQoKSApOwoJCQl9CgkJfSApOwoJfSwKCglfcmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKCBlbGVtZW50LCBrZXlzLCBleHRyYSApIHsKCQlyZXR1cm4gdGhpcy5fdG9nZ2xlQ2xhc3MoIGVsZW1lbnQsIGtleXMsIGV4dHJhLCBmYWxzZSApOwoJfSwKCglfYWRkQ2xhc3M6IGZ1bmN0aW9uKCBlbGVtZW50LCBrZXlzLCBleHRyYSApIHsKCQlyZXR1cm4gdGhpcy5fdG9nZ2xlQ2xhc3MoIGVsZW1lbnQsIGtleXMsIGV4dHJhLCB0cnVlICk7Cgl9LAoKCV90b2dnbGVDbGFzczogZnVuY3Rpb24oIGVsZW1lbnQsIGtleXMsIGV4dHJhLCBhZGQgKSB7CgkJYWRkID0gKCB0eXBlb2YgYWRkID09PSAiYm9vbGVhbiIgKSA/IGFkZCA6IGV4dHJhOwoJCXZhciBzaGlmdCA9ICggdHlwZW9mIGVsZW1lbnQgPT09ICJzdHJpbmciIHx8IGVsZW1lbnQgPT09IG51bGwgKSwKCQkJb3B0aW9ucyA9IHsKCQkJCWV4dHJhOiBzaGlmdCA/IGtleXMgOiBleHRyYSwKCQkJCWtleXM6IHNoaWZ0ID8gZWxlbWVudCA6IGtleXMsCgkJCQllbGVtZW50OiBzaGlmdCA/IHRoaXMuZWxlbWVudCA6IGVsZW1lbnQsCgkJCQlhZGQ6IGFkZAoJCQl9OwoJCW9wdGlvbnMuZWxlbWVudC50b2dnbGVDbGFzcyggdGhpcy5fY2xhc3Nlcyggb3B0aW9ucyApLCBhZGQgKTsKCQlyZXR1cm4gdGhpczsKCX0sCgoJX29uOiBmdW5jdGlvbiggc3VwcHJlc3NEaXNhYmxlZENoZWNrLCBlbGVtZW50LCBoYW5kbGVycyApIHsKCQl2YXIgZGVsZWdhdGVFbGVtZW50OwoJCXZhciBpbnN0YW5jZSA9IHRoaXM7CgoJCS8vIE5vIHN1cHByZXNzRGlzYWJsZWRDaGVjayBmbGFnLCBzaHVmZmxlIGFyZ3VtZW50cwoJCWlmICggdHlwZW9mIHN1cHByZXNzRGlzYWJsZWRDaGVjayAhPT0gImJvb2xlYW4iICkgewoJCQloYW5kbGVycyA9IGVsZW1lbnQ7CgkJCWVsZW1lbnQgPSBzdXBwcmVzc0Rpc2FibGVkQ2hlY2s7CgkJCXN1cHByZXNzRGlzYWJsZWRDaGVjayA9IGZhbHNlOwoJCX0KCgkJLy8gTm8gZWxlbWVudCBhcmd1bWVudCwgc2h1ZmZsZSBhbmQgdXNlIHRoaXMuZWxlbWVudAoJCWlmICggIWhhbmRsZXJzICkgewoJCQloYW5kbGVycyA9IGVsZW1lbnQ7CgkJCWVsZW1lbnQgPSB0aGlzLmVsZW1lbnQ7CgkJCWRlbGVnYXRlRWxlbWVudCA9IHRoaXMud2lkZ2V0KCk7CgkJfSBlbHNlIHsKCQkJZWxlbWVudCA9IGRlbGVnYXRlRWxlbWVudCA9ICQoIGVsZW1lbnQgKTsKCQkJdGhpcy5iaW5kaW5ncyA9IHRoaXMuYmluZGluZ3MuYWRkKCBlbGVtZW50ICk7CgkJfQoKCQkkLmVhY2goIGhhbmRsZXJzLCBmdW5jdGlvbiggZXZlbnQsIGhhbmRsZXIgKSB7CgkJCWZ1bmN0aW9uIGhhbmRsZXJQcm94eSgpIHsKCgkJCQkvLyBBbGxvdyB3aWRnZXRzIHRvIGN1c3RvbWl6ZSB0aGUgZGlzYWJsZWQgaGFuZGxpbmcKCQkJCS8vIC0gZGlzYWJsZWQgYXMgYW4gYXJyYXkgaW5zdGVhZCBvZiBib29sZWFuCgkJCQkvLyAtIGRpc2FibGVkIGNsYXNzIGFzIG1ldGhvZCBmb3IgZGlzYWJsaW5nIGluZGl2aWR1YWwgcGFydHMKCQkJCWlmICggIXN1cHByZXNzRGlzYWJsZWRDaGVjayAmJgoJCQkJCQkoIGluc3RhbmNlLm9wdGlvbnMuZGlzYWJsZWQgPT09IHRydWUgfHwKCQkJCQkJJCggdGhpcyApLmhhc0NsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICkgKSApIHsKCQkJCQlyZXR1cm47CgkJCQl9CgkJCQlyZXR1cm4gKCB0eXBlb2YgaGFuZGxlciA9PT0gInN0cmluZyIgPyBpbnN0YW5jZVsgaGFuZGxlciBdIDogaGFuZGxlciApCgkJCQkJLmFwcGx5KCBpbnN0YW5jZSwgYXJndW1lbnRzICk7CgkJCX0KCgkJCS8vIENvcHkgdGhlIGd1aWQgc28gZGlyZWN0IHVuYmluZGluZyB3b3JrcwoJCQlpZiAoIHR5cGVvZiBoYW5kbGVyICE9PSAic3RyaW5nIiApIHsKCQkJCWhhbmRsZXJQcm94eS5ndWlkID0gaGFuZGxlci5ndWlkID0KCQkJCQloYW5kbGVyLmd1aWQgfHwgaGFuZGxlclByb3h5Lmd1aWQgfHwgJC5ndWlkKys7CgkJCX0KCgkJCXZhciBtYXRjaCA9IGV2ZW50Lm1hdGNoKCAvXihbXHc6LV0qKVxzKiguKikkLyApOwoJCQl2YXIgZXZlbnROYW1lID0gbWF0Y2hbIDEgXSArIGluc3RhbmNlLmV2ZW50TmFtZXNwYWNlOwoJCQl2YXIgc2VsZWN0b3IgPSBtYXRjaFsgMiBdOwoKCQkJaWYgKCBzZWxlY3RvciApIHsKCQkJCWRlbGVnYXRlRWxlbWVudC5vbiggZXZlbnROYW1lLCBzZWxlY3RvciwgaGFuZGxlclByb3h5ICk7CgkJCX0gZWxzZSB7CgkJCQllbGVtZW50Lm9uKCBldmVudE5hbWUsIGhhbmRsZXJQcm94eSApOwoJCQl9CgkJfSApOwoJfSwKCglfb2ZmOiBmdW5jdGlvbiggZWxlbWVudCwgZXZlbnROYW1lICkgewoJCWV2ZW50TmFtZSA9ICggZXZlbnROYW1lIHx8ICIiICkuc3BsaXQoICIgIiApLmpvaW4oIHRoaXMuZXZlbnROYW1lc3BhY2UgKyAiICIgKSArCgkJCXRoaXMuZXZlbnROYW1lc3BhY2U7CgkJZWxlbWVudC5vZmYoIGV2ZW50TmFtZSApLm9mZiggZXZlbnROYW1lICk7CgoJCS8vIENsZWFyIHRoZSBzdGFjayB0byBhdm9pZCBtZW1vcnkgbGVha3MgKCMxMDA1NikKCQl0aGlzLmJpbmRpbmdzID0gJCggdGhpcy5iaW5kaW5ncy5ub3QoIGVsZW1lbnQgKS5nZXQoKSApOwoJCXRoaXMuZm9jdXNhYmxlID0gJCggdGhpcy5mb2N1c2FibGUubm90KCBlbGVtZW50ICkuZ2V0KCkgKTsKCQl0aGlzLmhvdmVyYWJsZSA9ICQoIHRoaXMuaG92ZXJhYmxlLm5vdCggZWxlbWVudCApLmdldCgpICk7Cgl9LAoKCV9kZWxheTogZnVuY3Rpb24oIGhhbmRsZXIsIGRlbGF5ICkgewoJCWZ1bmN0aW9uIGhhbmRsZXJQcm94eSgpIHsKCQkJcmV0dXJuICggdHlwZW9mIGhhbmRsZXIgPT09ICJzdHJpbmciID8gaW5zdGFuY2VbIGhhbmRsZXIgXSA6IGhhbmRsZXIgKQoJCQkJLmFwcGx5KCBpbnN0YW5jZSwgYXJndW1lbnRzICk7CgkJfQoJCXZhciBpbnN0YW5jZSA9IHRoaXM7CgkJcmV0dXJuIHNldFRpbWVvdXQoIGhhbmRsZXJQcm94eSwgZGVsYXkgfHwgMCApOwoJfSwKCglfaG92ZXJhYmxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsKCQl0aGlzLmhvdmVyYWJsZSA9IHRoaXMuaG92ZXJhYmxlLmFkZCggZWxlbWVudCApOwoJCXRoaXMuX29uKCBlbGVtZW50LCB7CgkJCW1vdXNlZW50ZXI6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuX2FkZENsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1ob3ZlciIgKTsKCQkJfSwKCQkJbW91c2VsZWF2ZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwgbnVsbCwgInVpLXN0YXRlLWhvdmVyIiApOwoJCQl9CgkJfSApOwoJfSwKCglfZm9jdXNhYmxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsKCQl0aGlzLmZvY3VzYWJsZSA9IHRoaXMuZm9jdXNhYmxlLmFkZCggZWxlbWVudCApOwoJCXRoaXMuX29uKCBlbGVtZW50LCB7CgkJCWZvY3VzaW46IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuX2FkZENsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsKCQkJfSwKCQkJZm9jdXNvdXQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCAkKCBldmVudC5jdXJyZW50VGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1mb2N1cyIgKTsKCQkJfQoJCX0gKTsKCX0sCgoJX3RyaWdnZXI6IGZ1bmN0aW9uKCB0eXBlLCBldmVudCwgZGF0YSApIHsKCQl2YXIgcHJvcCwgb3JpZzsKCQl2YXIgY2FsbGJhY2sgPSB0aGlzLm9wdGlvbnNbIHR5cGUgXTsKCgkJZGF0YSA9IGRhdGEgfHwge307CgkJZXZlbnQgPSAkLkV2ZW50KCBldmVudCApOwoJCWV2ZW50LnR5cGUgPSAoIHR5cGUgPT09IHRoaXMud2lkZ2V0RXZlbnRQcmVmaXggPwoJCQl0eXBlIDoKCQkJdGhpcy53aWRnZXRFdmVudFByZWZpeCArIHR5cGUgKS50b0xvd2VyQ2FzZSgpOwoKCQkvLyBUaGUgb3JpZ2luYWwgZXZlbnQgbWF5IGNvbWUgZnJvbSBhbnkgZWxlbWVudAoJCS8vIHNvIHdlIG5lZWQgdG8gcmVzZXQgdGhlIHRhcmdldCBvbiB0aGUgbmV3IGV2ZW50CgkJZXZlbnQudGFyZ2V0ID0gdGhpcy5lbGVtZW50WyAwIF07CgoJCS8vIENvcHkgb3JpZ2luYWwgZXZlbnQgcHJvcGVydGllcyBvdmVyIHRvIHRoZSBuZXcgZXZlbnQKCQlvcmlnID0gZXZlbnQub3JpZ2luYWxFdmVudDsKCQlpZiAoIG9yaWcgKSB7CgkJCWZvciAoIHByb3AgaW4gb3JpZyApIHsKCQkJCWlmICggISggcHJvcCBpbiBldmVudCApICkgewoJCQkJCWV2ZW50WyBwcm9wIF0gPSBvcmlnWyBwcm9wIF07CgkJCQl9CgkJCX0KCQl9CgoJCXRoaXMuZWxlbWVudC50cmlnZ2VyKCBldmVudCwgZGF0YSApOwoJCXJldHVybiAhKCAkLmlzRnVuY3Rpb24oIGNhbGxiYWNrICkgJiYKCQkJY2FsbGJhY2suYXBwbHkoIHRoaXMuZWxlbWVudFsgMCBdLCBbIGV2ZW50IF0uY29uY2F0KCBkYXRhICkgKSA9PT0gZmFsc2UgfHwKCQkJZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKTsKCX0KfTsKCiQuZWFjaCggeyBzaG93OiAiZmFkZUluIiwgaGlkZTogImZhZGVPdXQiIH0sIGZ1bmN0aW9uKCBtZXRob2QsIGRlZmF1bHRFZmZlY3QgKSB7CgkkLldpZGdldC5wcm90b3R5cGVbICJfIiArIG1ldGhvZCBdID0gZnVuY3Rpb24oIGVsZW1lbnQsIG9wdGlvbnMsIGNhbGxiYWNrICkgewoJCWlmICggdHlwZW9mIG9wdGlvbnMgPT09ICJzdHJpbmciICkgewoJCQlvcHRpb25zID0geyBlZmZlY3Q6IG9wdGlvbnMgfTsKCQl9CgoJCXZhciBoYXNPcHRpb25zOwoJCXZhciBlZmZlY3ROYW1lID0gIW9wdGlvbnMgPwoJCQltZXRob2QgOgoJCQlvcHRpb25zID09PSB0cnVlIHx8IHR5cGVvZiBvcHRpb25zID09PSAibnVtYmVyIiA/CgkJCQlkZWZhdWx0RWZmZWN0IDoKCQkJCW9wdGlvbnMuZWZmZWN0IHx8IGRlZmF1bHRFZmZlY3Q7CgoJCW9wdGlvbnMgPSBvcHRpb25zIHx8IHt9OwoJCWlmICggdHlwZW9mIG9wdGlvbnMgPT09ICJudW1iZXIiICkgewoJCQlvcHRpb25zID0geyBkdXJhdGlvbjogb3B0aW9ucyB9OwoJCX0KCgkJaGFzT3B0aW9ucyA9ICEkLmlzRW1wdHlPYmplY3QoIG9wdGlvbnMgKTsKCQlvcHRpb25zLmNvbXBsZXRlID0gY2FsbGJhY2s7CgoJCWlmICggb3B0aW9ucy5kZWxheSApIHsKCQkJZWxlbWVudC5kZWxheSggb3B0aW9ucy5kZWxheSApOwoJCX0KCgkJaWYgKCBoYXNPcHRpb25zICYmICQuZWZmZWN0cyAmJiAkLmVmZmVjdHMuZWZmZWN0WyBlZmZlY3ROYW1lIF0gKSB7CgkJCWVsZW1lbnRbIG1ldGhvZCBdKCBvcHRpb25zICk7CgkJfSBlbHNlIGlmICggZWZmZWN0TmFtZSAhPT0gbWV0aG9kICYmIGVsZW1lbnRbIGVmZmVjdE5hbWUgXSApIHsKCQkJZWxlbWVudFsgZWZmZWN0TmFtZSBdKCBvcHRpb25zLmR1cmF0aW9uLCBvcHRpb25zLmVhc2luZywgY2FsbGJhY2sgKTsKCQl9IGVsc2UgewoJCQllbGVtZW50LnF1ZXVlKCBmdW5jdGlvbiggbmV4dCApIHsKCQkJCSQoIHRoaXMgKVsgbWV0aG9kIF0oKTsKCQkJCWlmICggY2FsbGJhY2sgKSB7CgkJCQkJY2FsbGJhY2suY2FsbCggZWxlbWVudFsgMCBdICk7CgkJCQl9CgkJCQluZXh0KCk7CgkJCX0gKTsKCQl9Cgl9Owp9ICk7Cgp2YXIgd2lkZ2V0ID0gJC53aWRnZXQ7CgoKLyohCiAqIGpRdWVyeSBVSSBQb3NpdGlvbiAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vcG9zaXRpb24vCiAqLwoKLy8+PmxhYmVsOiBQb3NpdGlvbgovLz4+Z3JvdXA6IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBQb3NpdGlvbnMgZWxlbWVudHMgcmVsYXRpdmUgdG8gb3RoZXIgZWxlbWVudHMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9wb3NpdGlvbi8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL3Bvc2l0aW9uLwoKCiggZnVuY3Rpb24oKSB7CnZhciBjYWNoZWRTY3JvbGxiYXJXaWR0aCwKCW1heCA9IE1hdGgubWF4LAoJYWJzID0gTWF0aC5hYnMsCglyaG9yaXpvbnRhbCA9IC9sZWZ0fGNlbnRlcnxyaWdodC8sCglydmVydGljYWwgPSAvdG9wfGNlbnRlcnxib3R0b20vLAoJcm9mZnNldCA9IC9bXCtcLV1cZCsoXC5bXGRdKyk/JT8vLAoJcnBvc2l0aW9uID0gL15cdysvLAoJcnBlcmNlbnQgPSAvJSQvLAoJX3Bvc2l0aW9uID0gJC5mbi5wb3NpdGlvbjsKCmZ1bmN0aW9uIGdldE9mZnNldHMoIG9mZnNldHMsIHdpZHRoLCBoZWlnaHQgKSB7CglyZXR1cm4gWwoJCXBhcnNlRmxvYXQoIG9mZnNldHNbIDAgXSApICogKCBycGVyY2VudC50ZXN0KCBvZmZzZXRzWyAwIF0gKSA/IHdpZHRoIC8gMTAwIDogMSApLAoJCXBhcnNlRmxvYXQoIG9mZnNldHNbIDEgXSApICogKCBycGVyY2VudC50ZXN0KCBvZmZzZXRzWyAxIF0gKSA/IGhlaWdodCAvIDEwMCA6IDEgKQoJXTsKfQoKZnVuY3Rpb24gcGFyc2VDc3MoIGVsZW1lbnQsIHByb3BlcnR5ICkgewoJcmV0dXJuIHBhcnNlSW50KCAkLmNzcyggZWxlbWVudCwgcHJvcGVydHkgKSwgMTAgKSB8fCAwOwp9CgpmdW5jdGlvbiBnZXREaW1lbnNpb25zKCBlbGVtICkgewoJdmFyIHJhdyA9IGVsZW1bIDAgXTsKCWlmICggcmF3Lm5vZGVUeXBlID09PSA5ICkgewoJCXJldHVybiB7CgkJCXdpZHRoOiBlbGVtLndpZHRoKCksCgkJCWhlaWdodDogZWxlbS5oZWlnaHQoKSwKCQkJb2Zmc2V0OiB7IHRvcDogMCwgbGVmdDogMCB9CgkJfTsKCX0KCWlmICggJC5pc1dpbmRvdyggcmF3ICkgKSB7CgkJcmV0dXJuIHsKCQkJd2lkdGg6IGVsZW0ud2lkdGgoKSwKCQkJaGVpZ2h0OiBlbGVtLmhlaWdodCgpLAoJCQlvZmZzZXQ6IHsgdG9wOiBlbGVtLnNjcm9sbFRvcCgpLCBsZWZ0OiBlbGVtLnNjcm9sbExlZnQoKSB9CgkJfTsKCX0KCWlmICggcmF3LnByZXZlbnREZWZhdWx0ICkgewoJCXJldHVybiB7CgkJCXdpZHRoOiAwLAoJCQloZWlnaHQ6IDAsCgkJCW9mZnNldDogeyB0b3A6IHJhdy5wYWdlWSwgbGVmdDogcmF3LnBhZ2VYIH0KCQl9OwoJfQoJcmV0dXJuIHsKCQl3aWR0aDogZWxlbS5vdXRlcldpZHRoKCksCgkJaGVpZ2h0OiBlbGVtLm91dGVySGVpZ2h0KCksCgkJb2Zmc2V0OiBlbGVtLm9mZnNldCgpCgl9Owp9CgokLnBvc2l0aW9uID0gewoJc2Nyb2xsYmFyV2lkdGg6IGZ1bmN0aW9uKCkgewoJCWlmICggY2FjaGVkU2Nyb2xsYmFyV2lkdGggIT09IHVuZGVmaW5lZCApIHsKCQkJcmV0dXJuIGNhY2hlZFNjcm9sbGJhcldpZHRoOwoJCX0KCQl2YXIgdzEsIHcyLAoJCQlkaXYgPSAkKCAiPGRpdiAiICsKCQkJCSJzdHlsZT0nZGlzcGxheTpibG9jaztwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDo1MHB4O2hlaWdodDo1MHB4O292ZXJmbG93OmhpZGRlbjsnPiIgKwoJCQkJIjxkaXYgc3R5bGU9J2hlaWdodDoxMDBweDt3aWR0aDphdXRvOyc+PC9kaXY+PC9kaXY+IiApLAoJCQlpbm5lckRpdiA9IGRpdi5jaGlsZHJlbigpWyAwIF07CgoJCSQoICJib2R5IiApLmFwcGVuZCggZGl2ICk7CgkJdzEgPSBpbm5lckRpdi5vZmZzZXRXaWR0aDsKCQlkaXYuY3NzKCAib3ZlcmZsb3ciLCAic2Nyb2xsIiApOwoKCQl3MiA9IGlubmVyRGl2Lm9mZnNldFdpZHRoOwoKCQlpZiAoIHcxID09PSB3MiApIHsKCQkJdzIgPSBkaXZbIDAgXS5jbGllbnRXaWR0aDsKCQl9CgoJCWRpdi5yZW1vdmUoKTsKCgkJcmV0dXJuICggY2FjaGVkU2Nyb2xsYmFyV2lkdGggPSB3MSAtIHcyICk7Cgl9LAoJZ2V0U2Nyb2xsSW5mbzogZnVuY3Rpb24oIHdpdGhpbiApIHsKCQl2YXIgb3ZlcmZsb3dYID0gd2l0aGluLmlzV2luZG93IHx8IHdpdGhpbi5pc0RvY3VtZW50ID8gIiIgOgoJCQkJd2l0aGluLmVsZW1lbnQuY3NzKCAib3ZlcmZsb3cteCIgKSwKCQkJb3ZlcmZsb3dZID0gd2l0aGluLmlzV2luZG93IHx8IHdpdGhpbi5pc0RvY3VtZW50ID8gIiIgOgoJCQkJd2l0aGluLmVsZW1lbnQuY3NzKCAib3ZlcmZsb3cteSIgKSwKCQkJaGFzT3ZlcmZsb3dYID0gb3ZlcmZsb3dYID09PSAic2Nyb2xsIiB8fAoJCQkJKCBvdmVyZmxvd1ggPT09ICJhdXRvIiAmJiB3aXRoaW4ud2lkdGggPCB3aXRoaW4uZWxlbWVudFsgMCBdLnNjcm9sbFdpZHRoICksCgkJCWhhc092ZXJmbG93WSA9IG92ZXJmbG93WSA9PT0gInNjcm9sbCIgfHwKCQkJCSggb3ZlcmZsb3dZID09PSAiYXV0byIgJiYgd2l0aGluLmhlaWdodCA8IHdpdGhpbi5lbGVtZW50WyAwIF0uc2Nyb2xsSGVpZ2h0ICk7CgkJcmV0dXJuIHsKCQkJd2lkdGg6IGhhc092ZXJmbG93WSA/ICQucG9zaXRpb24uc2Nyb2xsYmFyV2lkdGgoKSA6IDAsCgkJCWhlaWdodDogaGFzT3ZlcmZsb3dYID8gJC5wb3NpdGlvbi5zY3JvbGxiYXJXaWR0aCgpIDogMAoJCX07Cgl9LAoJZ2V0V2l0aGluSW5mbzogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJdmFyIHdpdGhpbkVsZW1lbnQgPSAkKCBlbGVtZW50IHx8IHdpbmRvdyApLAoJCQlpc1dpbmRvdyA9ICQuaXNXaW5kb3coIHdpdGhpbkVsZW1lbnRbIDAgXSApLAoJCQlpc0RvY3VtZW50ID0gISF3aXRoaW5FbGVtZW50WyAwIF0gJiYgd2l0aGluRWxlbWVudFsgMCBdLm5vZGVUeXBlID09PSA5LAoJCQloYXNPZmZzZXQgPSAhaXNXaW5kb3cgJiYgIWlzRG9jdW1lbnQ7CgkJcmV0dXJuIHsKCQkJZWxlbWVudDogd2l0aGluRWxlbWVudCwKCQkJaXNXaW5kb3c6IGlzV2luZG93LAoJCQlpc0RvY3VtZW50OiBpc0RvY3VtZW50LAoJCQlvZmZzZXQ6IGhhc09mZnNldCA/ICQoIGVsZW1lbnQgKS5vZmZzZXQoKSA6IHsgbGVmdDogMCwgdG9wOiAwIH0sCgkJCXNjcm9sbExlZnQ6IHdpdGhpbkVsZW1lbnQuc2Nyb2xsTGVmdCgpLAoJCQlzY3JvbGxUb3A6IHdpdGhpbkVsZW1lbnQuc2Nyb2xsVG9wKCksCgkJCXdpZHRoOiB3aXRoaW5FbGVtZW50Lm91dGVyV2lkdGgoKSwKCQkJaGVpZ2h0OiB3aXRoaW5FbGVtZW50Lm91dGVySGVpZ2h0KCkKCQl9OwoJfQp9OwoKJC5mbi5wb3NpdGlvbiA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJaWYgKCAhb3B0aW9ucyB8fCAhb3B0aW9ucy5vZiApIHsKCQlyZXR1cm4gX3Bvc2l0aW9uLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCX0KCgkvLyBNYWtlIGEgY29weSwgd2UgZG9uJ3Qgd2FudCB0byBtb2RpZnkgYXJndW1lbnRzCglvcHRpb25zID0gJC5leHRlbmQoIHt9LCBvcHRpb25zICk7CgoJdmFyIGF0T2Zmc2V0LCB0YXJnZXRXaWR0aCwgdGFyZ2V0SGVpZ2h0LCB0YXJnZXRPZmZzZXQsIGJhc2VQb3NpdGlvbiwgZGltZW5zaW9ucywKCQl0YXJnZXQgPSAkKCBvcHRpb25zLm9mICksCgkJd2l0aGluID0gJC5wb3NpdGlvbi5nZXRXaXRoaW5JbmZvKCBvcHRpb25zLndpdGhpbiApLAoJCXNjcm9sbEluZm8gPSAkLnBvc2l0aW9uLmdldFNjcm9sbEluZm8oIHdpdGhpbiApLAoJCWNvbGxpc2lvbiA9ICggb3B0aW9ucy5jb2xsaXNpb24gfHwgImZsaXAiICkuc3BsaXQoICIgIiApLAoJCW9mZnNldHMgPSB7fTsKCglkaW1lbnNpb25zID0gZ2V0RGltZW5zaW9ucyggdGFyZ2V0ICk7CglpZiAoIHRhcmdldFsgMCBdLnByZXZlbnREZWZhdWx0ICkgewoKCQkvLyBGb3JjZSBsZWZ0IHRvcCB0byBhbGxvdyBmbGlwcGluZwoJCW9wdGlvbnMuYXQgPSAibGVmdCB0b3AiOwoJfQoJdGFyZ2V0V2lkdGggPSBkaW1lbnNpb25zLndpZHRoOwoJdGFyZ2V0SGVpZ2h0ID0gZGltZW5zaW9ucy5oZWlnaHQ7Cgl0YXJnZXRPZmZzZXQgPSBkaW1lbnNpb25zLm9mZnNldDsKCgkvLyBDbG9uZSB0byByZXVzZSBvcmlnaW5hbCB0YXJnZXRPZmZzZXQgbGF0ZXIKCWJhc2VQb3NpdGlvbiA9ICQuZXh0ZW5kKCB7fSwgdGFyZ2V0T2Zmc2V0ICk7CgoJLy8gRm9yY2UgbXkgYW5kIGF0IHRvIGhhdmUgdmFsaWQgaG9yaXpvbnRhbCBhbmQgdmVydGljYWwgcG9zaXRpb25zCgkvLyBpZiBhIHZhbHVlIGlzIG1pc3Npbmcgb3IgaW52YWxpZCwgaXQgd2lsbCBiZSBjb252ZXJ0ZWQgdG8gY2VudGVyCgkkLmVhY2goIFsgIm15IiwgImF0IiBdLCBmdW5jdGlvbigpIHsKCQl2YXIgcG9zID0gKCBvcHRpb25zWyB0aGlzIF0gfHwgIiIgKS5zcGxpdCggIiAiICksCgkJCWhvcml6b250YWxPZmZzZXQsCgkJCXZlcnRpY2FsT2Zmc2V0OwoKCQlpZiAoIHBvcy5sZW5ndGggPT09IDEgKSB7CgkJCXBvcyA9IHJob3Jpem9udGFsLnRlc3QoIHBvc1sgMCBdICkgPwoJCQkJcG9zLmNvbmNhdCggWyAiY2VudGVyIiBdICkgOgoJCQkJcnZlcnRpY2FsLnRlc3QoIHBvc1sgMCBdICkgPwoJCQkJCVsgImNlbnRlciIgXS5jb25jYXQoIHBvcyApIDoKCQkJCQlbICJjZW50ZXIiLCAiY2VudGVyIiBdOwoJCX0KCQlwb3NbIDAgXSA9IHJob3Jpem9udGFsLnRlc3QoIHBvc1sgMCBdICkgPyBwb3NbIDAgXSA6ICJjZW50ZXIiOwoJCXBvc1sgMSBdID0gcnZlcnRpY2FsLnRlc3QoIHBvc1sgMSBdICkgPyBwb3NbIDEgXSA6ICJjZW50ZXIiOwoKCQkvLyBDYWxjdWxhdGUgb2Zmc2V0cwoJCWhvcml6b250YWxPZmZzZXQgPSByb2Zmc2V0LmV4ZWMoIHBvc1sgMCBdICk7CgkJdmVydGljYWxPZmZzZXQgPSByb2Zmc2V0LmV4ZWMoIHBvc1sgMSBdICk7CgkJb2Zmc2V0c1sgdGhpcyBdID0gWwoJCQlob3Jpem9udGFsT2Zmc2V0ID8gaG9yaXpvbnRhbE9mZnNldFsgMCBdIDogMCwKCQkJdmVydGljYWxPZmZzZXQgPyB2ZXJ0aWNhbE9mZnNldFsgMCBdIDogMAoJCV07CgoJCS8vIFJlZHVjZSB0byBqdXN0IHRoZSBwb3NpdGlvbnMgd2l0aG91dCB0aGUgb2Zmc2V0cwoJCW9wdGlvbnNbIHRoaXMgXSA9IFsKCQkJcnBvc2l0aW9uLmV4ZWMoIHBvc1sgMCBdIClbIDAgXSwKCQkJcnBvc2l0aW9uLmV4ZWMoIHBvc1sgMSBdIClbIDAgXQoJCV07Cgl9ICk7CgoJLy8gTm9ybWFsaXplIGNvbGxpc2lvbiBvcHRpb24KCWlmICggY29sbGlzaW9uLmxlbmd0aCA9PT0gMSApIHsKCQljb2xsaXNpb25bIDEgXSA9IGNvbGxpc2lvblsgMCBdOwoJfQoKCWlmICggb3B0aW9ucy5hdFsgMCBdID09PSAicmlnaHQiICkgewoJCWJhc2VQb3NpdGlvbi5sZWZ0ICs9IHRhcmdldFdpZHRoOwoJfSBlbHNlIGlmICggb3B0aW9ucy5hdFsgMCBdID09PSAiY2VudGVyIiApIHsKCQliYXNlUG9zaXRpb24ubGVmdCArPSB0YXJnZXRXaWR0aCAvIDI7Cgl9CgoJaWYgKCBvcHRpb25zLmF0WyAxIF0gPT09ICJib3R0b20iICkgewoJCWJhc2VQb3NpdGlvbi50b3AgKz0gdGFyZ2V0SGVpZ2h0OwoJfSBlbHNlIGlmICggb3B0aW9ucy5hdFsgMSBdID09PSAiY2VudGVyIiApIHsKCQliYXNlUG9zaXRpb24udG9wICs9IHRhcmdldEhlaWdodCAvIDI7Cgl9CgoJYXRPZmZzZXQgPSBnZXRPZmZzZXRzKCBvZmZzZXRzLmF0LCB0YXJnZXRXaWR0aCwgdGFyZ2V0SGVpZ2h0ICk7CgliYXNlUG9zaXRpb24ubGVmdCArPSBhdE9mZnNldFsgMCBdOwoJYmFzZVBvc2l0aW9uLnRvcCArPSBhdE9mZnNldFsgMSBdOwoKCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCXZhciBjb2xsaXNpb25Qb3NpdGlvbiwgdXNpbmcsCgkJCWVsZW0gPSAkKCB0aGlzICksCgkJCWVsZW1XaWR0aCA9IGVsZW0ub3V0ZXJXaWR0aCgpLAoJCQllbGVtSGVpZ2h0ID0gZWxlbS5vdXRlckhlaWdodCgpLAoJCQltYXJnaW5MZWZ0ID0gcGFyc2VDc3MoIHRoaXMsICJtYXJnaW5MZWZ0IiApLAoJCQltYXJnaW5Ub3AgPSBwYXJzZUNzcyggdGhpcywgIm1hcmdpblRvcCIgKSwKCQkJY29sbGlzaW9uV2lkdGggPSBlbGVtV2lkdGggKyBtYXJnaW5MZWZ0ICsgcGFyc2VDc3MoIHRoaXMsICJtYXJnaW5SaWdodCIgKSArCgkJCQlzY3JvbGxJbmZvLndpZHRoLAoJCQljb2xsaXNpb25IZWlnaHQgPSBlbGVtSGVpZ2h0ICsgbWFyZ2luVG9wICsgcGFyc2VDc3MoIHRoaXMsICJtYXJnaW5Cb3R0b20iICkgKwoJCQkJc2Nyb2xsSW5mby5oZWlnaHQsCgkJCXBvc2l0aW9uID0gJC5leHRlbmQoIHt9LCBiYXNlUG9zaXRpb24gKSwKCQkJbXlPZmZzZXQgPSBnZXRPZmZzZXRzKCBvZmZzZXRzLm15LCBlbGVtLm91dGVyV2lkdGgoKSwgZWxlbS5vdXRlckhlaWdodCgpICk7CgoJCWlmICggb3B0aW9ucy5teVsgMCBdID09PSAicmlnaHQiICkgewoJCQlwb3NpdGlvbi5sZWZ0IC09IGVsZW1XaWR0aDsKCQl9IGVsc2UgaWYgKCBvcHRpb25zLm15WyAwIF0gPT09ICJjZW50ZXIiICkgewoJCQlwb3NpdGlvbi5sZWZ0IC09IGVsZW1XaWR0aCAvIDI7CgkJfQoKCQlpZiAoIG9wdGlvbnMubXlbIDEgXSA9PT0gImJvdHRvbSIgKSB7CgkJCXBvc2l0aW9uLnRvcCAtPSBlbGVtSGVpZ2h0OwoJCX0gZWxzZSBpZiAoIG9wdGlvbnMubXlbIDEgXSA9PT0gImNlbnRlciIgKSB7CgkJCXBvc2l0aW9uLnRvcCAtPSBlbGVtSGVpZ2h0IC8gMjsKCQl9CgoJCXBvc2l0aW9uLmxlZnQgKz0gbXlPZmZzZXRbIDAgXTsKCQlwb3NpdGlvbi50b3AgKz0gbXlPZmZzZXRbIDEgXTsKCgkJY29sbGlzaW9uUG9zaXRpb24gPSB7CgkJCW1hcmdpbkxlZnQ6IG1hcmdpbkxlZnQsCgkJCW1hcmdpblRvcDogbWFyZ2luVG9wCgkJfTsKCgkJJC5lYWNoKCBbICJsZWZ0IiwgInRvcCIgXSwgZnVuY3Rpb24oIGksIGRpciApIHsKCQkJaWYgKCAkLnVpLnBvc2l0aW9uWyBjb2xsaXNpb25bIGkgXSBdICkgewoJCQkJJC51aS5wb3NpdGlvblsgY29sbGlzaW9uWyBpIF0gXVsgZGlyIF0oIHBvc2l0aW9uLCB7CgkJCQkJdGFyZ2V0V2lkdGg6IHRhcmdldFdpZHRoLAoJCQkJCXRhcmdldEhlaWdodDogdGFyZ2V0SGVpZ2h0LAoJCQkJCWVsZW1XaWR0aDogZWxlbVdpZHRoLAoJCQkJCWVsZW1IZWlnaHQ6IGVsZW1IZWlnaHQsCgkJCQkJY29sbGlzaW9uUG9zaXRpb246IGNvbGxpc2lvblBvc2l0aW9uLAoJCQkJCWNvbGxpc2lvbldpZHRoOiBjb2xsaXNpb25XaWR0aCwKCQkJCQljb2xsaXNpb25IZWlnaHQ6IGNvbGxpc2lvbkhlaWdodCwKCQkJCQlvZmZzZXQ6IFsgYXRPZmZzZXRbIDAgXSArIG15T2Zmc2V0WyAwIF0sIGF0T2Zmc2V0IFsgMSBdICsgbXlPZmZzZXRbIDEgXSBdLAoJCQkJCW15OiBvcHRpb25zLm15LAoJCQkJCWF0OiBvcHRpb25zLmF0LAoJCQkJCXdpdGhpbjogd2l0aGluLAoJCQkJCWVsZW06IGVsZW0KCQkJCX0gKTsKCQkJfQoJCX0gKTsKCgkJaWYgKCBvcHRpb25zLnVzaW5nICkgewoKCQkJLy8gQWRkcyBmZWVkYmFjayBhcyBzZWNvbmQgYXJndW1lbnQgdG8gdXNpbmcgY2FsbGJhY2ssIGlmIHByZXNlbnQKCQkJdXNpbmcgPSBmdW5jdGlvbiggcHJvcHMgKSB7CgkJCQl2YXIgbGVmdCA9IHRhcmdldE9mZnNldC5sZWZ0IC0gcG9zaXRpb24ubGVmdCwKCQkJCQlyaWdodCA9IGxlZnQgKyB0YXJnZXRXaWR0aCAtIGVsZW1XaWR0aCwKCQkJCQl0b3AgPSB0YXJnZXRPZmZzZXQudG9wIC0gcG9zaXRpb24udG9wLAoJCQkJCWJvdHRvbSA9IHRvcCArIHRhcmdldEhlaWdodCAtIGVsZW1IZWlnaHQsCgkJCQkJZmVlZGJhY2sgPSB7CgkJCQkJCXRhcmdldDogewoJCQkJCQkJZWxlbWVudDogdGFyZ2V0LAoJCQkJCQkJbGVmdDogdGFyZ2V0T2Zmc2V0LmxlZnQsCgkJCQkJCQl0b3A6IHRhcmdldE9mZnNldC50b3AsCgkJCQkJCQl3aWR0aDogdGFyZ2V0V2lkdGgsCgkJCQkJCQloZWlnaHQ6IHRhcmdldEhlaWdodAoJCQkJCQl9LAoJCQkJCQllbGVtZW50OiB7CgkJCQkJCQllbGVtZW50OiBlbGVtLAoJCQkJCQkJbGVmdDogcG9zaXRpb24ubGVmdCwKCQkJCQkJCXRvcDogcG9zaXRpb24udG9wLAoJCQkJCQkJd2lkdGg6IGVsZW1XaWR0aCwKCQkJCQkJCWhlaWdodDogZWxlbUhlaWdodAoJCQkJCQl9LAoJCQkJCQlob3Jpem9udGFsOiByaWdodCA8IDAgPyAibGVmdCIgOiBsZWZ0ID4gMCA/ICJyaWdodCIgOiAiY2VudGVyIiwKCQkJCQkJdmVydGljYWw6IGJvdHRvbSA8IDAgPyAidG9wIiA6IHRvcCA+IDAgPyAiYm90dG9tIiA6ICJtaWRkbGUiCgkJCQkJfTsKCQkJCWlmICggdGFyZ2V0V2lkdGggPCBlbGVtV2lkdGggJiYgYWJzKCBsZWZ0ICsgcmlnaHQgKSA8IHRhcmdldFdpZHRoICkgewoJCQkJCWZlZWRiYWNrLmhvcml6b250YWwgPSAiY2VudGVyIjsKCQkJCX0KCQkJCWlmICggdGFyZ2V0SGVpZ2h0IDwgZWxlbUhlaWdodCAmJiBhYnMoIHRvcCArIGJvdHRvbSApIDwgdGFyZ2V0SGVpZ2h0ICkgewoJCQkJCWZlZWRiYWNrLnZlcnRpY2FsID0gIm1pZGRsZSI7CgkJCQl9CgkJCQlpZiAoIG1heCggYWJzKCBsZWZ0ICksIGFicyggcmlnaHQgKSApID4gbWF4KCBhYnMoIHRvcCApLCBhYnMoIGJvdHRvbSApICkgKSB7CgkJCQkJZmVlZGJhY2suaW1wb3J0YW50ID0gImhvcml6b250YWwiOwoJCQkJfSBlbHNlIHsKCQkJCQlmZWVkYmFjay5pbXBvcnRhbnQgPSAidmVydGljYWwiOwoJCQkJfQoJCQkJb3B0aW9ucy51c2luZy5jYWxsKCB0aGlzLCBwcm9wcywgZmVlZGJhY2sgKTsKCQkJfTsKCQl9CgoJCWVsZW0ub2Zmc2V0KCAkLmV4dGVuZCggcG9zaXRpb24sIHsgdXNpbmc6IHVzaW5nIH0gKSApOwoJfSApOwp9OwoKJC51aS5wb3NpdGlvbiA9IHsKCWZpdDogewoJCWxlZnQ6IGZ1bmN0aW9uKCBwb3NpdGlvbiwgZGF0YSApIHsKCQkJdmFyIHdpdGhpbiA9IGRhdGEud2l0aGluLAoJCQkJd2l0aGluT2Zmc2V0ID0gd2l0aGluLmlzV2luZG93ID8gd2l0aGluLnNjcm9sbExlZnQgOiB3aXRoaW4ub2Zmc2V0LmxlZnQsCgkJCQlvdXRlcldpZHRoID0gd2l0aGluLndpZHRoLAoJCQkJY29sbGlzaW9uUG9zTGVmdCA9IHBvc2l0aW9uLmxlZnQgLSBkYXRhLmNvbGxpc2lvblBvc2l0aW9uLm1hcmdpbkxlZnQsCgkJCQlvdmVyTGVmdCA9IHdpdGhpbk9mZnNldCAtIGNvbGxpc2lvblBvc0xlZnQsCgkJCQlvdmVyUmlnaHQgPSBjb2xsaXNpb25Qb3NMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lkdGggLSB3aXRoaW5PZmZzZXQsCgkJCQluZXdPdmVyUmlnaHQ7CgoJCQkvLyBFbGVtZW50IGlzIHdpZGVyIHRoYW4gd2l0aGluCgkJCWlmICggZGF0YS5jb2xsaXNpb25XaWR0aCA+IG91dGVyV2lkdGggKSB7CgoJCQkJLy8gRWxlbWVudCBpcyBpbml0aWFsbHkgb3ZlciB0aGUgbGVmdCBzaWRlIG9mIHdpdGhpbgoJCQkJaWYgKCBvdmVyTGVmdCA+IDAgJiYgb3ZlclJpZ2h0IDw9IDAgKSB7CgkJCQkJbmV3T3ZlclJpZ2h0ID0gcG9zaXRpb24ubGVmdCArIG92ZXJMZWZ0ICsgZGF0YS5jb2xsaXNpb25XaWR0aCAtIG91dGVyV2lkdGggLQoJCQkJCQl3aXRoaW5PZmZzZXQ7CgkJCQkJcG9zaXRpb24ubGVmdCArPSBvdmVyTGVmdCAtIG5ld092ZXJSaWdodDsKCgkJCQkvLyBFbGVtZW50IGlzIGluaXRpYWxseSBvdmVyIHJpZ2h0IHNpZGUgb2Ygd2l0aGluCgkJCQl9IGVsc2UgaWYgKCBvdmVyUmlnaHQgPiAwICYmIG92ZXJMZWZ0IDw9IDAgKSB7CgkJCQkJcG9zaXRpb24ubGVmdCA9IHdpdGhpbk9mZnNldDsKCgkJCQkvLyBFbGVtZW50IGlzIGluaXRpYWxseSBvdmVyIGJvdGggbGVmdCBhbmQgcmlnaHQgc2lkZXMgb2Ygd2l0aGluCgkJCQl9IGVsc2UgewoJCQkJCWlmICggb3ZlckxlZnQgPiBvdmVyUmlnaHQgKSB7CgkJCQkJCXBvc2l0aW9uLmxlZnQgPSB3aXRoaW5PZmZzZXQgKyBvdXRlcldpZHRoIC0gZGF0YS5jb2xsaXNpb25XaWR0aDsKCQkJCQl9IGVsc2UgewoJCQkJCQlwb3NpdGlvbi5sZWZ0ID0gd2l0aGluT2Zmc2V0OwoJCQkJCX0KCQkJCX0KCgkJCS8vIFRvbyBmYXIgbGVmdCAtPiBhbGlnbiB3aXRoIGxlZnQgZWRnZQoJCQl9IGVsc2UgaWYgKCBvdmVyTGVmdCA+IDAgKSB7CgkJCQlwb3NpdGlvbi5sZWZ0ICs9IG92ZXJMZWZ0OwoKCQkJLy8gVG9vIGZhciByaWdodCAtPiBhbGlnbiB3aXRoIHJpZ2h0IGVkZ2UKCQkJfSBlbHNlIGlmICggb3ZlclJpZ2h0ID4gMCApIHsKCQkJCXBvc2l0aW9uLmxlZnQgLT0gb3ZlclJpZ2h0OwoKCQkJLy8gQWRqdXN0IGJhc2VkIG9uIHBvc2l0aW9uIGFuZCBtYXJnaW4KCQkJfSBlbHNlIHsKCQkJCXBvc2l0aW9uLmxlZnQgPSBtYXgoIHBvc2l0aW9uLmxlZnQgLSBjb2xsaXNpb25Qb3NMZWZ0LCBwb3NpdGlvbi5sZWZ0ICk7CgkJCX0KCQl9LAoJCXRvcDogZnVuY3Rpb24oIHBvc2l0aW9uLCBkYXRhICkgewoJCQl2YXIgd2l0aGluID0gZGF0YS53aXRoaW4sCgkJCQl3aXRoaW5PZmZzZXQgPSB3aXRoaW4uaXNXaW5kb3cgPyB3aXRoaW4uc2Nyb2xsVG9wIDogd2l0aGluLm9mZnNldC50b3AsCgkJCQlvdXRlckhlaWdodCA9IGRhdGEud2l0aGluLmhlaWdodCwKCQkJCWNvbGxpc2lvblBvc1RvcCA9IHBvc2l0aW9uLnRvcCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wLAoJCQkJb3ZlclRvcCA9IHdpdGhpbk9mZnNldCAtIGNvbGxpc2lvblBvc1RvcCwKCQkJCW92ZXJCb3R0b20gPSBjb2xsaXNpb25Qb3NUb3AgKyBkYXRhLmNvbGxpc2lvbkhlaWdodCAtIG91dGVySGVpZ2h0IC0gd2l0aGluT2Zmc2V0LAoJCQkJbmV3T3ZlckJvdHRvbTsKCgkJCS8vIEVsZW1lbnQgaXMgdGFsbGVyIHRoYW4gd2l0aGluCgkJCWlmICggZGF0YS5jb2xsaXNpb25IZWlnaHQgPiBvdXRlckhlaWdodCApIHsKCgkJCQkvLyBFbGVtZW50IGlzIGluaXRpYWxseSBvdmVyIHRoZSB0b3Agb2Ygd2l0aGluCgkJCQlpZiAoIG92ZXJUb3AgPiAwICYmIG92ZXJCb3R0b20gPD0gMCApIHsKCQkJCQluZXdPdmVyQm90dG9tID0gcG9zaXRpb24udG9wICsgb3ZlclRvcCArIGRhdGEuY29sbGlzaW9uSGVpZ2h0IC0gb3V0ZXJIZWlnaHQgLQoJCQkJCQl3aXRoaW5PZmZzZXQ7CgkJCQkJcG9zaXRpb24udG9wICs9IG92ZXJUb3AgLSBuZXdPdmVyQm90dG9tOwoKCQkJCS8vIEVsZW1lbnQgaXMgaW5pdGlhbGx5IG92ZXIgYm90dG9tIG9mIHdpdGhpbgoJCQkJfSBlbHNlIGlmICggb3ZlckJvdHRvbSA+IDAgJiYgb3ZlclRvcCA8PSAwICkgewoJCQkJCXBvc2l0aW9uLnRvcCA9IHdpdGhpbk9mZnNldDsKCgkJCQkvLyBFbGVtZW50IGlzIGluaXRpYWxseSBvdmVyIGJvdGggdG9wIGFuZCBib3R0b20gb2Ygd2l0aGluCgkJCQl9IGVsc2UgewoJCQkJCWlmICggb3ZlclRvcCA+IG92ZXJCb3R0b20gKSB7CgkJCQkJCXBvc2l0aW9uLnRvcCA9IHdpdGhpbk9mZnNldCArIG91dGVySGVpZ2h0IC0gZGF0YS5jb2xsaXNpb25IZWlnaHQ7CgkJCQkJfSBlbHNlIHsKCQkJCQkJcG9zaXRpb24udG9wID0gd2l0aGluT2Zmc2V0OwoJCQkJCX0KCQkJCX0KCgkJCS8vIFRvbyBmYXIgdXAgLT4gYWxpZ24gd2l0aCB0b3AKCQkJfSBlbHNlIGlmICggb3ZlclRvcCA+IDAgKSB7CgkJCQlwb3NpdGlvbi50b3AgKz0gb3ZlclRvcDsKCgkJCS8vIFRvbyBmYXIgZG93biAtPiBhbGlnbiB3aXRoIGJvdHRvbSBlZGdlCgkJCX0gZWxzZSBpZiAoIG92ZXJCb3R0b20gPiAwICkgewoJCQkJcG9zaXRpb24udG9wIC09IG92ZXJCb3R0b207CgoJCQkvLyBBZGp1c3QgYmFzZWQgb24gcG9zaXRpb24gYW5kIG1hcmdpbgoJCQl9IGVsc2UgewoJCQkJcG9zaXRpb24udG9wID0gbWF4KCBwb3NpdGlvbi50b3AgLSBjb2xsaXNpb25Qb3NUb3AsIHBvc2l0aW9uLnRvcCApOwoJCQl9CgkJfQoJfSwKCWZsaXA6IHsKCQlsZWZ0OiBmdW5jdGlvbiggcG9zaXRpb24sIGRhdGEgKSB7CgkJCXZhciB3aXRoaW4gPSBkYXRhLndpdGhpbiwKCQkJCXdpdGhpbk9mZnNldCA9IHdpdGhpbi5vZmZzZXQubGVmdCArIHdpdGhpbi5zY3JvbGxMZWZ0LAoJCQkJb3V0ZXJXaWR0aCA9IHdpdGhpbi53aWR0aCwKCQkJCW9mZnNldExlZnQgPSB3aXRoaW4uaXNXaW5kb3cgPyB3aXRoaW4uc2Nyb2xsTGVmdCA6IHdpdGhpbi5vZmZzZXQubGVmdCwKCQkJCWNvbGxpc2lvblBvc0xlZnQgPSBwb3NpdGlvbi5sZWZ0IC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5MZWZ0LAoJCQkJb3ZlckxlZnQgPSBjb2xsaXNpb25Qb3NMZWZ0IC0gb2Zmc2V0TGVmdCwKCQkJCW92ZXJSaWdodCA9IGNvbGxpc2lvblBvc0xlZnQgKyBkYXRhLmNvbGxpc2lvbldpZHRoIC0gb3V0ZXJXaWR0aCAtIG9mZnNldExlZnQsCgkJCQlteU9mZnNldCA9IGRhdGEubXlbIDAgXSA9PT0gImxlZnQiID8KCQkJCQktZGF0YS5lbGVtV2lkdGggOgoJCQkJCWRhdGEubXlbIDAgXSA9PT0gInJpZ2h0IiA/CgkJCQkJCWRhdGEuZWxlbVdpZHRoIDoKCQkJCQkJMCwKCQkJCWF0T2Zmc2V0ID0gZGF0YS5hdFsgMCBdID09PSAibGVmdCIgPwoJCQkJCWRhdGEudGFyZ2V0V2lkdGggOgoJCQkJCWRhdGEuYXRbIDAgXSA9PT0gInJpZ2h0IiA/CgkJCQkJCS1kYXRhLnRhcmdldFdpZHRoIDoKCQkJCQkJMCwKCQkJCW9mZnNldCA9IC0yICogZGF0YS5vZmZzZXRbIDAgXSwKCQkJCW5ld092ZXJSaWdodCwKCQkJCW5ld092ZXJMZWZ0OwoKCQkJaWYgKCBvdmVyTGVmdCA8IDAgKSB7CgkJCQluZXdPdmVyUmlnaHQgPSBwb3NpdGlvbi5sZWZ0ICsgbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldCArIGRhdGEuY29sbGlzaW9uV2lkdGggLQoJCQkJCW91dGVyV2lkdGggLSB3aXRoaW5PZmZzZXQ7CgkJCQlpZiAoIG5ld092ZXJSaWdodCA8IDAgfHwgbmV3T3ZlclJpZ2h0IDwgYWJzKCBvdmVyTGVmdCApICkgewoJCQkJCXBvc2l0aW9uLmxlZnQgKz0gbXlPZmZzZXQgKyBhdE9mZnNldCArIG9mZnNldDsKCQkJCX0KCQkJfSBlbHNlIGlmICggb3ZlclJpZ2h0ID4gMCApIHsKCQkJCW5ld092ZXJMZWZ0ID0gcG9zaXRpb24ubGVmdCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luTGVmdCArIG15T2Zmc2V0ICsKCQkJCQlhdE9mZnNldCArIG9mZnNldCAtIG9mZnNldExlZnQ7CgkJCQlpZiAoIG5ld092ZXJMZWZ0ID4gMCB8fCBhYnMoIG5ld092ZXJMZWZ0ICkgPCBvdmVyUmlnaHQgKSB7CgkJCQkJcG9zaXRpb24ubGVmdCArPSBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0OwoJCQkJfQoJCQl9CgkJfSwKCQl0b3A6IGZ1bmN0aW9uKCBwb3NpdGlvbiwgZGF0YSApIHsKCQkJdmFyIHdpdGhpbiA9IGRhdGEud2l0aGluLAoJCQkJd2l0aGluT2Zmc2V0ID0gd2l0aGluLm9mZnNldC50b3AgKyB3aXRoaW4uc2Nyb2xsVG9wLAoJCQkJb3V0ZXJIZWlnaHQgPSB3aXRoaW4uaGVpZ2h0LAoJCQkJb2Zmc2V0VG9wID0gd2l0aGluLmlzV2luZG93ID8gd2l0aGluLnNjcm9sbFRvcCA6IHdpdGhpbi5vZmZzZXQudG9wLAoJCQkJY29sbGlzaW9uUG9zVG9wID0gcG9zaXRpb24udG9wIC0gZGF0YS5jb2xsaXNpb25Qb3NpdGlvbi5tYXJnaW5Ub3AsCgkJCQlvdmVyVG9wID0gY29sbGlzaW9uUG9zVG9wIC0gb2Zmc2V0VG9wLAoJCQkJb3ZlckJvdHRvbSA9IGNvbGxpc2lvblBvc1RvcCArIGRhdGEuY29sbGlzaW9uSGVpZ2h0IC0gb3V0ZXJIZWlnaHQgLSBvZmZzZXRUb3AsCgkJCQl0b3AgPSBkYXRhLm15WyAxIF0gPT09ICJ0b3AiLAoJCQkJbXlPZmZzZXQgPSB0b3AgPwoJCQkJCS1kYXRhLmVsZW1IZWlnaHQgOgoJCQkJCWRhdGEubXlbIDEgXSA9PT0gImJvdHRvbSIgPwoJCQkJCQlkYXRhLmVsZW1IZWlnaHQgOgoJCQkJCQkwLAoJCQkJYXRPZmZzZXQgPSBkYXRhLmF0WyAxIF0gPT09ICJ0b3AiID8KCQkJCQlkYXRhLnRhcmdldEhlaWdodCA6CgkJCQkJZGF0YS5hdFsgMSBdID09PSAiYm90dG9tIiA/CgkJCQkJCS1kYXRhLnRhcmdldEhlaWdodCA6CgkJCQkJCTAsCgkJCQlvZmZzZXQgPSAtMiAqIGRhdGEub2Zmc2V0WyAxIF0sCgkJCQluZXdPdmVyVG9wLAoJCQkJbmV3T3ZlckJvdHRvbTsKCQkJaWYgKCBvdmVyVG9wIDwgMCApIHsKCQkJCW5ld092ZXJCb3R0b20gPSBwb3NpdGlvbi50b3AgKyBteU9mZnNldCArIGF0T2Zmc2V0ICsgb2Zmc2V0ICsgZGF0YS5jb2xsaXNpb25IZWlnaHQgLQoJCQkJCW91dGVySGVpZ2h0IC0gd2l0aGluT2Zmc2V0OwoJCQkJaWYgKCBuZXdPdmVyQm90dG9tIDwgMCB8fCBuZXdPdmVyQm90dG9tIDwgYWJzKCBvdmVyVG9wICkgKSB7CgkJCQkJcG9zaXRpb24udG9wICs9IG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQ7CgkJCQl9CgkJCX0gZWxzZSBpZiAoIG92ZXJCb3R0b20gPiAwICkgewoJCQkJbmV3T3ZlclRvcCA9IHBvc2l0aW9uLnRvcCAtIGRhdGEuY29sbGlzaW9uUG9zaXRpb24ubWFyZ2luVG9wICsgbXlPZmZzZXQgKyBhdE9mZnNldCArCgkJCQkJb2Zmc2V0IC0gb2Zmc2V0VG9wOwoJCQkJaWYgKCBuZXdPdmVyVG9wID4gMCB8fCBhYnMoIG5ld092ZXJUb3AgKSA8IG92ZXJCb3R0b20gKSB7CgkJCQkJcG9zaXRpb24udG9wICs9IG15T2Zmc2V0ICsgYXRPZmZzZXQgKyBvZmZzZXQ7CgkJCQl9CgkJCX0KCQl9Cgl9LAoJZmxpcGZpdDogewoJCWxlZnQ6IGZ1bmN0aW9uKCkgewoJCQkkLnVpLnBvc2l0aW9uLmZsaXAubGVmdC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCSQudWkucG9zaXRpb24uZml0LmxlZnQuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCX0sCgkJdG9wOiBmdW5jdGlvbigpIHsKCQkJJC51aS5wb3NpdGlvbi5mbGlwLnRvcC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCSQudWkucG9zaXRpb24uZml0LnRvcC5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJfQoJfQp9OwoKfSApKCk7Cgp2YXIgcG9zaXRpb24gPSAkLnVpLnBvc2l0aW9uOwoKCi8qIQogKiBqUXVlcnkgVUkgOmRhdGEgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiA6ZGF0YSBTZWxlY3RvcgovLz4+Z3JvdXA6IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBTZWxlY3RzIGVsZW1lbnRzIHdoaWNoIGhhdmUgZGF0YSBzdG9yZWQgdW5kZXIgdGhlIHNwZWNpZmllZCBrZXkuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kYXRhLXNlbGVjdG9yLwoKCnZhciBkYXRhID0gJC5leHRlbmQoICQuZXhwclsgIjoiIF0sIHsKCWRhdGE6ICQuZXhwci5jcmVhdGVQc2V1ZG8gPwoJCSQuZXhwci5jcmVhdGVQc2V1ZG8oIGZ1bmN0aW9uKCBkYXRhTmFtZSApIHsKCQkJcmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkgewoJCQkJcmV0dXJuICEhJC5kYXRhKCBlbGVtLCBkYXRhTmFtZSApOwoJCQl9OwoJCX0gKSA6CgoJCS8vIFN1cHBvcnQ6IGpRdWVyeSA8MS44CgkJZnVuY3Rpb24oIGVsZW0sIGksIG1hdGNoICkgewoJCQlyZXR1cm4gISEkLmRhdGEoIGVsZW0sIG1hdGNoWyAzIF0gKTsKCQl9Cn0gKTsKCi8qIQogKiBqUXVlcnkgVUkgRGlzYWJsZSBTZWxlY3Rpb24gMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBkaXNhYmxlU2VsZWN0aW9uCi8vPj5ncm91cDogQ29yZQovLz4+ZGVzY3JpcHRpb246IERpc2FibGUgc2VsZWN0aW9uIG9mIHRleHQgY29udGVudCB3aXRoaW4gdGhlIHNldCBvZiBtYXRjaGVkIGVsZW1lbnRzLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZGlzYWJsZVNlbGVjdGlvbi8KCi8vIFRoaXMgZmlsZSBpcyBkZXByZWNhdGVkCgoKdmFyIGRpc2FibGVTZWxlY3Rpb24gPSAkLmZuLmV4dGVuZCggewoJZGlzYWJsZVNlbGVjdGlvbjogKCBmdW5jdGlvbigpIHsKCQl2YXIgZXZlbnRUeXBlID0gIm9uc2VsZWN0c3RhcnQiIGluIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoICJkaXYiICkgPwoJCQkic2VsZWN0c3RhcnQiIDoKCQkJIm1vdXNlZG93biI7CgoJCXJldHVybiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIHRoaXMub24oIGV2ZW50VHlwZSArICIudWktZGlzYWJsZVNlbGVjdGlvbiIsIGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCX0gKTsKCQl9OwoJfSApKCksCgoJZW5hYmxlU2VsZWN0aW9uOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5vZmYoICIudWktZGlzYWJsZVNlbGVjdGlvbiIgKTsKCX0KfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IEVmZmVjdHMgQ29yZQovLz4+Z3JvdXA6IEVmZmVjdHMKLy8ganNjczpkaXNhYmxlIG1heGltdW1MaW5lTGVuZ3RoCi8vPj5kZXNjcmlwdGlvbjogRXh0ZW5kcyB0aGUgaW50ZXJuYWwgalF1ZXJ5IGVmZmVjdHMuIEluY2x1ZGVzIG1vcnBoaW5nIGFuZCBlYXNpbmcuIFJlcXVpcmVkIGJ5IGFsbCBvdGhlciBlZmZlY3RzLgovLyBqc2NzOmVuYWJsZSBtYXhpbXVtTGluZUxlbmd0aAovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vY2F0ZWdvcnkvZWZmZWN0cy1jb3JlLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0LwoKCgp2YXIgZGF0YVNwYWNlID0gInVpLWVmZmVjdHMtIiwKCWRhdGFTcGFjZVN0eWxlID0gInVpLWVmZmVjdHMtc3R5bGUiLAoJZGF0YVNwYWNlQW5pbWF0ZWQgPSAidWktZWZmZWN0cy1hbmltYXRlZCIsCgoJLy8gQ3JlYXRlIGEgbG9jYWwgalF1ZXJ5IGJlY2F1c2UgalF1ZXJ5IENvbG9yIHJlbGllcyBvbiBpdCBhbmQgdGhlCgkvLyBnbG9iYWwgbWF5IG5vdCBleGlzdCB3aXRoIEFNRCBhbmQgYSBjdXN0b20gYnVpbGQgKCMxMDE5OSkKCWpRdWVyeSA9ICQ7CgokLmVmZmVjdHMgPSB7CgllZmZlY3Q6IHt9Cn07CgovKiEKICogalF1ZXJ5IENvbG9yIEFuaW1hdGlvbnMgdjIuMS4yCiAqIGh0dHBzOi8vZ2l0aHViLmNvbS9qcXVlcnkvanF1ZXJ5LWNvbG9yCiAqCiAqIENvcHlyaWdodCAyMDE0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqCiAqIERhdGU6IFdlZCBKYW4gMTYgMDg6NDc6MDkgMjAxMyAtMDYwMAogKi8KKCBmdW5jdGlvbiggalF1ZXJ5LCB1bmRlZmluZWQgKSB7CgoJdmFyIHN0ZXBIb29rcyA9ICJiYWNrZ3JvdW5kQ29sb3IgYm9yZGVyQm90dG9tQ29sb3IgYm9yZGVyTGVmdENvbG9yIGJvcmRlclJpZ2h0Q29sb3IgIiArCgkJImJvcmRlclRvcENvbG9yIGNvbG9yIGNvbHVtblJ1bGVDb2xvciBvdXRsaW5lQ29sb3IgdGV4dERlY29yYXRpb25Db2xvciB0ZXh0RW1waGFzaXNDb2xvciIsCgoJLy8gUGx1c2VxdWFscyB0ZXN0IGZvciArPSAxMDAgLT0gMTAwCglycGx1c2VxdWFscyA9IC9eKFtcLStdKT1ccyooXGQrXC4/XGQqKS8sCgoJLy8gQSBzZXQgb2YgUkUncyB0aGF0IGNhbiBtYXRjaCBzdHJpbmdzIGFuZCBnZW5lcmF0ZSBjb2xvciB0dXBsZXMuCglzdHJpbmdQYXJzZXJzID0gWyB7CgkJCXJlOiAvcmdiYT9cKFxzKihcZHsxLDN9KVxzKixccyooXGR7MSwzfSlccyosXHMqKFxkezEsM30pXHMqKD86LFxzKihcZD8oPzpcLlxkKyk/KVxzKik/XCkvLAoJCQlwYXJzZTogZnVuY3Rpb24oIGV4ZWNSZXN1bHQgKSB7CgkJCQlyZXR1cm4gWwoJCQkJCWV4ZWNSZXN1bHRbIDEgXSwKCQkJCQlleGVjUmVzdWx0WyAyIF0sCgkJCQkJZXhlY1Jlc3VsdFsgMyBdLAoJCQkJCWV4ZWNSZXN1bHRbIDQgXQoJCQkJXTsKCQkJfQoJCX0sIHsKCQkJcmU6IC9yZ2JhP1woXHMqKFxkKyg/OlwuXGQrKT8pXCVccyosXHMqKFxkKyg/OlwuXGQrKT8pXCVccyosXHMqKFxkKyg/OlwuXGQrKT8pXCVccyooPzosXHMqKFxkPyg/OlwuXGQrKT8pXHMqKT9cKS8sCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsKCQkJCXJldHVybiBbCgkJCQkJZXhlY1Jlc3VsdFsgMSBdICogMi41NSwKCQkJCQlleGVjUmVzdWx0WyAyIF0gKiAyLjU1LAoJCQkJCWV4ZWNSZXN1bHRbIDMgXSAqIDIuNTUsCgkJCQkJZXhlY1Jlc3VsdFsgNCBdCgkJCQldOwoJCQl9CgkJfSwgewoKCQkJLy8gVGhpcyByZWdleCBpZ25vcmVzIEEtRiBiZWNhdXNlIGl0J3MgY29tcGFyZWQgYWdhaW5zdCBhbiBhbHJlYWR5IGxvd2VyY2FzZWQgc3RyaW5nCgkJCXJlOiAvIyhbYS1mMC05XXsyfSkoW2EtZjAtOV17Mn0pKFthLWYwLTldezJ9KS8sCgkJCXBhcnNlOiBmdW5jdGlvbiggZXhlY1Jlc3VsdCApIHsKCQkJCXJldHVybiBbCgkJCQkJcGFyc2VJbnQoIGV4ZWNSZXN1bHRbIDEgXSwgMTYgKSwKCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMiBdLCAxNiApLAoJCQkJCXBhcnNlSW50KCBleGVjUmVzdWx0WyAzIF0sIDE2ICkKCQkJCV07CgkJCX0KCQl9LCB7CgoJCQkvLyBUaGlzIHJlZ2V4IGlnbm9yZXMgQS1GIGJlY2F1c2UgaXQncyBjb21wYXJlZCBhZ2FpbnN0IGFuIGFscmVhZHkgbG93ZXJjYXNlZCBzdHJpbmcKCQkJcmU6IC8jKFthLWYwLTldKShbYS1mMC05XSkoW2EtZjAtOV0pLywKCQkJcGFyc2U6IGZ1bmN0aW9uKCBleGVjUmVzdWx0ICkgewoJCQkJcmV0dXJuIFsKCQkJCQlwYXJzZUludCggZXhlY1Jlc3VsdFsgMSBdICsgZXhlY1Jlc3VsdFsgMSBdLCAxNiApLAoJCQkJCXBhcnNlSW50KCBleGVjUmVzdWx0WyAyIF0gKyBleGVjUmVzdWx0WyAyIF0sIDE2ICksCgkJCQkJcGFyc2VJbnQoIGV4ZWNSZXN1bHRbIDMgXSArIGV4ZWNSZXN1bHRbIDMgXSwgMTYgKQoJCQkJXTsKCQkJfQoJCX0sIHsKCQkJcmU6IC9oc2xhP1woXHMqKFxkKyg/OlwuXGQrKT8pXHMqLFxzKihcZCsoPzpcLlxkKyk/KVwlXHMqLFxzKihcZCsoPzpcLlxkKyk/KVwlXHMqKD86LFxzKihcZD8oPzpcLlxkKyk/KVxzKik/XCkvLAoJCQlzcGFjZTogImhzbGEiLAoJCQlwYXJzZTogZnVuY3Rpb24oIGV4ZWNSZXN1bHQgKSB7CgkJCQlyZXR1cm4gWwoJCQkJCWV4ZWNSZXN1bHRbIDEgXSwKCQkJCQlleGVjUmVzdWx0WyAyIF0gLyAxMDAsCgkJCQkJZXhlY1Jlc3VsdFsgMyBdIC8gMTAwLAoJCQkJCWV4ZWNSZXN1bHRbIDQgXQoJCQkJXTsKCQkJfQoJCX0gXSwKCgkvLyBKUXVlcnkuQ29sb3IoICkKCWNvbG9yID0galF1ZXJ5LkNvbG9yID0gZnVuY3Rpb24oIGNvbG9yLCBncmVlbiwgYmx1ZSwgYWxwaGEgKSB7CgkJcmV0dXJuIG5ldyBqUXVlcnkuQ29sb3IuZm4ucGFyc2UoIGNvbG9yLCBncmVlbiwgYmx1ZSwgYWxwaGEgKTsKCX0sCglzcGFjZXMgPSB7CgkJcmdiYTogewoJCQlwcm9wczogewoJCQkJcmVkOiB7CgkJCQkJaWR4OiAwLAoJCQkJCXR5cGU6ICJieXRlIgoJCQkJfSwKCQkJCWdyZWVuOiB7CgkJCQkJaWR4OiAxLAoJCQkJCXR5cGU6ICJieXRlIgoJCQkJfSwKCQkJCWJsdWU6IHsKCQkJCQlpZHg6IDIsCgkJCQkJdHlwZTogImJ5dGUiCgkJCQl9CgkJCX0KCQl9LAoKCQloc2xhOiB7CgkJCXByb3BzOiB7CgkJCQlodWU6IHsKCQkJCQlpZHg6IDAsCgkJCQkJdHlwZTogImRlZ3JlZXMiCgkJCQl9LAoJCQkJc2F0dXJhdGlvbjogewoJCQkJCWlkeDogMSwKCQkJCQl0eXBlOiAicGVyY2VudCIKCQkJCX0sCgkJCQlsaWdodG5lc3M6IHsKCQkJCQlpZHg6IDIsCgkJCQkJdHlwZTogInBlcmNlbnQiCgkJCQl9CgkJCX0KCQl9Cgl9LAoJcHJvcFR5cGVzID0gewoJCSJieXRlIjogewoJCQlmbG9vcjogdHJ1ZSwKCQkJbWF4OiAyNTUKCQl9LAoJCSJwZXJjZW50IjogewoJCQltYXg6IDEKCQl9LAoJCSJkZWdyZWVzIjogewoJCQltb2Q6IDM2MCwKCQkJZmxvb3I6IHRydWUKCQl9Cgl9LAoJc3VwcG9ydCA9IGNvbG9yLnN1cHBvcnQgPSB7fSwKCgkvLyBFbGVtZW50IGZvciBzdXBwb3J0IHRlc3RzCglzdXBwb3J0RWxlbSA9IGpRdWVyeSggIjxwPiIgKVsgMCBdLAoKCS8vIENvbG9ycyA9IGpRdWVyeS5Db2xvci5uYW1lcwoJY29sb3JzLAoKCS8vIExvY2FsIGFsaWFzZXMgb2YgZnVuY3Rpb25zIGNhbGxlZCBvZnRlbgoJZWFjaCA9IGpRdWVyeS5lYWNoOwoKLy8gRGV0ZXJtaW5lIHJnYmEgc3VwcG9ydCBpbW1lZGlhdGVseQpzdXBwb3J0RWxlbS5zdHlsZS5jc3NUZXh0ID0gImJhY2tncm91bmQtY29sb3I6cmdiYSgxLDEsMSwuNSkiOwpzdXBwb3J0LnJnYmEgPSBzdXBwb3J0RWxlbS5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IuaW5kZXhPZiggInJnYmEiICkgPiAtMTsKCi8vIERlZmluZSBjYWNoZSBuYW1lIGFuZCBhbHBoYSBwcm9wZXJ0aWVzCi8vIGZvciByZ2JhIGFuZCBoc2xhIHNwYWNlcwplYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgewoJc3BhY2UuY2FjaGUgPSAiXyIgKyBzcGFjZU5hbWU7CglzcGFjZS5wcm9wcy5hbHBoYSA9IHsKCQlpZHg6IDMsCgkJdHlwZTogInBlcmNlbnQiLAoJCWRlZjogMQoJfTsKfSApOwoKZnVuY3Rpb24gY2xhbXAoIHZhbHVlLCBwcm9wLCBhbGxvd0VtcHR5ICkgewoJdmFyIHR5cGUgPSBwcm9wVHlwZXNbIHByb3AudHlwZSBdIHx8IHt9OwoKCWlmICggdmFsdWUgPT0gbnVsbCApIHsKCQlyZXR1cm4gKCBhbGxvd0VtcHR5IHx8ICFwcm9wLmRlZiApID8gbnVsbCA6IHByb3AuZGVmOwoJfQoKCS8vIH5+IGlzIGFuIHNob3J0IHdheSBvZiBkb2luZyBmbG9vciBmb3IgcG9zaXRpdmUgbnVtYmVycwoJdmFsdWUgPSB0eXBlLmZsb29yID8gfn52YWx1ZSA6IHBhcnNlRmxvYXQoIHZhbHVlICk7CgoJLy8gSUUgd2lsbCBwYXNzIGluIGVtcHR5IHN0cmluZ3MgYXMgdmFsdWUgZm9yIGFscGhhLAoJLy8gd2hpY2ggd2lsbCBoaXQgdGhpcyBjYXNlCglpZiAoIGlzTmFOKCB2YWx1ZSApICkgewoJCXJldHVybiBwcm9wLmRlZjsKCX0KCglpZiAoIHR5cGUubW9kICkgewoKCQkvLyBXZSBhZGQgbW9kIGJlZm9yZSBtb2RkaW5nIHRvIG1ha2Ugc3VyZSB0aGF0IG5lZ2F0aXZlcyB2YWx1ZXMKCQkvLyBnZXQgY29udmVydGVkIHByb3Blcmx5OiAtMTAgLT4gMzUwCgkJcmV0dXJuICggdmFsdWUgKyB0eXBlLm1vZCApICUgdHlwZS5tb2Q7Cgl9CgoJLy8gRm9yIG5vdyBhbGwgcHJvcGVydHkgdHlwZXMgd2l0aG91dCBtb2QgaGF2ZSBtaW4gYW5kIG1heAoJcmV0dXJuIDAgPiB2YWx1ZSA/IDAgOiB0eXBlLm1heCA8IHZhbHVlID8gdHlwZS5tYXggOiB2YWx1ZTsKfQoKZnVuY3Rpb24gc3RyaW5nUGFyc2UoIHN0cmluZyApIHsKCXZhciBpbnN0ID0gY29sb3IoKSwKCQlyZ2JhID0gaW5zdC5fcmdiYSA9IFtdOwoKCXN0cmluZyA9IHN0cmluZy50b0xvd2VyQ2FzZSgpOwoKCWVhY2goIHN0cmluZ1BhcnNlcnMsIGZ1bmN0aW9uKCBpLCBwYXJzZXIgKSB7CgkJdmFyIHBhcnNlZCwKCQkJbWF0Y2ggPSBwYXJzZXIucmUuZXhlYyggc3RyaW5nICksCgkJCXZhbHVlcyA9IG1hdGNoICYmIHBhcnNlci5wYXJzZSggbWF0Y2ggKSwKCQkJc3BhY2VOYW1lID0gcGFyc2VyLnNwYWNlIHx8ICJyZ2JhIjsKCgkJaWYgKCB2YWx1ZXMgKSB7CgkJCXBhcnNlZCA9IGluc3RbIHNwYWNlTmFtZSBdKCB2YWx1ZXMgKTsKCgkJCS8vIElmIHRoaXMgd2FzIGFuIHJnYmEgcGFyc2UgdGhlIGFzc2lnbm1lbnQgbWlnaHQgaGFwcGVuIHR3aWNlCgkJCS8vIG9oIHdlbGwuLi4uCgkJCWluc3RbIHNwYWNlc1sgc3BhY2VOYW1lIF0uY2FjaGUgXSA9IHBhcnNlZFsgc3BhY2VzWyBzcGFjZU5hbWUgXS5jYWNoZSBdOwoJCQlyZ2JhID0gaW5zdC5fcmdiYSA9IHBhcnNlZC5fcmdiYTsKCgkJCS8vIEV4aXQgZWFjaCggc3RyaW5nUGFyc2VycyApIGhlcmUgYmVjYXVzZSB3ZSBtYXRjaGVkCgkJCXJldHVybiBmYWxzZTsKCQl9Cgl9ICk7CgoJLy8gRm91bmQgYSBzdHJpbmdQYXJzZXIgdGhhdCBoYW5kbGVkIGl0CglpZiAoIHJnYmEubGVuZ3RoICkgewoKCQkvLyBJZiB0aGlzIGNhbWUgZnJvbSBhIHBhcnNlZCBzdHJpbmcsIGZvcmNlICJ0cmFuc3BhcmVudCIgd2hlbiBhbHBoYSBpcyAwCgkJLy8gY2hyb21lLCAoYW5kIG1heWJlIG90aGVycykgcmV0dXJuICJ0cmFuc3BhcmVudCIgYXMgcmdiYSgwLDAsMCwwKQoJCWlmICggcmdiYS5qb2luKCkgPT09ICIwLDAsMCwwIiApIHsKCQkJalF1ZXJ5LmV4dGVuZCggcmdiYSwgY29sb3JzLnRyYW5zcGFyZW50ICk7CgkJfQoJCXJldHVybiBpbnN0OwoJfQoKCS8vIE5hbWVkIGNvbG9ycwoJcmV0dXJuIGNvbG9yc1sgc3RyaW5nIF07Cn0KCmNvbG9yLmZuID0galF1ZXJ5LmV4dGVuZCggY29sb3IucHJvdG90eXBlLCB7CglwYXJzZTogZnVuY3Rpb24oIHJlZCwgZ3JlZW4sIGJsdWUsIGFscGhhICkgewoJCWlmICggcmVkID09PSB1bmRlZmluZWQgKSB7CgkJCXRoaXMuX3JnYmEgPSBbIG51bGwsIG51bGwsIG51bGwsIG51bGwgXTsKCQkJcmV0dXJuIHRoaXM7CgkJfQoJCWlmICggcmVkLmpxdWVyeSB8fCByZWQubm9kZVR5cGUgKSB7CgkJCXJlZCA9IGpRdWVyeSggcmVkICkuY3NzKCBncmVlbiApOwoJCQlncmVlbiA9IHVuZGVmaW5lZDsKCQl9CgoJCXZhciBpbnN0ID0gdGhpcywKCQkJdHlwZSA9IGpRdWVyeS50eXBlKCByZWQgKSwKCQkJcmdiYSA9IHRoaXMuX3JnYmEgPSBbXTsKCgkJLy8gTW9yZSB0aGFuIDEgYXJndW1lbnQgc3BlY2lmaWVkIC0gYXNzdW1lICggcmVkLCBncmVlbiwgYmx1ZSwgYWxwaGEgKQoJCWlmICggZ3JlZW4gIT09IHVuZGVmaW5lZCApIHsKCQkJcmVkID0gWyByZWQsIGdyZWVuLCBibHVlLCBhbHBoYSBdOwoJCQl0eXBlID0gImFycmF5IjsKCQl9CgoJCWlmICggdHlwZSA9PT0gInN0cmluZyIgKSB7CgkJCXJldHVybiB0aGlzLnBhcnNlKCBzdHJpbmdQYXJzZSggcmVkICkgfHwgY29sb3JzLl9kZWZhdWx0ICk7CgkJfQoKCQlpZiAoIHR5cGUgPT09ICJhcnJheSIgKSB7CgkJCWVhY2goIHNwYWNlcy5yZ2JhLnByb3BzLCBmdW5jdGlvbigga2V5LCBwcm9wICkgewoJCQkJcmdiYVsgcHJvcC5pZHggXSA9IGNsYW1wKCByZWRbIHByb3AuaWR4IF0sIHByb3AgKTsKCQkJfSApOwoJCQlyZXR1cm4gdGhpczsKCQl9CgoJCWlmICggdHlwZSA9PT0gIm9iamVjdCIgKSB7CgkJCWlmICggcmVkIGluc3RhbmNlb2YgY29sb3IgKSB7CgkJCQllYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgewoJCQkJCWlmICggcmVkWyBzcGFjZS5jYWNoZSBdICkgewoJCQkJCQlpbnN0WyBzcGFjZS5jYWNoZSBdID0gcmVkWyBzcGFjZS5jYWNoZSBdLnNsaWNlKCk7CgkJCQkJfQoJCQkJfSApOwoJCQl9IGVsc2UgewoJCQkJZWFjaCggc3BhY2VzLCBmdW5jdGlvbiggc3BhY2VOYW1lLCBzcGFjZSApIHsKCQkJCQl2YXIgY2FjaGUgPSBzcGFjZS5jYWNoZTsKCQkJCQllYWNoKCBzcGFjZS5wcm9wcywgZnVuY3Rpb24oIGtleSwgcHJvcCApIHsKCgkJCQkJCS8vIElmIHRoZSBjYWNoZSBkb2Vzbid0IGV4aXN0LCBhbmQgd2Uga25vdyBob3cgdG8gY29udmVydAoJCQkJCQlpZiAoICFpbnN0WyBjYWNoZSBdICYmIHNwYWNlLnRvICkgewoKCQkJCQkJCS8vIElmIHRoZSB2YWx1ZSB3YXMgbnVsbCwgd2UgZG9uJ3QgbmVlZCB0byBjb3B5IGl0CgkJCQkJCQkvLyBpZiB0aGUga2V5IHdhcyBhbHBoYSwgd2UgZG9uJ3QgbmVlZCB0byBjb3B5IGl0IGVpdGhlcgoJCQkJCQkJaWYgKCBrZXkgPT09ICJhbHBoYSIgfHwgcmVkWyBrZXkgXSA9PSBudWxsICkgewoJCQkJCQkJCXJldHVybjsKCQkJCQkJCX0KCQkJCQkJCWluc3RbIGNhY2hlIF0gPSBzcGFjZS50byggaW5zdC5fcmdiYSApOwoJCQkJCQl9CgoJCQkJCQkvLyBUaGlzIGlzIHRoZSBvbmx5IGNhc2Ugd2hlcmUgd2UgYWxsb3cgbnVsbHMgZm9yIEFMTCBwcm9wZXJ0aWVzLgoJCQkJCQkvLyBjYWxsIGNsYW1wIHdpdGggYWx3YXlzQWxsb3dFbXB0eQoJCQkJCQlpbnN0WyBjYWNoZSBdWyBwcm9wLmlkeCBdID0gY2xhbXAoIHJlZFsga2V5IF0sIHByb3AsIHRydWUgKTsKCQkJCQl9ICk7CgoJCQkJCS8vIEV2ZXJ5dGhpbmcgZGVmaW5lZCBidXQgYWxwaGE/CgkJCQkJaWYgKCBpbnN0WyBjYWNoZSBdICYmCgkJCQkJCQlqUXVlcnkuaW5BcnJheSggbnVsbCwgaW5zdFsgY2FjaGUgXS5zbGljZSggMCwgMyApICkgPCAwICkgewoKCQkJCQkJLy8gVXNlIHRoZSBkZWZhdWx0IG9mIDEKCQkJCQkJaW5zdFsgY2FjaGUgXVsgMyBdID0gMTsKCQkJCQkJaWYgKCBzcGFjZS5mcm9tICkgewoJCQkJCQkJaW5zdC5fcmdiYSA9IHNwYWNlLmZyb20oIGluc3RbIGNhY2hlIF0gKTsKCQkJCQkJfQoJCQkJCX0KCQkJCX0gKTsKCQkJfQoJCQlyZXR1cm4gdGhpczsKCQl9Cgl9LAoJaXM6IGZ1bmN0aW9uKCBjb21wYXJlICkgewoJCXZhciBpcyA9IGNvbG9yKCBjb21wYXJlICksCgkJCXNhbWUgPSB0cnVlLAoJCQlpbnN0ID0gdGhpczsKCgkJZWFjaCggc3BhY2VzLCBmdW5jdGlvbiggXywgc3BhY2UgKSB7CgkJCXZhciBsb2NhbENhY2hlLAoJCQkJaXNDYWNoZSA9IGlzWyBzcGFjZS5jYWNoZSBdOwoJCQlpZiAoIGlzQ2FjaGUgKSB7CgkJCQlsb2NhbENhY2hlID0gaW5zdFsgc3BhY2UuY2FjaGUgXSB8fCBzcGFjZS50byAmJiBzcGFjZS50byggaW5zdC5fcmdiYSApIHx8IFtdOwoJCQkJZWFjaCggc3BhY2UucHJvcHMsIGZ1bmN0aW9uKCBfLCBwcm9wICkgewoJCQkJCWlmICggaXNDYWNoZVsgcHJvcC5pZHggXSAhPSBudWxsICkgewoJCQkJCQlzYW1lID0gKCBpc0NhY2hlWyBwcm9wLmlkeCBdID09PSBsb2NhbENhY2hlWyBwcm9wLmlkeCBdICk7CgkJCQkJCXJldHVybiBzYW1lOwoJCQkJCX0KCQkJCX0gKTsKCQkJfQoJCQlyZXR1cm4gc2FtZTsKCQl9ICk7CgkJcmV0dXJuIHNhbWU7Cgl9LAoJX3NwYWNlOiBmdW5jdGlvbigpIHsKCQl2YXIgdXNlZCA9IFtdLAoJCQlpbnN0ID0gdGhpczsKCQllYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgewoJCQlpZiAoIGluc3RbIHNwYWNlLmNhY2hlIF0gKSB7CgkJCQl1c2VkLnB1c2goIHNwYWNlTmFtZSApOwoJCQl9CgkJfSApOwoJCXJldHVybiB1c2VkLnBvcCgpOwoJfSwKCXRyYW5zaXRpb246IGZ1bmN0aW9uKCBvdGhlciwgZGlzdGFuY2UgKSB7CgkJdmFyIGVuZCA9IGNvbG9yKCBvdGhlciApLAoJCQlzcGFjZU5hbWUgPSBlbmQuX3NwYWNlKCksCgkJCXNwYWNlID0gc3BhY2VzWyBzcGFjZU5hbWUgXSwKCQkJc3RhcnRDb2xvciA9IHRoaXMuYWxwaGEoKSA9PT0gMCA/IGNvbG9yKCAidHJhbnNwYXJlbnQiICkgOiB0aGlzLAoJCQlzdGFydCA9IHN0YXJ0Q29sb3JbIHNwYWNlLmNhY2hlIF0gfHwgc3BhY2UudG8oIHN0YXJ0Q29sb3IuX3JnYmEgKSwKCQkJcmVzdWx0ID0gc3RhcnQuc2xpY2UoKTsKCgkJZW5kID0gZW5kWyBzcGFjZS5jYWNoZSBdOwoJCWVhY2goIHNwYWNlLnByb3BzLCBmdW5jdGlvbigga2V5LCBwcm9wICkgewoJCQl2YXIgaW5kZXggPSBwcm9wLmlkeCwKCQkJCXN0YXJ0VmFsdWUgPSBzdGFydFsgaW5kZXggXSwKCQkJCWVuZFZhbHVlID0gZW5kWyBpbmRleCBdLAoJCQkJdHlwZSA9IHByb3BUeXBlc1sgcHJvcC50eXBlIF0gfHwge307CgoJCQkvLyBJZiBudWxsLCBkb24ndCBvdmVycmlkZSBzdGFydCB2YWx1ZQoJCQlpZiAoIGVuZFZhbHVlID09PSBudWxsICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBJZiBudWxsIC0gdXNlIGVuZAoJCQlpZiAoIHN0YXJ0VmFsdWUgPT09IG51bGwgKSB7CgkJCQlyZXN1bHRbIGluZGV4IF0gPSBlbmRWYWx1ZTsKCQkJfSBlbHNlIHsKCQkJCWlmICggdHlwZS5tb2QgKSB7CgkJCQkJaWYgKCBlbmRWYWx1ZSAtIHN0YXJ0VmFsdWUgPiB0eXBlLm1vZCAvIDIgKSB7CgkJCQkJCXN0YXJ0VmFsdWUgKz0gdHlwZS5tb2Q7CgkJCQkJfSBlbHNlIGlmICggc3RhcnRWYWx1ZSAtIGVuZFZhbHVlID4gdHlwZS5tb2QgLyAyICkgewoJCQkJCQlzdGFydFZhbHVlIC09IHR5cGUubW9kOwoJCQkJCX0KCQkJCX0KCQkJCXJlc3VsdFsgaW5kZXggXSA9IGNsYW1wKCAoIGVuZFZhbHVlIC0gc3RhcnRWYWx1ZSApICogZGlzdGFuY2UgKyBzdGFydFZhbHVlLCBwcm9wICk7CgkJCX0KCQl9ICk7CgkJcmV0dXJuIHRoaXNbIHNwYWNlTmFtZSBdKCByZXN1bHQgKTsKCX0sCglibGVuZDogZnVuY3Rpb24oIG9wYXF1ZSApIHsKCgkJLy8gSWYgd2UgYXJlIGFscmVhZHkgb3BhcXVlIC0gcmV0dXJuIG91cnNlbGYKCQlpZiAoIHRoaXMuX3JnYmFbIDMgXSA9PT0gMSApIHsKCQkJcmV0dXJuIHRoaXM7CgkJfQoKCQl2YXIgcmdiID0gdGhpcy5fcmdiYS5zbGljZSgpLAoJCQlhID0gcmdiLnBvcCgpLAoJCQlibGVuZCA9IGNvbG9yKCBvcGFxdWUgKS5fcmdiYTsKCgkJcmV0dXJuIGNvbG9yKCBqUXVlcnkubWFwKCByZ2IsIGZ1bmN0aW9uKCB2LCBpICkgewoJCQlyZXR1cm4gKCAxIC0gYSApICogYmxlbmRbIGkgXSArIGEgKiB2OwoJCX0gKSApOwoJfSwKCXRvUmdiYVN0cmluZzogZnVuY3Rpb24oKSB7CgkJdmFyIHByZWZpeCA9ICJyZ2JhKCIsCgkJCXJnYmEgPSBqUXVlcnkubWFwKCB0aGlzLl9yZ2JhLCBmdW5jdGlvbiggdiwgaSApIHsKCQkJCXJldHVybiB2ID09IG51bGwgPyAoIGkgPiAyID8gMSA6IDAgKSA6IHY7CgkJCX0gKTsKCgkJaWYgKCByZ2JhWyAzIF0gPT09IDEgKSB7CgkJCXJnYmEucG9wKCk7CgkJCXByZWZpeCA9ICJyZ2IoIjsKCQl9CgoJCXJldHVybiBwcmVmaXggKyByZ2JhLmpvaW4oKSArICIpIjsKCX0sCgl0b0hzbGFTdHJpbmc6IGZ1bmN0aW9uKCkgewoJCXZhciBwcmVmaXggPSAiaHNsYSgiLAoJCQloc2xhID0galF1ZXJ5Lm1hcCggdGhpcy5oc2xhKCksIGZ1bmN0aW9uKCB2LCBpICkgewoJCQkJaWYgKCB2ID09IG51bGwgKSB7CgkJCQkJdiA9IGkgPiAyID8gMSA6IDA7CgkJCQl9CgoJCQkJLy8gQ2F0Y2ggMSBhbmQgMgoJCQkJaWYgKCBpICYmIGkgPCAzICkgewoJCQkJCXYgPSBNYXRoLnJvdW5kKCB2ICogMTAwICkgKyAiJSI7CgkJCQl9CgkJCQlyZXR1cm4gdjsKCQkJfSApOwoKCQlpZiAoIGhzbGFbIDMgXSA9PT0gMSApIHsKCQkJaHNsYS5wb3AoKTsKCQkJcHJlZml4ID0gImhzbCgiOwoJCX0KCQlyZXR1cm4gcHJlZml4ICsgaHNsYS5qb2luKCkgKyAiKSI7Cgl9LAoJdG9IZXhTdHJpbmc6IGZ1bmN0aW9uKCBpbmNsdWRlQWxwaGEgKSB7CgkJdmFyIHJnYmEgPSB0aGlzLl9yZ2JhLnNsaWNlKCksCgkJCWFscGhhID0gcmdiYS5wb3AoKTsKCgkJaWYgKCBpbmNsdWRlQWxwaGEgKSB7CgkJCXJnYmEucHVzaCggfn4oIGFscGhhICogMjU1ICkgKTsKCQl9CgoJCXJldHVybiAiIyIgKyBqUXVlcnkubWFwKCByZ2JhLCBmdW5jdGlvbiggdiApIHsKCgkJCS8vIERlZmF1bHQgdG8gMCB3aGVuIG51bGxzIGV4aXN0CgkJCXYgPSAoIHYgfHwgMCApLnRvU3RyaW5nKCAxNiApOwoJCQlyZXR1cm4gdi5sZW5ndGggPT09IDEgPyAiMCIgKyB2IDogdjsKCQl9ICkuam9pbiggIiIgKTsKCX0sCgl0b1N0cmluZzogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuX3JnYmFbIDMgXSA9PT0gMCA/ICJ0cmFuc3BhcmVudCIgOiB0aGlzLnRvUmdiYVN0cmluZygpOwoJfQp9ICk7CmNvbG9yLmZuLnBhcnNlLnByb3RvdHlwZSA9IGNvbG9yLmZuOwoKLy8gSHNsYSBjb252ZXJzaW9ucyBhZGFwdGVkIGZyb206Ci8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvbWFhc2hhYWNrL3NvdXJjZS9icm93c2UvcGFja2FnZXMvZ3JhcGhpY3MvdHJ1bmsvc3JjL2dyYXBoaWNzL2NvbG9ycy9IVUUyUkdCLmFzP3I9NTAyMQoKZnVuY3Rpb24gaHVlMnJnYiggcCwgcSwgaCApIHsKCWggPSAoIGggKyAxICkgJSAxOwoJaWYgKCBoICogNiA8IDEgKSB7CgkJcmV0dXJuIHAgKyAoIHEgLSBwICkgKiBoICogNjsKCX0KCWlmICggaCAqIDIgPCAxICkgewoJCXJldHVybiBxOwoJfQoJaWYgKCBoICogMyA8IDIgKSB7CgkJcmV0dXJuIHAgKyAoIHEgLSBwICkgKiAoICggMiAvIDMgKSAtIGggKSAqIDY7Cgl9CglyZXR1cm4gcDsKfQoKc3BhY2VzLmhzbGEudG8gPSBmdW5jdGlvbiggcmdiYSApIHsKCWlmICggcmdiYVsgMCBdID09IG51bGwgfHwgcmdiYVsgMSBdID09IG51bGwgfHwgcmdiYVsgMiBdID09IG51bGwgKSB7CgkJcmV0dXJuIFsgbnVsbCwgbnVsbCwgbnVsbCwgcmdiYVsgMyBdIF07Cgl9Cgl2YXIgciA9IHJnYmFbIDAgXSAvIDI1NSwKCQlnID0gcmdiYVsgMSBdIC8gMjU1LAoJCWIgPSByZ2JhWyAyIF0gLyAyNTUsCgkJYSA9IHJnYmFbIDMgXSwKCQltYXggPSBNYXRoLm1heCggciwgZywgYiApLAoJCW1pbiA9IE1hdGgubWluKCByLCBnLCBiICksCgkJZGlmZiA9IG1heCAtIG1pbiwKCQlhZGQgPSBtYXggKyBtaW4sCgkJbCA9IGFkZCAqIDAuNSwKCQloLCBzOwoKCWlmICggbWluID09PSBtYXggKSB7CgkJaCA9IDA7Cgl9IGVsc2UgaWYgKCByID09PSBtYXggKSB7CgkJaCA9ICggNjAgKiAoIGcgLSBiICkgLyBkaWZmICkgKyAzNjA7Cgl9IGVsc2UgaWYgKCBnID09PSBtYXggKSB7CgkJaCA9ICggNjAgKiAoIGIgLSByICkgLyBkaWZmICkgKyAxMjA7Cgl9IGVsc2UgewoJCWggPSAoIDYwICogKCByIC0gZyApIC8gZGlmZiApICsgMjQwOwoJfQoKCS8vIENocm9tYSAoZGlmZikgPT0gMCBtZWFucyBncmV5c2NhbGUgd2hpY2gsIGJ5IGRlZmluaXRpb24sIHNhdHVyYXRpb24gPSAwJQoJLy8gb3RoZXJ3aXNlLCBzYXR1cmF0aW9uIGlzIGJhc2VkIG9uIHRoZSByYXRpbyBvZiBjaHJvbWEgKGRpZmYpIHRvIGxpZ2h0bmVzcyAoYWRkKQoJaWYgKCBkaWZmID09PSAwICkgewoJCXMgPSAwOwoJfSBlbHNlIGlmICggbCA8PSAwLjUgKSB7CgkJcyA9IGRpZmYgLyBhZGQ7Cgl9IGVsc2UgewoJCXMgPSBkaWZmIC8gKCAyIC0gYWRkICk7Cgl9CglyZXR1cm4gWyBNYXRoLnJvdW5kKCBoICkgJSAzNjAsIHMsIGwsIGEgPT0gbnVsbCA/IDEgOiBhIF07Cn07CgpzcGFjZXMuaHNsYS5mcm9tID0gZnVuY3Rpb24oIGhzbGEgKSB7CglpZiAoIGhzbGFbIDAgXSA9PSBudWxsIHx8IGhzbGFbIDEgXSA9PSBudWxsIHx8IGhzbGFbIDIgXSA9PSBudWxsICkgewoJCXJldHVybiBbIG51bGwsIG51bGwsIG51bGwsIGhzbGFbIDMgXSBdOwoJfQoJdmFyIGggPSBoc2xhWyAwIF0gLyAzNjAsCgkJcyA9IGhzbGFbIDEgXSwKCQlsID0gaHNsYVsgMiBdLAoJCWEgPSBoc2xhWyAzIF0sCgkJcSA9IGwgPD0gMC41ID8gbCAqICggMSArIHMgKSA6IGwgKyBzIC0gbCAqIHMsCgkJcCA9IDIgKiBsIC0gcTsKCglyZXR1cm4gWwoJCU1hdGgucm91bmQoIGh1ZTJyZ2IoIHAsIHEsIGggKyAoIDEgLyAzICkgKSAqIDI1NSApLAoJCU1hdGgucm91bmQoIGh1ZTJyZ2IoIHAsIHEsIGggKSAqIDI1NSApLAoJCU1hdGgucm91bmQoIGh1ZTJyZ2IoIHAsIHEsIGggLSAoIDEgLyAzICkgKSAqIDI1NSApLAoJCWEKCV07Cn07CgplYWNoKCBzcGFjZXMsIGZ1bmN0aW9uKCBzcGFjZU5hbWUsIHNwYWNlICkgewoJdmFyIHByb3BzID0gc3BhY2UucHJvcHMsCgkJY2FjaGUgPSBzcGFjZS5jYWNoZSwKCQl0byA9IHNwYWNlLnRvLAoJCWZyb20gPSBzcGFjZS5mcm9tOwoKCS8vIE1ha2VzIHJnYmEoKSBhbmQgaHNsYSgpCgljb2xvci5mblsgc3BhY2VOYW1lIF0gPSBmdW5jdGlvbiggdmFsdWUgKSB7CgoJCS8vIEdlbmVyYXRlIGEgY2FjaGUgZm9yIHRoaXMgc3BhY2UgaWYgaXQgZG9lc24ndCBleGlzdAoJCWlmICggdG8gJiYgIXRoaXNbIGNhY2hlIF0gKSB7CgkJCXRoaXNbIGNhY2hlIF0gPSB0byggdGhpcy5fcmdiYSApOwoJCX0KCQlpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgKSB7CgkJCXJldHVybiB0aGlzWyBjYWNoZSBdLnNsaWNlKCk7CgkJfQoKCQl2YXIgcmV0LAoJCQl0eXBlID0galF1ZXJ5LnR5cGUoIHZhbHVlICksCgkJCWFyciA9ICggdHlwZSA9PT0gImFycmF5IiB8fCB0eXBlID09PSAib2JqZWN0IiApID8gdmFsdWUgOiBhcmd1bWVudHMsCgkJCWxvY2FsID0gdGhpc1sgY2FjaGUgXS5zbGljZSgpOwoKCQllYWNoKCBwcm9wcywgZnVuY3Rpb24oIGtleSwgcHJvcCApIHsKCQkJdmFyIHZhbCA9IGFyclsgdHlwZSA9PT0gIm9iamVjdCIgPyBrZXkgOiBwcm9wLmlkeCBdOwoJCQlpZiAoIHZhbCA9PSBudWxsICkgewoJCQkJdmFsID0gbG9jYWxbIHByb3AuaWR4IF07CgkJCX0KCQkJbG9jYWxbIHByb3AuaWR4IF0gPSBjbGFtcCggdmFsLCBwcm9wICk7CgkJfSApOwoKCQlpZiAoIGZyb20gKSB7CgkJCXJldCA9IGNvbG9yKCBmcm9tKCBsb2NhbCApICk7CgkJCXJldFsgY2FjaGUgXSA9IGxvY2FsOwoJCQlyZXR1cm4gcmV0OwoJCX0gZWxzZSB7CgkJCXJldHVybiBjb2xvciggbG9jYWwgKTsKCQl9Cgl9OwoKCS8vIE1ha2VzIHJlZCgpIGdyZWVuKCkgYmx1ZSgpIGFscGhhKCkgaHVlKCkgc2F0dXJhdGlvbigpIGxpZ2h0bmVzcygpCgllYWNoKCBwcm9wcywgZnVuY3Rpb24oIGtleSwgcHJvcCApIHsKCgkJLy8gQWxwaGEgaXMgaW5jbHVkZWQgaW4gbW9yZSB0aGFuIG9uZSBzcGFjZQoJCWlmICggY29sb3IuZm5bIGtleSBdICkgewoJCQlyZXR1cm47CgkJfQoJCWNvbG9yLmZuWyBrZXkgXSA9IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQkJdmFyIHZ0eXBlID0galF1ZXJ5LnR5cGUoIHZhbHVlICksCgkJCQlmbiA9ICgga2V5ID09PSAiYWxwaGEiID8gKCB0aGlzLl9oc2xhID8gImhzbGEiIDogInJnYmEiICkgOiBzcGFjZU5hbWUgKSwKCQkJCWxvY2FsID0gdGhpc1sgZm4gXSgpLAoJCQkJY3VyID0gbG9jYWxbIHByb3AuaWR4IF0sCgkJCQltYXRjaDsKCgkJCWlmICggdnR5cGUgPT09ICJ1bmRlZmluZWQiICkgewoJCQkJcmV0dXJuIGN1cjsKCQkJfQoKCQkJaWYgKCB2dHlwZSA9PT0gImZ1bmN0aW9uIiApIHsKCQkJCXZhbHVlID0gdmFsdWUuY2FsbCggdGhpcywgY3VyICk7CgkJCQl2dHlwZSA9IGpRdWVyeS50eXBlKCB2YWx1ZSApOwoJCQl9CgkJCWlmICggdmFsdWUgPT0gbnVsbCAmJiBwcm9wLmVtcHR5ICkgewoJCQkJcmV0dXJuIHRoaXM7CgkJCX0KCQkJaWYgKCB2dHlwZSA9PT0gInN0cmluZyIgKSB7CgkJCQltYXRjaCA9IHJwbHVzZXF1YWxzLmV4ZWMoIHZhbHVlICk7CgkJCQlpZiAoIG1hdGNoICkgewoJCQkJCXZhbHVlID0gY3VyICsgcGFyc2VGbG9hdCggbWF0Y2hbIDIgXSApICogKCBtYXRjaFsgMSBdID09PSAiKyIgPyAxIDogLTEgKTsKCQkJCX0KCQkJfQoJCQlsb2NhbFsgcHJvcC5pZHggXSA9IHZhbHVlOwoJCQlyZXR1cm4gdGhpc1sgZm4gXSggbG9jYWwgKTsKCQl9OwoJfSApOwp9ICk7CgovLyBBZGQgY3NzSG9vayBhbmQgLmZ4LnN0ZXAgZnVuY3Rpb24gZm9yIGVhY2ggbmFtZWQgaG9vay4KLy8gYWNjZXB0IGEgc3BhY2Ugc2VwYXJhdGVkIHN0cmluZyBvZiBwcm9wZXJ0aWVzCmNvbG9yLmhvb2sgPSBmdW5jdGlvbiggaG9vayApIHsKCXZhciBob29rcyA9IGhvb2suc3BsaXQoICIgIiApOwoJZWFjaCggaG9va3MsIGZ1bmN0aW9uKCBpLCBob29rICkgewoJCWpRdWVyeS5jc3NIb29rc1sgaG9vayBdID0gewoJCQlzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHsKCQkJCXZhciBwYXJzZWQsIGN1ckVsZW0sCgkJCQkJYmFja2dyb3VuZENvbG9yID0gIiI7CgoJCQkJaWYgKCB2YWx1ZSAhPT0gInRyYW5zcGFyZW50IiAmJiAoIGpRdWVyeS50eXBlKCB2YWx1ZSApICE9PSAic3RyaW5nIiB8fAoJCQkJCQkoIHBhcnNlZCA9IHN0cmluZ1BhcnNlKCB2YWx1ZSApICkgKSApIHsKCQkJCQl2YWx1ZSA9IGNvbG9yKCBwYXJzZWQgfHwgdmFsdWUgKTsKCQkJCQlpZiAoICFzdXBwb3J0LnJnYmEgJiYgdmFsdWUuX3JnYmFbIDMgXSAhPT0gMSApIHsKCQkJCQkJY3VyRWxlbSA9IGhvb2sgPT09ICJiYWNrZ3JvdW5kQ29sb3IiID8gZWxlbS5wYXJlbnROb2RlIDogZWxlbTsKCQkJCQkJd2hpbGUgKAoJCQkJCQkJKCBiYWNrZ3JvdW5kQ29sb3IgPT09ICIiIHx8IGJhY2tncm91bmRDb2xvciA9PT0gInRyYW5zcGFyZW50IiApICYmCgkJCQkJCQljdXJFbGVtICYmIGN1ckVsZW0uc3R5bGUKCQkJCQkJKSB7CgkJCQkJCQl0cnkgewoJCQkJCQkJCWJhY2tncm91bmRDb2xvciA9IGpRdWVyeS5jc3MoIGN1ckVsZW0sICJiYWNrZ3JvdW5kQ29sb3IiICk7CgkJCQkJCQkJY3VyRWxlbSA9IGN1ckVsZW0ucGFyZW50Tm9kZTsKCQkJCQkJCX0gY2F0Y2ggKCBlICkgewoJCQkJCQkJfQoJCQkJCQl9CgoJCQkJCQl2YWx1ZSA9IHZhbHVlLmJsZW5kKCBiYWNrZ3JvdW5kQ29sb3IgJiYgYmFja2dyb3VuZENvbG9yICE9PSAidHJhbnNwYXJlbnQiID8KCQkJCQkJCWJhY2tncm91bmRDb2xvciA6CgkJCQkJCQkiX2RlZmF1bHQiICk7CgkJCQkJfQoKCQkJCQl2YWx1ZSA9IHZhbHVlLnRvUmdiYVN0cmluZygpOwoJCQkJfQoJCQkJdHJ5IHsKCQkJCQllbGVtLnN0eWxlWyBob29rIF0gPSB2YWx1ZTsKCQkJCX0gY2F0Y2ggKCBlICkgewoKCQkJCQkvLyBXcmFwcGVkIHRvIHByZXZlbnQgSUUgZnJvbSB0aHJvd2luZyBlcnJvcnMgb24gImludmFsaWQiIHZhbHVlcyBsaWtlCgkJCQkJLy8gJ2F1dG8nIG9yICdpbmhlcml0JwoJCQkJfQoJCQl9CgkJfTsKCQlqUXVlcnkuZnguc3RlcFsgaG9vayBdID0gZnVuY3Rpb24oIGZ4ICkgewoJCQlpZiAoICFmeC5jb2xvckluaXQgKSB7CgkJCQlmeC5zdGFydCA9IGNvbG9yKCBmeC5lbGVtLCBob29rICk7CgkJCQlmeC5lbmQgPSBjb2xvciggZnguZW5kICk7CgkJCQlmeC5jb2xvckluaXQgPSB0cnVlOwoJCQl9CgkJCWpRdWVyeS5jc3NIb29rc1sgaG9vayBdLnNldCggZnguZWxlbSwgZnguc3RhcnQudHJhbnNpdGlvbiggZnguZW5kLCBmeC5wb3MgKSApOwoJCX07Cgl9ICk7Cgp9OwoKY29sb3IuaG9vayggc3RlcEhvb2tzICk7CgpqUXVlcnkuY3NzSG9va3MuYm9yZGVyQ29sb3IgPSB7CglleHBhbmQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQl2YXIgZXhwYW5kZWQgPSB7fTsKCgkJZWFjaCggWyAiVG9wIiwgIlJpZ2h0IiwgIkJvdHRvbSIsICJMZWZ0IiBdLCBmdW5jdGlvbiggaSwgcGFydCApIHsKCQkJZXhwYW5kZWRbICJib3JkZXIiICsgcGFydCArICJDb2xvciIgXSA9IHZhbHVlOwoJCX0gKTsKCQlyZXR1cm4gZXhwYW5kZWQ7Cgl9Cn07CgovLyBCYXNpYyBjb2xvciBuYW1lcyBvbmx5LgovLyBVc2FnZSBvZiBhbnkgb2YgdGhlIG90aGVyIGNvbG9yIG5hbWVzIHJlcXVpcmVzIGFkZGluZyB5b3Vyc2VsZiBvciBpbmNsdWRpbmcKLy8ganF1ZXJ5LmNvbG9yLnN2Zy1uYW1lcy5qcy4KY29sb3JzID0galF1ZXJ5LkNvbG9yLm5hbWVzID0gewoKCS8vIDQuMS4gQmFzaWMgY29sb3Iga2V5d29yZHMKCWFxdWE6ICIjMDBmZmZmIiwKCWJsYWNrOiAiIzAwMDAwMCIsCglibHVlOiAiIzAwMDBmZiIsCglmdWNoc2lhOiAiI2ZmMDBmZiIsCglncmF5OiAiIzgwODA4MCIsCglncmVlbjogIiMwMDgwMDAiLAoJbGltZTogIiMwMGZmMDAiLAoJbWFyb29uOiAiIzgwMDAwMCIsCgluYXZ5OiAiIzAwMDA4MCIsCglvbGl2ZTogIiM4MDgwMDAiLAoJcHVycGxlOiAiIzgwMDA4MCIsCglyZWQ6ICIjZmYwMDAwIiwKCXNpbHZlcjogIiNjMGMwYzAiLAoJdGVhbDogIiMwMDgwODAiLAoJd2hpdGU6ICIjZmZmZmZmIiwKCXllbGxvdzogIiNmZmZmMDAiLAoKCS8vIDQuMi4zLiAidHJhbnNwYXJlbnQiIGNvbG9yIGtleXdvcmQKCXRyYW5zcGFyZW50OiBbIG51bGwsIG51bGwsIG51bGwsIDAgXSwKCglfZGVmYXVsdDogIiNmZmZmZmYiCn07Cgp9ICkoIGpRdWVyeSApOwoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiBDTEFTUyBBTklNQVRJT05TICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KKCBmdW5jdGlvbigpIHsKCnZhciBjbGFzc0FuaW1hdGlvbkFjdGlvbnMgPSBbICJhZGQiLCAicmVtb3ZlIiwgInRvZ2dsZSIgXSwKCXNob3J0aGFuZFN0eWxlcyA9IHsKCQlib3JkZXI6IDEsCgkJYm9yZGVyQm90dG9tOiAxLAoJCWJvcmRlckNvbG9yOiAxLAoJCWJvcmRlckxlZnQ6IDEsCgkJYm9yZGVyUmlnaHQ6IDEsCgkJYm9yZGVyVG9wOiAxLAoJCWJvcmRlcldpZHRoOiAxLAoJCW1hcmdpbjogMSwKCQlwYWRkaW5nOiAxCgl9OwoKJC5lYWNoKAoJWyAiYm9yZGVyTGVmdFN0eWxlIiwgImJvcmRlclJpZ2h0U3R5bGUiLCAiYm9yZGVyQm90dG9tU3R5bGUiLCAiYm9yZGVyVG9wU3R5bGUiIF0sCglmdW5jdGlvbiggXywgcHJvcCApIHsKCQkkLmZ4LnN0ZXBbIHByb3AgXSA9IGZ1bmN0aW9uKCBmeCApIHsKCQkJaWYgKCBmeC5lbmQgIT09ICJub25lIiAmJiAhZnguc2V0QXR0ciB8fCBmeC5wb3MgPT09IDEgJiYgIWZ4LnNldEF0dHIgKSB7CgkJCQlqUXVlcnkuc3R5bGUoIGZ4LmVsZW0sIHByb3AsIGZ4LmVuZCApOwoJCQkJZnguc2V0QXR0ciA9IHRydWU7CgkJCX0KCQl9OwoJfQopOwoKZnVuY3Rpb24gZ2V0RWxlbWVudFN0eWxlcyggZWxlbSApIHsKCXZhciBrZXksIGxlbiwKCQlzdHlsZSA9IGVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0VmlldyA/CgkJCWVsZW0ub3duZXJEb2N1bWVudC5kZWZhdWx0Vmlldy5nZXRDb21wdXRlZFN0eWxlKCBlbGVtLCBudWxsICkgOgoJCQllbGVtLmN1cnJlbnRTdHlsZSwKCQlzdHlsZXMgPSB7fTsKCglpZiAoIHN0eWxlICYmIHN0eWxlLmxlbmd0aCAmJiBzdHlsZVsgMCBdICYmIHN0eWxlWyBzdHlsZVsgMCBdIF0gKSB7CgkJbGVuID0gc3R5bGUubGVuZ3RoOwoJCXdoaWxlICggbGVuLS0gKSB7CgkJCWtleSA9IHN0eWxlWyBsZW4gXTsKCQkJaWYgKCB0eXBlb2Ygc3R5bGVbIGtleSBdID09PSAic3RyaW5nIiApIHsKCQkJCXN0eWxlc1sgJC5jYW1lbENhc2UoIGtleSApIF0gPSBzdHlsZVsga2V5IF07CgkJCX0KCQl9CgoJLy8gU3VwcG9ydDogT3BlcmEsIElFIDw5Cgl9IGVsc2UgewoJCWZvciAoIGtleSBpbiBzdHlsZSApIHsKCQkJaWYgKCB0eXBlb2Ygc3R5bGVbIGtleSBdID09PSAic3RyaW5nIiApIHsKCQkJCXN0eWxlc1sga2V5IF0gPSBzdHlsZVsga2V5IF07CgkJCX0KCQl9Cgl9CgoJcmV0dXJuIHN0eWxlczsKfQoKZnVuY3Rpb24gc3R5bGVEaWZmZXJlbmNlKCBvbGRTdHlsZSwgbmV3U3R5bGUgKSB7Cgl2YXIgZGlmZiA9IHt9LAoJCW5hbWUsIHZhbHVlOwoKCWZvciAoIG5hbWUgaW4gbmV3U3R5bGUgKSB7CgkJdmFsdWUgPSBuZXdTdHlsZVsgbmFtZSBdOwoJCWlmICggb2xkU3R5bGVbIG5hbWUgXSAhPT0gdmFsdWUgKSB7CgkJCWlmICggIXNob3J0aGFuZFN0eWxlc1sgbmFtZSBdICkgewoJCQkJaWYgKCAkLmZ4LnN0ZXBbIG5hbWUgXSB8fCAhaXNOYU4oIHBhcnNlRmxvYXQoIHZhbHVlICkgKSApIHsKCQkJCQlkaWZmWyBuYW1lIF0gPSB2YWx1ZTsKCQkJCX0KCQkJfQoJCX0KCX0KCglyZXR1cm4gZGlmZjsKfQoKLy8gU3VwcG9ydDogalF1ZXJ5IDwxLjgKaWYgKCAhJC5mbi5hZGRCYWNrICkgewoJJC5mbi5hZGRCYWNrID0gZnVuY3Rpb24oIHNlbGVjdG9yICkgewoJCXJldHVybiB0aGlzLmFkZCggc2VsZWN0b3IgPT0gbnVsbCA/CgkJCXRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoIHNlbGVjdG9yICkKCQkpOwoJfTsKfQoKJC5lZmZlY3RzLmFuaW1hdGVDbGFzcyA9IGZ1bmN0aW9uKCB2YWx1ZSwgZHVyYXRpb24sIGVhc2luZywgY2FsbGJhY2sgKSB7Cgl2YXIgbyA9ICQuc3BlZWQoIGR1cmF0aW9uLCBlYXNpbmcsIGNhbGxiYWNrICk7CgoJcmV0dXJuIHRoaXMucXVldWUoIGZ1bmN0aW9uKCkgewoJCXZhciBhbmltYXRlZCA9ICQoIHRoaXMgKSwKCQkJYmFzZUNsYXNzID0gYW5pbWF0ZWQuYXR0ciggImNsYXNzIiApIHx8ICIiLAoJCQlhcHBseUNsYXNzQ2hhbmdlLAoJCQlhbGxBbmltYXRpb25zID0gby5jaGlsZHJlbiA/IGFuaW1hdGVkLmZpbmQoICIqIiApLmFkZEJhY2soKSA6IGFuaW1hdGVkOwoKCQkvLyBNYXAgdGhlIGFuaW1hdGVkIG9iamVjdHMgdG8gc3RvcmUgdGhlIG9yaWdpbmFsIHN0eWxlcy4KCQlhbGxBbmltYXRpb25zID0gYWxsQW5pbWF0aW9ucy5tYXAoIGZ1bmN0aW9uKCkgewoJCQl2YXIgZWwgPSAkKCB0aGlzICk7CgkJCXJldHVybiB7CgkJCQllbDogZWwsCgkJCQlzdGFydDogZ2V0RWxlbWVudFN0eWxlcyggdGhpcyApCgkJCX07CgkJfSApOwoKCQkvLyBBcHBseSBjbGFzcyBjaGFuZ2UKCQlhcHBseUNsYXNzQ2hhbmdlID0gZnVuY3Rpb24oKSB7CgkJCSQuZWFjaCggY2xhc3NBbmltYXRpb25BY3Rpb25zLCBmdW5jdGlvbiggaSwgYWN0aW9uICkgewoJCQkJaWYgKCB2YWx1ZVsgYWN0aW9uIF0gKSB7CgkJCQkJYW5pbWF0ZWRbIGFjdGlvbiArICJDbGFzcyIgXSggdmFsdWVbIGFjdGlvbiBdICk7CgkJCQl9CgkJCX0gKTsKCQl9OwoJCWFwcGx5Q2xhc3NDaGFuZ2UoKTsKCgkJLy8gTWFwIGFsbCBhbmltYXRlZCBvYmplY3RzIGFnYWluIC0gY2FsY3VsYXRlIG5ldyBzdHlsZXMgYW5kIGRpZmYKCQlhbGxBbmltYXRpb25zID0gYWxsQW5pbWF0aW9ucy5tYXAoIGZ1bmN0aW9uKCkgewoJCQl0aGlzLmVuZCA9IGdldEVsZW1lbnRTdHlsZXMoIHRoaXMuZWxbIDAgXSApOwoJCQl0aGlzLmRpZmYgPSBzdHlsZURpZmZlcmVuY2UoIHRoaXMuc3RhcnQsIHRoaXMuZW5kICk7CgkJCXJldHVybiB0aGlzOwoJCX0gKTsKCgkJLy8gQXBwbHkgb3JpZ2luYWwgY2xhc3MKCQlhbmltYXRlZC5hdHRyKCAiY2xhc3MiLCBiYXNlQ2xhc3MgKTsKCgkJLy8gTWFwIGFsbCBhbmltYXRlZCBvYmplY3RzIGFnYWluIC0gdGhpcyB0aW1lIGNvbGxlY3RpbmcgYSBwcm9taXNlCgkJYWxsQW5pbWF0aW9ucyA9IGFsbEFuaW1hdGlvbnMubWFwKCBmdW5jdGlvbigpIHsKCQkJdmFyIHN0eWxlSW5mbyA9IHRoaXMsCgkJCQlkZmQgPSAkLkRlZmVycmVkKCksCgkJCQlvcHRzID0gJC5leHRlbmQoIHt9LCBvLCB7CgkJCQkJcXVldWU6IGZhbHNlLAoJCQkJCWNvbXBsZXRlOiBmdW5jdGlvbigpIHsKCQkJCQkJZGZkLnJlc29sdmUoIHN0eWxlSW5mbyApOwoJCQkJCX0KCQkJCX0gKTsKCgkJCXRoaXMuZWwuYW5pbWF0ZSggdGhpcy5kaWZmLCBvcHRzICk7CgkJCXJldHVybiBkZmQucHJvbWlzZSgpOwoJCX0gKTsKCgkJLy8gT25jZSBhbGwgYW5pbWF0aW9ucyBoYXZlIGNvbXBsZXRlZDoKCQkkLndoZW4uYXBwbHkoICQsIGFsbEFuaW1hdGlvbnMuZ2V0KCkgKS5kb25lKCBmdW5jdGlvbigpIHsKCgkJCS8vIFNldCB0aGUgZmluYWwgY2xhc3MKCQkJYXBwbHlDbGFzc0NoYW5nZSgpOwoKCQkJLy8gRm9yIGVhY2ggYW5pbWF0ZWQgZWxlbWVudCwKCQkJLy8gY2xlYXIgYWxsIGNzcyBwcm9wZXJ0aWVzIHRoYXQgd2VyZSBhbmltYXRlZAoJCQkkLmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oKSB7CgkJCQl2YXIgZWwgPSB0aGlzLmVsOwoJCQkJJC5lYWNoKCB0aGlzLmRpZmYsIGZ1bmN0aW9uKCBrZXkgKSB7CgkJCQkJZWwuY3NzKCBrZXksICIiICk7CgkJCQl9ICk7CgkJCX0gKTsKCgkJCS8vIFRoaXMgaXMgZ3Vhcm50ZWVkIHRvIGJlIHRoZXJlIGlmIHlvdSB1c2UgalF1ZXJ5LnNwZWVkKCkKCQkJLy8gaXQgYWxzbyBoYW5kbGVzIGRlcXVldWluZyB0aGUgbmV4dCBhbmltLi4uCgkJCW8uY29tcGxldGUuY2FsbCggYW5pbWF0ZWRbIDAgXSApOwoJCX0gKTsKCX0gKTsKfTsKCiQuZm4uZXh0ZW5kKCB7CglhZGRDbGFzczogKCBmdW5jdGlvbiggb3JpZyApIHsKCQlyZXR1cm4gZnVuY3Rpb24oIGNsYXNzTmFtZXMsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkgewoJCQlyZXR1cm4gc3BlZWQgPwoJCQkJJC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKCB0aGlzLAoJCQkJCXsgYWRkOiBjbGFzc05hbWVzIH0sIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkgOgoJCQkJb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJfTsKCX0gKSggJC5mbi5hZGRDbGFzcyApLAoKCXJlbW92ZUNsYXNzOiAoIGZ1bmN0aW9uKCBvcmlnICkgewoJCXJldHVybiBmdW5jdGlvbiggY2xhc3NOYW1lcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7CgkJCXJldHVybiBhcmd1bWVudHMubGVuZ3RoID4gMSA/CgkJCQkkLmVmZmVjdHMuYW5pbWF0ZUNsYXNzLmNhbGwoIHRoaXMsCgkJCQkJeyByZW1vdmU6IGNsYXNzTmFtZXMgfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSA6CgkJCQlvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQl9OwoJfSApKCAkLmZuLnJlbW92ZUNsYXNzICksCgoJdG9nZ2xlQ2xhc3M6ICggZnVuY3Rpb24oIG9yaWcgKSB7CgkJcmV0dXJuIGZ1bmN0aW9uKCBjbGFzc05hbWVzLCBmb3JjZSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKSB7CgkJCWlmICggdHlwZW9mIGZvcmNlID09PSAiYm9vbGVhbiIgfHwgZm9yY2UgPT09IHVuZGVmaW5lZCApIHsKCQkJCWlmICggIXNwZWVkICkgewoKCQkJCQkvLyBXaXRob3V0IHNwZWVkIHBhcmFtZXRlcgoJCQkJCXJldHVybiBvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJCX0gZWxzZSB7CgkJCQkJcmV0dXJuICQuZWZmZWN0cy5hbmltYXRlQ2xhc3MuY2FsbCggdGhpcywKCQkJCQkJKCBmb3JjZSA/IHsgYWRkOiBjbGFzc05hbWVzIH0gOiB7IHJlbW92ZTogY2xhc3NOYW1lcyB9ICksCgkJCQkJCXNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7CgkJCQl9CgkJCX0gZWxzZSB7CgoJCQkJLy8gV2l0aG91dCBmb3JjZSBwYXJhbWV0ZXIKCQkJCXJldHVybiAkLmVmZmVjdHMuYW5pbWF0ZUNsYXNzLmNhbGwoIHRoaXMsCgkJCQkJeyB0b2dnbGU6IGNsYXNzTmFtZXMgfSwgZm9yY2UsIHNwZWVkLCBlYXNpbmcgKTsKCQkJfQoJCX07Cgl9ICkoICQuZm4udG9nZ2xlQ2xhc3MgKSwKCglzd2l0Y2hDbGFzczogZnVuY3Rpb24oIHJlbW92ZSwgYWRkLCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHsKCQlyZXR1cm4gJC5lZmZlY3RzLmFuaW1hdGVDbGFzcy5jYWxsKCB0aGlzLCB7CgkJCWFkZDogYWRkLAoJCQlyZW1vdmU6IHJlbW92ZQoJCX0sIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICk7Cgl9Cn0gKTsKCn0gKSgpOwoKLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqIEVGRkVDVFMgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KLyoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKi8KCiggZnVuY3Rpb24oKSB7CgppZiAoICQuZXhwciAmJiAkLmV4cHIuZmlsdGVycyAmJiAkLmV4cHIuZmlsdGVycy5hbmltYXRlZCApIHsKCSQuZXhwci5maWx0ZXJzLmFuaW1hdGVkID0gKCBmdW5jdGlvbiggb3JpZyApIHsKCQlyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7CgkJCXJldHVybiAhISQoIGVsZW0gKS5kYXRhKCBkYXRhU3BhY2VBbmltYXRlZCApIHx8IG9yaWcoIGVsZW0gKTsKCQl9OwoJfSApKCAkLmV4cHIuZmlsdGVycy5hbmltYXRlZCApOwp9CgppZiAoICQudWlCYWNrQ29tcGF0ICE9PSBmYWxzZSApIHsKCSQuZXh0ZW5kKCAkLmVmZmVjdHMsIHsKCgkJLy8gU2F2ZXMgYSBzZXQgb2YgcHJvcGVydGllcyBpbiBhIGRhdGEgc3RvcmFnZQoJCXNhdmU6IGZ1bmN0aW9uKCBlbGVtZW50LCBzZXQgKSB7CgkJCXZhciBpID0gMCwgbGVuZ3RoID0gc2V0Lmxlbmd0aDsKCQkJZm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7CgkJCQlpZiAoIHNldFsgaSBdICE9PSBudWxsICkgewoJCQkJCWVsZW1lbnQuZGF0YSggZGF0YVNwYWNlICsgc2V0WyBpIF0sIGVsZW1lbnRbIDAgXS5zdHlsZVsgc2V0WyBpIF0gXSApOwoJCQkJfQoJCQl9CgkJfSwKCgkJLy8gUmVzdG9yZXMgYSBzZXQgb2YgcHJldmlvdXNseSBzYXZlZCBwcm9wZXJ0aWVzIGZyb20gYSBkYXRhIHN0b3JhZ2UKCQlyZXN0b3JlOiBmdW5jdGlvbiggZWxlbWVudCwgc2V0ICkgewoJCQl2YXIgdmFsLCBpID0gMCwgbGVuZ3RoID0gc2V0Lmxlbmd0aDsKCQkJZm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7CgkJCQlpZiAoIHNldFsgaSBdICE9PSBudWxsICkgewoJCQkJCXZhbCA9IGVsZW1lbnQuZGF0YSggZGF0YVNwYWNlICsgc2V0WyBpIF0gKTsKCQkJCQllbGVtZW50LmNzcyggc2V0WyBpIF0sIHZhbCApOwoJCQkJfQoJCQl9CgkJfSwKCgkJc2V0TW9kZTogZnVuY3Rpb24oIGVsLCBtb2RlICkgewoJCQlpZiAoIG1vZGUgPT09ICJ0b2dnbGUiICkgewoJCQkJbW9kZSA9IGVsLmlzKCAiOmhpZGRlbiIgKSA/ICJzaG93IiA6ICJoaWRlIjsKCQkJfQoJCQlyZXR1cm4gbW9kZTsKCQl9LAoKCQkvLyBXcmFwcyB0aGUgZWxlbWVudCBhcm91bmQgYSB3cmFwcGVyIHRoYXQgY29waWVzIHBvc2l0aW9uIHByb3BlcnRpZXMKCQljcmVhdGVXcmFwcGVyOiBmdW5jdGlvbiggZWxlbWVudCApIHsKCgkJCS8vIElmIHRoZSBlbGVtZW50IGlzIGFscmVhZHkgd3JhcHBlZCwgcmV0dXJuIGl0CgkJCWlmICggZWxlbWVudC5wYXJlbnQoKS5pcyggIi51aS1lZmZlY3RzLXdyYXBwZXIiICkgKSB7CgkJCQlyZXR1cm4gZWxlbWVudC5wYXJlbnQoKTsKCQkJfQoKCQkJLy8gV3JhcCB0aGUgZWxlbWVudAoJCQl2YXIgcHJvcHMgPSB7CgkJCQkJd2lkdGg6IGVsZW1lbnQub3V0ZXJXaWR0aCggdHJ1ZSApLAoJCQkJCWhlaWdodDogZWxlbWVudC5vdXRlckhlaWdodCggdHJ1ZSApLAoJCQkJCSJmbG9hdCI6IGVsZW1lbnQuY3NzKCAiZmxvYXQiICkKCQkJCX0sCgkJCQl3cmFwcGVyID0gJCggIjxkaXY+PC9kaXY+IiApCgkJCQkJLmFkZENsYXNzKCAidWktZWZmZWN0cy13cmFwcGVyIiApCgkJCQkJLmNzcyggewoJCQkJCQlmb250U2l6ZTogIjEwMCUiLAoJCQkJCQliYWNrZ3JvdW5kOiAidHJhbnNwYXJlbnQiLAoJCQkJCQlib3JkZXI6ICJub25lIiwKCQkJCQkJbWFyZ2luOiAwLAoJCQkJCQlwYWRkaW5nOiAwCgkJCQkJfSApLAoKCQkJCS8vIFN0b3JlIHRoZSBzaXplIGluIGNhc2Ugd2lkdGgvaGVpZ2h0IGFyZSBkZWZpbmVkIGluICUgLSBGaXhlcyAjNTI0NQoJCQkJc2l6ZSA9IHsKCQkJCQl3aWR0aDogZWxlbWVudC53aWR0aCgpLAoJCQkJCWhlaWdodDogZWxlbWVudC5oZWlnaHQoKQoJCQkJfSwKCQkJCWFjdGl2ZSA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7CgoJCQkvLyBTdXBwb3J0OiBGaXJlZm94CgkJCS8vIEZpcmVmb3ggaW5jb3JyZWN0bHkgZXhwb3NlcyBhbm9ueW1vdXMgY29udGVudAoJCQkvLyBodHRwczovL2J1Z3ppbGxhLm1vemlsbGEub3JnL3Nob3dfYnVnLmNnaT9pZD01NjE2NjQKCQkJdHJ5IHsKCQkJCWFjdGl2ZS5pZDsKCQkJfSBjYXRjaCAoIGUgKSB7CgkJCQlhY3RpdmUgPSBkb2N1bWVudC5ib2R5OwoJCQl9CgoJCQllbGVtZW50LndyYXAoIHdyYXBwZXIgKTsKCgkJCS8vIEZpeGVzICM3NTk1IC0gRWxlbWVudHMgbG9zZSBmb2N1cyB3aGVuIHdyYXBwZWQuCgkJCWlmICggZWxlbWVudFsgMCBdID09PSBhY3RpdmUgfHwgJC5jb250YWlucyggZWxlbWVudFsgMCBdLCBhY3RpdmUgKSApIHsKCQkJCSQoIGFjdGl2ZSApLnRyaWdnZXIoICJmb2N1cyIgKTsKCQkJfQoKCQkJLy8gSG90Zml4IGZvciBqUXVlcnkgMS40IHNpbmNlIHNvbWUgY2hhbmdlIGluIHdyYXAoKSBzZWVtcyB0byBhY3R1YWxseQoJCQkvLyBsb3NlIHRoZSByZWZlcmVuY2UgdG8gdGhlIHdyYXBwZWQgZWxlbWVudAoJCQl3cmFwcGVyID0gZWxlbWVudC5wYXJlbnQoKTsKCgkJCS8vIFRyYW5zZmVyIHBvc2l0aW9uaW5nIHByb3BlcnRpZXMgdG8gdGhlIHdyYXBwZXIKCQkJaWYgKCBlbGVtZW50LmNzcyggInBvc2l0aW9uIiApID09PSAic3RhdGljIiApIHsKCQkJCXdyYXBwZXIuY3NzKCB7IHBvc2l0aW9uOiAicmVsYXRpdmUiIH0gKTsKCQkJCWVsZW1lbnQuY3NzKCB7IHBvc2l0aW9uOiAicmVsYXRpdmUiIH0gKTsKCQkJfSBlbHNlIHsKCQkJCSQuZXh0ZW5kKCBwcm9wcywgewoJCQkJCXBvc2l0aW9uOiBlbGVtZW50LmNzcyggInBvc2l0aW9uIiApLAoJCQkJCXpJbmRleDogZWxlbWVudC5jc3MoICJ6LWluZGV4IiApCgkJCQl9ICk7CgkJCQkkLmVhY2goIFsgInRvcCIsICJsZWZ0IiwgImJvdHRvbSIsICJyaWdodCIgXSwgZnVuY3Rpb24oIGksIHBvcyApIHsKCQkJCQlwcm9wc1sgcG9zIF0gPSBlbGVtZW50LmNzcyggcG9zICk7CgkJCQkJaWYgKCBpc05hTiggcGFyc2VJbnQoIHByb3BzWyBwb3MgXSwgMTAgKSApICkgewoJCQkJCQlwcm9wc1sgcG9zIF0gPSAiYXV0byI7CgkJCQkJfQoJCQkJfSApOwoJCQkJZWxlbWVudC5jc3MoIHsKCQkJCQlwb3NpdGlvbjogInJlbGF0aXZlIiwKCQkJCQl0b3A6IDAsCgkJCQkJbGVmdDogMCwKCQkJCQlyaWdodDogImF1dG8iLAoJCQkJCWJvdHRvbTogImF1dG8iCgkJCQl9ICk7CgkJCX0KCQkJZWxlbWVudC5jc3MoIHNpemUgKTsKCgkJCXJldHVybiB3cmFwcGVyLmNzcyggcHJvcHMgKS5zaG93KCk7CgkJfSwKCgkJcmVtb3ZlV3JhcHBlcjogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJCXZhciBhY3RpdmUgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50OwoKCQkJaWYgKCBlbGVtZW50LnBhcmVudCgpLmlzKCAiLnVpLWVmZmVjdHMtd3JhcHBlciIgKSApIHsKCQkJCWVsZW1lbnQucGFyZW50KCkucmVwbGFjZVdpdGgoIGVsZW1lbnQgKTsKCgkJCQkvLyBGaXhlcyAjNzU5NSAtIEVsZW1lbnRzIGxvc2UgZm9jdXMgd2hlbiB3cmFwcGVkLgoJCQkJaWYgKCBlbGVtZW50WyAwIF0gPT09IGFjdGl2ZSB8fCAkLmNvbnRhaW5zKCBlbGVtZW50WyAwIF0sIGFjdGl2ZSApICkgewoJCQkJCSQoIGFjdGl2ZSApLnRyaWdnZXIoICJmb2N1cyIgKTsKCQkJCX0KCQkJfQoKCQkJcmV0dXJuIGVsZW1lbnQ7CgkJfQoJfSApOwp9CgokLmV4dGVuZCggJC5lZmZlY3RzLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCglkZWZpbmU6IGZ1bmN0aW9uKCBuYW1lLCBtb2RlLCBlZmZlY3QgKSB7CgkJaWYgKCAhZWZmZWN0ICkgewoJCQllZmZlY3QgPSBtb2RlOwoJCQltb2RlID0gImVmZmVjdCI7CgkJfQoKCQkkLmVmZmVjdHMuZWZmZWN0WyBuYW1lIF0gPSBlZmZlY3Q7CgkJJC5lZmZlY3RzLmVmZmVjdFsgbmFtZSBdLm1vZGUgPSBtb2RlOwoKCQlyZXR1cm4gZWZmZWN0OwoJfSwKCglzY2FsZWREaW1lbnNpb25zOiBmdW5jdGlvbiggZWxlbWVudCwgcGVyY2VudCwgZGlyZWN0aW9uICkgewoJCWlmICggcGVyY2VudCA9PT0gMCApIHsKCQkJcmV0dXJuIHsKCQkJCWhlaWdodDogMCwKCQkJCXdpZHRoOiAwLAoJCQkJb3V0ZXJIZWlnaHQ6IDAsCgkJCQlvdXRlcldpZHRoOiAwCgkJCX07CgkJfQoKCQl2YXIgeCA9IGRpcmVjdGlvbiAhPT0gImhvcml6b250YWwiID8gKCAoIHBlcmNlbnQgfHwgMTAwICkgLyAxMDAgKSA6IDEsCgkJCXkgPSBkaXJlY3Rpb24gIT09ICJ2ZXJ0aWNhbCIgPyAoICggcGVyY2VudCB8fCAxMDAgKSAvIDEwMCApIDogMTsKCgkJcmV0dXJuIHsKCQkJaGVpZ2h0OiBlbGVtZW50LmhlaWdodCgpICogeSwKCQkJd2lkdGg6IGVsZW1lbnQud2lkdGgoKSAqIHgsCgkJCW91dGVySGVpZ2h0OiBlbGVtZW50Lm91dGVySGVpZ2h0KCkgKiB5LAoJCQlvdXRlcldpZHRoOiBlbGVtZW50Lm91dGVyV2lkdGgoKSAqIHgKCQl9OwoKCX0sCgoJY2xpcFRvQm94OiBmdW5jdGlvbiggYW5pbWF0aW9uICkgewoJCXJldHVybiB7CgkJCXdpZHRoOiBhbmltYXRpb24uY2xpcC5yaWdodCAtIGFuaW1hdGlvbi5jbGlwLmxlZnQsCgkJCWhlaWdodDogYW5pbWF0aW9uLmNsaXAuYm90dG9tIC0gYW5pbWF0aW9uLmNsaXAudG9wLAoJCQlsZWZ0OiBhbmltYXRpb24uY2xpcC5sZWZ0LAoJCQl0b3A6IGFuaW1hdGlvbi5jbGlwLnRvcAoJCX07Cgl9LAoKCS8vIEluamVjdHMgcmVjZW50bHkgcXVldWVkIGZ1bmN0aW9ucyB0byBiZSBmaXJzdCBpbiBsaW5lIChhZnRlciAiaW5wcm9ncmVzcyIpCgl1bnNoaWZ0OiBmdW5jdGlvbiggZWxlbWVudCwgcXVldWVMZW5ndGgsIGNvdW50ICkgewoJCXZhciBxdWV1ZSA9IGVsZW1lbnQucXVldWUoKTsKCgkJaWYgKCBxdWV1ZUxlbmd0aCA+IDEgKSB7CgkJCXF1ZXVlLnNwbGljZS5hcHBseSggcXVldWUsCgkJCQlbIDEsIDAgXS5jb25jYXQoIHF1ZXVlLnNwbGljZSggcXVldWVMZW5ndGgsIGNvdW50ICkgKSApOwoJCX0KCQllbGVtZW50LmRlcXVldWUoKTsKCX0sCgoJc2F2ZVN0eWxlOiBmdW5jdGlvbiggZWxlbWVudCApIHsKCQllbGVtZW50LmRhdGEoIGRhdGFTcGFjZVN0eWxlLCBlbGVtZW50WyAwIF0uc3R5bGUuY3NzVGV4dCApOwoJfSwKCglyZXN0b3JlU3R5bGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCWVsZW1lbnRbIDAgXS5zdHlsZS5jc3NUZXh0ID0gZWxlbWVudC5kYXRhKCBkYXRhU3BhY2VTdHlsZSApIHx8ICIiOwoJCWVsZW1lbnQucmVtb3ZlRGF0YSggZGF0YVNwYWNlU3R5bGUgKTsKCX0sCgoJbW9kZTogZnVuY3Rpb24oIGVsZW1lbnQsIG1vZGUgKSB7CgkJdmFyIGhpZGRlbiA9IGVsZW1lbnQuaXMoICI6aGlkZGVuIiApOwoKCQlpZiAoIG1vZGUgPT09ICJ0b2dnbGUiICkgewoJCQltb2RlID0gaGlkZGVuID8gInNob3ciIDogImhpZGUiOwoJCX0KCQlpZiAoIGhpZGRlbiA/IG1vZGUgPT09ICJoaWRlIiA6IG1vZGUgPT09ICJzaG93IiApIHsKCQkJbW9kZSA9ICJub25lIjsKCQl9CgkJcmV0dXJuIG1vZGU7Cgl9LAoKCS8vIFRyYW5zbGF0ZXMgYSBbdG9wLGxlZnRdIGFycmF5IGludG8gYSBiYXNlbGluZSB2YWx1ZQoJZ2V0QmFzZWxpbmU6IGZ1bmN0aW9uKCBvcmlnaW4sIG9yaWdpbmFsICkgewoJCXZhciB5LCB4OwoKCQlzd2l0Y2ggKCBvcmlnaW5bIDAgXSApIHsKCQljYXNlICJ0b3AiOgoJCQl5ID0gMDsKCQkJYnJlYWs7CgkJY2FzZSAibWlkZGxlIjoKCQkJeSA9IDAuNTsKCQkJYnJlYWs7CgkJY2FzZSAiYm90dG9tIjoKCQkJeSA9IDE7CgkJCWJyZWFrOwoJCWRlZmF1bHQ6CgkJCXkgPSBvcmlnaW5bIDAgXSAvIG9yaWdpbmFsLmhlaWdodDsKCQl9CgoJCXN3aXRjaCAoIG9yaWdpblsgMSBdICkgewoJCWNhc2UgImxlZnQiOgoJCQl4ID0gMDsKCQkJYnJlYWs7CgkJY2FzZSAiY2VudGVyIjoKCQkJeCA9IDAuNTsKCQkJYnJlYWs7CgkJY2FzZSAicmlnaHQiOgoJCQl4ID0gMTsKCQkJYnJlYWs7CgkJZGVmYXVsdDoKCQkJeCA9IG9yaWdpblsgMSBdIC8gb3JpZ2luYWwud2lkdGg7CgkJfQoKCQlyZXR1cm4gewoJCQl4OiB4LAoJCQl5OiB5CgkJfTsKCX0sCgoJLy8gQ3JlYXRlcyBhIHBsYWNlaG9sZGVyIGVsZW1lbnQgc28gdGhhdCB0aGUgb3JpZ2luYWwgZWxlbWVudCBjYW4gYmUgbWFkZSBhYnNvbHV0ZQoJY3JlYXRlUGxhY2Vob2xkZXI6IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCXZhciBwbGFjZWhvbGRlciwKCQkJY3NzUG9zaXRpb24gPSBlbGVtZW50LmNzcyggInBvc2l0aW9uIiApLAoJCQlwb3NpdGlvbiA9IGVsZW1lbnQucG9zaXRpb24oKTsKCgkJLy8gTG9jayBpbiBtYXJnaW5zIGZpcnN0IHRvIGFjY291bnQgZm9yIGZvcm0gZWxlbWVudHMsIHdoaWNoCgkJLy8gd2lsbCBjaGFuZ2UgbWFyZ2luIGlmIHlvdSBleHBsaWNpdGx5IHNldCBoZWlnaHQKCQkvLyBzZWU6IGh0dHA6Ly9qc2ZpZGRsZS5uZXQvSlpTTXQvMy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTEwNzM4MAoJCS8vIFN1cHBvcnQ6IFNhZmFyaQoJCWVsZW1lbnQuY3NzKCB7CgkJCW1hcmdpblRvcDogZWxlbWVudC5jc3MoICJtYXJnaW5Ub3AiICksCgkJCW1hcmdpbkJvdHRvbTogZWxlbWVudC5jc3MoICJtYXJnaW5Cb3R0b20iICksCgkJCW1hcmdpbkxlZnQ6IGVsZW1lbnQuY3NzKCAibWFyZ2luTGVmdCIgKSwKCQkJbWFyZ2luUmlnaHQ6IGVsZW1lbnQuY3NzKCAibWFyZ2luUmlnaHQiICkKCQl9ICkKCQkub3V0ZXJXaWR0aCggZWxlbWVudC5vdXRlcldpZHRoKCkgKQoJCS5vdXRlckhlaWdodCggZWxlbWVudC5vdXRlckhlaWdodCgpICk7CgoJCWlmICggL14oc3RhdGljfHJlbGF0aXZlKS8udGVzdCggY3NzUG9zaXRpb24gKSApIHsKCQkJY3NzUG9zaXRpb24gPSAiYWJzb2x1dGUiOwoKCQkJcGxhY2Vob2xkZXIgPSAkKCAiPCIgKyBlbGVtZW50WyAwIF0ubm9kZU5hbWUgKyAiPiIgKS5pbnNlcnRBZnRlciggZWxlbWVudCApLmNzcyggewoKCQkJCS8vIENvbnZlcnQgaW5saW5lIHRvIGlubGluZSBibG9jayB0byBhY2NvdW50IGZvciBpbmxpbmUgZWxlbWVudHMKCQkJCS8vIHRoYXQgdHVybiB0byBpbmxpbmUgYmxvY2sgYmFzZWQgb24gY29udGVudCAobGlrZSBpbWcpCgkJCQlkaXNwbGF5OiAvXihpbmxpbmV8cnVieSkvLnRlc3QoIGVsZW1lbnQuY3NzKCAiZGlzcGxheSIgKSApID8KCQkJCQkiaW5saW5lLWJsb2NrIiA6CgkJCQkJImJsb2NrIiwKCQkJCXZpc2liaWxpdHk6ICJoaWRkZW4iLAoKCQkJCS8vIE1hcmdpbnMgbmVlZCB0byBiZSBzZXQgdG8gYWNjb3VudCBmb3IgbWFyZ2luIGNvbGxhcHNlCgkJCQltYXJnaW5Ub3A6IGVsZW1lbnQuY3NzKCAibWFyZ2luVG9wIiApLAoJCQkJbWFyZ2luQm90dG9tOiBlbGVtZW50LmNzcyggIm1hcmdpbkJvdHRvbSIgKSwKCQkJCW1hcmdpbkxlZnQ6IGVsZW1lbnQuY3NzKCAibWFyZ2luTGVmdCIgKSwKCQkJCW1hcmdpblJpZ2h0OiBlbGVtZW50LmNzcyggIm1hcmdpblJpZ2h0IiApLAoJCQkJImZsb2F0IjogZWxlbWVudC5jc3MoICJmbG9hdCIgKQoJCQl9ICkKCQkJLm91dGVyV2lkdGgoIGVsZW1lbnQub3V0ZXJXaWR0aCgpICkKCQkJLm91dGVySGVpZ2h0KCBlbGVtZW50Lm91dGVySGVpZ2h0KCkgKQoJCQkuYWRkQ2xhc3MoICJ1aS1lZmZlY3RzLXBsYWNlaG9sZGVyIiApOwoKCQkJZWxlbWVudC5kYXRhKCBkYXRhU3BhY2UgKyAicGxhY2Vob2xkZXIiLCBwbGFjZWhvbGRlciApOwoJCX0KCgkJZWxlbWVudC5jc3MoIHsKCQkJcG9zaXRpb246IGNzc1Bvc2l0aW9uLAoJCQlsZWZ0OiBwb3NpdGlvbi5sZWZ0LAoJCQl0b3A6IHBvc2l0aW9uLnRvcAoJCX0gKTsKCgkJcmV0dXJuIHBsYWNlaG9sZGVyOwoJfSwKCglyZW1vdmVQbGFjZWhvbGRlcjogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJdmFyIGRhdGFLZXkgPSBkYXRhU3BhY2UgKyAicGxhY2Vob2xkZXIiLAoJCQkJcGxhY2Vob2xkZXIgPSBlbGVtZW50LmRhdGEoIGRhdGFLZXkgKTsKCgkJaWYgKCBwbGFjZWhvbGRlciApIHsKCQkJcGxhY2Vob2xkZXIucmVtb3ZlKCk7CgkJCWVsZW1lbnQucmVtb3ZlRGF0YSggZGF0YUtleSApOwoJCX0KCX0sCgoJLy8gUmVtb3ZlcyBhIHBsYWNlaG9sZGVyIGlmIGl0IGV4aXN0cyBhbmQgcmVzdG9yZXMKCS8vIHByb3BlcnRpZXMgdGhhdCB3ZXJlIG1vZGlmaWVkIGR1cmluZyBwbGFjZWhvbGRlciBjcmVhdGlvbgoJY2xlYW5VcDogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJJC5lZmZlY3RzLnJlc3RvcmVTdHlsZSggZWxlbWVudCApOwoJCSQuZWZmZWN0cy5yZW1vdmVQbGFjZWhvbGRlciggZWxlbWVudCApOwoJfSwKCglzZXRUcmFuc2l0aW9uOiBmdW5jdGlvbiggZWxlbWVudCwgbGlzdCwgZmFjdG9yLCB2YWx1ZSApIHsKCQl2YWx1ZSA9IHZhbHVlIHx8IHt9OwoJCSQuZWFjaCggbGlzdCwgZnVuY3Rpb24oIGksIHggKSB7CgkJCXZhciB1bml0ID0gZWxlbWVudC5jc3NVbml0KCB4ICk7CgkJCWlmICggdW5pdFsgMCBdID4gMCApIHsKCQkJCXZhbHVlWyB4IF0gPSB1bml0WyAwIF0gKiBmYWN0b3IgKyB1bml0WyAxIF07CgkJCX0KCQl9ICk7CgkJcmV0dXJuIHZhbHVlOwoJfQp9ICk7CgovLyBSZXR1cm4gYW4gZWZmZWN0IG9wdGlvbnMgb2JqZWN0IGZvciB0aGUgZ2l2ZW4gcGFyYW1ldGVyczoKZnVuY3Rpb24gX25vcm1hbGl6ZUFyZ3VtZW50cyggZWZmZWN0LCBvcHRpb25zLCBzcGVlZCwgY2FsbGJhY2sgKSB7CgoJLy8gQWxsb3cgcGFzc2luZyBhbGwgb3B0aW9ucyBhcyB0aGUgZmlyc3QgcGFyYW1ldGVyCglpZiAoICQuaXNQbGFpbk9iamVjdCggZWZmZWN0ICkgKSB7CgkJb3B0aW9ucyA9IGVmZmVjdDsKCQllZmZlY3QgPSBlZmZlY3QuZWZmZWN0OwoJfQoKCS8vIENvbnZlcnQgdG8gYW4gb2JqZWN0CgllZmZlY3QgPSB7IGVmZmVjdDogZWZmZWN0IH07CgoJLy8gQ2F0Y2ggKGVmZmVjdCwgbnVsbCwgLi4uKQoJaWYgKCBvcHRpb25zID09IG51bGwgKSB7CgkJb3B0aW9ucyA9IHt9OwoJfQoKCS8vIENhdGNoIChlZmZlY3QsIGNhbGxiYWNrKQoJaWYgKCAkLmlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHsKCQljYWxsYmFjayA9IG9wdGlvbnM7CgkJc3BlZWQgPSBudWxsOwoJCW9wdGlvbnMgPSB7fTsKCX0KCgkvLyBDYXRjaCAoZWZmZWN0LCBzcGVlZCwgPykKCWlmICggdHlwZW9mIG9wdGlvbnMgPT09ICJudW1iZXIiIHx8ICQuZnguc3BlZWRzWyBvcHRpb25zIF0gKSB7CgkJY2FsbGJhY2sgPSBzcGVlZDsKCQlzcGVlZCA9IG9wdGlvbnM7CgkJb3B0aW9ucyA9IHt9OwoJfQoKCS8vIENhdGNoIChlZmZlY3QsIG9wdGlvbnMsIGNhbGxiYWNrKQoJaWYgKCAkLmlzRnVuY3Rpb24oIHNwZWVkICkgKSB7CgkJY2FsbGJhY2sgPSBzcGVlZDsKCQlzcGVlZCA9IG51bGw7Cgl9CgoJLy8gQWRkIG9wdGlvbnMgdG8gZWZmZWN0CglpZiAoIG9wdGlvbnMgKSB7CgkJJC5leHRlbmQoIGVmZmVjdCwgb3B0aW9ucyApOwoJfQoKCXNwZWVkID0gc3BlZWQgfHwgb3B0aW9ucy5kdXJhdGlvbjsKCWVmZmVjdC5kdXJhdGlvbiA9ICQuZngub2ZmID8gMCA6CgkJdHlwZW9mIHNwZWVkID09PSAibnVtYmVyIiA/IHNwZWVkIDoKCQlzcGVlZCBpbiAkLmZ4LnNwZWVkcyA/ICQuZnguc3BlZWRzWyBzcGVlZCBdIDoKCQkkLmZ4LnNwZWVkcy5fZGVmYXVsdDsKCgllZmZlY3QuY29tcGxldGUgPSBjYWxsYmFjayB8fCBvcHRpb25zLmNvbXBsZXRlOwoKCXJldHVybiBlZmZlY3Q7Cn0KCmZ1bmN0aW9uIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSB7CgoJLy8gVmFsaWQgc3RhbmRhcmQgc3BlZWRzIChub3RoaW5nLCBudW1iZXIsIG5hbWVkIHNwZWVkKQoJaWYgKCAhb3B0aW9uIHx8IHR5cGVvZiBvcHRpb24gPT09ICJudW1iZXIiIHx8ICQuZnguc3BlZWRzWyBvcHRpb24gXSApIHsKCQlyZXR1cm4gdHJ1ZTsKCX0KCgkvLyBJbnZhbGlkIHN0cmluZ3MgLSB0cmVhdCBhcyAibm9ybWFsIiBzcGVlZAoJaWYgKCB0eXBlb2Ygb3B0aW9uID09PSAic3RyaW5nIiAmJiAhJC5lZmZlY3RzLmVmZmVjdFsgb3B0aW9uIF0gKSB7CgkJcmV0dXJuIHRydWU7Cgl9CgoJLy8gQ29tcGxldGUgY2FsbGJhY2sKCWlmICggJC5pc0Z1bmN0aW9uKCBvcHRpb24gKSApIHsKCQlyZXR1cm4gdHJ1ZTsKCX0KCgkvLyBPcHRpb25zIGhhc2ggKGJ1dCBub3QgbmFtaW5nIGFuIGVmZmVjdCkKCWlmICggdHlwZW9mIG9wdGlvbiA9PT0gIm9iamVjdCIgJiYgIW9wdGlvbi5lZmZlY3QgKSB7CgkJcmV0dXJuIHRydWU7Cgl9CgoJLy8gRGlkbid0IG1hdGNoIGFueSBzdGFuZGFyZCBBUEkKCXJldHVybiBmYWxzZTsKfQoKJC5mbi5leHRlbmQoIHsKCWVmZmVjdDogZnVuY3Rpb24oIC8qIGVmZmVjdCwgb3B0aW9ucywgc3BlZWQsIGNhbGxiYWNrICovICkgewoJCXZhciBhcmdzID0gX25vcm1hbGl6ZUFyZ3VtZW50cy5hcHBseSggdGhpcywgYXJndW1lbnRzICksCgkJCWVmZmVjdE1ldGhvZCA9ICQuZWZmZWN0cy5lZmZlY3RbIGFyZ3MuZWZmZWN0IF0sCgkJCWRlZmF1bHRNb2RlID0gZWZmZWN0TWV0aG9kLm1vZGUsCgkJCXF1ZXVlID0gYXJncy5xdWV1ZSwKCQkJcXVldWVOYW1lID0gcXVldWUgfHwgImZ4IiwKCQkJY29tcGxldGUgPSBhcmdzLmNvbXBsZXRlLAoJCQltb2RlID0gYXJncy5tb2RlLAoJCQltb2RlcyA9IFtdLAoJCQlwcmVmaWx0ZXIgPSBmdW5jdGlvbiggbmV4dCApIHsKCQkJCXZhciBlbCA9ICQoIHRoaXMgKSwKCQkJCQlub3JtYWxpemVkTW9kZSA9ICQuZWZmZWN0cy5tb2RlKCBlbCwgbW9kZSApIHx8IGRlZmF1bHRNb2RlOwoKCQkJCS8vIFNlbnRpbmVsIGZvciBkdWNrLXB1bmNoaW5nIHRoZSA6YW5pbWF0ZWQgcHN1ZWRvLXNlbGVjdG9yCgkJCQllbC5kYXRhKCBkYXRhU3BhY2VBbmltYXRlZCwgdHJ1ZSApOwoKCQkJCS8vIFNhdmUgZWZmZWN0IG1vZGUgZm9yIGxhdGVyIHVzZSwKCQkJCS8vIHdlIGNhbid0IGp1c3QgY2FsbCAkLmVmZmVjdHMubW9kZSBhZ2FpbiBsYXRlciwKCQkJCS8vIGFzIHRoZSAuc2hvdygpIGJlbG93IGRlc3Ryb3lzIHRoZSBpbml0aWFsIHN0YXRlCgkJCQltb2Rlcy5wdXNoKCBub3JtYWxpemVkTW9kZSApOwoKCQkJCS8vIFNlZSAkLnVpQmFja0NvbXBhdCBpbnNpZGUgb2YgcnVuKCkgZm9yIHJlbW92YWwgb2YgZGVmYXVsdE1vZGUgaW4gMS4xMwoJCQkJaWYgKCBkZWZhdWx0TW9kZSAmJiAoIG5vcm1hbGl6ZWRNb2RlID09PSAic2hvdyIgfHwKCQkJCQkJKCBub3JtYWxpemVkTW9kZSA9PT0gZGVmYXVsdE1vZGUgJiYgbm9ybWFsaXplZE1vZGUgPT09ICJoaWRlIiApICkgKSB7CgkJCQkJZWwuc2hvdygpOwoJCQkJfQoKCQkJCWlmICggIWRlZmF1bHRNb2RlIHx8IG5vcm1hbGl6ZWRNb2RlICE9PSAibm9uZSIgKSB7CgkJCQkJJC5lZmZlY3RzLnNhdmVTdHlsZSggZWwgKTsKCQkJCX0KCgkJCQlpZiAoICQuaXNGdW5jdGlvbiggbmV4dCApICkgewoJCQkJCW5leHQoKTsKCQkJCX0KCQkJfTsKCgkJaWYgKCAkLmZ4Lm9mZiB8fCAhZWZmZWN0TWV0aG9kICkgewoKCQkJLy8gRGVsZWdhdGUgdG8gdGhlIG9yaWdpbmFsIG1ldGhvZCAoZS5nLiwgLnNob3coKSkgaWYgcG9zc2libGUKCQkJaWYgKCBtb2RlICkgewoJCQkJcmV0dXJuIHRoaXNbIG1vZGUgXSggYXJncy5kdXJhdGlvbiwgY29tcGxldGUgKTsKCQkJfSBlbHNlIHsKCQkJCXJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJCWlmICggY29tcGxldGUgKSB7CgkJCQkJCWNvbXBsZXRlLmNhbGwoIHRoaXMgKTsKCQkJCQl9CgkJCQl9ICk7CgkJCX0KCQl9CgoJCWZ1bmN0aW9uIHJ1biggbmV4dCApIHsKCQkJdmFyIGVsZW0gPSAkKCB0aGlzICk7CgoJCQlmdW5jdGlvbiBjbGVhbnVwKCkgewoJCQkJZWxlbS5yZW1vdmVEYXRhKCBkYXRhU3BhY2VBbmltYXRlZCApOwoKCQkJCSQuZWZmZWN0cy5jbGVhblVwKCBlbGVtICk7CgoJCQkJaWYgKCBhcmdzLm1vZGUgPT09ICJoaWRlIiApIHsKCQkJCQllbGVtLmhpZGUoKTsKCQkJCX0KCgkJCQlkb25lKCk7CgkJCX0KCgkJCWZ1bmN0aW9uIGRvbmUoKSB7CgkJCQlpZiAoICQuaXNGdW5jdGlvbiggY29tcGxldGUgKSApIHsKCQkJCQljb21wbGV0ZS5jYWxsKCBlbGVtWyAwIF0gKTsKCQkJCX0KCgkJCQlpZiAoICQuaXNGdW5jdGlvbiggbmV4dCApICkgewoJCQkJCW5leHQoKTsKCQkJCX0KCQkJfQoKCQkJLy8gT3ZlcnJpZGUgbW9kZSBvcHRpb24gb24gYSBwZXIgZWxlbWVudCBiYXNpcywKCQkJLy8gYXMgdG9nZ2xlIGNhbiBiZSBlaXRoZXIgc2hvdyBvciBoaWRlIGRlcGVuZGluZyBvbiBlbGVtZW50IHN0YXRlCgkJCWFyZ3MubW9kZSA9IG1vZGVzLnNoaWZ0KCk7CgoJCQlpZiAoICQudWlCYWNrQ29tcGF0ICE9PSBmYWxzZSAmJiAhZGVmYXVsdE1vZGUgKSB7CgkJCQlpZiAoIGVsZW0uaXMoICI6aGlkZGVuIiApID8gbW9kZSA9PT0gImhpZGUiIDogbW9kZSA9PT0gInNob3ciICkgewoKCQkJCQkvLyBDYWxsIHRoZSBjb3JlIG1ldGhvZCB0byB0cmFjayAib2xkZGlzcGxheSIgcHJvcGVybHkKCQkJCQllbGVtWyBtb2RlIF0oKTsKCQkJCQlkb25lKCk7CgkJCQl9IGVsc2UgewoJCQkJCWVmZmVjdE1ldGhvZC5jYWxsKCBlbGVtWyAwIF0sIGFyZ3MsIGRvbmUgKTsKCQkJCX0KCQkJfSBlbHNlIHsKCQkJCWlmICggYXJncy5tb2RlID09PSAibm9uZSIgKSB7CgoJCQkJCS8vIENhbGwgdGhlIGNvcmUgbWV0aG9kIHRvIHRyYWNrICJvbGRkaXNwbGF5IiBwcm9wZXJseQoJCQkJCWVsZW1bIG1vZGUgXSgpOwoJCQkJCWRvbmUoKTsKCQkJCX0gZWxzZSB7CgkJCQkJZWZmZWN0TWV0aG9kLmNhbGwoIGVsZW1bIDAgXSwgYXJncywgY2xlYW51cCApOwoJCQkJfQoJCQl9CgkJfQoKCQkvLyBSdW4gcHJlZmlsdGVyIG9uIGFsbCBlbGVtZW50cyBmaXJzdCB0byBlbnN1cmUgdGhhdAoJCS8vIGFueSBzaG93aW5nIG9yIGhpZGluZyBoYXBwZW5zIGJlZm9yZSBwbGFjZWhvbGRlciBjcmVhdGlvbiwKCQkvLyB3aGljaCBlbnN1cmVzIHRoYXQgYW55IGxheW91dCBjaGFuZ2VzIGFyZSBjb3JyZWN0bHkgY2FwdHVyZWQuCgkJcmV0dXJuIHF1ZXVlID09PSBmYWxzZSA/CgkJCXRoaXMuZWFjaCggcHJlZmlsdGVyICkuZWFjaCggcnVuICkgOgoJCQl0aGlzLnF1ZXVlKCBxdWV1ZU5hbWUsIHByZWZpbHRlciApLnF1ZXVlKCBxdWV1ZU5hbWUsIHJ1biApOwoJfSwKCglzaG93OiAoIGZ1bmN0aW9uKCBvcmlnICkgewoJCXJldHVybiBmdW5jdGlvbiggb3B0aW9uICkgewoJCQlpZiAoIHN0YW5kYXJkQW5pbWF0aW9uT3B0aW9uKCBvcHRpb24gKSApIHsKCQkJCXJldHVybiBvcmlnLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJfSBlbHNlIHsKCQkJCXZhciBhcmdzID0gX25vcm1hbGl6ZUFyZ3VtZW50cy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCQlhcmdzLm1vZGUgPSAic2hvdyI7CgkJCQlyZXR1cm4gdGhpcy5lZmZlY3QuY2FsbCggdGhpcywgYXJncyApOwoJCQl9CgkJfTsKCX0gKSggJC5mbi5zaG93ICksCgoJaGlkZTogKCBmdW5jdGlvbiggb3JpZyApIHsKCQlyZXR1cm4gZnVuY3Rpb24oIG9wdGlvbiApIHsKCQkJaWYgKCBzdGFuZGFyZEFuaW1hdGlvbk9wdGlvbiggb3B0aW9uICkgKSB7CgkJCQlyZXR1cm4gb3JpZy5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJCX0gZWxzZSB7CgkJCQl2YXIgYXJncyA9IF9ub3JtYWxpemVBcmd1bWVudHMuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQkJYXJncy5tb2RlID0gImhpZGUiOwoJCQkJcmV0dXJuIHRoaXMuZWZmZWN0LmNhbGwoIHRoaXMsIGFyZ3MgKTsKCQkJfQoJCX07Cgl9ICkoICQuZm4uaGlkZSApLAoKCXRvZ2dsZTogKCBmdW5jdGlvbiggb3JpZyApIHsKCQlyZXR1cm4gZnVuY3Rpb24oIG9wdGlvbiApIHsKCQkJaWYgKCBzdGFuZGFyZEFuaW1hdGlvbk9wdGlvbiggb3B0aW9uICkgfHwgdHlwZW9mIG9wdGlvbiA9PT0gImJvb2xlYW4iICkgewoJCQkJcmV0dXJuIG9yaWcuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQl9IGVsc2UgewoJCQkJdmFyIGFyZ3MgPSBfbm9ybWFsaXplQXJndW1lbnRzLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQkJCWFyZ3MubW9kZSA9ICJ0b2dnbGUiOwoJCQkJcmV0dXJuIHRoaXMuZWZmZWN0LmNhbGwoIHRoaXMsIGFyZ3MgKTsKCQkJfQoJCX07Cgl9ICkoICQuZm4udG9nZ2xlICksCgoJY3NzVW5pdDogZnVuY3Rpb24oIGtleSApIHsKCQl2YXIgc3R5bGUgPSB0aGlzLmNzcygga2V5ICksCgkJCXZhbCA9IFtdOwoKCQkkLmVhY2goIFsgImVtIiwgInB4IiwgIiUiLCAicHQiIF0sIGZ1bmN0aW9uKCBpLCB1bml0ICkgewoJCQlpZiAoIHN0eWxlLmluZGV4T2YoIHVuaXQgKSA+IDAgKSB7CgkJCQl2YWwgPSBbIHBhcnNlRmxvYXQoIHN0eWxlICksIHVuaXQgXTsKCQkJfQoJCX0gKTsKCQlyZXR1cm4gdmFsOwoJfSwKCgljc3NDbGlwOiBmdW5jdGlvbiggY2xpcE9iaiApIHsKCQlpZiAoIGNsaXBPYmogKSB7CgkJCXJldHVybiB0aGlzLmNzcyggImNsaXAiLCAicmVjdCgiICsgY2xpcE9iai50b3AgKyAicHggIiArIGNsaXBPYmoucmlnaHQgKyAicHggIiArCgkJCQljbGlwT2JqLmJvdHRvbSArICJweCAiICsgY2xpcE9iai5sZWZ0ICsgInB4KSIgKTsKCQl9CgkJcmV0dXJuIHBhcnNlQ2xpcCggdGhpcy5jc3MoICJjbGlwIiApLCB0aGlzICk7Cgl9LAoKCXRyYW5zZmVyOiBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCQl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKSwKCQkJdGFyZ2V0ID0gJCggb3B0aW9ucy50byApLAoJCQl0YXJnZXRGaXhlZCA9IHRhcmdldC5jc3MoICJwb3NpdGlvbiIgKSA9PT0gImZpeGVkIiwKCQkJYm9keSA9ICQoICJib2R5IiApLAoJCQlmaXhUb3AgPSB0YXJnZXRGaXhlZCA/IGJvZHkuc2Nyb2xsVG9wKCkgOiAwLAoJCQlmaXhMZWZ0ID0gdGFyZ2V0Rml4ZWQgPyBib2R5LnNjcm9sbExlZnQoKSA6IDAsCgkJCWVuZFBvc2l0aW9uID0gdGFyZ2V0Lm9mZnNldCgpLAoJCQlhbmltYXRpb24gPSB7CgkJCQl0b3A6IGVuZFBvc2l0aW9uLnRvcCAtIGZpeFRvcCwKCQkJCWxlZnQ6IGVuZFBvc2l0aW9uLmxlZnQgLSBmaXhMZWZ0LAoJCQkJaGVpZ2h0OiB0YXJnZXQuaW5uZXJIZWlnaHQoKSwKCQkJCXdpZHRoOiB0YXJnZXQuaW5uZXJXaWR0aCgpCgkJCX0sCgkJCXN0YXJ0UG9zaXRpb24gPSBlbGVtZW50Lm9mZnNldCgpLAoJCQl0cmFuc2ZlciA9ICQoICI8ZGl2IGNsYXNzPSd1aS1lZmZlY3RzLXRyYW5zZmVyJz48L2Rpdj4iICkKCQkJCS5hcHBlbmRUbyggImJvZHkiICkKCQkJCS5hZGRDbGFzcyggb3B0aW9ucy5jbGFzc05hbWUgKQoJCQkJLmNzcyggewoJCQkJCXRvcDogc3RhcnRQb3NpdGlvbi50b3AgLSBmaXhUb3AsCgkJCQkJbGVmdDogc3RhcnRQb3NpdGlvbi5sZWZ0IC0gZml4TGVmdCwKCQkJCQloZWlnaHQ6IGVsZW1lbnQuaW5uZXJIZWlnaHQoKSwKCQkJCQl3aWR0aDogZWxlbWVudC5pbm5lcldpZHRoKCksCgkJCQkJcG9zaXRpb246IHRhcmdldEZpeGVkID8gImZpeGVkIiA6ICJhYnNvbHV0ZSIKCQkJCX0gKQoJCQkJLmFuaW1hdGUoIGFuaW1hdGlvbiwgb3B0aW9ucy5kdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcsIGZ1bmN0aW9uKCkgewoJCQkJCXRyYW5zZmVyLnJlbW92ZSgpOwoJCQkJCWlmICggJC5pc0Z1bmN0aW9uKCBkb25lICkgKSB7CgkJCQkJCWRvbmUoKTsKCQkJCQl9CgkJCQl9ICk7Cgl9Cn0gKTsKCmZ1bmN0aW9uIHBhcnNlQ2xpcCggc3RyLCBlbGVtZW50ICkgewoJCXZhciBvdXRlcldpZHRoID0gZWxlbWVudC5vdXRlcldpZHRoKCksCgkJCW91dGVySGVpZ2h0ID0gZWxlbWVudC5vdXRlckhlaWdodCgpLAoJCQljbGlwUmVnZXggPSAvXnJlY3RcKCgtP1xkKlwuP1xkKnB4fC0/XGQrJXxhdXRvKSw/XHMqKC0/XGQqXC4/XGQqcHh8LT9cZCslfGF1dG8pLD9ccyooLT9cZCpcLj9cZCpweHwtP1xkKyV8YXV0byksP1xzKigtP1xkKlwuP1xkKnB4fC0/XGQrJXxhdXRvKVwpJC8sCgkJCXZhbHVlcyA9IGNsaXBSZWdleC5leGVjKCBzdHIgKSB8fCBbICIiLCAwLCBvdXRlcldpZHRoLCBvdXRlckhlaWdodCwgMCBdOwoKCQlyZXR1cm4gewoJCQl0b3A6IHBhcnNlRmxvYXQoIHZhbHVlc1sgMSBdICkgfHwgMCwKCQkJcmlnaHQ6IHZhbHVlc1sgMiBdID09PSAiYXV0byIgPyBvdXRlcldpZHRoIDogcGFyc2VGbG9hdCggdmFsdWVzWyAyIF0gKSwKCQkJYm90dG9tOiB2YWx1ZXNbIDMgXSA9PT0gImF1dG8iID8gb3V0ZXJIZWlnaHQgOiBwYXJzZUZsb2F0KCB2YWx1ZXNbIDMgXSApLAoJCQlsZWZ0OiBwYXJzZUZsb2F0KCB2YWx1ZXNbIDQgXSApIHx8IDAKCQl9Owp9CgokLmZ4LnN0ZXAuY2xpcCA9IGZ1bmN0aW9uKCBmeCApIHsKCWlmICggIWZ4LmNsaXBJbml0ICkgewoJCWZ4LnN0YXJ0ID0gJCggZnguZWxlbSApLmNzc0NsaXAoKTsKCQlpZiAoIHR5cGVvZiBmeC5lbmQgPT09ICJzdHJpbmciICkgewoJCQlmeC5lbmQgPSBwYXJzZUNsaXAoIGZ4LmVuZCwgZnguZWxlbSApOwoJCX0KCQlmeC5jbGlwSW5pdCA9IHRydWU7Cgl9CgoJJCggZnguZWxlbSApLmNzc0NsaXAoIHsKCQl0b3A6IGZ4LnBvcyAqICggZnguZW5kLnRvcCAtIGZ4LnN0YXJ0LnRvcCApICsgZnguc3RhcnQudG9wLAoJCXJpZ2h0OiBmeC5wb3MgKiAoIGZ4LmVuZC5yaWdodCAtIGZ4LnN0YXJ0LnJpZ2h0ICkgKyBmeC5zdGFydC5yaWdodCwKCQlib3R0b206IGZ4LnBvcyAqICggZnguZW5kLmJvdHRvbSAtIGZ4LnN0YXJ0LmJvdHRvbSApICsgZnguc3RhcnQuYm90dG9tLAoJCWxlZnQ6IGZ4LnBvcyAqICggZnguZW5kLmxlZnQgLSBmeC5zdGFydC5sZWZ0ICkgKyBmeC5zdGFydC5sZWZ0Cgl9ICk7Cn07Cgp9ICkoKTsKCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiBFQVNJTkcgKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCi8qKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiovCgooIGZ1bmN0aW9uKCkgewoKLy8gQmFzZWQgb24gZWFzaW5nIGVxdWF0aW9ucyBmcm9tIFJvYmVydCBQZW5uZXIgKGh0dHA6Ly93d3cucm9iZXJ0cGVubmVyLmNvbS9lYXNpbmcpCgp2YXIgYmFzZUVhc2luZ3MgPSB7fTsKCiQuZWFjaCggWyAiUXVhZCIsICJDdWJpYyIsICJRdWFydCIsICJRdWludCIsICJFeHBvIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHsKCWJhc2VFYXNpbmdzWyBuYW1lIF0gPSBmdW5jdGlvbiggcCApIHsKCQlyZXR1cm4gTWF0aC5wb3coIHAsIGkgKyAyICk7Cgl9Owp9ICk7CgokLmV4dGVuZCggYmFzZUVhc2luZ3MsIHsKCVNpbmU6IGZ1bmN0aW9uKCBwICkgewoJCXJldHVybiAxIC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJIC8gMiApOwoJfSwKCUNpcmM6IGZ1bmN0aW9uKCBwICkgewoJCXJldHVybiAxIC0gTWF0aC5zcXJ0KCAxIC0gcCAqIHAgKTsKCX0sCglFbGFzdGljOiBmdW5jdGlvbiggcCApIHsKCQlyZXR1cm4gcCA9PT0gMCB8fCBwID09PSAxID8gcCA6CgkJCS1NYXRoLnBvdyggMiwgOCAqICggcCAtIDEgKSApICogTWF0aC5zaW4oICggKCBwIC0gMSApICogODAgLSA3LjUgKSAqIE1hdGguUEkgLyAxNSApOwoJfSwKCUJhY2s6IGZ1bmN0aW9uKCBwICkgewoJCXJldHVybiBwICogcCAqICggMyAqIHAgLSAyICk7Cgl9LAoJQm91bmNlOiBmdW5jdGlvbiggcCApIHsKCQl2YXIgcG93MiwKCQkJYm91bmNlID0gNDsKCgkJd2hpbGUgKCBwIDwgKCAoIHBvdzIgPSBNYXRoLnBvdyggMiwgLS1ib3VuY2UgKSApIC0gMSApIC8gMTEgKSB7fQoJCXJldHVybiAxIC8gTWF0aC5wb3coIDQsIDMgLSBib3VuY2UgKSAtIDcuNTYyNSAqIE1hdGgucG93KCAoIHBvdzIgKiAzIC0gMiApIC8gMjIgLSBwLCAyICk7Cgl9Cn0gKTsKCiQuZWFjaCggYmFzZUVhc2luZ3MsIGZ1bmN0aW9uKCBuYW1lLCBlYXNlSW4gKSB7CgkkLmVhc2luZ1sgImVhc2VJbiIgKyBuYW1lIF0gPSBlYXNlSW47CgkkLmVhc2luZ1sgImVhc2VPdXQiICsgbmFtZSBdID0gZnVuY3Rpb24oIHAgKSB7CgkJcmV0dXJuIDEgLSBlYXNlSW4oIDEgLSBwICk7Cgl9OwoJJC5lYXNpbmdbICJlYXNlSW5PdXQiICsgbmFtZSBdID0gZnVuY3Rpb24oIHAgKSB7CgkJcmV0dXJuIHAgPCAwLjUgPwoJCQllYXNlSW4oIHAgKiAyICkgLyAyIDoKCQkJMSAtIGVhc2VJbiggcCAqIC0yICsgMiApIC8gMjsKCX07Cn0gKTsKCn0gKSgpOwoKdmFyIGVmZmVjdCA9ICQuZWZmZWN0czsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgQmxpbmQgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBCbGluZCBFZmZlY3QKLy8+Pmdyb3VwOiBFZmZlY3RzCi8vPj5kZXNjcmlwdGlvbjogQmxpbmRzIHRoZSBlbGVtZW50LgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vYmxpbmQtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdEJsaW5kID0gJC5lZmZlY3RzLmRlZmluZSggImJsaW5kIiwgImhpZGUiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCXZhciBtYXAgPSB7CgkJCXVwOiBbICJib3R0b20iLCAidG9wIiBdLAoJCQl2ZXJ0aWNhbDogWyAiYm90dG9tIiwgInRvcCIgXSwKCQkJZG93bjogWyAidG9wIiwgImJvdHRvbSIgXSwKCQkJbGVmdDogWyAicmlnaHQiLCAibGVmdCIgXSwKCQkJaG9yaXpvbnRhbDogWyAicmlnaHQiLCAibGVmdCIgXSwKCQkJcmlnaHQ6IFsgImxlZnQiLCAicmlnaHQiIF0KCQl9LAoJCWVsZW1lbnQgPSAkKCB0aGlzICksCgkJZGlyZWN0aW9uID0gb3B0aW9ucy5kaXJlY3Rpb24gfHwgInVwIiwKCQlzdGFydCA9IGVsZW1lbnQuY3NzQ2xpcCgpLAoJCWFuaW1hdGUgPSB7IGNsaXA6ICQuZXh0ZW5kKCB7fSwgc3RhcnQgKSB9LAoJCXBsYWNlaG9sZGVyID0gJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7CgoJYW5pbWF0ZS5jbGlwWyBtYXBbIGRpcmVjdGlvbiBdWyAwIF0gXSA9IGFuaW1hdGUuY2xpcFsgbWFwWyBkaXJlY3Rpb24gXVsgMSBdIF07CgoJaWYgKCBvcHRpb25zLm1vZGUgPT09ICJzaG93IiApIHsKCQllbGVtZW50LmNzc0NsaXAoIGFuaW1hdGUuY2xpcCApOwoJCWlmICggcGxhY2Vob2xkZXIgKSB7CgkJCXBsYWNlaG9sZGVyLmNzcyggJC5lZmZlY3RzLmNsaXBUb0JveCggYW5pbWF0ZSApICk7CgkJfQoKCQlhbmltYXRlLmNsaXAgPSBzdGFydDsKCX0KCglpZiAoIHBsYWNlaG9sZGVyICkgewoJCXBsYWNlaG9sZGVyLmFuaW1hdGUoICQuZWZmZWN0cy5jbGlwVG9Cb3goIGFuaW1hdGUgKSwgb3B0aW9ucy5kdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcgKTsKCX0KCgllbGVtZW50LmFuaW1hdGUoIGFuaW1hdGUsIHsKCQlxdWV1ZTogZmFsc2UsCgkJZHVyYXRpb246IG9wdGlvbnMuZHVyYXRpb24sCgkJZWFzaW5nOiBvcHRpb25zLmVhc2luZywKCQljb21wbGV0ZTogZG9uZQoJfSApOwp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBFZmZlY3RzIEJvdW5jZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IEJvdW5jZSBFZmZlY3QKLy8+Pmdyb3VwOiBFZmZlY3RzCi8vPj5kZXNjcmlwdGlvbjogQm91bmNlcyBhbiBlbGVtZW50IGhvcml6b250YWxseSBvciB2ZXJ0aWNhbGx5IG4gdGltZXMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9ib3VuY2UtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdEJvdW5jZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJib3VuY2UiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCXZhciB1cEFuaW0sIGRvd25BbmltLCByZWZWYWx1ZSwKCQllbGVtZW50ID0gJCggdGhpcyApLAoKCQkvLyBEZWZhdWx0czoKCQltb2RlID0gb3B0aW9ucy5tb2RlLAoJCWhpZGUgPSBtb2RlID09PSAiaGlkZSIsCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93IiwKCQlkaXJlY3Rpb24gPSBvcHRpb25zLmRpcmVjdGlvbiB8fCAidXAiLAoJCWRpc3RhbmNlID0gb3B0aW9ucy5kaXN0YW5jZSwKCQl0aW1lcyA9IG9wdGlvbnMudGltZXMgfHwgNSwKCgkJLy8gTnVtYmVyIG9mIGludGVybmFsIGFuaW1hdGlvbnMKCQlhbmltcyA9IHRpbWVzICogMiArICggc2hvdyB8fCBoaWRlID8gMSA6IDAgKSwKCQlzcGVlZCA9IG9wdGlvbnMuZHVyYXRpb24gLyBhbmltcywKCQllYXNpbmcgPSBvcHRpb25zLmVhc2luZywKCgkJLy8gVXRpbGl0eToKCQlyZWYgPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiApID8gInRvcCIgOiAibGVmdCIsCgkJbW90aW9uID0gKCBkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGlyZWN0aW9uID09PSAibGVmdCIgKSwKCQlpID0gMCwKCgkJcXVldWVsZW4gPSBlbGVtZW50LnF1ZXVlKCkubGVuZ3RoOwoKCSQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApOwoKCXJlZlZhbHVlID0gZWxlbWVudC5jc3MoIHJlZiApOwoKCS8vIERlZmF1bHQgZGlzdGFuY2UgZm9yIHRoZSBCSUdHRVNUIGJvdW5jZSBpcyB0aGUgb3V0ZXIgRGlzdGFuY2UgLyAzCglpZiAoICFkaXN0YW5jZSApIHsKCQlkaXN0YW5jZSA9IGVsZW1lbnRbIHJlZiA9PT0gInRvcCIgPyAib3V0ZXJIZWlnaHQiIDogIm91dGVyV2lkdGgiIF0oKSAvIDM7Cgl9CgoJaWYgKCBzaG93ICkgewoJCWRvd25BbmltID0geyBvcGFjaXR5OiAxIH07CgkJZG93bkFuaW1bIHJlZiBdID0gcmVmVmFsdWU7CgoJCS8vIElmIHdlIGFyZSBzaG93aW5nLCBmb3JjZSBvcGFjaXR5IDAgYW5kIHNldCB0aGUgaW5pdGlhbCBwb3NpdGlvbgoJCS8vIHRoZW4gZG8gdGhlICJmaXJzdCIgYW5pbWF0aW9uCgkJZWxlbWVudAoJCQkuY3NzKCAib3BhY2l0eSIsIDAgKQoJCQkuY3NzKCByZWYsIG1vdGlvbiA/IC1kaXN0YW5jZSAqIDIgOiBkaXN0YW5jZSAqIDIgKQoJCQkuYW5pbWF0ZSggZG93bkFuaW0sIHNwZWVkLCBlYXNpbmcgKTsKCX0KCgkvLyBTdGFydCBhdCB0aGUgc21hbGxlc3QgZGlzdGFuY2UgaWYgd2UgYXJlIGhpZGluZwoJaWYgKCBoaWRlICkgewoJCWRpc3RhbmNlID0gZGlzdGFuY2UgLyBNYXRoLnBvdyggMiwgdGltZXMgLSAxICk7Cgl9CgoJZG93bkFuaW0gPSB7fTsKCWRvd25BbmltWyByZWYgXSA9IHJlZlZhbHVlOwoKCS8vIEJvdW5jZXMgdXAvZG93bi9sZWZ0L3JpZ2h0IHRoZW4gYmFjayB0byAwIC0tIHRpbWVzICogMiBhbmltYXRpb25zIGhhcHBlbiBoZXJlCglmb3IgKCA7IGkgPCB0aW1lczsgaSsrICkgewoJCXVwQW5pbSA9IHt9OwoJCXVwQW5pbVsgcmVmIF0gPSAoIG1vdGlvbiA/ICItPSIgOiAiKz0iICkgKyBkaXN0YW5jZTsKCgkJZWxlbWVudAoJCQkuYW5pbWF0ZSggdXBBbmltLCBzcGVlZCwgZWFzaW5nICkKCQkJLmFuaW1hdGUoIGRvd25BbmltLCBzcGVlZCwgZWFzaW5nICk7CgoJCWRpc3RhbmNlID0gaGlkZSA/IGRpc3RhbmNlICogMiA6IGRpc3RhbmNlIC8gMjsKCX0KCgkvLyBMYXN0IEJvdW5jZSB3aGVuIEhpZGluZwoJaWYgKCBoaWRlICkgewoJCXVwQW5pbSA9IHsgb3BhY2l0eTogMCB9OwoJCXVwQW5pbVsgcmVmIF0gPSAoIG1vdGlvbiA/ICItPSIgOiAiKz0iICkgKyBkaXN0YW5jZTsKCgkJZWxlbWVudC5hbmltYXRlKCB1cEFuaW0sIHNwZWVkLCBlYXNpbmcgKTsKCX0KCgllbGVtZW50LnF1ZXVlKCBkb25lICk7CgoJJC5lZmZlY3RzLnVuc2hpZnQoIGVsZW1lbnQsIHF1ZXVlbGVuLCBhbmltcyArIDEgKTsKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBDbGlwIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogQ2xpcCBFZmZlY3QKLy8+Pmdyb3VwOiBFZmZlY3RzCi8vPj5kZXNjcmlwdGlvbjogQ2xpcHMgdGhlIGVsZW1lbnQgb24gYW5kIG9mZiBsaWtlIGFuIG9sZCBUVi4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2NsaXAtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdENsaXAgPSAkLmVmZmVjdHMuZGVmaW5lKCAiY2xpcCIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7Cgl2YXIgc3RhcnQsCgkJYW5pbWF0ZSA9IHt9LAoJCWVsZW1lbnQgPSAkKCB0aGlzICksCgkJZGlyZWN0aW9uID0gb3B0aW9ucy5kaXJlY3Rpb24gfHwgInZlcnRpY2FsIiwKCQlib3RoID0gZGlyZWN0aW9uID09PSAiYm90aCIsCgkJaG9yaXpvbnRhbCA9IGJvdGggfHwgZGlyZWN0aW9uID09PSAiaG9yaXpvbnRhbCIsCgkJdmVydGljYWwgPSBib3RoIHx8IGRpcmVjdGlvbiA9PT0gInZlcnRpY2FsIjsKCglzdGFydCA9IGVsZW1lbnQuY3NzQ2xpcCgpOwoJYW5pbWF0ZS5jbGlwID0gewoJCXRvcDogdmVydGljYWwgPyAoIHN0YXJ0LmJvdHRvbSAtIHN0YXJ0LnRvcCApIC8gMiA6IHN0YXJ0LnRvcCwKCQlyaWdodDogaG9yaXpvbnRhbCA/ICggc3RhcnQucmlnaHQgLSBzdGFydC5sZWZ0ICkgLyAyIDogc3RhcnQucmlnaHQsCgkJYm90dG9tOiB2ZXJ0aWNhbCA/ICggc3RhcnQuYm90dG9tIC0gc3RhcnQudG9wICkgLyAyIDogc3RhcnQuYm90dG9tLAoJCWxlZnQ6IGhvcml6b250YWwgPyAoIHN0YXJ0LnJpZ2h0IC0gc3RhcnQubGVmdCApIC8gMiA6IHN0YXJ0LmxlZnQKCX07CgoJJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7CgoJaWYgKCBvcHRpb25zLm1vZGUgPT09ICJzaG93IiApIHsKCQllbGVtZW50LmNzc0NsaXAoIGFuaW1hdGUuY2xpcCApOwoJCWFuaW1hdGUuY2xpcCA9IHN0YXJ0OwoJfQoKCWVsZW1lbnQuYW5pbWF0ZSggYW5pbWF0ZSwgewoJCXF1ZXVlOiBmYWxzZSwKCQlkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbiwKCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLAoJCWNvbXBsZXRlOiBkb25lCgl9ICk7Cgp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBFZmZlY3RzIERyb3AgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBEcm9wIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBNb3ZlcyBhbiBlbGVtZW50IGluIG9uZSBkaXJlY3Rpb24gYW5kIGhpZGVzIGl0IGF0IHRoZSBzYW1lIHRpbWUuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9kcm9wLWVmZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoKdmFyIGVmZmVjdHNFZmZlY3REcm9wID0gJC5lZmZlY3RzLmRlZmluZSggImRyb3AiLCAiaGlkZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgewoKCXZhciBkaXN0YW5jZSwKCQllbGVtZW50ID0gJCggdGhpcyApLAoJCW1vZGUgPSBvcHRpb25zLm1vZGUsCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93IiwKCQlkaXJlY3Rpb24gPSBvcHRpb25zLmRpcmVjdGlvbiB8fCAibGVmdCIsCgkJcmVmID0gKCBkaXJlY3Rpb24gPT09ICJ1cCIgfHwgZGlyZWN0aW9uID09PSAiZG93biIgKSA/ICJ0b3AiIDogImxlZnQiLAoJCW1vdGlvbiA9ICggZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImxlZnQiICkgPyAiLT0iIDogIis9IiwKCQlvcHBvc2l0ZU1vdGlvbiA9ICggbW90aW9uID09PSAiKz0iICkgPyAiLT0iIDogIis9IiwKCQlhbmltYXRpb24gPSB7CgkJCW9wYWNpdHk6IDAKCQl9OwoKCSQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApOwoKCWRpc3RhbmNlID0gb3B0aW9ucy5kaXN0YW5jZSB8fAoJCWVsZW1lbnRbIHJlZiA9PT0gInRvcCIgPyAib3V0ZXJIZWlnaHQiIDogIm91dGVyV2lkdGgiIF0oIHRydWUgKSAvIDI7CgoJYW5pbWF0aW9uWyByZWYgXSA9IG1vdGlvbiArIGRpc3RhbmNlOwoKCWlmICggc2hvdyApIHsKCQllbGVtZW50LmNzcyggYW5pbWF0aW9uICk7CgoJCWFuaW1hdGlvblsgcmVmIF0gPSBvcHBvc2l0ZU1vdGlvbiArIGRpc3RhbmNlOwoJCWFuaW1hdGlvbi5vcGFjaXR5ID0gMTsKCX0KCgkvLyBBbmltYXRlCgllbGVtZW50LmFuaW1hdGUoIGFuaW1hdGlvbiwgewoJCXF1ZXVlOiBmYWxzZSwKCQlkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbiwKCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLAoJCWNvbXBsZXRlOiBkb25lCgl9ICk7Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgRXhwbG9kZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IEV4cGxvZGUgRWZmZWN0Ci8vPj5ncm91cDogRWZmZWN0cwovLyBqc2NzOmRpc2FibGUgbWF4aW11bUxpbmVMZW5ndGgKLy8+PmRlc2NyaXB0aW9uOiBFeHBsb2RlcyBhbiBlbGVtZW50IGluIGFsbCBkaXJlY3Rpb25zIGludG8gbiBwaWVjZXMuIEltcGxvZGVzIGFuIGVsZW1lbnQgdG8gaXRzIG9yaWdpbmFsIHdob2xlbmVzcy4KLy8ganNjczplbmFibGUgbWF4aW11bUxpbmVMZW5ndGgKLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2V4cGxvZGUtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdEV4cGxvZGUgPSAkLmVmZmVjdHMuZGVmaW5lKCAiZXhwbG9kZSIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7CgoJdmFyIGksIGosIGxlZnQsIHRvcCwgbXgsIG15LAoJCXJvd3MgPSBvcHRpb25zLnBpZWNlcyA/IE1hdGgucm91bmQoIE1hdGguc3FydCggb3B0aW9ucy5waWVjZXMgKSApIDogMywKCQljZWxscyA9IHJvd3MsCgkJZWxlbWVudCA9ICQoIHRoaXMgKSwKCQltb2RlID0gb3B0aW9ucy5tb2RlLAoJCXNob3cgPSBtb2RlID09PSAic2hvdyIsCgoJCS8vIFNob3cgYW5kIHRoZW4gdmlzaWJpbGl0eTpoaWRkZW4gdGhlIGVsZW1lbnQgYmVmb3JlIGNhbGN1bGF0aW5nIG9mZnNldAoJCW9mZnNldCA9IGVsZW1lbnQuc2hvdygpLmNzcyggInZpc2liaWxpdHkiLCAiaGlkZGVuIiApLm9mZnNldCgpLAoKCQkvLyBXaWR0aCBhbmQgaGVpZ2h0IG9mIGEgcGllY2UKCQl3aWR0aCA9IE1hdGguY2VpbCggZWxlbWVudC5vdXRlcldpZHRoKCkgLyBjZWxscyApLAoJCWhlaWdodCA9IE1hdGguY2VpbCggZWxlbWVudC5vdXRlckhlaWdodCgpIC8gcm93cyApLAoJCXBpZWNlcyA9IFtdOwoKCS8vIENoaWxkcmVuIGFuaW1hdGUgY29tcGxldGU6CglmdW5jdGlvbiBjaGlsZENvbXBsZXRlKCkgewoJCXBpZWNlcy5wdXNoKCB0aGlzICk7CgkJaWYgKCBwaWVjZXMubGVuZ3RoID09PSByb3dzICogY2VsbHMgKSB7CgkJCWFuaW1Db21wbGV0ZSgpOwoJCX0KCX0KCgkvLyBDbG9uZSB0aGUgZWxlbWVudCBmb3IgZWFjaCByb3cgYW5kIGNlbGwuCglmb3IgKCBpID0gMDsgaSA8IHJvd3M7IGkrKyApIHsgLy8gPT09PgoJCXRvcCA9IG9mZnNldC50b3AgKyBpICogaGVpZ2h0OwoJCW15ID0gaSAtICggcm93cyAtIDEgKSAvIDI7CgoJCWZvciAoIGogPSAwOyBqIDwgY2VsbHM7IGorKyApIHsgLy8gfHx8CgkJCWxlZnQgPSBvZmZzZXQubGVmdCArIGogKiB3aWR0aDsKCQkJbXggPSBqIC0gKCBjZWxscyAtIDEgKSAvIDI7CgoJCQkvLyBDcmVhdGUgYSBjbG9uZSBvZiB0aGUgbm93IGhpZGRlbiBtYWluIGVsZW1lbnQgdGhhdCB3aWxsIGJlIGFic29sdXRlIHBvc2l0aW9uZWQKCQkJLy8gd2l0aGluIGEgd3JhcHBlciBkaXYgb2ZmIHRoZSAtbGVmdCBhbmQgLXRvcCBlcXVhbCB0byBzaXplIG9mIG91ciBwaWVjZXMKCQkJZWxlbWVudAoJCQkJLmNsb25lKCkKCQkJCS5hcHBlbmRUbyggImJvZHkiICkKCQkJCS53cmFwKCAiPGRpdj48L2Rpdj4iICkKCQkJCS5jc3MoIHsKCQkJCQlwb3NpdGlvbjogImFic29sdXRlIiwKCQkJCQl2aXNpYmlsaXR5OiAidmlzaWJsZSIsCgkJCQkJbGVmdDogLWogKiB3aWR0aCwKCQkJCQl0b3A6IC1pICogaGVpZ2h0CgkJCQl9ICkKCgkJCQkvLyBTZWxlY3QgdGhlIHdyYXBwZXIgLSBtYWtlIGl0IG92ZXJmbG93OiBoaWRkZW4gYW5kIGFic29sdXRlIHBvc2l0aW9uZWQgYmFzZWQgb24KCQkJCS8vIHdoZXJlIHRoZSBvcmlnaW5hbCB3YXMgbG9jYXRlZCArbGVmdCBhbmQgK3RvcCBlcXVhbCB0byB0aGUgc2l6ZSBvZiBwaWVjZXMKCQkJCS5wYXJlbnQoKQoJCQkJCS5hZGRDbGFzcyggInVpLWVmZmVjdHMtZXhwbG9kZSIgKQoJCQkJCS5jc3MoIHsKCQkJCQkJcG9zaXRpb246ICJhYnNvbHV0ZSIsCgkJCQkJCW92ZXJmbG93OiAiaGlkZGVuIiwKCQkJCQkJd2lkdGg6IHdpZHRoLAoJCQkJCQloZWlnaHQ6IGhlaWdodCwKCQkJCQkJbGVmdDogbGVmdCArICggc2hvdyA/IG14ICogd2lkdGggOiAwICksCgkJCQkJCXRvcDogdG9wICsgKCBzaG93ID8gbXkgKiBoZWlnaHQgOiAwICksCgkJCQkJCW9wYWNpdHk6IHNob3cgPyAwIDogMQoJCQkJCX0gKQoJCQkJCS5hbmltYXRlKCB7CgkJCQkJCWxlZnQ6IGxlZnQgKyAoIHNob3cgPyAwIDogbXggKiB3aWR0aCApLAoJCQkJCQl0b3A6IHRvcCArICggc2hvdyA/IDAgOiBteSAqIGhlaWdodCApLAoJCQkJCQlvcGFjaXR5OiBzaG93ID8gMSA6IDAKCQkJCQl9LCBvcHRpb25zLmR1cmF0aW9uIHx8IDUwMCwgb3B0aW9ucy5lYXNpbmcsIGNoaWxkQ29tcGxldGUgKTsKCQl9Cgl9CgoJZnVuY3Rpb24gYW5pbUNvbXBsZXRlKCkgewoJCWVsZW1lbnQuY3NzKCB7CgkJCXZpc2liaWxpdHk6ICJ2aXNpYmxlIgoJCX0gKTsKCQkkKCBwaWVjZXMgKS5yZW1vdmUoKTsKCQlkb25lKCk7Cgl9Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgRmFkZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IEZhZGUgRWZmZWN0Ci8vPj5ncm91cDogRWZmZWN0cwovLz4+ZGVzY3JpcHRpb246IEZhZGVzIHRoZSBlbGVtZW50LgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZmFkZS1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3RzRWZmZWN0RmFkZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJmYWRlIiwgInRvZ2dsZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgewoJdmFyIHNob3cgPSBvcHRpb25zLm1vZGUgPT09ICJzaG93IjsKCgkkKCB0aGlzICkKCQkuY3NzKCAib3BhY2l0eSIsIHNob3cgPyAwIDogMSApCgkJLmFuaW1hdGUoIHsKCQkJb3BhY2l0eTogc2hvdyA/IDEgOiAwCgkJfSwgewoJCQlxdWV1ZTogZmFsc2UsCgkJCWR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLAoJCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLAoJCQljb21wbGV0ZTogZG9uZQoJCX0gKTsKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBGb2xkIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogRm9sZCBFZmZlY3QKLy8+Pmdyb3VwOiBFZmZlY3RzCi8vPj5kZXNjcmlwdGlvbjogRm9sZHMgYW4gZWxlbWVudCBmaXJzdCBob3Jpem9udGFsbHkgYW5kIHRoZW4gdmVydGljYWxseS4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2ZvbGQtZWZmZWN0LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZWZmZWN0LwoKCgp2YXIgZWZmZWN0c0VmZmVjdEZvbGQgPSAkLmVmZmVjdHMuZGVmaW5lKCAiZm9sZCIsICJoaWRlIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7CgoJLy8gQ3JlYXRlIGVsZW1lbnQKCXZhciBlbGVtZW50ID0gJCggdGhpcyApLAoJCW1vZGUgPSBvcHRpb25zLm1vZGUsCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93IiwKCQloaWRlID0gbW9kZSA9PT0gImhpZGUiLAoJCXNpemUgPSBvcHRpb25zLnNpemUgfHwgMTUsCgkJcGVyY2VudCA9IC8oWzAtOV0rKSUvLmV4ZWMoIHNpemUgKSwKCQlob3JpekZpcnN0ID0gISFvcHRpb25zLmhvcml6Rmlyc3QsCgkJcmVmID0gaG9yaXpGaXJzdCA/IFsgInJpZ2h0IiwgImJvdHRvbSIgXSA6IFsgImJvdHRvbSIsICJyaWdodCIgXSwKCQlkdXJhdGlvbiA9IG9wdGlvbnMuZHVyYXRpb24gLyAyLAoKCQlwbGFjZWhvbGRlciA9ICQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApLAoKCQlzdGFydCA9IGVsZW1lbnQuY3NzQ2xpcCgpLAoJCWFuaW1hdGlvbjEgPSB7IGNsaXA6ICQuZXh0ZW5kKCB7fSwgc3RhcnQgKSB9LAoJCWFuaW1hdGlvbjIgPSB7IGNsaXA6ICQuZXh0ZW5kKCB7fSwgc3RhcnQgKSB9LAoKCQlkaXN0YW5jZSA9IFsgc3RhcnRbIHJlZlsgMCBdIF0sIHN0YXJ0WyByZWZbIDEgXSBdIF0sCgoJCXF1ZXVlbGVuID0gZWxlbWVudC5xdWV1ZSgpLmxlbmd0aDsKCglpZiAoIHBlcmNlbnQgKSB7CgkJc2l6ZSA9IHBhcnNlSW50KCBwZXJjZW50WyAxIF0sIDEwICkgLyAxMDAgKiBkaXN0YW5jZVsgaGlkZSA/IDAgOiAxIF07Cgl9CglhbmltYXRpb24xLmNsaXBbIHJlZlsgMCBdIF0gPSBzaXplOwoJYW5pbWF0aW9uMi5jbGlwWyByZWZbIDAgXSBdID0gc2l6ZTsKCWFuaW1hdGlvbjIuY2xpcFsgcmVmWyAxIF0gXSA9IDA7CgoJaWYgKCBzaG93ICkgewoJCWVsZW1lbnQuY3NzQ2xpcCggYW5pbWF0aW9uMi5jbGlwICk7CgkJaWYgKCBwbGFjZWhvbGRlciApIHsKCQkJcGxhY2Vob2xkZXIuY3NzKCAkLmVmZmVjdHMuY2xpcFRvQm94KCBhbmltYXRpb24yICkgKTsKCQl9CgoJCWFuaW1hdGlvbjIuY2xpcCA9IHN0YXJ0OwoJfQoKCS8vIEFuaW1hdGUKCWVsZW1lbnQKCQkucXVldWUoIGZ1bmN0aW9uKCBuZXh0ICkgewoJCQlpZiAoIHBsYWNlaG9sZGVyICkgewoJCQkJcGxhY2Vob2xkZXIKCQkJCQkuYW5pbWF0ZSggJC5lZmZlY3RzLmNsaXBUb0JveCggYW5pbWF0aW9uMSApLCBkdXJhdGlvbiwgb3B0aW9ucy5lYXNpbmcgKQoJCQkJCS5hbmltYXRlKCAkLmVmZmVjdHMuY2xpcFRvQm94KCBhbmltYXRpb24yICksIGR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApOwoJCQl9CgoJCQluZXh0KCk7CgkJfSApCgkJLmFuaW1hdGUoIGFuaW1hdGlvbjEsIGR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApCgkJLmFuaW1hdGUoIGFuaW1hdGlvbjIsIGR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApCgkJLnF1ZXVlKCBkb25lICk7CgoJJC5lZmZlY3RzLnVuc2hpZnQoIGVsZW1lbnQsIHF1ZXVlbGVuLCA0ICk7Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgSGlnaGxpZ2h0IDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogSGlnaGxpZ2h0IEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBIaWdobGlnaHRzIHRoZSBiYWNrZ3JvdW5kIG9mIGFuIGVsZW1lbnQgaW4gYSBkZWZpbmVkIGNvbG9yIGZvciBhIGN1c3RvbSBkdXJhdGlvbi4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2hpZ2hsaWdodC1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3RzRWZmZWN0SGlnaGxpZ2h0ID0gJC5lZmZlY3RzLmRlZmluZSggImhpZ2hsaWdodCIsICJzaG93IiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7Cgl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKSwKCQlhbmltYXRpb24gPSB7CgkJCWJhY2tncm91bmRDb2xvcjogZWxlbWVudC5jc3MoICJiYWNrZ3JvdW5kQ29sb3IiICkKCQl9OwoKCWlmICggb3B0aW9ucy5tb2RlID09PSAiaGlkZSIgKSB7CgkJYW5pbWF0aW9uLm9wYWNpdHkgPSAwOwoJfQoKCSQuZWZmZWN0cy5zYXZlU3R5bGUoIGVsZW1lbnQgKTsKCgllbGVtZW50CgkJLmNzcyggewoJCQliYWNrZ3JvdW5kSW1hZ2U6ICJub25lIiwKCQkJYmFja2dyb3VuZENvbG9yOiBvcHRpb25zLmNvbG9yIHx8ICIjZmZmZjk5IgoJCX0gKQoJCS5hbmltYXRlKCBhbmltYXRpb24sIHsKCQkJcXVldWU6IGZhbHNlLAoJCQlkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbiwKCQkJZWFzaW5nOiBvcHRpb25zLmVhc2luZywKCQkJY29tcGxldGU6IGRvbmUKCQl9ICk7Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgU2l6ZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFNpemUgRWZmZWN0Ci8vPj5ncm91cDogRWZmZWN0cwovLz4+ZGVzY3JpcHRpb246IFJlc2l6ZSBhbiBlbGVtZW50IHRvIGEgc3BlY2lmaWVkIHdpZHRoIGFuZCBoZWlnaHQuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zaXplLWVmZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoKdmFyIGVmZmVjdHNFZmZlY3RTaXplID0gJC5lZmZlY3RzLmRlZmluZSggInNpemUiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCgkvLyBDcmVhdGUgZWxlbWVudAoJdmFyIGJhc2VsaW5lLCBmYWN0b3IsIHRlbXAsCgkJZWxlbWVudCA9ICQoIHRoaXMgKSwKCgkJLy8gQ29weSBmb3IgY2hpbGRyZW4KCQljUHJvcHMgPSBbICJmb250U2l6ZSIgXSwKCQl2UHJvcHMgPSBbICJib3JkZXJUb3BXaWR0aCIsICJib3JkZXJCb3R0b21XaWR0aCIsICJwYWRkaW5nVG9wIiwgInBhZGRpbmdCb3R0b20iIF0sCgkJaFByb3BzID0gWyAiYm9yZGVyTGVmdFdpZHRoIiwgImJvcmRlclJpZ2h0V2lkdGgiLCAicGFkZGluZ0xlZnQiLCAicGFkZGluZ1JpZ2h0IiBdLAoKCQkvLyBTZXQgb3B0aW9ucwoJCW1vZGUgPSBvcHRpb25zLm1vZGUsCgkJcmVzdG9yZSA9IG1vZGUgIT09ICJlZmZlY3QiLAoJCXNjYWxlID0gb3B0aW9ucy5zY2FsZSB8fCAiYm90aCIsCgkJb3JpZ2luID0gb3B0aW9ucy5vcmlnaW4gfHwgWyAibWlkZGxlIiwgImNlbnRlciIgXSwKCQlwb3NpdGlvbiA9IGVsZW1lbnQuY3NzKCAicG9zaXRpb24iICksCgkJcG9zID0gZWxlbWVudC5wb3NpdGlvbigpLAoJCW9yaWdpbmFsID0gJC5lZmZlY3RzLnNjYWxlZERpbWVuc2lvbnMoIGVsZW1lbnQgKSwKCQlmcm9tID0gb3B0aW9ucy5mcm9tIHx8IG9yaWdpbmFsLAoJCXRvID0gb3B0aW9ucy50byB8fCAkLmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyggZWxlbWVudCwgMCApOwoKCSQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApOwoKCWlmICggbW9kZSA9PT0gInNob3ciICkgewoJCXRlbXAgPSBmcm9tOwoJCWZyb20gPSB0bzsKCQl0byA9IHRlbXA7Cgl9CgoJLy8gU2V0IHNjYWxpbmcgZmFjdG9yCglmYWN0b3IgPSB7CgkJZnJvbTogewoJCQl5OiBmcm9tLmhlaWdodCAvIG9yaWdpbmFsLmhlaWdodCwKCQkJeDogZnJvbS53aWR0aCAvIG9yaWdpbmFsLndpZHRoCgkJfSwKCQl0bzogewoJCQl5OiB0by5oZWlnaHQgLyBvcmlnaW5hbC5oZWlnaHQsCgkJCXg6IHRvLndpZHRoIC8gb3JpZ2luYWwud2lkdGgKCQl9Cgl9OwoKCS8vIFNjYWxlIHRoZSBjc3MgYm94CglpZiAoIHNjYWxlID09PSAiYm94IiB8fCBzY2FsZSA9PT0gImJvdGgiICkgewoKCQkvLyBWZXJ0aWNhbCBwcm9wcyBzY2FsaW5nCgkJaWYgKCBmYWN0b3IuZnJvbS55ICE9PSBmYWN0b3IudG8ueSApIHsKCQkJZnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBlbGVtZW50LCB2UHJvcHMsIGZhY3Rvci5mcm9tLnksIGZyb20gKTsKCQkJdG8gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggZWxlbWVudCwgdlByb3BzLCBmYWN0b3IudG8ueSwgdG8gKTsKCQl9CgoJCS8vIEhvcml6b250YWwgcHJvcHMgc2NhbGluZwoJCWlmICggZmFjdG9yLmZyb20ueCAhPT0gZmFjdG9yLnRvLnggKSB7CgkJCWZyb20gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggZWxlbWVudCwgaFByb3BzLCBmYWN0b3IuZnJvbS54LCBmcm9tICk7CgkJCXRvID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGVsZW1lbnQsIGhQcm9wcywgZmFjdG9yLnRvLngsIHRvICk7CgkJfQoJfQoKCS8vIFNjYWxlIHRoZSBjb250ZW50CglpZiAoIHNjYWxlID09PSAiY29udGVudCIgfHwgc2NhbGUgPT09ICJib3RoIiApIHsKCgkJLy8gVmVydGljYWwgcHJvcHMgc2NhbGluZwoJCWlmICggZmFjdG9yLmZyb20ueSAhPT0gZmFjdG9yLnRvLnkgKSB7CgkJCWZyb20gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggZWxlbWVudCwgY1Byb3BzLCBmYWN0b3IuZnJvbS55LCBmcm9tICk7CgkJCXRvID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGVsZW1lbnQsIGNQcm9wcywgZmFjdG9yLnRvLnksIHRvICk7CgkJfQoJfQoKCS8vIEFkanVzdCB0aGUgcG9zaXRpb24gcHJvcGVydGllcyBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgb3JpZ2luIHBvaW50cwoJaWYgKCBvcmlnaW4gKSB7CgkJYmFzZWxpbmUgPSAkLmVmZmVjdHMuZ2V0QmFzZWxpbmUoIG9yaWdpbiwgb3JpZ2luYWwgKTsKCQlmcm9tLnRvcCA9ICggb3JpZ2luYWwub3V0ZXJIZWlnaHQgLSBmcm9tLm91dGVySGVpZ2h0ICkgKiBiYXNlbGluZS55ICsgcG9zLnRvcDsKCQlmcm9tLmxlZnQgPSAoIG9yaWdpbmFsLm91dGVyV2lkdGggLSBmcm9tLm91dGVyV2lkdGggKSAqIGJhc2VsaW5lLnggKyBwb3MubGVmdDsKCQl0by50b3AgPSAoIG9yaWdpbmFsLm91dGVySGVpZ2h0IC0gdG8ub3V0ZXJIZWlnaHQgKSAqIGJhc2VsaW5lLnkgKyBwb3MudG9wOwoJCXRvLmxlZnQgPSAoIG9yaWdpbmFsLm91dGVyV2lkdGggLSB0by5vdXRlcldpZHRoICkgKiBiYXNlbGluZS54ICsgcG9zLmxlZnQ7Cgl9CgllbGVtZW50LmNzcyggZnJvbSApOwoKCS8vIEFuaW1hdGUgdGhlIGNoaWxkcmVuIGlmIGRlc2lyZWQKCWlmICggc2NhbGUgPT09ICJjb250ZW50IiB8fCBzY2FsZSA9PT0gImJvdGgiICkgewoKCQl2UHJvcHMgPSB2UHJvcHMuY29uY2F0KCBbICJtYXJnaW5Ub3AiLCAibWFyZ2luQm90dG9tIiBdICkuY29uY2F0KCBjUHJvcHMgKTsKCQloUHJvcHMgPSBoUHJvcHMuY29uY2F0KCBbICJtYXJnaW5MZWZ0IiwgIm1hcmdpblJpZ2h0IiBdICk7CgoJCS8vIE9ubHkgYW5pbWF0ZSBjaGlsZHJlbiB3aXRoIHdpZHRoIGF0dHJpYnV0ZXMgc3BlY2lmaWVkCgkJLy8gVE9ETzogaXMgdGhpcyByaWdodD8gc2hvdWxkIHdlIGluY2x1ZGUgYW55dGhpbmcgd2l0aCBjc3Mgd2lkdGggc3BlY2lmaWVkIGFzIHdlbGwKCQllbGVtZW50LmZpbmQoICIqW3dpZHRoXSIgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIGNoaWxkID0gJCggdGhpcyApLAoJCQkJY2hpbGRPcmlnaW5hbCA9ICQuZWZmZWN0cy5zY2FsZWREaW1lbnNpb25zKCBjaGlsZCApLAoJCQkJY2hpbGRGcm9tID0gewoJCQkJCWhlaWdodDogY2hpbGRPcmlnaW5hbC5oZWlnaHQgKiBmYWN0b3IuZnJvbS55LAoJCQkJCXdpZHRoOiBjaGlsZE9yaWdpbmFsLndpZHRoICogZmFjdG9yLmZyb20ueCwKCQkJCQlvdXRlckhlaWdodDogY2hpbGRPcmlnaW5hbC5vdXRlckhlaWdodCAqIGZhY3Rvci5mcm9tLnksCgkJCQkJb3V0ZXJXaWR0aDogY2hpbGRPcmlnaW5hbC5vdXRlcldpZHRoICogZmFjdG9yLmZyb20ueAoJCQkJfSwKCQkJCWNoaWxkVG8gPSB7CgkJCQkJaGVpZ2h0OiBjaGlsZE9yaWdpbmFsLmhlaWdodCAqIGZhY3Rvci50by55LAoJCQkJCXdpZHRoOiBjaGlsZE9yaWdpbmFsLndpZHRoICogZmFjdG9yLnRvLngsCgkJCQkJb3V0ZXJIZWlnaHQ6IGNoaWxkT3JpZ2luYWwuaGVpZ2h0ICogZmFjdG9yLnRvLnksCgkJCQkJb3V0ZXJXaWR0aDogY2hpbGRPcmlnaW5hbC53aWR0aCAqIGZhY3Rvci50by54CgkJCQl9OwoKCQkJLy8gVmVydGljYWwgcHJvcHMgc2NhbGluZwoJCQlpZiAoIGZhY3Rvci5mcm9tLnkgIT09IGZhY3Rvci50by55ICkgewoJCQkJY2hpbGRGcm9tID0gJC5lZmZlY3RzLnNldFRyYW5zaXRpb24oIGNoaWxkLCB2UHJvcHMsIGZhY3Rvci5mcm9tLnksIGNoaWxkRnJvbSApOwoJCQkJY2hpbGRUbyA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBjaGlsZCwgdlByb3BzLCBmYWN0b3IudG8ueSwgY2hpbGRUbyApOwoJCQl9CgoJCQkvLyBIb3Jpem9udGFsIHByb3BzIHNjYWxpbmcKCQkJaWYgKCBmYWN0b3IuZnJvbS54ICE9PSBmYWN0b3IudG8ueCApIHsKCQkJCWNoaWxkRnJvbSA9ICQuZWZmZWN0cy5zZXRUcmFuc2l0aW9uKCBjaGlsZCwgaFByb3BzLCBmYWN0b3IuZnJvbS54LCBjaGlsZEZyb20gKTsKCQkJCWNoaWxkVG8gPSAkLmVmZmVjdHMuc2V0VHJhbnNpdGlvbiggY2hpbGQsIGhQcm9wcywgZmFjdG9yLnRvLngsIGNoaWxkVG8gKTsKCQkJfQoKCQkJaWYgKCByZXN0b3JlICkgewoJCQkJJC5lZmZlY3RzLnNhdmVTdHlsZSggY2hpbGQgKTsKCQkJfQoKCQkJLy8gQW5pbWF0ZSBjaGlsZHJlbgoJCQljaGlsZC5jc3MoIGNoaWxkRnJvbSApOwoJCQljaGlsZC5hbmltYXRlKCBjaGlsZFRvLCBvcHRpb25zLmR1cmF0aW9uLCBvcHRpb25zLmVhc2luZywgZnVuY3Rpb24oKSB7CgoJCQkJLy8gUmVzdG9yZSBjaGlsZHJlbgoJCQkJaWYgKCByZXN0b3JlICkgewoJCQkJCSQuZWZmZWN0cy5yZXN0b3JlU3R5bGUoIGNoaWxkICk7CgkJCQl9CgkJCX0gKTsKCQl9ICk7Cgl9CgoJLy8gQW5pbWF0ZQoJZWxlbWVudC5hbmltYXRlKCB0bywgewoJCXF1ZXVlOiBmYWxzZSwKCQlkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbiwKCQllYXNpbmc6IG9wdGlvbnMuZWFzaW5nLAoJCWNvbXBsZXRlOiBmdW5jdGlvbigpIHsKCgkJCXZhciBvZmZzZXQgPSBlbGVtZW50Lm9mZnNldCgpOwoKCQkJaWYgKCB0by5vcGFjaXR5ID09PSAwICkgewoJCQkJZWxlbWVudC5jc3MoICJvcGFjaXR5IiwgZnJvbS5vcGFjaXR5ICk7CgkJCX0KCgkJCWlmICggIXJlc3RvcmUgKSB7CgkJCQllbGVtZW50CgkJCQkJLmNzcyggInBvc2l0aW9uIiwgcG9zaXRpb24gPT09ICJzdGF0aWMiID8gInJlbGF0aXZlIiA6IHBvc2l0aW9uICkKCQkJCQkub2Zmc2V0KCBvZmZzZXQgKTsKCgkJCQkvLyBOZWVkIHRvIHNhdmUgc3R5bGUgaGVyZSBzbyB0aGF0IGF1dG9tYXRpYyBzdHlsZSByZXN0b3JhdGlvbgoJCQkJLy8gZG9lc24ndCByZXN0b3JlIHRvIHRoZSBvcmlnaW5hbCBzdHlsZXMgZnJvbSBiZWZvcmUgdGhlIGFuaW1hdGlvbi4KCQkJCSQuZWZmZWN0cy5zYXZlU3R5bGUoIGVsZW1lbnQgKTsKCQkJfQoKCQkJZG9uZSgpOwoJCX0KCX0gKTsKCn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgU2NhbGUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBTY2FsZSBFZmZlY3QKLy8+Pmdyb3VwOiBFZmZlY3RzCi8vPj5kZXNjcmlwdGlvbjogR3Jvd3Mgb3Igc2hyaW5rcyBhbiBlbGVtZW50IGFuZCBpdHMgY29udGVudC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NjYWxlLWVmZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoKdmFyIGVmZmVjdHNFZmZlY3RTY2FsZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJzY2FsZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgewoKCS8vIENyZWF0ZSBlbGVtZW50Cgl2YXIgZWwgPSAkKCB0aGlzICksCgkJbW9kZSA9IG9wdGlvbnMubW9kZSwKCQlwZXJjZW50ID0gcGFyc2VJbnQoIG9wdGlvbnMucGVyY2VudCwgMTAgKSB8fAoJCQkoIHBhcnNlSW50KCBvcHRpb25zLnBlcmNlbnQsIDEwICkgPT09IDAgPyAwIDogKCBtb2RlICE9PSAiZWZmZWN0IiA/IDAgOiAxMDAgKSApLAoKCQluZXdPcHRpb25zID0gJC5leHRlbmQoIHRydWUsIHsKCQkJZnJvbTogJC5lZmZlY3RzLnNjYWxlZERpbWVuc2lvbnMoIGVsICksCgkJCXRvOiAkLmVmZmVjdHMuc2NhbGVkRGltZW5zaW9ucyggZWwsIHBlcmNlbnQsIG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJib3RoIiApLAoJCQlvcmlnaW46IG9wdGlvbnMub3JpZ2luIHx8IFsgIm1pZGRsZSIsICJjZW50ZXIiIF0KCQl9LCBvcHRpb25zICk7CgoJLy8gRmFkZSBvcHRpb24gdG8gc3VwcG9ydCBwdWZmCglpZiAoIG9wdGlvbnMuZmFkZSApIHsKCQluZXdPcHRpb25zLmZyb20ub3BhY2l0eSA9IDE7CgkJbmV3T3B0aW9ucy50by5vcGFjaXR5ID0gMDsKCX0KCgkkLmVmZmVjdHMuZWZmZWN0LnNpemUuY2FsbCggdGhpcywgbmV3T3B0aW9ucywgZG9uZSApOwp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFB1ZmYgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBQdWZmIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBDcmVhdGVzIGEgcHVmZiBlZmZlY3QgYnkgc2NhbGluZyB0aGUgZWxlbWVudCB1cCBhbmQgaGlkaW5nIGl0IGF0IHRoZSBzYW1lIHRpbWUuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9wdWZmLWVmZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoKdmFyIGVmZmVjdHNFZmZlY3RQdWZmID0gJC5lZmZlY3RzLmRlZmluZSggInB1ZmYiLCAiaGlkZSIsIGZ1bmN0aW9uKCBvcHRpb25zLCBkb25lICkgewoJdmFyIG5ld09wdGlvbnMgPSAkLmV4dGVuZCggdHJ1ZSwge30sIG9wdGlvbnMsIHsKCQlmYWRlOiB0cnVlLAoJCXBlcmNlbnQ6IHBhcnNlSW50KCBvcHRpb25zLnBlcmNlbnQsIDEwICkgfHwgMTUwCgl9ICk7CgoJJC5lZmZlY3RzLmVmZmVjdC5zY2FsZS5jYWxsKCB0aGlzLCBuZXdPcHRpb25zLCBkb25lICk7Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIEVmZmVjdHMgUHVsc2F0ZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFB1bHNhdGUgRWZmZWN0Ci8vPj5ncm91cDogRWZmZWN0cwovLz4+ZGVzY3JpcHRpb246IFB1bHNhdGVzIGFuIGVsZW1lbnQgbiB0aW1lcyBieSBjaGFuZ2luZyB0aGUgb3BhY2l0eSB0byB6ZXJvIGFuZCBiYWNrLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vcHVsc2F0ZS1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3RzRWZmZWN0UHVsc2F0ZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJwdWxzYXRlIiwgInNob3ciLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCXZhciBlbGVtZW50ID0gJCggdGhpcyApLAoJCW1vZGUgPSBvcHRpb25zLm1vZGUsCgkJc2hvdyA9IG1vZGUgPT09ICJzaG93IiwKCQloaWRlID0gbW9kZSA9PT0gImhpZGUiLAoJCXNob3doaWRlID0gc2hvdyB8fCBoaWRlLAoKCQkvLyBTaG93aW5nIG9yIGhpZGluZyBsZWF2ZXMgb2ZmIHRoZSAibGFzdCIgYW5pbWF0aW9uCgkJYW5pbXMgPSAoICggb3B0aW9ucy50aW1lcyB8fCA1ICkgKiAyICkgKyAoIHNob3doaWRlID8gMSA6IDAgKSwKCQlkdXJhdGlvbiA9IG9wdGlvbnMuZHVyYXRpb24gLyBhbmltcywKCQlhbmltYXRlVG8gPSAwLAoJCWkgPSAxLAoJCXF1ZXVlbGVuID0gZWxlbWVudC5xdWV1ZSgpLmxlbmd0aDsKCglpZiAoIHNob3cgfHwgIWVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSApIHsKCQllbGVtZW50LmNzcyggIm9wYWNpdHkiLCAwICkuc2hvdygpOwoJCWFuaW1hdGVUbyA9IDE7Cgl9CgoJLy8gQW5pbXMgLSAxIG9wYWNpdHkgInRvZ2dsZXMiCglmb3IgKCA7IGkgPCBhbmltczsgaSsrICkgewoJCWVsZW1lbnQuYW5pbWF0ZSggeyBvcGFjaXR5OiBhbmltYXRlVG8gfSwgZHVyYXRpb24sIG9wdGlvbnMuZWFzaW5nICk7CgkJYW5pbWF0ZVRvID0gMSAtIGFuaW1hdGVUbzsKCX0KCgllbGVtZW50LmFuaW1hdGUoIHsgb3BhY2l0eTogYW5pbWF0ZVRvIH0sIGR1cmF0aW9uLCBvcHRpb25zLmVhc2luZyApOwoKCWVsZW1lbnQucXVldWUoIGRvbmUgKTsKCgkkLmVmZmVjdHMudW5zaGlmdCggZWxlbWVudCwgcXVldWVsZW4sIGFuaW1zICsgMSApOwp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBFZmZlY3RzIFNoYWtlIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogU2hha2UgRWZmZWN0Ci8vPj5ncm91cDogRWZmZWN0cwovLz4+ZGVzY3JpcHRpb246IFNoYWtlcyBhbiBlbGVtZW50IGhvcml6b250YWxseSBvciB2ZXJ0aWNhbGx5IG4gdGltZXMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zaGFrZS1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3RzRWZmZWN0U2hha2UgPSAkLmVmZmVjdHMuZGVmaW5lKCAic2hha2UiLCBmdW5jdGlvbiggb3B0aW9ucywgZG9uZSApIHsKCgl2YXIgaSA9IDEsCgkJZWxlbWVudCA9ICQoIHRoaXMgKSwKCQlkaXJlY3Rpb24gPSBvcHRpb25zLmRpcmVjdGlvbiB8fCAibGVmdCIsCgkJZGlzdGFuY2UgPSBvcHRpb25zLmRpc3RhbmNlIHx8IDIwLAoJCXRpbWVzID0gb3B0aW9ucy50aW1lcyB8fCAzLAoJCWFuaW1zID0gdGltZXMgKiAyICsgMSwKCQlzcGVlZCA9IE1hdGgucm91bmQoIG9wdGlvbnMuZHVyYXRpb24gLyBhbmltcyApLAoJCXJlZiA9ICggZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImRvd24iICkgPyAidG9wIiA6ICJsZWZ0IiwKCQlwb3NpdGl2ZU1vdGlvbiA9ICggZGlyZWN0aW9uID09PSAidXAiIHx8IGRpcmVjdGlvbiA9PT0gImxlZnQiICksCgkJYW5pbWF0aW9uID0ge30sCgkJYW5pbWF0aW9uMSA9IHt9LAoJCWFuaW1hdGlvbjIgPSB7fSwKCgkJcXVldWVsZW4gPSBlbGVtZW50LnF1ZXVlKCkubGVuZ3RoOwoKCSQuZWZmZWN0cy5jcmVhdGVQbGFjZWhvbGRlciggZWxlbWVudCApOwoKCS8vIEFuaW1hdGlvbgoJYW5pbWF0aW9uWyByZWYgXSA9ICggcG9zaXRpdmVNb3Rpb24gPyAiLT0iIDogIis9IiApICsgZGlzdGFuY2U7CglhbmltYXRpb24xWyByZWYgXSA9ICggcG9zaXRpdmVNb3Rpb24gPyAiKz0iIDogIi09IiApICsgZGlzdGFuY2UgKiAyOwoJYW5pbWF0aW9uMlsgcmVmIF0gPSAoIHBvc2l0aXZlTW90aW9uID8gIi09IiA6ICIrPSIgKSArIGRpc3RhbmNlICogMjsKCgkvLyBBbmltYXRlCgllbGVtZW50LmFuaW1hdGUoIGFuaW1hdGlvbiwgc3BlZWQsIG9wdGlvbnMuZWFzaW5nICk7CgoJLy8gU2hha2VzCglmb3IgKCA7IGkgPCB0aW1lczsgaSsrICkgewoJCWVsZW1lbnQKCQkJLmFuaW1hdGUoIGFuaW1hdGlvbjEsIHNwZWVkLCBvcHRpb25zLmVhc2luZyApCgkJCS5hbmltYXRlKCBhbmltYXRpb24yLCBzcGVlZCwgb3B0aW9ucy5lYXNpbmcgKTsKCX0KCgllbGVtZW50CgkJLmFuaW1hdGUoIGFuaW1hdGlvbjEsIHNwZWVkLCBvcHRpb25zLmVhc2luZyApCgkJLmFuaW1hdGUoIGFuaW1hdGlvbiwgc3BlZWQgLyAyLCBvcHRpb25zLmVhc2luZyApCgkJLnF1ZXVlKCBkb25lICk7CgoJJC5lZmZlY3RzLnVuc2hpZnQoIGVsZW1lbnQsIHF1ZXVlbGVuLCBhbmltcyArIDEgKTsKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBTbGlkZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFNsaWRlIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBTbGlkZXMgYW4gZWxlbWVudCBpbiBhbmQgb3V0IG9mIHRoZSB2aWV3cG9ydC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NsaWRlLWVmZmVjdC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2VmZmVjdC8KCgoKdmFyIGVmZmVjdHNFZmZlY3RTbGlkZSA9ICQuZWZmZWN0cy5kZWZpbmUoICJzbGlkZSIsICJzaG93IiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7Cgl2YXIgc3RhcnRDbGlwLCBzdGFydFJlZiwKCQllbGVtZW50ID0gJCggdGhpcyApLAoJCW1hcCA9IHsKCQkJdXA6IFsgImJvdHRvbSIsICJ0b3AiIF0sCgkJCWRvd246IFsgInRvcCIsICJib3R0b20iIF0sCgkJCWxlZnQ6IFsgInJpZ2h0IiwgImxlZnQiIF0sCgkJCXJpZ2h0OiBbICJsZWZ0IiwgInJpZ2h0IiBdCgkJfSwKCQltb2RlID0gb3B0aW9ucy5tb2RlLAoJCWRpcmVjdGlvbiA9IG9wdGlvbnMuZGlyZWN0aW9uIHx8ICJsZWZ0IiwKCQlyZWYgPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJkb3duIiApID8gInRvcCIgOiAibGVmdCIsCgkJcG9zaXRpdmVNb3Rpb24gPSAoIGRpcmVjdGlvbiA9PT0gInVwIiB8fCBkaXJlY3Rpb24gPT09ICJsZWZ0IiApLAoJCWRpc3RhbmNlID0gb3B0aW9ucy5kaXN0YW5jZSB8fAoJCQllbGVtZW50WyByZWYgPT09ICJ0b3AiID8gIm91dGVySGVpZ2h0IiA6ICJvdXRlcldpZHRoIiBdKCB0cnVlICksCgkJYW5pbWF0aW9uID0ge307CgoJJC5lZmZlY3RzLmNyZWF0ZVBsYWNlaG9sZGVyKCBlbGVtZW50ICk7CgoJc3RhcnRDbGlwID0gZWxlbWVudC5jc3NDbGlwKCk7CglzdGFydFJlZiA9IGVsZW1lbnQucG9zaXRpb24oKVsgcmVmIF07CgoJLy8gRGVmaW5lIGhpZGUgYW5pbWF0aW9uCglhbmltYXRpb25bIHJlZiBdID0gKCBwb3NpdGl2ZU1vdGlvbiA/IC0xIDogMSApICogZGlzdGFuY2UgKyBzdGFydFJlZjsKCWFuaW1hdGlvbi5jbGlwID0gZWxlbWVudC5jc3NDbGlwKCk7CglhbmltYXRpb24uY2xpcFsgbWFwWyBkaXJlY3Rpb24gXVsgMSBdIF0gPSBhbmltYXRpb24uY2xpcFsgbWFwWyBkaXJlY3Rpb24gXVsgMCBdIF07CgoJLy8gUmV2ZXJzZSB0aGUgYW5pbWF0aW9uIGlmIHdlJ3JlIHNob3dpbmcKCWlmICggbW9kZSA9PT0gInNob3ciICkgewoJCWVsZW1lbnQuY3NzQ2xpcCggYW5pbWF0aW9uLmNsaXAgKTsKCQllbGVtZW50LmNzcyggcmVmLCBhbmltYXRpb25bIHJlZiBdICk7CgkJYW5pbWF0aW9uLmNsaXAgPSBzdGFydENsaXA7CgkJYW5pbWF0aW9uWyByZWYgXSA9IHN0YXJ0UmVmOwoJfQoKCS8vIEFjdHVhbGx5IGFuaW1hdGUKCWVsZW1lbnQuYW5pbWF0ZSggYW5pbWF0aW9uLCB7CgkJcXVldWU6IGZhbHNlLAoJCWR1cmF0aW9uOiBvcHRpb25zLmR1cmF0aW9uLAoJCWVhc2luZzogb3B0aW9ucy5lYXNpbmcsCgkJY29tcGxldGU6IGRvbmUKCX0gKTsKfSApOwoKCi8qIQogKiBqUXVlcnkgVUkgRWZmZWN0cyBUcmFuc2ZlciAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IFRyYW5zZmVyIEVmZmVjdAovLz4+Z3JvdXA6IEVmZmVjdHMKLy8+PmRlc2NyaXB0aW9uOiBEaXNwbGF5cyBhIHRyYW5zZmVyIGVmZmVjdCBmcm9tIG9uZSBlbGVtZW50IHRvIGFub3RoZXIuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS90cmFuc2Zlci1lZmZlY3QvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9lZmZlY3QvCgoKCnZhciBlZmZlY3Q7CmlmICggJC51aUJhY2tDb21wYXQgIT09IGZhbHNlICkgewoJZWZmZWN0ID0gJC5lZmZlY3RzLmRlZmluZSggInRyYW5zZmVyIiwgZnVuY3Rpb24oIG9wdGlvbnMsIGRvbmUgKSB7CgkJJCggdGhpcyApLnRyYW5zZmVyKCBvcHRpb25zLCBkb25lICk7Cgl9ICk7Cn0KdmFyIGVmZmVjdHNFZmZlY3RUcmFuc2ZlciA9IGVmZmVjdDsKCgovKiEKICogalF1ZXJ5IFVJIEZvY3VzYWJsZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IDpmb2N1c2FibGUgU2VsZWN0b3IKLy8+Pmdyb3VwOiBDb3JlCi8vPj5kZXNjcmlwdGlvbjogU2VsZWN0cyBlbGVtZW50cyB3aGljaCBjYW4gYmUgZm9jdXNlZC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2ZvY3VzYWJsZS1zZWxlY3Rvci8KCgoKLy8gU2VsZWN0b3JzCiQudWkuZm9jdXNhYmxlID0gZnVuY3Rpb24oIGVsZW1lbnQsIGhhc1RhYmluZGV4ICkgewoJdmFyIG1hcCwgbWFwTmFtZSwgaW1nLCBmb2N1c2FibGVJZlZpc2libGUsIGZpZWxkc2V0LAoJCW5vZGVOYW1lID0gZWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwoKCWlmICggImFyZWEiID09PSBub2RlTmFtZSApIHsKCQltYXAgPSBlbGVtZW50LnBhcmVudE5vZGU7CgkJbWFwTmFtZSA9IG1hcC5uYW1lOwoJCWlmICggIWVsZW1lbnQuaHJlZiB8fCAhbWFwTmFtZSB8fCBtYXAubm9kZU5hbWUudG9Mb3dlckNhc2UoKSAhPT0gIm1hcCIgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgkJaW1nID0gJCggImltZ1t1c2VtYXA9JyMiICsgbWFwTmFtZSArICInXSIgKTsKCQlyZXR1cm4gaW1nLmxlbmd0aCA+IDAgJiYgaW1nLmlzKCAiOnZpc2libGUiICk7Cgl9CgoJaWYgKCAvXihpbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9ufG9iamVjdCkkLy50ZXN0KCBub2RlTmFtZSApICkgewoJCWZvY3VzYWJsZUlmVmlzaWJsZSA9ICFlbGVtZW50LmRpc2FibGVkOwoKCQlpZiAoIGZvY3VzYWJsZUlmVmlzaWJsZSApIHsKCgkJCS8vIEZvcm0gY29udHJvbHMgd2l0aGluIGEgZGlzYWJsZWQgZmllbGRzZXQgYXJlIGRpc2FibGVkLgoJCQkvLyBIb3dldmVyLCBjb250cm9scyB3aXRoaW4gdGhlIGZpZWxkc2V0J3MgbGVnZW5kIGRvIG5vdCBnZXQgZGlzYWJsZWQuCgkJCS8vIFNpbmNlIGNvbnRyb2xzIGdlbmVyYWxseSBhcmVuJ3QgcGxhY2VkIGluc2lkZSBsZWdlbmRzLCB3ZSBza2lwCgkJCS8vIHRoaXMgcG9ydGlvbiBvZiB0aGUgY2hlY2suCgkJCWZpZWxkc2V0ID0gJCggZWxlbWVudCApLmNsb3Nlc3QoICJmaWVsZHNldCIgKVsgMCBdOwoJCQlpZiAoIGZpZWxkc2V0ICkgewoJCQkJZm9jdXNhYmxlSWZWaXNpYmxlID0gIWZpZWxkc2V0LmRpc2FibGVkOwoJCQl9CgkJfQoJfSBlbHNlIGlmICggImEiID09PSBub2RlTmFtZSApIHsKCQlmb2N1c2FibGVJZlZpc2libGUgPSBlbGVtZW50LmhyZWYgfHwgaGFzVGFiaW5kZXg7Cgl9IGVsc2UgewoJCWZvY3VzYWJsZUlmVmlzaWJsZSA9IGhhc1RhYmluZGV4OwoJfQoKCXJldHVybiBmb2N1c2FibGVJZlZpc2libGUgJiYgJCggZWxlbWVudCApLmlzKCAiOnZpc2libGUiICkgJiYgdmlzaWJsZSggJCggZWxlbWVudCApICk7Cn07CgovLyBTdXBwb3J0OiBJRSA4IG9ubHkKLy8gSUUgOCBkb2Vzbid0IHJlc29sdmUgaW5oZXJpdCB0byB2aXNpYmxlL2hpZGRlbiBmb3IgY29tcHV0ZWQgdmFsdWVzCmZ1bmN0aW9uIHZpc2libGUoIGVsZW1lbnQgKSB7Cgl2YXIgdmlzaWJpbGl0eSA9IGVsZW1lbnQuY3NzKCAidmlzaWJpbGl0eSIgKTsKCXdoaWxlICggdmlzaWJpbGl0eSA9PT0gImluaGVyaXQiICkgewoJCWVsZW1lbnQgPSBlbGVtZW50LnBhcmVudCgpOwoJCXZpc2liaWxpdHkgPSBlbGVtZW50LmNzcyggInZpc2liaWxpdHkiICk7Cgl9CglyZXR1cm4gdmlzaWJpbGl0eSAhPT0gImhpZGRlbiI7Cn0KCiQuZXh0ZW5kKCAkLmV4cHJbICI6IiBdLCB7Cglmb2N1c2FibGU6IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCXJldHVybiAkLnVpLmZvY3VzYWJsZSggZWxlbWVudCwgJC5hdHRyKCBlbGVtZW50LCAidGFiaW5kZXgiICkgIT0gbnVsbCApOwoJfQp9ICk7Cgp2YXIgZm9jdXNhYmxlID0gJC51aS5mb2N1c2FibGU7CgoKCgovLyBTdXBwb3J0OiBJRTggT25seQovLyBJRTggZG9lcyBub3Qgc3VwcG9ydCB0aGUgZm9ybSBhdHRyaWJ1dGUgYW5kIHdoZW4gaXQgaXMgc3VwcGxpZWQuIEl0IG92ZXJ3cml0ZXMgdGhlIGZvcm0gcHJvcAovLyB3aXRoIGEgc3RyaW5nLCBzbyB3ZSBuZWVkIHRvIGZpbmQgdGhlIHByb3BlciBmb3JtLgp2YXIgZm9ybSA9ICQuZm4uZm9ybSA9IGZ1bmN0aW9uKCkgewoJcmV0dXJuIHR5cGVvZiB0aGlzWyAwIF0uZm9ybSA9PT0gInN0cmluZyIgPyB0aGlzLmNsb3Nlc3QoICJmb3JtIiApIDogJCggdGhpc1sgMCBdLmZvcm0gKTsKfTsKCgovKiEKICogalF1ZXJ5IFVJIEZvcm0gUmVzZXQgTWl4aW4gMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBGb3JtIFJlc2V0IE1peGluCi8vPj5ncm91cDogQ29yZQovLz4+ZGVzY3JpcHRpb246IFJlZnJlc2ggaW5wdXQgd2lkZ2V0cyB3aGVuIHRoZWlyIGZvcm0gaXMgcmVzZXQKLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2Zvcm0tcmVzZXQtbWl4aW4vCgoKCnZhciBmb3JtUmVzZXRNaXhpbiA9ICQudWkuZm9ybVJlc2V0TWl4aW4gPSB7CglfZm9ybVJlc2V0SGFuZGxlcjogZnVuY3Rpb24oKSB7CgkJdmFyIGZvcm0gPSAkKCB0aGlzICk7CgoJCS8vIFdhaXQgZm9yIHRoZSBmb3JtIHJlc2V0IHRvIGFjdHVhbGx5IGhhcHBlbiBiZWZvcmUgcmVmcmVzaGluZwoJCXNldFRpbWVvdXQoIGZ1bmN0aW9uKCkgewoJCQl2YXIgaW5zdGFuY2VzID0gZm9ybS5kYXRhKCAidWktZm9ybS1yZXNldC1pbnN0YW5jZXMiICk7CgkJCSQuZWFjaCggaW5zdGFuY2VzLCBmdW5jdGlvbigpIHsKCQkJCXRoaXMucmVmcmVzaCgpOwoJCQl9ICk7CgkJfSApOwoJfSwKCglfYmluZEZvcm1SZXNldEhhbmRsZXI6IGZ1bmN0aW9uKCkgewoJCXRoaXMuZm9ybSA9IHRoaXMuZWxlbWVudC5mb3JtKCk7CgkJaWYgKCAhdGhpcy5mb3JtLmxlbmd0aCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdmFyIGluc3RhbmNlcyA9IHRoaXMuZm9ybS5kYXRhKCAidWktZm9ybS1yZXNldC1pbnN0YW5jZXMiICkgfHwgW107CgkJaWYgKCAhaW5zdGFuY2VzLmxlbmd0aCApIHsKCgkJCS8vIFdlIGRvbid0IHVzZSBfb24oKSBoZXJlIGJlY2F1c2Ugd2UgdXNlIGEgc2luZ2xlIGV2ZW50IGhhbmRsZXIgcGVyIGZvcm0KCQkJdGhpcy5mb3JtLm9uKCAicmVzZXQudWktZm9ybS1yZXNldCIsIHRoaXMuX2Zvcm1SZXNldEhhbmRsZXIgKTsKCQl9CgkJaW5zdGFuY2VzLnB1c2goIHRoaXMgKTsKCQl0aGlzLmZvcm0uZGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiwgaW5zdGFuY2VzICk7Cgl9LAoKCV91bmJpbmRGb3JtUmVzZXRIYW5kbGVyOiBmdW5jdGlvbigpIHsKCQlpZiAoICF0aGlzLmZvcm0ubGVuZ3RoICkgewoJCQlyZXR1cm47CgkJfQoKCQl2YXIgaW5zdGFuY2VzID0gdGhpcy5mb3JtLmRhdGEoICJ1aS1mb3JtLXJlc2V0LWluc3RhbmNlcyIgKTsKCQlpbnN0YW5jZXMuc3BsaWNlKCAkLmluQXJyYXkoIHRoaXMsIGluc3RhbmNlcyApLCAxICk7CgkJaWYgKCBpbnN0YW5jZXMubGVuZ3RoICkgewoJCQl0aGlzLmZvcm0uZGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiwgaW5zdGFuY2VzICk7CgkJfSBlbHNlIHsKCQkJdGhpcy5mb3JtCgkJCQkucmVtb3ZlRGF0YSggInVpLWZvcm0tcmVzZXQtaW5zdGFuY2VzIiApCgkJCQkub2ZmKCAicmVzZXQudWktZm9ybS1yZXNldCIgKTsKCQl9Cgl9Cn07CgoKLyohCiAqIGpRdWVyeSBVSSBTdXBwb3J0IGZvciBqUXVlcnkgY29yZSAxLjcueCAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICoKICovCgovLz4+bGFiZWw6IGpRdWVyeSAxLjcgU3VwcG9ydAovLz4+Z3JvdXA6IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBTdXBwb3J0IHZlcnNpb24gMS43Lnggb2YgalF1ZXJ5IGNvcmUKCgoKLy8gU3VwcG9ydDogalF1ZXJ5IDEuNyBvbmx5Ci8vIE5vdCBhIGdyZWF0IHdheSB0byBjaGVjayB2ZXJzaW9ucywgYnV0IHNpbmNlIHdlIG9ubHkgc3VwcG9ydCAxLjcrIGFuZCBvbmx5Ci8vIG5lZWQgdG8gZGV0ZWN0IDwxLjgsIHRoaXMgaXMgYSBzaW1wbGUgY2hlY2sgdGhhdCBzaG91bGQgc3VmZmljZS4gQ2hlY2tpbmcKLy8gZm9yICIxLjcuIiB3b3VsZCBiZSBhIGJpdCBzYWZlciwgYnV0IHRoZSB2ZXJzaW9uIHN0cmluZyBpcyAxLjcsIG5vdCAxLjcuMAovLyBhbmQgd2UnbGwgbmV2ZXIgcmVhY2ggMS43MC4wIChpZiB3ZSBkbywgd2UgY2VydGFpbmx5IHdvbid0IGJlIHN1cHBvcnRpbmcKLy8gMS43IGFueW1vcmUpLiBTZWUgIzExMTk3IGZvciB3aHkgd2UncmUgbm90IHVzaW5nIGZlYXR1cmUgZGV0ZWN0aW9uLgppZiAoICQuZm4uanF1ZXJ5LnN1YnN0cmluZyggMCwgMyApID09PSAiMS43IiApIHsKCgkvLyBTZXR0ZXJzIGZvciAuaW5uZXJXaWR0aCgpLCAuaW5uZXJIZWlnaHQoKSwgLm91dGVyV2lkdGgoKSwgLm91dGVySGVpZ2h0KCkKCS8vIFVubGlrZSBqUXVlcnkgQ29yZSAxLjgrLCB0aGVzZSBvbmx5IHN1cHBvcnQgbnVtZXJpYyB2YWx1ZXMgdG8gc2V0IHRoZQoJLy8gZGltZW5zaW9ucyBpbiBwaXhlbHMKCSQuZWFjaCggWyAiV2lkdGgiLCAiSGVpZ2h0IiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHsKCQl2YXIgc2lkZSA9IG5hbWUgPT09ICJXaWR0aCIgPyBbICJMZWZ0IiwgIlJpZ2h0IiBdIDogWyAiVG9wIiwgIkJvdHRvbSIgXSwKCQkJdHlwZSA9IG5hbWUudG9Mb3dlckNhc2UoKSwKCQkJb3JpZyA9IHsKCQkJCWlubmVyV2lkdGg6ICQuZm4uaW5uZXJXaWR0aCwKCQkJCWlubmVySGVpZ2h0OiAkLmZuLmlubmVySGVpZ2h0LAoJCQkJb3V0ZXJXaWR0aDogJC5mbi5vdXRlcldpZHRoLAoJCQkJb3V0ZXJIZWlnaHQ6ICQuZm4ub3V0ZXJIZWlnaHQKCQkJfTsKCgkJZnVuY3Rpb24gcmVkdWNlKCBlbGVtLCBzaXplLCBib3JkZXIsIG1hcmdpbiApIHsKCQkJJC5lYWNoKCBzaWRlLCBmdW5jdGlvbigpIHsKCQkJCXNpemUgLT0gcGFyc2VGbG9hdCggJC5jc3MoIGVsZW0sICJwYWRkaW5nIiArIHRoaXMgKSApIHx8IDA7CgkJCQlpZiAoIGJvcmRlciApIHsKCQkJCQlzaXplIC09IHBhcnNlRmxvYXQoICQuY3NzKCBlbGVtLCAiYm9yZGVyIiArIHRoaXMgKyAiV2lkdGgiICkgKSB8fCAwOwoJCQkJfQoJCQkJaWYgKCBtYXJnaW4gKSB7CgkJCQkJc2l6ZSAtPSBwYXJzZUZsb2F0KCAkLmNzcyggZWxlbSwgIm1hcmdpbiIgKyB0aGlzICkgKSB8fCAwOwoJCQkJfQoJCQl9ICk7CgkJCXJldHVybiBzaXplOwoJCX0KCgkJJC5mblsgImlubmVyIiArIG5hbWUgXSA9IGZ1bmN0aW9uKCBzaXplICkgewoJCQlpZiAoIHNpemUgPT09IHVuZGVmaW5lZCApIHsKCQkJCXJldHVybiBvcmlnWyAiaW5uZXIiICsgbmFtZSBdLmNhbGwoIHRoaXMgKTsKCQkJfQoKCQkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkkKCB0aGlzICkuY3NzKCB0eXBlLCByZWR1Y2UoIHRoaXMsIHNpemUgKSArICJweCIgKTsKCQkJfSApOwoJCX07CgoJCSQuZm5bICJvdXRlciIgKyBuYW1lIF0gPSBmdW5jdGlvbiggc2l6ZSwgbWFyZ2luICkgewoJCQlpZiAoIHR5cGVvZiBzaXplICE9PSAibnVtYmVyIiApIHsKCQkJCXJldHVybiBvcmlnWyAib3V0ZXIiICsgbmFtZSBdLmNhbGwoIHRoaXMsIHNpemUgKTsKCQkJfQoKCQkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkkKCB0aGlzICkuY3NzKCB0eXBlLCByZWR1Y2UoIHRoaXMsIHNpemUsIHRydWUsIG1hcmdpbiApICsgInB4IiApOwoJCQl9ICk7CgkJfTsKCX0gKTsKCgkkLmZuLmFkZEJhY2sgPSBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID8KCQkJdGhpcy5wcmV2T2JqZWN0IDogdGhpcy5wcmV2T2JqZWN0LmZpbHRlciggc2VsZWN0b3IgKQoJCSk7Cgl9Owp9Cgo7Ci8qIQogKiBqUXVlcnkgVUkgS2V5Y29kZSAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IEtleWNvZGUKLy8+Pmdyb3VwOiBDb3JlCi8vPj5kZXNjcmlwdGlvbjogUHJvdmlkZSBrZXljb2RlcyBhcyBrZXluYW1lcwovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20valF1ZXJ5LnVpLmtleUNvZGUvCgoKdmFyIGtleWNvZGUgPSAkLnVpLmtleUNvZGUgPSB7CglCQUNLU1BBQ0U6IDgsCglDT01NQTogMTg4LAoJREVMRVRFOiA0NiwKCURPV046IDQwLAoJRU5EOiAzNSwKCUVOVEVSOiAxMywKCUVTQ0FQRTogMjcsCglIT01FOiAzNiwKCUxFRlQ6IDM3LAoJUEFHRV9ET1dOOiAzNCwKCVBBR0VfVVA6IDMzLAoJUEVSSU9EOiAxOTAsCglSSUdIVDogMzksCglTUEFDRTogMzIsCglUQUI6IDksCglVUDogMzgKfTsKCgoKCi8vIEludGVybmFsIHVzZSBvbmx5CnZhciBlc2NhcGVTZWxlY3RvciA9ICQudWkuZXNjYXBlU2VsZWN0b3IgPSAoIGZ1bmN0aW9uKCkgewoJdmFyIHNlbGVjdG9yRXNjYXBlID0gLyhbISIjJCUmJygpKissLi86Ozw9Pj9AW1xdXmB7fH1+XSkvZzsKCXJldHVybiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJcmV0dXJuIHNlbGVjdG9yLnJlcGxhY2UoIHNlbGVjdG9yRXNjYXBlLCAiXFwkMSIgKTsKCX07Cn0gKSgpOwoKCi8qIQogKiBqUXVlcnkgVUkgTGFiZWxzIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogbGFiZWxzCi8vPj5ncm91cDogQ29yZQovLz4+ZGVzY3JpcHRpb246IEZpbmQgYWxsIHRoZSBsYWJlbHMgYXNzb2NpYXRlZCB3aXRoIGEgZ2l2ZW4gaW5wdXQKLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2xhYmVscy8KCgoKdmFyIGxhYmVscyA9ICQuZm4ubGFiZWxzID0gZnVuY3Rpb24oKSB7Cgl2YXIgYW5jZXN0b3IsIHNlbGVjdG9yLCBpZCwgbGFiZWxzLCBhbmNlc3RvcnM7CgoJLy8gQ2hlY2sgY29udHJvbC5sYWJlbHMgZmlyc3QKCWlmICggdGhpc1sgMCBdLmxhYmVscyAmJiB0aGlzWyAwIF0ubGFiZWxzLmxlbmd0aCApIHsKCQlyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHRoaXNbIDAgXS5sYWJlbHMgKTsKCX0KCgkvLyBTdXBwb3J0OiBJRSA8PSAxMSwgRkYgPD0gMzcsIEFuZHJvaWQgPD0gMi4zIG9ubHkKCS8vIEFib3ZlIGJyb3dzZXJzIGRvIG5vdCBzdXBwb3J0IGNvbnRyb2wubGFiZWxzLiBFdmVyeXRoaW5nIGJlbG93IGlzIHRvIHN1cHBvcnQgdGhlbQoJLy8gYXMgd2VsbCBhcyBkb2N1bWVudCBmcmFnbWVudHMuIGNvbnRyb2wubGFiZWxzIGRvZXMgbm90IHdvcmsgb24gZG9jdW1lbnQgZnJhZ21lbnRzCglsYWJlbHMgPSB0aGlzLmVxKCAwICkucGFyZW50cyggImxhYmVsIiApOwoKCS8vIExvb2sgZm9yIHRoZSBsYWJlbCBiYXNlZCBvbiB0aGUgaWQKCWlkID0gdGhpcy5hdHRyKCAiaWQiICk7CglpZiAoIGlkICkgewoKCQkvLyBXZSBkb24ndCBzZWFyY2ggYWdhaW5zdCB0aGUgZG9jdW1lbnQgaW4gY2FzZSB0aGUgZWxlbWVudAoJCS8vIGlzIGRpc2Nvbm5lY3RlZCBmcm9tIHRoZSBET00KCQlhbmNlc3RvciA9IHRoaXMuZXEoIDAgKS5wYXJlbnRzKCkubGFzdCgpOwoKCQkvLyBHZXQgYSBmdWxsIHNldCBvZiB0b3AgbGV2ZWwgYW5jZXN0b3JzCgkJYW5jZXN0b3JzID0gYW5jZXN0b3IuYWRkKCBhbmNlc3Rvci5sZW5ndGggPyBhbmNlc3Rvci5zaWJsaW5ncygpIDogdGhpcy5zaWJsaW5ncygpICk7CgoJCS8vIENyZWF0ZSBhIHNlbGVjdG9yIGZvciB0aGUgbGFiZWwgYmFzZWQgb24gdGhlIGlkCgkJc2VsZWN0b3IgPSAibGFiZWxbZm9yPSciICsgJC51aS5lc2NhcGVTZWxlY3RvciggaWQgKSArICInXSI7CgoJCWxhYmVscyA9IGxhYmVscy5hZGQoIGFuY2VzdG9ycy5maW5kKCBzZWxlY3RvciApLmFkZEJhY2soIHNlbGVjdG9yICkgKTsKCgl9CgoJLy8gUmV0dXJuIHdoYXRldmVyIHdlIGhhdmUgZm91bmQgZm9yIGxhYmVscwoJcmV0dXJuIHRoaXMucHVzaFN0YWNrKCBsYWJlbHMgKTsKfTsKCgovKiEKICogalF1ZXJ5IFVJIFNjcm9sbCBQYXJlbnQgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBzY3JvbGxQYXJlbnQKLy8+Pmdyb3VwOiBDb3JlCi8vPj5kZXNjcmlwdGlvbjogR2V0IHRoZSBjbG9zZXN0IGFuY2VzdG9yIGVsZW1lbnQgdGhhdCBpcyBzY3JvbGxhYmxlLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc2Nyb2xsUGFyZW50LwoKCgp2YXIgc2Nyb2xsUGFyZW50ID0gJC5mbi5zY3JvbGxQYXJlbnQgPSBmdW5jdGlvbiggaW5jbHVkZUhpZGRlbiApIHsKCXZhciBwb3NpdGlvbiA9IHRoaXMuY3NzKCAicG9zaXRpb24iICksCgkJZXhjbHVkZVN0YXRpY1BhcmVudCA9IHBvc2l0aW9uID09PSAiYWJzb2x1dGUiLAoJCW92ZXJmbG93UmVnZXggPSBpbmNsdWRlSGlkZGVuID8gLyhhdXRvfHNjcm9sbHxoaWRkZW4pLyA6IC8oYXV0b3xzY3JvbGwpLywKCQlzY3JvbGxQYXJlbnQgPSB0aGlzLnBhcmVudHMoKS5maWx0ZXIoIGZ1bmN0aW9uKCkgewoJCQl2YXIgcGFyZW50ID0gJCggdGhpcyApOwoJCQlpZiAoIGV4Y2x1ZGVTdGF0aWNQYXJlbnQgJiYgcGFyZW50LmNzcyggInBvc2l0aW9uIiApID09PSAic3RhdGljIiApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCQlyZXR1cm4gb3ZlcmZsb3dSZWdleC50ZXN0KCBwYXJlbnQuY3NzKCAib3ZlcmZsb3ciICkgKyBwYXJlbnQuY3NzKCAib3ZlcmZsb3cteSIgKSArCgkJCQlwYXJlbnQuY3NzKCAib3ZlcmZsb3cteCIgKSApOwoJCX0gKS5lcSggMCApOwoKCXJldHVybiBwb3NpdGlvbiA9PT0gImZpeGVkIiB8fCAhc2Nyb2xsUGFyZW50Lmxlbmd0aCA/CgkJJCggdGhpc1sgMCBdLm93bmVyRG9jdW1lbnQgfHwgZG9jdW1lbnQgKSA6CgkJc2Nyb2xsUGFyZW50Owp9OwoKCi8qIQogKiBqUXVlcnkgVUkgVGFiYmFibGUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiA6dGFiYmFibGUgU2VsZWN0b3IKLy8+Pmdyb3VwOiBDb3JlCi8vPj5kZXNjcmlwdGlvbjogU2VsZWN0cyBlbGVtZW50cyB3aGljaCBjYW4gYmUgdGFiYmVkIHRvLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vdGFiYmFibGUtc2VsZWN0b3IvCgoKCnZhciB0YWJiYWJsZSA9ICQuZXh0ZW5kKCAkLmV4cHJbICI6IiBdLCB7Cgl0YWJiYWJsZTogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJdmFyIHRhYkluZGV4ID0gJC5hdHRyKCBlbGVtZW50LCAidGFiaW5kZXgiICksCgkJCWhhc1RhYmluZGV4ID0gdGFiSW5kZXggIT0gbnVsbDsKCQlyZXR1cm4gKCAhaGFzVGFiaW5kZXggfHwgdGFiSW5kZXggPj0gMCApICYmICQudWkuZm9jdXNhYmxlKCBlbGVtZW50LCBoYXNUYWJpbmRleCApOwoJfQp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBVbmlxdWUgSUQgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiB1bmlxdWVJZAovLz4+Z3JvdXA6IENvcmUKLy8+PmRlc2NyaXB0aW9uOiBGdW5jdGlvbnMgdG8gZ2VuZXJhdGUgYW5kIHJlbW92ZSB1bmlxdWVJZCdzCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS91bmlxdWVJZC8KCgoKdmFyIHVuaXF1ZUlkID0gJC5mbi5leHRlbmQoIHsKCXVuaXF1ZUlkOiAoIGZ1bmN0aW9uKCkgewoJCXZhciB1dWlkID0gMDsKCgkJcmV0dXJuIGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCWlmICggIXRoaXMuaWQgKSB7CgkJCQkJdGhpcy5pZCA9ICJ1aS1pZC0iICsgKCArK3V1aWQgKTsKCQkJCX0KCQkJfSApOwoJCX07Cgl9ICkoKSwKCglyZW1vdmVVbmlxdWVJZDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWlmICggL151aS1pZC1cZCskLy50ZXN0KCB0aGlzLmlkICkgKSB7CgkJCQkkKCB0aGlzICkucmVtb3ZlQXR0ciggImlkIiApOwoJCQl9CgkJfSApOwoJfQp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBBY2NvcmRpb24gMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBBY2NvcmRpb24KLy8+Pmdyb3VwOiBXaWRnZXRzCi8vIGpzY3M6ZGlzYWJsZSBtYXhpbXVtTGluZUxlbmd0aAovLz4+ZGVzY3JpcHRpb246IERpc3BsYXlzIGNvbGxhcHNpYmxlIGNvbnRlbnQgcGFuZWxzIGZvciBwcmVzZW50aW5nIGluZm9ybWF0aW9uIGluIGEgbGltaXRlZCBhbW91bnQgb2Ygc3BhY2UuCi8vIGpzY3M6ZW5hYmxlIG1heGltdW1MaW5lTGVuZ3RoCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9hY2NvcmRpb24vCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9hY2NvcmRpb24vCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvYWNjb3JkaW9uLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKdmFyIHdpZGdldHNBY2NvcmRpb24gPSAkLndpZGdldCggInVpLmFjY29yZGlvbiIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJb3B0aW9uczogewoJCWFjdGl2ZTogMCwKCQlhbmltYXRlOiB7fSwKCQljbGFzc2VzOiB7CgkJCSJ1aS1hY2NvcmRpb24taGVhZGVyIjogInVpLWNvcm5lci10b3AiLAoJCQkidWktYWNjb3JkaW9uLWhlYWRlci1jb2xsYXBzZWQiOiAidWktY29ybmVyLWFsbCIsCgkJCSJ1aS1hY2NvcmRpb24tY29udGVudCI6ICJ1aS1jb3JuZXItYm90dG9tIgoJCX0sCgkJY29sbGFwc2libGU6IGZhbHNlLAoJCWV2ZW50OiAiY2xpY2siLAoJCWhlYWRlcjogIj4gbGkgPiA6Zmlyc3QtY2hpbGQsID4gOm5vdChsaSk6ZXZlbiIsCgkJaGVpZ2h0U3R5bGU6ICJhdXRvIiwKCQlpY29uczogewoJCQlhY3RpdmVIZWFkZXI6ICJ1aS1pY29uLXRyaWFuZ2xlLTEtcyIsCgkJCWhlYWRlcjogInVpLWljb24tdHJpYW5nbGUtMS1lIgoJCX0sCgoJCS8vIENhbGxiYWNrcwoJCWFjdGl2YXRlOiBudWxsLAoJCWJlZm9yZUFjdGl2YXRlOiBudWxsCgl9LAoKCWhpZGVQcm9wczogewoJCWJvcmRlclRvcFdpZHRoOiAiaGlkZSIsCgkJYm9yZGVyQm90dG9tV2lkdGg6ICJoaWRlIiwKCQlwYWRkaW5nVG9wOiAiaGlkZSIsCgkJcGFkZGluZ0JvdHRvbTogImhpZGUiLAoJCWhlaWdodDogImhpZGUiCgl9LAoKCXNob3dQcm9wczogewoJCWJvcmRlclRvcFdpZHRoOiAic2hvdyIsCgkJYm9yZGVyQm90dG9tV2lkdGg6ICJzaG93IiwKCQlwYWRkaW5nVG9wOiAic2hvdyIsCgkJcGFkZGluZ0JvdHRvbTogInNob3ciLAoJCWhlaWdodDogInNob3ciCgl9LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQl0aGlzLnByZXZTaG93ID0gdGhpcy5wcmV2SGlkZSA9ICQoKTsKCQl0aGlzLl9hZGRDbGFzcyggInVpLWFjY29yZGlvbiIsICJ1aS13aWRnZXQgdWktaGVscGVyLXJlc2V0IiApOwoJCXRoaXMuZWxlbWVudC5hdHRyKCAicm9sZSIsICJ0YWJsaXN0IiApOwoKCQkvLyBEb24ndCBhbGxvdyBjb2xsYXBzaWJsZTogZmFsc2UgYW5kIGFjdGl2ZTogZmFsc2UgLyBudWxsCgkJaWYgKCAhb3B0aW9ucy5jb2xsYXBzaWJsZSAmJiAoIG9wdGlvbnMuYWN0aXZlID09PSBmYWxzZSB8fCBvcHRpb25zLmFjdGl2ZSA9PSBudWxsICkgKSB7CgkJCW9wdGlvbnMuYWN0aXZlID0gMDsKCQl9CgoJCXRoaXMuX3Byb2Nlc3NQYW5lbHMoKTsKCgkJLy8gaGFuZGxlIG5lZ2F0aXZlIHZhbHVlcwoJCWlmICggb3B0aW9ucy5hY3RpdmUgPCAwICkgewoJCQlvcHRpb25zLmFjdGl2ZSArPSB0aGlzLmhlYWRlcnMubGVuZ3RoOwoJCX0KCQl0aGlzLl9yZWZyZXNoKCk7Cgl9LAoKCV9nZXRDcmVhdGVFdmVudERhdGE6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB7CgkJCWhlYWRlcjogdGhpcy5hY3RpdmUsCgkJCXBhbmVsOiAhdGhpcy5hY3RpdmUubGVuZ3RoID8gJCgpIDogdGhpcy5hY3RpdmUubmV4dCgpCgkJfTsKCX0sCgoJX2NyZWF0ZUljb25zOiBmdW5jdGlvbigpIHsKCQl2YXIgaWNvbiwgY2hpbGRyZW4sCgkJCWljb25zID0gdGhpcy5vcHRpb25zLmljb25zOwoKCQlpZiAoIGljb25zICkgewoJCQlpY29uID0gJCggIjxzcGFuPiIgKTsKCQkJdGhpcy5fYWRkQ2xhc3MoIGljb24sICJ1aS1hY2NvcmRpb24taGVhZGVyLWljb24iLCAidWktaWNvbiAiICsgaWNvbnMuaGVhZGVyICk7CgkJCWljb24ucHJlcGVuZFRvKCB0aGlzLmhlYWRlcnMgKTsKCQkJY2hpbGRyZW4gPSB0aGlzLmFjdGl2ZS5jaGlsZHJlbiggIi51aS1hY2NvcmRpb24taGVhZGVyLWljb24iICk7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBjaGlsZHJlbiwgaWNvbnMuaGVhZGVyICkKCQkJCS5fYWRkQ2xhc3MoIGNoaWxkcmVuLCBudWxsLCBpY29ucy5hY3RpdmVIZWFkZXIgKQoJCQkJLl9hZGRDbGFzcyggdGhpcy5oZWFkZXJzLCAidWktYWNjb3JkaW9uLWljb25zIiApOwoJCX0KCX0sCgoJX2Rlc3Ryb3lJY29uczogZnVuY3Rpb24oKSB7CgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuaGVhZGVycywgInVpLWFjY29yZGlvbi1pY29ucyIgKTsKCQl0aGlzLmhlYWRlcnMuY2hpbGRyZW4oICIudWktYWNjb3JkaW9uLWhlYWRlci1pY29uIiApLnJlbW92ZSgpOwoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdmFyIGNvbnRlbnRzOwoKCQkvLyBDbGVhbiB1cCBtYWluIGVsZW1lbnQKCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggInJvbGUiICk7CgoJCS8vIENsZWFuIHVwIGhlYWRlcnMKCQl0aGlzLmhlYWRlcnMKCQkJLnJlbW92ZUF0dHIoICJyb2xlIGFyaWEtZXhwYW5kZWQgYXJpYS1zZWxlY3RlZCBhcmlhLWNvbnRyb2xzIHRhYkluZGV4IiApCgkJCS5yZW1vdmVVbmlxdWVJZCgpOwoKCQl0aGlzLl9kZXN0cm95SWNvbnMoKTsKCgkJLy8gQ2xlYW4gdXAgY29udGVudCBwYW5lbHMKCQljb250ZW50cyA9IHRoaXMuaGVhZGVycy5uZXh0KCkKCQkJLmNzcyggImRpc3BsYXkiLCAiIiApCgkJCS5yZW1vdmVBdHRyKCAicm9sZSBhcmlhLWhpZGRlbiBhcmlhLWxhYmVsbGVkYnkiICkKCQkJLnJlbW92ZVVuaXF1ZUlkKCk7CgoJCWlmICggdGhpcy5vcHRpb25zLmhlaWdodFN0eWxlICE9PSAiY29udGVudCIgKSB7CgkJCWNvbnRlbnRzLmNzcyggImhlaWdodCIsICIiICk7CgkJfQoJfSwKCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQlpZiAoIGtleSA9PT0gImFjdGl2ZSIgKSB7CgoJCQkvLyBfYWN0aXZhdGUoKSB3aWxsIGhhbmRsZSBpbnZhbGlkIHZhbHVlcyBhbmQgdXBkYXRlIHRoaXMub3B0aW9ucwoJCQl0aGlzLl9hY3RpdmF0ZSggdmFsdWUgKTsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCBrZXkgPT09ICJldmVudCIgKSB7CgkJCWlmICggdGhpcy5vcHRpb25zLmV2ZW50ICkgewoJCQkJdGhpcy5fb2ZmKCB0aGlzLmhlYWRlcnMsIHRoaXMub3B0aW9ucy5ldmVudCApOwoJCQl9CgkJCXRoaXMuX3NldHVwRXZlbnRzKCB2YWx1ZSApOwoJCX0KCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsKCgkJLy8gU2V0dGluZyBjb2xsYXBzaWJsZTogZmFsc2Ugd2hpbGUgY29sbGFwc2VkOyBvcGVuIGZpcnN0IHBhbmVsCgkJaWYgKCBrZXkgPT09ICJjb2xsYXBzaWJsZSIgJiYgIXZhbHVlICYmIHRoaXMub3B0aW9ucy5hY3RpdmUgPT09IGZhbHNlICkgewoJCQl0aGlzLl9hY3RpdmF0ZSggMCApOwoJCX0KCgkJaWYgKCBrZXkgPT09ICJpY29ucyIgKSB7CgkJCXRoaXMuX2Rlc3Ryb3lJY29ucygpOwoJCQlpZiAoIHZhbHVlICkgewoJCQkJdGhpcy5fY3JlYXRlSWNvbnMoKTsKCQkJfQoJCX0KCX0sCgoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhpcy5fc3VwZXIoIHZhbHVlICk7CgoJCXRoaXMuZWxlbWVudC5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsIHZhbHVlICk7CgoJCS8vIFN1cHBvcnQ6IElFOCBPbmx5CgkJLy8gIzUzMzIgLyAjNjA1OSAtIG9wYWNpdHkgZG9lc24ndCBjYXNjYWRlIHRvIHBvc2l0aW9uZWQgZWxlbWVudHMgaW4gSUUKCQkvLyBzbyB3ZSBuZWVkIHRvIGFkZCB0aGUgZGlzYWJsZWQgY2xhc3MgdG8gdGhlIGhlYWRlcnMgYW5kIHBhbmVscwoJCXRoaXMuX3RvZ2dsZUNsYXNzKCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7CgkJdGhpcy5fdG9nZ2xlQ2xhc3MoIHRoaXMuaGVhZGVycy5hZGQoIHRoaXMuaGVhZGVycy5uZXh0KCkgKSwgbnVsbCwgInVpLXN0YXRlLWRpc2FibGVkIiwKCQkJISF2YWx1ZSApOwoJfSwKCglfa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCWlmICggZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgKSB7CgkJCXJldHVybjsKCQl9CgoJCXZhciBrZXlDb2RlID0gJC51aS5rZXlDb2RlLAoJCQlsZW5ndGggPSB0aGlzLmhlYWRlcnMubGVuZ3RoLAoJCQljdXJyZW50SW5kZXggPSB0aGlzLmhlYWRlcnMuaW5kZXgoIGV2ZW50LnRhcmdldCApLAoJCQl0b0ZvY3VzID0gZmFsc2U7CgoJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7CgkJY2FzZSBrZXlDb2RlLlJJR0hUOgoJCWNhc2Uga2V5Q29kZS5ET1dOOgoJCQl0b0ZvY3VzID0gdGhpcy5oZWFkZXJzWyAoIGN1cnJlbnRJbmRleCArIDEgKSAlIGxlbmd0aCBdOwoJCQlicmVhazsKCQljYXNlIGtleUNvZGUuTEVGVDoKCQljYXNlIGtleUNvZGUuVVA6CgkJCXRvRm9jdXMgPSB0aGlzLmhlYWRlcnNbICggY3VycmVudEluZGV4IC0gMSArIGxlbmd0aCApICUgbGVuZ3RoIF07CgkJCWJyZWFrOwoJCWNhc2Uga2V5Q29kZS5TUEFDRToKCQljYXNlIGtleUNvZGUuRU5URVI6CgkJCXRoaXMuX2V2ZW50SGFuZGxlciggZXZlbnQgKTsKCQkJYnJlYWs7CgkJY2FzZSBrZXlDb2RlLkhPTUU6CgkJCXRvRm9jdXMgPSB0aGlzLmhlYWRlcnNbIDAgXTsKCQkJYnJlYWs7CgkJY2FzZSBrZXlDb2RlLkVORDoKCQkJdG9Gb2N1cyA9IHRoaXMuaGVhZGVyc1sgbGVuZ3RoIC0gMSBdOwoJCQlicmVhazsKCQl9CgoJCWlmICggdG9Gb2N1cyApIHsKCQkJJCggZXZlbnQudGFyZ2V0ICkuYXR0ciggInRhYkluZGV4IiwgLTEgKTsKCQkJJCggdG9Gb2N1cyApLmF0dHIoICJ0YWJJbmRleCIsIDAgKTsKCQkJJCggdG9Gb2N1cyApLnRyaWdnZXIoICJmb2N1cyIgKTsKCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQl9Cgl9LAoKCV9wYW5lbEtleURvd246IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoIGV2ZW50LmtleUNvZGUgPT09ICQudWkua2V5Q29kZS5VUCAmJiBldmVudC5jdHJsS2V5ICkgewoJCQkkKCBldmVudC5jdXJyZW50VGFyZ2V0ICkucHJldigpLnRyaWdnZXIoICJmb2N1cyIgKTsKCQl9Cgl9LAoKCXJlZnJlc2g6IGZ1bmN0aW9uKCkgewoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zOwoJCXRoaXMuX3Byb2Nlc3NQYW5lbHMoKTsKCgkJLy8gV2FzIGNvbGxhcHNlZCBvciBubyBwYW5lbAoJCWlmICggKCBvcHRpb25zLmFjdGl2ZSA9PT0gZmFsc2UgJiYgb3B0aW9ucy5jb2xsYXBzaWJsZSA9PT0gdHJ1ZSApIHx8CgkJCQkhdGhpcy5oZWFkZXJzLmxlbmd0aCApIHsKCQkJb3B0aW9ucy5hY3RpdmUgPSBmYWxzZTsKCQkJdGhpcy5hY3RpdmUgPSAkKCk7CgoJCS8vIGFjdGl2ZSBmYWxzZSBvbmx5IHdoZW4gY29sbGFwc2libGUgaXMgdHJ1ZQoJCX0gZWxzZSBpZiAoIG9wdGlvbnMuYWN0aXZlID09PSBmYWxzZSApIHsKCQkJdGhpcy5fYWN0aXZhdGUoIDAgKTsKCgkJLy8gd2FzIGFjdGl2ZSwgYnV0IGFjdGl2ZSBwYW5lbCBpcyBnb25lCgkJfSBlbHNlIGlmICggdGhpcy5hY3RpdmUubGVuZ3RoICYmICEkLmNvbnRhaW5zKCB0aGlzLmVsZW1lbnRbIDAgXSwgdGhpcy5hY3RpdmVbIDAgXSApICkgewoKCQkJLy8gYWxsIHJlbWFpbmluZyBwYW5lbCBhcmUgZGlzYWJsZWQKCQkJaWYgKCB0aGlzLmhlYWRlcnMubGVuZ3RoID09PSB0aGlzLmhlYWRlcnMuZmluZCggIi51aS1zdGF0ZS1kaXNhYmxlZCIgKS5sZW5ndGggKSB7CgkJCQlvcHRpb25zLmFjdGl2ZSA9IGZhbHNlOwoJCQkJdGhpcy5hY3RpdmUgPSAkKCk7CgoJCQkvLyBhY3RpdmF0ZSBwcmV2aW91cyBwYW5lbAoJCQl9IGVsc2UgewoJCQkJdGhpcy5fYWN0aXZhdGUoIE1hdGgubWF4KCAwLCBvcHRpb25zLmFjdGl2ZSAtIDEgKSApOwoJCQl9CgoJCS8vIHdhcyBhY3RpdmUsIGFjdGl2ZSBwYW5lbCBzdGlsbCBleGlzdHMKCQl9IGVsc2UgewoKCQkJLy8gbWFrZSBzdXJlIGFjdGl2ZSBpbmRleCBpcyBjb3JyZWN0CgkJCW9wdGlvbnMuYWN0aXZlID0gdGhpcy5oZWFkZXJzLmluZGV4KCB0aGlzLmFjdGl2ZSApOwoJCX0KCgkJdGhpcy5fZGVzdHJveUljb25zKCk7CgoJCXRoaXMuX3JlZnJlc2goKTsKCX0sCgoJX3Byb2Nlc3NQYW5lbHM6IGZ1bmN0aW9uKCkgewoJCXZhciBwcmV2SGVhZGVycyA9IHRoaXMuaGVhZGVycywKCQkJcHJldlBhbmVscyA9IHRoaXMucGFuZWxzOwoKCQl0aGlzLmhlYWRlcnMgPSB0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLmhlYWRlciApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmhlYWRlcnMsICJ1aS1hY2NvcmRpb24taGVhZGVyIHVpLWFjY29yZGlvbi1oZWFkZXItY29sbGFwc2VkIiwKCQkJInVpLXN0YXRlLWRlZmF1bHQiICk7CgoJCXRoaXMucGFuZWxzID0gdGhpcy5oZWFkZXJzLm5leHQoKS5maWx0ZXIoICI6bm90KC51aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUpIiApLmhpZGUoKTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5wYW5lbHMsICJ1aS1hY2NvcmRpb24tY29udGVudCIsICJ1aS1oZWxwZXItcmVzZXQgdWktd2lkZ2V0LWNvbnRlbnQiICk7CgoJCS8vIEF2b2lkIG1lbW9yeSBsZWFrcyAoIzEwMDU2KQoJCWlmICggcHJldlBhbmVscyApIHsKCQkJdGhpcy5fb2ZmKCBwcmV2SGVhZGVycy5ub3QoIHRoaXMuaGVhZGVycyApICk7CgkJCXRoaXMuX29mZiggcHJldlBhbmVscy5ub3QoIHRoaXMucGFuZWxzICkgKTsKCQl9Cgl9LAoKCV9yZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl2YXIgbWF4SGVpZ2h0LAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zLAoJCQloZWlnaHRTdHlsZSA9IG9wdGlvbnMuaGVpZ2h0U3R5bGUsCgkJCXBhcmVudCA9IHRoaXMuZWxlbWVudC5wYXJlbnQoKTsKCgkJdGhpcy5hY3RpdmUgPSB0aGlzLl9maW5kQWN0aXZlKCBvcHRpb25zLmFjdGl2ZSApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmFjdGl2ZSwgInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIiwgInVpLXN0YXRlLWFjdGl2ZSIgKQoJCQkuX3JlbW92ZUNsYXNzKCB0aGlzLmFjdGl2ZSwgInVpLWFjY29yZGlvbi1oZWFkZXItY29sbGFwc2VkIiApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmFjdGl2ZS5uZXh0KCksICJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUiICk7CgkJdGhpcy5hY3RpdmUubmV4dCgpLnNob3coKTsKCgkJdGhpcy5oZWFkZXJzCgkJCS5hdHRyKCAicm9sZSIsICJ0YWIiICkKCQkJLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJdmFyIGhlYWRlciA9ICQoIHRoaXMgKSwKCQkJCQloZWFkZXJJZCA9IGhlYWRlci51bmlxdWVJZCgpLmF0dHIoICJpZCIgKSwKCQkJCQlwYW5lbCA9IGhlYWRlci5uZXh0KCksCgkJCQkJcGFuZWxJZCA9IHBhbmVsLnVuaXF1ZUlkKCkuYXR0ciggImlkIiApOwoJCQkJaGVhZGVyLmF0dHIoICJhcmlhLWNvbnRyb2xzIiwgcGFuZWxJZCApOwoJCQkJcGFuZWwuYXR0ciggImFyaWEtbGFiZWxsZWRieSIsIGhlYWRlcklkICk7CgkJCX0gKQoJCQkubmV4dCgpCgkJCQkuYXR0ciggInJvbGUiLCAidGFicGFuZWwiICk7CgoJCXRoaXMuaGVhZGVycwoJCQkubm90KCB0aGlzLmFjdGl2ZSApCgkJCQkuYXR0ciggewoJCQkJCSJhcmlhLXNlbGVjdGVkIjogImZhbHNlIiwKCQkJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIsCgkJCQkJdGFiSW5kZXg6IC0xCgkJCQl9ICkKCQkJCS5uZXh0KCkKCQkJCQkuYXR0ciggewoJCQkJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKCQkJCQl9ICkKCQkJCQkuaGlkZSgpOwoKCQkvLyBNYWtlIHN1cmUgYXQgbGVhc3Qgb25lIGhlYWRlciBpcyBpbiB0aGUgdGFiIG9yZGVyCgkJaWYgKCAhdGhpcy5hY3RpdmUubGVuZ3RoICkgewoJCQl0aGlzLmhlYWRlcnMuZXEoIDAgKS5hdHRyKCAidGFiSW5kZXgiLCAwICk7CgkJfSBlbHNlIHsKCQkJdGhpcy5hY3RpdmUuYXR0ciggewoJCQkJImFyaWEtc2VsZWN0ZWQiOiAidHJ1ZSIsCgkJCQkiYXJpYS1leHBhbmRlZCI6ICJ0cnVlIiwKCQkJCXRhYkluZGV4OiAwCgkJCX0gKQoJCQkJLm5leHQoKQoJCQkJCS5hdHRyKCB7CgkJCQkJCSJhcmlhLWhpZGRlbiI6ICJmYWxzZSIKCQkJCQl9ICk7CgkJfQoKCQl0aGlzLl9jcmVhdGVJY29ucygpOwoKCQl0aGlzLl9zZXR1cEV2ZW50cyggb3B0aW9ucy5ldmVudCApOwoKCQlpZiAoIGhlaWdodFN0eWxlID09PSAiZmlsbCIgKSB7CgkJCW1heEhlaWdodCA9IHBhcmVudC5oZWlnaHQoKTsKCQkJdGhpcy5lbGVtZW50LnNpYmxpbmdzKCAiOnZpc2libGUiICkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQl2YXIgZWxlbSA9ICQoIHRoaXMgKSwKCQkJCQlwb3NpdGlvbiA9IGVsZW0uY3NzKCAicG9zaXRpb24iICk7CgoJCQkJaWYgKCBwb3NpdGlvbiA9PT0gImFic29sdXRlIiB8fCBwb3NpdGlvbiA9PT0gImZpeGVkIiApIHsKCQkJCQlyZXR1cm47CgkJCQl9CgkJCQltYXhIZWlnaHQgLT0gZWxlbS5vdXRlckhlaWdodCggdHJ1ZSApOwoJCQl9ICk7CgoJCQl0aGlzLmhlYWRlcnMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQltYXhIZWlnaHQgLT0gJCggdGhpcyApLm91dGVySGVpZ2h0KCB0cnVlICk7CgkJCX0gKTsKCgkJCXRoaXMuaGVhZGVycy5uZXh0KCkKCQkJCS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCQkkKCB0aGlzICkuaGVpZ2h0KCBNYXRoLm1heCggMCwgbWF4SGVpZ2h0IC0KCQkJCQkJJCggdGhpcyApLmlubmVySGVpZ2h0KCkgKyAkKCB0aGlzICkuaGVpZ2h0KCkgKSApOwoJCQkJfSApCgkJCQkuY3NzKCAib3ZlcmZsb3ciLCAiYXV0byIgKTsKCQl9IGVsc2UgaWYgKCBoZWlnaHRTdHlsZSA9PT0gImF1dG8iICkgewoJCQltYXhIZWlnaHQgPSAwOwoJCQl0aGlzLmhlYWRlcnMubmV4dCgpCgkJCQkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkJdmFyIGlzVmlzaWJsZSA9ICQoIHRoaXMgKS5pcyggIjp2aXNpYmxlIiApOwoJCQkJCWlmICggIWlzVmlzaWJsZSApIHsKCQkJCQkJJCggdGhpcyApLnNob3coKTsKCQkJCQl9CgkJCQkJbWF4SGVpZ2h0ID0gTWF0aC5tYXgoIG1heEhlaWdodCwgJCggdGhpcyApLmNzcyggImhlaWdodCIsICIiICkuaGVpZ2h0KCkgKTsKCQkJCQlpZiAoICFpc1Zpc2libGUgKSB7CgkJCQkJCSQoIHRoaXMgKS5oaWRlKCk7CgkJCQkJfQoJCQkJfSApCgkJCQkuaGVpZ2h0KCBtYXhIZWlnaHQgKTsKCQl9Cgl9LAoKCV9hY3RpdmF0ZTogZnVuY3Rpb24oIGluZGV4ICkgewoJCXZhciBhY3RpdmUgPSB0aGlzLl9maW5kQWN0aXZlKCBpbmRleCApWyAwIF07CgoJCS8vIFRyeWluZyB0byBhY3RpdmF0ZSB0aGUgYWxyZWFkeSBhY3RpdmUgcGFuZWwKCQlpZiAoIGFjdGl2ZSA9PT0gdGhpcy5hY3RpdmVbIDAgXSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gVHJ5aW5nIHRvIGNvbGxhcHNlLCBzaW11bGF0ZSBhIGNsaWNrIG9uIHRoZSBjdXJyZW50bHkgYWN0aXZlIGhlYWRlcgoJCWFjdGl2ZSA9IGFjdGl2ZSB8fCB0aGlzLmFjdGl2ZVsgMCBdOwoKCQl0aGlzLl9ldmVudEhhbmRsZXIoIHsKCQkJdGFyZ2V0OiBhY3RpdmUsCgkJCWN1cnJlbnRUYXJnZXQ6IGFjdGl2ZSwKCQkJcHJldmVudERlZmF1bHQ6ICQubm9vcAoJCX0gKTsKCX0sCgoJX2ZpbmRBY3RpdmU6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHsKCQlyZXR1cm4gdHlwZW9mIHNlbGVjdG9yID09PSAibnVtYmVyIiA/IHRoaXMuaGVhZGVycy5lcSggc2VsZWN0b3IgKSA6ICQoKTsKCX0sCgoJX3NldHVwRXZlbnRzOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIGV2ZW50cyA9IHsKCQkJa2V5ZG93bjogIl9rZXlkb3duIgoJCX07CgkJaWYgKCBldmVudCApIHsKCQkJJC5lYWNoKCBldmVudC5zcGxpdCggIiAiICksIGZ1bmN0aW9uKCBpbmRleCwgZXZlbnROYW1lICkgewoJCQkJZXZlbnRzWyBldmVudE5hbWUgXSA9ICJfZXZlbnRIYW5kbGVyIjsKCQkJfSApOwoJCX0KCgkJdGhpcy5fb2ZmKCB0aGlzLmhlYWRlcnMuYWRkKCB0aGlzLmhlYWRlcnMubmV4dCgpICkgKTsKCQl0aGlzLl9vbiggdGhpcy5oZWFkZXJzLCBldmVudHMgKTsKCQl0aGlzLl9vbiggdGhpcy5oZWFkZXJzLm5leHQoKSwgeyBrZXlkb3duOiAiX3BhbmVsS2V5RG93biIgfSApOwoJCXRoaXMuX2hvdmVyYWJsZSggdGhpcy5oZWFkZXJzICk7CgkJdGhpcy5fZm9jdXNhYmxlKCB0aGlzLmhlYWRlcnMgKTsKCX0sCgoJX2V2ZW50SGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBhY3RpdmVDaGlsZHJlbiwgY2xpY2tlZENoaWxkcmVuLAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zLAoJCQlhY3RpdmUgPSB0aGlzLmFjdGl2ZSwKCQkJY2xpY2tlZCA9ICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKSwKCQkJY2xpY2tlZElzQWN0aXZlID0gY2xpY2tlZFsgMCBdID09PSBhY3RpdmVbIDAgXSwKCQkJY29sbGFwc2luZyA9IGNsaWNrZWRJc0FjdGl2ZSAmJiBvcHRpb25zLmNvbGxhcHNpYmxlLAoJCQl0b1Nob3cgPSBjb2xsYXBzaW5nID8gJCgpIDogY2xpY2tlZC5uZXh0KCksCgkJCXRvSGlkZSA9IGFjdGl2ZS5uZXh0KCksCgkJCWV2ZW50RGF0YSA9IHsKCQkJCW9sZEhlYWRlcjogYWN0aXZlLAoJCQkJb2xkUGFuZWw6IHRvSGlkZSwKCQkJCW5ld0hlYWRlcjogY29sbGFwc2luZyA/ICQoKSA6IGNsaWNrZWQsCgkJCQluZXdQYW5lbDogdG9TaG93CgkJCX07CgoJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgoJCWlmICgKCgkJCQkvLyBjbGljayBvbiBhY3RpdmUgaGVhZGVyLCBidXQgbm90IGNvbGxhcHNpYmxlCgkJCQkoIGNsaWNrZWRJc0FjdGl2ZSAmJiAhb3B0aW9ucy5jb2xsYXBzaWJsZSApIHx8CgoJCQkJLy8gYWxsb3cgY2FuY2VsaW5nIGFjdGl2YXRpb24KCQkJCSggdGhpcy5fdHJpZ2dlciggImJlZm9yZUFjdGl2YXRlIiwgZXZlbnQsIGV2ZW50RGF0YSApID09PSBmYWxzZSApICkgewoJCQlyZXR1cm47CgkJfQoKCQlvcHRpb25zLmFjdGl2ZSA9IGNvbGxhcHNpbmcgPyBmYWxzZSA6IHRoaXMuaGVhZGVycy5pbmRleCggY2xpY2tlZCApOwoKCQkvLyBXaGVuIHRoZSBjYWxsIHRvIC5fdG9nZ2xlKCkgY29tZXMgYWZ0ZXIgdGhlIGNsYXNzIGNoYW5nZXMKCQkvLyBpdCBjYXVzZXMgYSB2ZXJ5IG9kZCBidWcgaW4gSUUgOCAoc2VlICM2NzIwKQoJCXRoaXMuYWN0aXZlID0gY2xpY2tlZElzQWN0aXZlID8gJCgpIDogY2xpY2tlZDsKCQl0aGlzLl90b2dnbGUoIGV2ZW50RGF0YSApOwoKCQkvLyBTd2l0Y2ggY2xhc3NlcwoJCS8vIGNvcm5lciBjbGFzc2VzIG9uIHRoZSBwcmV2aW91c2x5IGFjdGl2ZSBoZWFkZXIgc3RheSBhZnRlciB0aGUgYW5pbWF0aW9uCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGFjdGl2ZSwgInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIiwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQlpZiAoIG9wdGlvbnMuaWNvbnMgKSB7CgkJCWFjdGl2ZUNoaWxkcmVuID0gYWN0aXZlLmNoaWxkcmVuKCAiLnVpLWFjY29yZGlvbi1oZWFkZXItaWNvbiIgKTsKCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGFjdGl2ZUNoaWxkcmVuLCBudWxsLCBvcHRpb25zLmljb25zLmFjdGl2ZUhlYWRlciApCgkJCQkuX2FkZENsYXNzKCBhY3RpdmVDaGlsZHJlbiwgbnVsbCwgb3B0aW9ucy5pY29ucy5oZWFkZXIgKTsKCQl9CgoJCWlmICggIWNsaWNrZWRJc0FjdGl2ZSApIHsKCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGNsaWNrZWQsICJ1aS1hY2NvcmRpb24taGVhZGVyLWNvbGxhcHNlZCIgKQoJCQkJLl9hZGRDbGFzcyggY2xpY2tlZCwgInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIiwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQkJaWYgKCBvcHRpb25zLmljb25zICkgewoJCQkJY2xpY2tlZENoaWxkcmVuID0gY2xpY2tlZC5jaGlsZHJlbiggIi51aS1hY2NvcmRpb24taGVhZGVyLWljb24iICk7CgkJCQl0aGlzLl9yZW1vdmVDbGFzcyggY2xpY2tlZENoaWxkcmVuLCBudWxsLCBvcHRpb25zLmljb25zLmhlYWRlciApCgkJCQkJLl9hZGRDbGFzcyggY2xpY2tlZENoaWxkcmVuLCBudWxsLCBvcHRpb25zLmljb25zLmFjdGl2ZUhlYWRlciApOwoJCQl9CgoJCQl0aGlzLl9hZGRDbGFzcyggY2xpY2tlZC5uZXh0KCksICJ1aS1hY2NvcmRpb24tY29udGVudC1hY3RpdmUiICk7CgkJfQoJfSwKCglfdG9nZ2xlOiBmdW5jdGlvbiggZGF0YSApIHsKCQl2YXIgdG9TaG93ID0gZGF0YS5uZXdQYW5lbCwKCQkJdG9IaWRlID0gdGhpcy5wcmV2U2hvdy5sZW5ndGggPyB0aGlzLnByZXZTaG93IDogZGF0YS5vbGRQYW5lbDsKCgkJLy8gSGFuZGxlIGFjdGl2YXRpbmcgYSBwYW5lbCBkdXJpbmcgdGhlIGFuaW1hdGlvbiBmb3IgYW5vdGhlciBhY3RpdmF0aW9uCgkJdGhpcy5wcmV2U2hvdy5hZGQoIHRoaXMucHJldkhpZGUgKS5zdG9wKCB0cnVlLCB0cnVlICk7CgkJdGhpcy5wcmV2U2hvdyA9IHRvU2hvdzsKCQl0aGlzLnByZXZIaWRlID0gdG9IaWRlOwoKCQlpZiAoIHRoaXMub3B0aW9ucy5hbmltYXRlICkgewoJCQl0aGlzLl9hbmltYXRlKCB0b1Nob3csIHRvSGlkZSwgZGF0YSApOwoJCX0gZWxzZSB7CgkJCXRvSGlkZS5oaWRlKCk7CgkJCXRvU2hvdy5zaG93KCk7CgkJCXRoaXMuX3RvZ2dsZUNvbXBsZXRlKCBkYXRhICk7CgkJfQoKCQl0b0hpZGUuYXR0ciggewoJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSIKCQl9ICk7CgkJdG9IaWRlLnByZXYoKS5hdHRyKCB7CgkJCSJhcmlhLXNlbGVjdGVkIjogImZhbHNlIiwKCQkJImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiCgkJfSApOwoKCQkvLyBpZiB3ZSdyZSBzd2l0Y2hpbmcgcGFuZWxzLCByZW1vdmUgdGhlIG9sZCBoZWFkZXIgZnJvbSB0aGUgdGFiIG9yZGVyCgkJLy8gaWYgd2UncmUgb3BlbmluZyBmcm9tIGNvbGxhcHNlZCBzdGF0ZSwgcmVtb3ZlIHRoZSBwcmV2aW91cyBoZWFkZXIgZnJvbSB0aGUgdGFiIG9yZGVyCgkJLy8gaWYgd2UncmUgY29sbGFwc2luZywgdGhlbiBrZWVwIHRoZSBjb2xsYXBzaW5nIGhlYWRlciBpbiB0aGUgdGFiIG9yZGVyCgkJaWYgKCB0b1Nob3cubGVuZ3RoICYmIHRvSGlkZS5sZW5ndGggKSB7CgkJCXRvSGlkZS5wcmV2KCkuYXR0ciggewoJCQkJInRhYkluZGV4IjogLTEsCgkJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIKCQkJfSApOwoJCX0gZWxzZSBpZiAoIHRvU2hvdy5sZW5ndGggKSB7CgkJCXRoaXMuaGVhZGVycy5maWx0ZXIoIGZ1bmN0aW9uKCkgewoJCQkJcmV0dXJuIHBhcnNlSW50KCAkKCB0aGlzICkuYXR0ciggInRhYkluZGV4IiApLCAxMCApID09PSAwOwoJCQl9ICkKCQkJCS5hdHRyKCAidGFiSW5kZXgiLCAtMSApOwoJCX0KCgkJdG9TaG93CgkJCS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAiZmFsc2UiICkKCQkJLnByZXYoKQoJCQkJLmF0dHIoIHsKCQkJCQkiYXJpYS1zZWxlY3RlZCI6ICJ0cnVlIiwKCQkJCQkiYXJpYS1leHBhbmRlZCI6ICJ0cnVlIiwKCQkJCQl0YWJJbmRleDogMAoJCQkJfSApOwoJfSwKCglfYW5pbWF0ZTogZnVuY3Rpb24oIHRvU2hvdywgdG9IaWRlLCBkYXRhICkgewoJCXZhciB0b3RhbCwgZWFzaW5nLCBkdXJhdGlvbiwKCQkJdGhhdCA9IHRoaXMsCgkJCWFkanVzdCA9IDAsCgkJCWJveFNpemluZyA9IHRvU2hvdy5jc3MoICJib3gtc2l6aW5nIiApLAoJCQlkb3duID0gdG9TaG93Lmxlbmd0aCAmJgoJCQkJKCAhdG9IaWRlLmxlbmd0aCB8fCAoIHRvU2hvdy5pbmRleCgpIDwgdG9IaWRlLmluZGV4KCkgKSApLAoJCQlhbmltYXRlID0gdGhpcy5vcHRpb25zLmFuaW1hdGUgfHwge30sCgkJCW9wdGlvbnMgPSBkb3duICYmIGFuaW1hdGUuZG93biB8fCBhbmltYXRlLAoJCQljb21wbGV0ZSA9IGZ1bmN0aW9uKCkgewoJCQkJdGhhdC5fdG9nZ2xlQ29tcGxldGUoIGRhdGEgKTsKCQkJfTsKCgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gIm51bWJlciIgKSB7CgkJCWR1cmF0aW9uID0gb3B0aW9uczsKCQl9CgkJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgKSB7CgkJCWVhc2luZyA9IG9wdGlvbnM7CgkJfQoKCQkvLyBmYWxsIGJhY2sgZnJvbSBvcHRpb25zIHRvIGFuaW1hdGlvbiBpbiBjYXNlIG9mIHBhcnRpYWwgZG93biBzZXR0aW5ncwoJCWVhc2luZyA9IGVhc2luZyB8fCBvcHRpb25zLmVhc2luZyB8fCBhbmltYXRlLmVhc2luZzsKCQlkdXJhdGlvbiA9IGR1cmF0aW9uIHx8IG9wdGlvbnMuZHVyYXRpb24gfHwgYW5pbWF0ZS5kdXJhdGlvbjsKCgkJaWYgKCAhdG9IaWRlLmxlbmd0aCApIHsKCQkJcmV0dXJuIHRvU2hvdy5hbmltYXRlKCB0aGlzLnNob3dQcm9wcywgZHVyYXRpb24sIGVhc2luZywgY29tcGxldGUgKTsKCQl9CgkJaWYgKCAhdG9TaG93Lmxlbmd0aCApIHsKCQkJcmV0dXJuIHRvSGlkZS5hbmltYXRlKCB0aGlzLmhpZGVQcm9wcywgZHVyYXRpb24sIGVhc2luZywgY29tcGxldGUgKTsKCQl9CgoJCXRvdGFsID0gdG9TaG93LnNob3coKS5vdXRlckhlaWdodCgpOwoJCXRvSGlkZS5hbmltYXRlKCB0aGlzLmhpZGVQcm9wcywgewoJCQlkdXJhdGlvbjogZHVyYXRpb24sCgkJCWVhc2luZzogZWFzaW5nLAoJCQlzdGVwOiBmdW5jdGlvbiggbm93LCBmeCApIHsKCQkJCWZ4Lm5vdyA9IE1hdGgucm91bmQoIG5vdyApOwoJCQl9CgkJfSApOwoJCXRvU2hvdwoJCQkuaGlkZSgpCgkJCS5hbmltYXRlKCB0aGlzLnNob3dQcm9wcywgewoJCQkJZHVyYXRpb246IGR1cmF0aW9uLAoJCQkJZWFzaW5nOiBlYXNpbmcsCgkJCQljb21wbGV0ZTogY29tcGxldGUsCgkJCQlzdGVwOiBmdW5jdGlvbiggbm93LCBmeCApIHsKCQkJCQlmeC5ub3cgPSBNYXRoLnJvdW5kKCBub3cgKTsKCQkJCQlpZiAoIGZ4LnByb3AgIT09ICJoZWlnaHQiICkgewoJCQkJCQlpZiAoIGJveFNpemluZyA9PT0gImNvbnRlbnQtYm94IiApIHsKCQkJCQkJCWFkanVzdCArPSBmeC5ub3c7CgkJCQkJCX0KCQkJCQl9IGVsc2UgaWYgKCB0aGF0Lm9wdGlvbnMuaGVpZ2h0U3R5bGUgIT09ICJjb250ZW50IiApIHsKCQkJCQkJZngubm93ID0gTWF0aC5yb3VuZCggdG90YWwgLSB0b0hpZGUub3V0ZXJIZWlnaHQoKSAtIGFkanVzdCApOwoJCQkJCQlhZGp1c3QgPSAwOwoJCQkJCX0KCQkJCX0KCQkJfSApOwoJfSwKCglfdG9nZ2xlQ29tcGxldGU6IGZ1bmN0aW9uKCBkYXRhICkgewoJCXZhciB0b0hpZGUgPSBkYXRhLm9sZFBhbmVsLAoJCQlwcmV2ID0gdG9IaWRlLnByZXYoKTsKCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRvSGlkZSwgInVpLWFjY29yZGlvbi1jb250ZW50LWFjdGl2ZSIgKTsKCQl0aGlzLl9yZW1vdmVDbGFzcyggcHJldiwgInVpLWFjY29yZGlvbi1oZWFkZXItYWN0aXZlIiApCgkJCS5fYWRkQ2xhc3MoIHByZXYsICJ1aS1hY2NvcmRpb24taGVhZGVyLWNvbGxhcHNlZCIgKTsKCgkJLy8gV29yayBhcm91bmQgZm9yIHJlbmRlcmluZyBidWcgaW4gSUUgKCM1NDIxKQoJCWlmICggdG9IaWRlLmxlbmd0aCApIHsKCQkJdG9IaWRlLnBhcmVudCgpWyAwIF0uY2xhc3NOYW1lID0gdG9IaWRlLnBhcmVudCgpWyAwIF0uY2xhc3NOYW1lOwoJCX0KCQl0aGlzLl90cmlnZ2VyKCAiYWN0aXZhdGUiLCBudWxsLCBkYXRhICk7Cgl9Cn0gKTsKCgoKdmFyIHNhZmVBY3RpdmVFbGVtZW50ID0gJC51aS5zYWZlQWN0aXZlRWxlbWVudCA9IGZ1bmN0aW9uKCBkb2N1bWVudCApIHsKCXZhciBhY3RpdmVFbGVtZW50OwoKCS8vIFN1cHBvcnQ6IElFIDkgb25seQoJLy8gSUU5IHRocm93cyBhbiAiVW5zcGVjaWZpZWQgZXJyb3IiIGFjY2Vzc2luZyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGZyb20gYW4gPGlmcmFtZT4KCXRyeSB7CgkJYWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQ7Cgl9IGNhdGNoICggZXJyb3IgKSB7CgkJYWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LmJvZHk7Cgl9CgoJLy8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHkKCS8vIElFIG1heSByZXR1cm4gbnVsbCBpbnN0ZWFkIG9mIGFuIGVsZW1lbnQKCS8vIEludGVyZXN0aW5nbHksIHRoaXMgb25seSBzZWVtcyB0byBvY2N1ciB3aGVuIE5PVCBpbiBhbiBpZnJhbWUKCWlmICggIWFjdGl2ZUVsZW1lbnQgKSB7CgkJYWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LmJvZHk7Cgl9CgoJLy8gU3VwcG9ydDogSUUgMTEgb25seQoJLy8gSUUxMSByZXR1cm5zIGEgc2VlbWluZ2x5IGVtcHR5IG9iamVjdCBpbiBzb21lIGNhc2VzIHdoZW4gYWNjZXNzaW5nCgkvLyBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGZyb20gYW4gPGlmcmFtZT4KCWlmICggIWFjdGl2ZUVsZW1lbnQubm9kZU5hbWUgKSB7CgkJYWN0aXZlRWxlbWVudCA9IGRvY3VtZW50LmJvZHk7Cgl9CgoJcmV0dXJuIGFjdGl2ZUVsZW1lbnQ7Cn07CgoKLyohCiAqIGpRdWVyeSBVSSBNZW51IDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogTWVudQovLz4+Z3JvdXA6IFdpZGdldHMKLy8+PmRlc2NyaXB0aW9uOiBDcmVhdGVzIG5lc3RhYmxlIG1lbnVzLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vbWVudS8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL21lbnUvCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvbWVudS5jc3MKLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzCgoKCnZhciB3aWRnZXRzTWVudSA9ICQud2lkZ2V0KCAidWkubWVudSIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJZGVmYXVsdEVsZW1lbnQ6ICI8dWw+IiwKCWRlbGF5OiAzMDAsCglvcHRpb25zOiB7CgkJaWNvbnM6IHsKCQkJc3VibWVudTogInVpLWljb24tY2FyZXQtMS1lIgoJCX0sCgkJaXRlbXM6ICI+ICoiLAoJCW1lbnVzOiAidWwiLAoJCXBvc2l0aW9uOiB7CgkJCW15OiAibGVmdCB0b3AiLAoJCQlhdDogInJpZ2h0IHRvcCIKCQl9LAoJCXJvbGU6ICJtZW51IiwKCgkJLy8gQ2FsbGJhY2tzCgkJYmx1cjogbnVsbCwKCQlmb2N1czogbnVsbCwKCQlzZWxlY3Q6IG51bGwKCX0sCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJdGhpcy5hY3RpdmVNZW51ID0gdGhpcy5lbGVtZW50OwoKCQkvLyBGbGFnIHVzZWQgdG8gcHJldmVudCBmaXJpbmcgb2YgdGhlIGNsaWNrIGhhbmRsZXIKCQkvLyBhcyB0aGUgZXZlbnQgYnViYmxlcyB1cCB0aHJvdWdoIG5lc3RlZCBtZW51cwoJCXRoaXMubW91c2VIYW5kbGVkID0gZmFsc2U7CgkJdGhpcy5lbGVtZW50CgkJCS51bmlxdWVJZCgpCgkJCS5hdHRyKCB7CgkJCQlyb2xlOiB0aGlzLm9wdGlvbnMucm9sZSwKCQkJCXRhYkluZGV4OiAwCgkJCX0gKTsKCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1tZW51IiwgInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCIgKTsKCQl0aGlzLl9vbiggewoKCQkJLy8gUHJldmVudCBmb2N1cyBmcm9tIHN0aWNraW5nIHRvIGxpbmtzIGluc2lkZSBtZW51IGFmdGVyIGNsaWNraW5nCgkJCS8vIHRoZW0gKGZvY3VzIHNob3VsZCBhbHdheXMgc3RheSBvbiBVTCBkdXJpbmcgbmF2aWdhdGlvbikuCgkJCSJtb3VzZWRvd24gLnVpLW1lbnUtaXRlbSI6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCX0sCgkJCSJjbGljayAudWktbWVudS1pdGVtIjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJdmFyIHRhcmdldCA9ICQoIGV2ZW50LnRhcmdldCApOwoJCQkJdmFyIGFjdGl2ZSA9ICQoICQudWkuc2FmZUFjdGl2ZUVsZW1lbnQoIHRoaXMuZG9jdW1lbnRbIDAgXSApICk7CgkJCQlpZiAoICF0aGlzLm1vdXNlSGFuZGxlZCAmJiB0YXJnZXQubm90KCAiLnVpLXN0YXRlLWRpc2FibGVkIiApLmxlbmd0aCApIHsKCQkJCQl0aGlzLnNlbGVjdCggZXZlbnQgKTsKCgkJCQkJLy8gT25seSBzZXQgdGhlIG1vdXNlSGFuZGxlZCBmbGFnIGlmIHRoZSBldmVudCB3aWxsIGJ1YmJsZSwgc2VlICM5NDY5LgoJCQkJCWlmICggIWV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7CgkJCQkJCXRoaXMubW91c2VIYW5kbGVkID0gdHJ1ZTsKCQkJCQl9CgoJCQkJCS8vIE9wZW4gc3VibWVudSBvbiBjbGljawoJCQkJCWlmICggdGFyZ2V0LmhhcyggIi51aS1tZW51IiApLmxlbmd0aCApIHsKCQkJCQkJdGhpcy5leHBhbmQoIGV2ZW50ICk7CgkJCQkJfSBlbHNlIGlmICggIXRoaXMuZWxlbWVudC5pcyggIjpmb2N1cyIgKSAmJgoJCQkJCQkJYWN0aXZlLmNsb3Nlc3QoICIudWktbWVudSIgKS5sZW5ndGggKSB7CgoJCQkJCQkvLyBSZWRpcmVjdCBmb2N1cyB0byB0aGUgbWVudQoJCQkJCQl0aGlzLmVsZW1lbnQudHJpZ2dlciggImZvY3VzIiwgWyB0cnVlIF0gKTsKCgkJCQkJCS8vIElmIHRoZSBhY3RpdmUgaXRlbSBpcyBvbiB0aGUgdG9wIGxldmVsLCBsZXQgaXQgc3RheSBhY3RpdmUuCgkJCQkJCS8vIE90aGVyd2lzZSwgYmx1ciB0aGUgYWN0aXZlIGl0ZW0gc2luY2UgaXQgaXMgbm8gbG9uZ2VyIHZpc2libGUuCgkJCQkJCWlmICggdGhpcy5hY3RpdmUgJiYgdGhpcy5hY3RpdmUucGFyZW50cyggIi51aS1tZW51IiApLmxlbmd0aCA9PT0gMSApIHsKCQkJCQkJCWNsZWFyVGltZW91dCggdGhpcy50aW1lciApOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9LAoJCQkibW91c2VlbnRlciAudWktbWVudS1pdGVtIjogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkJCS8vIElnbm9yZSBtb3VzZSBldmVudHMgd2hpbGUgdHlwZWFoZWFkIGlzIGFjdGl2ZSwgc2VlICMxMDQ1OC4KCQkJCS8vIFByZXZlbnRzIGZvY3VzaW5nIHRoZSB3cm9uZyBpdGVtIHdoZW4gdHlwZWFoZWFkIGNhdXNlcyBhIHNjcm9sbCB3aGlsZSB0aGUgbW91c2UKCQkJCS8vIGlzIG92ZXIgYW4gaXRlbSBpbiB0aGUgbWVudQoJCQkJaWYgKCB0aGlzLnByZXZpb3VzRmlsdGVyICkgewoJCQkJCXJldHVybjsKCQkJCX0KCgkJCQl2YXIgYWN0dWFsVGFyZ2V0ID0gJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggIi51aS1tZW51LWl0ZW0iICksCgkJCQkJdGFyZ2V0ID0gJCggZXZlbnQuY3VycmVudFRhcmdldCApOwoKCQkJCS8vIElnbm9yZSBidWJibGVkIGV2ZW50cyBvbiBwYXJlbnQgaXRlbXMsIHNlZSAjMTE2NDEKCQkJCWlmICggYWN0dWFsVGFyZ2V0WyAwIF0gIT09IHRhcmdldFsgMCBdICkgewoJCQkJCXJldHVybjsKCQkJCX0KCgkJCQkvLyBSZW1vdmUgdWktc3RhdGUtYWN0aXZlIGNsYXNzIGZyb20gc2libGluZ3Mgb2YgdGhlIG5ld2x5IGZvY3VzZWQgbWVudSBpdGVtCgkJCQkvLyB0byBhdm9pZCBhIGp1bXAgY2F1c2VkIGJ5IGFkamFjZW50IGVsZW1lbnRzIGJvdGggaGF2aW5nIGEgY2xhc3Mgd2l0aCBhIGJvcmRlcgoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRhcmdldC5zaWJsaW5ncygpLmNoaWxkcmVuKCAiLnVpLXN0YXRlLWFjdGl2ZSIgKSwKCQkJCQludWxsLCAidWktc3RhdGUtYWN0aXZlIiApOwoJCQkJdGhpcy5mb2N1cyggZXZlbnQsIHRhcmdldCApOwoJCQl9LAoJCQltb3VzZWxlYXZlOiAiY29sbGFwc2VBbGwiLAoJCQkibW91c2VsZWF2ZSAudWktbWVudSI6ICJjb2xsYXBzZUFsbCIsCgkJCWZvY3VzOiBmdW5jdGlvbiggZXZlbnQsIGtlZXBBY3RpdmVJdGVtICkgewoKCQkJCS8vIElmIHRoZXJlJ3MgYWxyZWFkeSBhbiBhY3RpdmUgaXRlbSwga2VlcCBpdCBhY3RpdmUKCQkJCS8vIElmIG5vdCwgYWN0aXZhdGUgdGhlIGZpcnN0IGl0ZW0KCQkJCXZhciBpdGVtID0gdGhpcy5hY3RpdmUgfHwgdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApLmVxKCAwICk7CgoJCQkJaWYgKCAha2VlcEFjdGl2ZUl0ZW0gKSB7CgkJCQkJdGhpcy5mb2N1cyggZXZlbnQsIGl0ZW0gKTsKCQkJCX0KCQkJfSwKCQkJYmx1cjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgewoJCQkJCXZhciBub3RDb250YWluZWQgPSAhJC5jb250YWlucygKCQkJCQkJdGhpcy5lbGVtZW50WyAwIF0sCgkJCQkJCSQudWkuc2FmZUFjdGl2ZUVsZW1lbnQoIHRoaXMuZG9jdW1lbnRbIDAgXSApCgkJCQkJKTsKCQkJCQlpZiAoIG5vdENvbnRhaW5lZCApIHsKCQkJCQkJdGhpcy5jb2xsYXBzZUFsbCggZXZlbnQgKTsKCQkJCQl9CgkJCQl9ICk7CgkJCX0sCgkJCWtleWRvd246ICJfa2V5ZG93biIKCQl9ICk7CgoJCXRoaXMucmVmcmVzaCgpOwoKCQkvLyBDbGlja3Mgb3V0c2lkZSBvZiBhIG1lbnUgY29sbGFwc2UgYW55IG9wZW4gbWVudXMKCQl0aGlzLl9vbiggdGhpcy5kb2N1bWVudCwgewoJCQljbGljazogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCB0aGlzLl9jbG9zZU9uRG9jdW1lbnRDbGljayggZXZlbnQgKSApIHsKCQkJCQl0aGlzLmNvbGxhcHNlQWxsKCBldmVudCApOwoJCQkJfQoKCQkJCS8vIFJlc2V0IHRoZSBtb3VzZUhhbmRsZWQgZmxhZwoJCQkJdGhpcy5tb3VzZUhhbmRsZWQgPSBmYWxzZTsKCQkJfQoJCX0gKTsKCX0sCgoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgewoJCXZhciBpdGVtcyA9IHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLW1lbnUtaXRlbSIgKQoJCQkJLnJlbW92ZUF0dHIoICJyb2xlIGFyaWEtZGlzYWJsZWQiICksCgkJCXN1Ym1lbnVzID0gaXRlbXMuY2hpbGRyZW4oICIudWktbWVudS1pdGVtLXdyYXBwZXIiICkKCQkJCS5yZW1vdmVVbmlxdWVJZCgpCgkJCQkucmVtb3ZlQXR0ciggInRhYkluZGV4IHJvbGUgYXJpYS1oYXNwb3B1cCIgKTsKCgkJLy8gRGVzdHJveSAoc3ViKW1lbnVzCgkJdGhpcy5lbGVtZW50CgkJCS5yZW1vdmVBdHRyKCAiYXJpYS1hY3RpdmVkZXNjZW5kYW50IiApCgkJCS5maW5kKCAiLnVpLW1lbnUiICkuYWRkQmFjaygpCgkJCQkucmVtb3ZlQXR0ciggInJvbGUgYXJpYS1sYWJlbGxlZGJ5IGFyaWEtZXhwYW5kZWQgYXJpYS1oaWRkZW4gYXJpYS1kaXNhYmxlZCAiICsKCQkJCQkidGFiSW5kZXgiICkKCQkJCS5yZW1vdmVVbmlxdWVJZCgpCgkJCQkuc2hvdygpOwoKCQlzdWJtZW51cy5jaGlsZHJlbigpLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgZWxlbSA9ICQoIHRoaXMgKTsKCQkJaWYgKCBlbGVtLmRhdGEoICJ1aS1tZW51LXN1Ym1lbnUtY2FyZXQiICkgKSB7CgkJCQllbGVtLnJlbW92ZSgpOwoJCQl9CgkJfSApOwoJfSwKCglfa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBtYXRjaCwgcHJldiwgY2hhcmFjdGVyLCBza2lwLAoJCQlwcmV2ZW50RGVmYXVsdCA9IHRydWU7CgoJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7CgkJY2FzZSAkLnVpLmtleUNvZGUuUEFHRV9VUDoKCQkJdGhpcy5wcmV2aW91c1BhZ2UoIGV2ZW50ICk7CgkJCWJyZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfRE9XTjoKCQkJdGhpcy5uZXh0UGFnZSggZXZlbnQgKTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuSE9NRToKCQkJdGhpcy5fbW92ZSggImZpcnN0IiwgImZpcnN0IiwgZXZlbnQgKTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuRU5EOgoJCQl0aGlzLl9tb3ZlKCAibGFzdCIsICJsYXN0IiwgZXZlbnQgKTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuVVA6CgkJCXRoaXMucHJldmlvdXMoIGV2ZW50ICk7CgkJCWJyZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLkRPV046CgkJCXRoaXMubmV4dCggZXZlbnQgKTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuTEVGVDoKCQkJdGhpcy5jb2xsYXBzZSggZXZlbnQgKTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuUklHSFQ6CgkJCWlmICggdGhpcy5hY3RpdmUgJiYgIXRoaXMuYWN0aXZlLmlzKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApICkgewoJCQkJdGhpcy5leHBhbmQoIGV2ZW50ICk7CgkJCX0KCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuRU5URVI6CgkJY2FzZSAkLnVpLmtleUNvZGUuU1BBQ0U6CgkJCXRoaXMuX2FjdGl2YXRlKCBldmVudCApOwoJCQlicmVhazsKCQljYXNlICQudWkua2V5Q29kZS5FU0NBUEU6CgkJCXRoaXMuY29sbGFwc2UoIGV2ZW50ICk7CgkJCWJyZWFrOwoJCWRlZmF1bHQ6CgkJCXByZXZlbnREZWZhdWx0ID0gZmFsc2U7CgkJCXByZXYgPSB0aGlzLnByZXZpb3VzRmlsdGVyIHx8ICIiOwoJCQlza2lwID0gZmFsc2U7CgoJCQkvLyBTdXBwb3J0IG51bWJlciBwYWQgdmFsdWVzCgkJCWNoYXJhY3RlciA9IGV2ZW50LmtleUNvZGUgPj0gOTYgJiYgZXZlbnQua2V5Q29kZSA8PSAxMDUgPwoJCQkJKCBldmVudC5rZXlDb2RlIC0gOTYgKS50b1N0cmluZygpIDogU3RyaW5nLmZyb21DaGFyQ29kZSggZXZlbnQua2V5Q29kZSApOwoKCQkJY2xlYXJUaW1lb3V0KCB0aGlzLmZpbHRlclRpbWVyICk7CgoJCQlpZiAoIGNoYXJhY3RlciA9PT0gcHJldiApIHsKCQkJCXNraXAgPSB0cnVlOwoJCQl9IGVsc2UgewoJCQkJY2hhcmFjdGVyID0gcHJldiArIGNoYXJhY3RlcjsKCQkJfQoKCQkJbWF0Y2ggPSB0aGlzLl9maWx0ZXJNZW51SXRlbXMoIGNoYXJhY3RlciApOwoJCQltYXRjaCA9IHNraXAgJiYgbWF0Y2guaW5kZXgoIHRoaXMuYWN0aXZlLm5leHQoKSApICE9PSAtMSA/CgkJCQl0aGlzLmFjdGl2ZS5uZXh0QWxsKCAiLnVpLW1lbnUtaXRlbSIgKSA6CgkJCQltYXRjaDsKCgkJCS8vIElmIG5vIG1hdGNoZXMgb24gdGhlIGN1cnJlbnQgZmlsdGVyLCByZXNldCB0byB0aGUgbGFzdCBjaGFyYWN0ZXIgcHJlc3NlZAoJCQkvLyB0byBtb3ZlIGRvd24gdGhlIG1lbnUgdG8gdGhlIGZpcnN0IGl0ZW0gdGhhdCBzdGFydHMgd2l0aCB0aGF0IGNoYXJhY3RlcgoJCQlpZiAoICFtYXRjaC5sZW5ndGggKSB7CgkJCQljaGFyYWN0ZXIgPSBTdHJpbmcuZnJvbUNoYXJDb2RlKCBldmVudC5rZXlDb2RlICk7CgkJCQltYXRjaCA9IHRoaXMuX2ZpbHRlck1lbnVJdGVtcyggY2hhcmFjdGVyICk7CgkJCX0KCgkJCWlmICggbWF0Y2gubGVuZ3RoICkgewoJCQkJdGhpcy5mb2N1cyggZXZlbnQsIG1hdGNoICk7CgkJCQl0aGlzLnByZXZpb3VzRmlsdGVyID0gY2hhcmFjdGVyOwoJCQkJdGhpcy5maWx0ZXJUaW1lciA9IHRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCQlkZWxldGUgdGhpcy5wcmV2aW91c0ZpbHRlcjsKCQkJCX0sIDEwMDAgKTsKCQkJfSBlbHNlIHsKCQkJCWRlbGV0ZSB0aGlzLnByZXZpb3VzRmlsdGVyOwoJCQl9CgkJfQoKCQlpZiAoIHByZXZlbnREZWZhdWx0ICkgewoJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCX0KCX0sCgoJX2FjdGl2YXRlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCB0aGlzLmFjdGl2ZSAmJiAhdGhpcy5hY3RpdmUuaXMoICIudWktc3RhdGUtZGlzYWJsZWQiICkgKSB7CgkJCWlmICggdGhpcy5hY3RpdmUuY2hpbGRyZW4oICJbYXJpYS1oYXNwb3B1cD0ndHJ1ZSddIiApLmxlbmd0aCApIHsKCQkJCXRoaXMuZXhwYW5kKCBldmVudCApOwoJCQl9IGVsc2UgewoJCQkJdGhpcy5zZWxlY3QoIGV2ZW50ICk7CgkJCX0KCQl9Cgl9LAoKCXJlZnJlc2g6IGZ1bmN0aW9uKCkgewoJCXZhciBtZW51cywgaXRlbXMsIG5ld1N1Ym1lbnVzLCBuZXdJdGVtcywgbmV3V3JhcHBlcnMsCgkJCXRoYXQgPSB0aGlzLAoJCQlpY29uID0gdGhpcy5vcHRpb25zLmljb25zLnN1Ym1lbnUsCgkJCXN1Ym1lbnVzID0gdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5tZW51cyApOwoKCQl0aGlzLl90b2dnbGVDbGFzcyggInVpLW1lbnUtaWNvbnMiLCBudWxsLCAhIXRoaXMuZWxlbWVudC5maW5kKCAiLnVpLWljb24iICkubGVuZ3RoICk7CgoJCS8vIEluaXRpYWxpemUgbmVzdGVkIG1lbnVzCgkJbmV3U3VibWVudXMgPSBzdWJtZW51cy5maWx0ZXIoICI6bm90KC51aS1tZW51KSIgKQoJCQkuaGlkZSgpCgkJCS5hdHRyKCB7CgkJCQlyb2xlOiB0aGlzLm9wdGlvbnMucm9sZSwKCQkJCSJhcmlhLWhpZGRlbiI6ICJ0cnVlIiwKCQkJCSJhcmlhLWV4cGFuZGVkIjogImZhbHNlIgoJCQl9ICkKCQkJLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJdmFyIG1lbnUgPSAkKCB0aGlzICksCgkJCQkJaXRlbSA9IG1lbnUucHJldigpLAoJCQkJCXN1Ym1lbnVDYXJldCA9ICQoICI8c3Bhbj4iICkuZGF0YSggInVpLW1lbnUtc3VibWVudS1jYXJldCIsIHRydWUgKTsKCgkJCQl0aGF0Ll9hZGRDbGFzcyggc3VibWVudUNhcmV0LCAidWktbWVudS1pY29uIiwgInVpLWljb24gIiArIGljb24gKTsKCQkJCWl0ZW0KCQkJCQkuYXR0ciggImFyaWEtaGFzcG9wdXAiLCAidHJ1ZSIgKQoJCQkJCS5wcmVwZW5kKCBzdWJtZW51Q2FyZXQgKTsKCQkJCW1lbnUuYXR0ciggImFyaWEtbGFiZWxsZWRieSIsIGl0ZW0uYXR0ciggImlkIiApICk7CgkJCX0gKTsKCgkJdGhpcy5fYWRkQ2xhc3MoIG5ld1N1Ym1lbnVzLCAidWktbWVudSIsICJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktZnJvbnQiICk7CgoJCW1lbnVzID0gc3VibWVudXMuYWRkKCB0aGlzLmVsZW1lbnQgKTsKCQlpdGVtcyA9IG1lbnVzLmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApOwoKCQkvLyBJbml0aWFsaXplIG1lbnUtaXRlbXMgY29udGFpbmluZyBzcGFjZXMgYW5kL29yIGRhc2hlcyBvbmx5IGFzIGRpdmlkZXJzCgkJaXRlbXMubm90KCAiLnVpLW1lbnUtaXRlbSIgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIGl0ZW0gPSAkKCB0aGlzICk7CgkJCWlmICggdGhhdC5faXNEaXZpZGVyKCBpdGVtICkgKSB7CgkJCQl0aGF0Ll9hZGRDbGFzcyggaXRlbSwgInVpLW1lbnUtZGl2aWRlciIsICJ1aS13aWRnZXQtY29udGVudCIgKTsKCQkJfQoJCX0gKTsKCgkJLy8gRG9uJ3QgcmVmcmVzaCBsaXN0IGl0ZW1zIHRoYXQgYXJlIGFscmVhZHkgYWRhcHRlZAoJCW5ld0l0ZW1zID0gaXRlbXMubm90KCAiLnVpLW1lbnUtaXRlbSwgLnVpLW1lbnUtZGl2aWRlciIgKTsKCQluZXdXcmFwcGVycyA9IG5ld0l0ZW1zLmNoaWxkcmVuKCkKCQkJLm5vdCggIi51aS1tZW51IiApCgkJCQkudW5pcXVlSWQoKQoJCQkJLmF0dHIoIHsKCQkJCQl0YWJJbmRleDogLTEsCgkJCQkJcm9sZTogdGhpcy5faXRlbVJvbGUoKQoJCQkJfSApOwoJCXRoaXMuX2FkZENsYXNzKCBuZXdJdGVtcywgInVpLW1lbnUtaXRlbSIgKQoJCQkuX2FkZENsYXNzKCBuZXdXcmFwcGVycywgInVpLW1lbnUtaXRlbS13cmFwcGVyIiApOwoKCQkvLyBBZGQgYXJpYS1kaXNhYmxlZCBhdHRyaWJ1dGUgdG8gYW55IGRpc2FibGVkIG1lbnUgaXRlbQoJCWl0ZW1zLmZpbHRlciggIi51aS1zdGF0ZS1kaXNhYmxlZCIgKS5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsICJ0cnVlIiApOwoKCQkvLyBJZiB0aGUgYWN0aXZlIGl0ZW0gaGFzIGJlZW4gcmVtb3ZlZCwgYmx1ciB0aGUgbWVudQoJCWlmICggdGhpcy5hY3RpdmUgJiYgISQuY29udGFpbnMoIHRoaXMuZWxlbWVudFsgMCBdLCB0aGlzLmFjdGl2ZVsgMCBdICkgKSB7CgkJCXRoaXMuYmx1cigpOwoJCX0KCX0sCgoJX2l0ZW1Sb2xlOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gewoJCQltZW51OiAibWVudWl0ZW0iLAoJCQlsaXN0Ym94OiAib3B0aW9uIgoJCX1bIHRoaXMub3B0aW9ucy5yb2xlIF07Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCWlmICgga2V5ID09PSAiaWNvbnMiICkgewoJCQl2YXIgaWNvbnMgPSB0aGlzLmVsZW1lbnQuZmluZCggIi51aS1tZW51LWljb24iICk7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBpY29ucywgbnVsbCwgdGhpcy5vcHRpb25zLmljb25zLnN1Ym1lbnUgKQoJCQkJLl9hZGRDbGFzcyggaWNvbnMsIG51bGwsIHZhbHVlLnN1Ym1lbnUgKTsKCQl9CgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsKCX0sCgoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhpcy5fc3VwZXIoIHZhbHVlICk7CgoJCXRoaXMuZWxlbWVudC5hdHRyKCAiYXJpYS1kaXNhYmxlZCIsIFN0cmluZyggdmFsdWUgKSApOwoJCXRoaXMuX3RvZ2dsZUNsYXNzKCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7Cgl9LAoKCWZvY3VzOiBmdW5jdGlvbiggZXZlbnQsIGl0ZW0gKSB7CgkJdmFyIG5lc3RlZCwgZm9jdXNlZCwgYWN0aXZlUGFyZW50OwoJCXRoaXMuYmx1ciggZXZlbnQsIGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICJmb2N1cyIgKTsKCgkJdGhpcy5fc2Nyb2xsSW50b1ZpZXcoIGl0ZW0gKTsKCgkJdGhpcy5hY3RpdmUgPSBpdGVtLmZpcnN0KCk7CgoJCWZvY3VzZWQgPSB0aGlzLmFjdGl2ZS5jaGlsZHJlbiggIi51aS1tZW51LWl0ZW0td3JhcHBlciIgKTsKCQl0aGlzLl9hZGRDbGFzcyggZm9jdXNlZCwgbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCgkJLy8gT25seSB1cGRhdGUgYXJpYS1hY3RpdmVkZXNjZW5kYW50IGlmIHRoZXJlJ3MgYSByb2xlCgkJLy8gb3RoZXJ3aXNlIHdlIGFzc3VtZSBmb2N1cyBpcyBtYW5hZ2VkIGVsc2V3aGVyZQoJCWlmICggdGhpcy5vcHRpb25zLnJvbGUgKSB7CgkJCXRoaXMuZWxlbWVudC5hdHRyKCAiYXJpYS1hY3RpdmVkZXNjZW5kYW50IiwgZm9jdXNlZC5hdHRyKCAiaWQiICkgKTsKCQl9CgoJCS8vIEhpZ2hsaWdodCBhY3RpdmUgcGFyZW50IG1lbnUgaXRlbSwgaWYgYW55CgkJYWN0aXZlUGFyZW50ID0gdGhpcy5hY3RpdmUKCQkJLnBhcmVudCgpCgkJCQkuY2xvc2VzdCggIi51aS1tZW51LWl0ZW0iICkKCQkJCQkuY2hpbGRyZW4oICIudWktbWVudS1pdGVtLXdyYXBwZXIiICk7CgkJdGhpcy5fYWRkQ2xhc3MoIGFjdGl2ZVBhcmVudCwgbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCgkJaWYgKCBldmVudCAmJiBldmVudC50eXBlID09PSAia2V5ZG93biIgKSB7CgkJCXRoaXMuX2Nsb3NlKCk7CgkJfSBlbHNlIHsKCQkJdGhpcy50aW1lciA9IHRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCXRoaXMuX2Nsb3NlKCk7CgkJCX0sIHRoaXMuZGVsYXkgKTsKCQl9CgoJCW5lc3RlZCA9IGl0ZW0uY2hpbGRyZW4oICIudWktbWVudSIgKTsKCQlpZiAoIG5lc3RlZC5sZW5ndGggJiYgZXZlbnQgJiYgKCAvXm1vdXNlLy50ZXN0KCBldmVudC50eXBlICkgKSApIHsKCQkJdGhpcy5fc3RhcnRPcGVuaW5nKCBuZXN0ZWQgKTsKCQl9CgkJdGhpcy5hY3RpdmVNZW51ID0gaXRlbS5wYXJlbnQoKTsKCgkJdGhpcy5fdHJpZ2dlciggImZvY3VzIiwgZXZlbnQsIHsgaXRlbTogaXRlbSB9ICk7Cgl9LAoKCV9zY3JvbGxJbnRvVmlldzogZnVuY3Rpb24oIGl0ZW0gKSB7CgkJdmFyIGJvcmRlclRvcCwgcGFkZGluZ1RvcCwgb2Zmc2V0LCBzY3JvbGwsIGVsZW1lbnRIZWlnaHQsIGl0ZW1IZWlnaHQ7CgkJaWYgKCB0aGlzLl9oYXNTY3JvbGwoKSApIHsKCQkJYm9yZGVyVG9wID0gcGFyc2VGbG9hdCggJC5jc3MoIHRoaXMuYWN0aXZlTWVudVsgMCBdLCAiYm9yZGVyVG9wV2lkdGgiICkgKSB8fCAwOwoJCQlwYWRkaW5nVG9wID0gcGFyc2VGbG9hdCggJC5jc3MoIHRoaXMuYWN0aXZlTWVudVsgMCBdLCAicGFkZGluZ1RvcCIgKSApIHx8IDA7CgkJCW9mZnNldCA9IGl0ZW0ub2Zmc2V0KCkudG9wIC0gdGhpcy5hY3RpdmVNZW51Lm9mZnNldCgpLnRvcCAtIGJvcmRlclRvcCAtIHBhZGRpbmdUb3A7CgkJCXNjcm9sbCA9IHRoaXMuYWN0aXZlTWVudS5zY3JvbGxUb3AoKTsKCQkJZWxlbWVudEhlaWdodCA9IHRoaXMuYWN0aXZlTWVudS5oZWlnaHQoKTsKCQkJaXRlbUhlaWdodCA9IGl0ZW0ub3V0ZXJIZWlnaHQoKTsKCgkJCWlmICggb2Zmc2V0IDwgMCApIHsKCQkJCXRoaXMuYWN0aXZlTWVudS5zY3JvbGxUb3AoIHNjcm9sbCArIG9mZnNldCApOwoJCQl9IGVsc2UgaWYgKCBvZmZzZXQgKyBpdGVtSGVpZ2h0ID4gZWxlbWVudEhlaWdodCApIHsKCQkJCXRoaXMuYWN0aXZlTWVudS5zY3JvbGxUb3AoIHNjcm9sbCArIG9mZnNldCAtIGVsZW1lbnRIZWlnaHQgKyBpdGVtSGVpZ2h0ICk7CgkJCX0KCQl9Cgl9LAoKCWJsdXI6IGZ1bmN0aW9uKCBldmVudCwgZnJvbUZvY3VzICkgewoJCWlmICggIWZyb21Gb2N1cyApIHsKCQkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7CgkJfQoKCQlpZiAoICF0aGlzLmFjdGl2ZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuYWN0aXZlLmNoaWxkcmVuKCAiLnVpLW1lbnUtaXRlbS13cmFwcGVyIiApLAoJCQludWxsLCAidWktc3RhdGUtYWN0aXZlIiApOwoKCQl0aGlzLl90cmlnZ2VyKCAiYmx1ciIsIGV2ZW50LCB7IGl0ZW06IHRoaXMuYWN0aXZlIH0gKTsKCQl0aGlzLmFjdGl2ZSA9IG51bGw7Cgl9LAoKCV9zdGFydE9wZW5pbmc6IGZ1bmN0aW9uKCBzdWJtZW51ICkgewoJCWNsZWFyVGltZW91dCggdGhpcy50aW1lciApOwoKCQkvLyBEb24ndCBvcGVuIGlmIGFscmVhZHkgb3BlbiBmaXhlcyBhIEZpcmVmb3ggYnVnIHRoYXQgY2F1c2VkIGEgLjUgcGl4ZWwKCQkvLyBzaGlmdCBpbiB0aGUgc3VibWVudSBwb3NpdGlvbiB3aGVuIG1vdXNpbmcgb3ZlciB0aGUgY2FyZXQgaWNvbgoJCWlmICggc3VibWVudS5hdHRyKCAiYXJpYS1oaWRkZW4iICkgIT09ICJ0cnVlIiApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy50aW1lciA9IHRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJdGhpcy5fY2xvc2UoKTsKCQkJdGhpcy5fb3Blbiggc3VibWVudSApOwoJCX0sIHRoaXMuZGVsYXkgKTsKCX0sCgoJX29wZW46IGZ1bmN0aW9uKCBzdWJtZW51ICkgewoJCXZhciBwb3NpdGlvbiA9ICQuZXh0ZW5kKCB7CgkJCW9mOiB0aGlzLmFjdGl2ZQoJCX0sIHRoaXMub3B0aW9ucy5wb3NpdGlvbiApOwoKCQljbGVhclRpbWVvdXQoIHRoaXMudGltZXIgKTsKCQl0aGlzLmVsZW1lbnQuZmluZCggIi51aS1tZW51IiApLm5vdCggc3VibWVudS5wYXJlbnRzKCAiLnVpLW1lbnUiICkgKQoJCQkuaGlkZSgpCgkJCS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAidHJ1ZSIgKTsKCgkJc3VibWVudQoJCQkuc2hvdygpCgkJCS5yZW1vdmVBdHRyKCAiYXJpYS1oaWRkZW4iICkKCQkJLmF0dHIoICJhcmlhLWV4cGFuZGVkIiwgInRydWUiICkKCQkJLnBvc2l0aW9uKCBwb3NpdGlvbiApOwoJfSwKCgljb2xsYXBzZUFsbDogZnVuY3Rpb24oIGV2ZW50LCBhbGwgKSB7CgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7CgkJdGhpcy50aW1lciA9IHRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCgkJCS8vIElmIHdlIHdlcmUgcGFzc2VkIGFuIGV2ZW50LCBsb29rIGZvciB0aGUgc3VibWVudSB0aGF0IGNvbnRhaW5zIHRoZSBldmVudAoJCQl2YXIgY3VycmVudE1lbnUgPSBhbGwgPyB0aGlzLmVsZW1lbnQgOgoJCQkJJCggZXZlbnQgJiYgZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggdGhpcy5lbGVtZW50LmZpbmQoICIudWktbWVudSIgKSApOwoKCQkJLy8gSWYgd2UgZm91bmQgbm8gdmFsaWQgc3VibWVudSBhbmNlc3RvciwgdXNlIHRoZSBtYWluIG1lbnUgdG8gY2xvc2UgYWxsCgkJCS8vIHN1YiBtZW51cyBhbnl3YXkKCQkJaWYgKCAhY3VycmVudE1lbnUubGVuZ3RoICkgewoJCQkJY3VycmVudE1lbnUgPSB0aGlzLmVsZW1lbnQ7CgkJCX0KCgkJCXRoaXMuX2Nsb3NlKCBjdXJyZW50TWVudSApOwoKCQkJdGhpcy5ibHVyKCBldmVudCApOwoKCQkJLy8gV29yayBhcm91bmQgYWN0aXZlIGl0ZW0gc3RheWluZyBhY3RpdmUgYWZ0ZXIgbWVudSBpcyBibHVycmVkCgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBjdXJyZW50TWVudS5maW5kKCAiLnVpLXN0YXRlLWFjdGl2ZSIgKSwgbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCgkJCXRoaXMuYWN0aXZlTWVudSA9IGN1cnJlbnRNZW51OwoJCX0sIHRoaXMuZGVsYXkgKTsKCX0sCgoJLy8gV2l0aCBubyBhcmd1bWVudHMsIGNsb3NlcyB0aGUgY3VycmVudGx5IGFjdGl2ZSBtZW51IC0gaWYgbm90aGluZyBpcyBhY3RpdmUKCS8vIGl0IGNsb3NlcyBhbGwgbWVudXMuICBJZiBwYXNzZWQgYW4gYXJndW1lbnQsIGl0IHdpbGwgc2VhcmNoIGZvciBtZW51cyBCRUxPVwoJX2Nsb3NlOiBmdW5jdGlvbiggc3RhcnRNZW51ICkgewoJCWlmICggIXN0YXJ0TWVudSApIHsKCQkJc3RhcnRNZW51ID0gdGhpcy5hY3RpdmUgPyB0aGlzLmFjdGl2ZS5wYXJlbnQoKSA6IHRoaXMuZWxlbWVudDsKCQl9CgoJCXN0YXJ0TWVudS5maW5kKCAiLnVpLW1lbnUiICkKCQkJLmhpZGUoKQoJCQkuYXR0ciggImFyaWEtaGlkZGVuIiwgInRydWUiICkKCQkJLmF0dHIoICJhcmlhLWV4cGFuZGVkIiwgImZhbHNlIiApOwoJfSwKCglfY2xvc2VPbkRvY3VtZW50Q2xpY2s6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlyZXR1cm4gISQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWktbWVudSIgKS5sZW5ndGg7Cgl9LAoKCV9pc0RpdmlkZXI6IGZ1bmN0aW9uKCBpdGVtICkgewoKCQkvLyBNYXRjaCBoeXBoZW4sIGVtIGRhc2gsIGVuIGRhc2gKCQlyZXR1cm4gIS9bXlwtXHUyMDE0XHUyMDEzXHNdLy50ZXN0KCBpdGVtLnRleHQoKSApOwoJfSwKCgljb2xsYXBzZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBuZXdJdGVtID0gdGhpcy5hY3RpdmUgJiYKCQkJdGhpcy5hY3RpdmUucGFyZW50KCkuY2xvc2VzdCggIi51aS1tZW51LWl0ZW0iLCB0aGlzLmVsZW1lbnQgKTsKCQlpZiAoIG5ld0l0ZW0gJiYgbmV3SXRlbS5sZW5ndGggKSB7CgkJCXRoaXMuX2Nsb3NlKCk7CgkJCXRoaXMuZm9jdXMoIGV2ZW50LCBuZXdJdGVtICk7CgkJfQoJfSwKCglleHBhbmQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgbmV3SXRlbSA9IHRoaXMuYWN0aXZlICYmCgkJCXRoaXMuYWN0aXZlCgkJCQkuY2hpbGRyZW4oICIudWktbWVudSAiICkKCQkJCQkuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkKCQkJCQkJLmZpcnN0KCk7CgoJCWlmICggbmV3SXRlbSAmJiBuZXdJdGVtLmxlbmd0aCApIHsKCQkJdGhpcy5fb3BlbiggbmV3SXRlbS5wYXJlbnQoKSApOwoKCQkJLy8gRGVsYXkgc28gRmlyZWZveCB3aWxsIG5vdCBoaWRlIGFjdGl2ZWRlc2NlbmRhbnQgY2hhbmdlIGluIGV4cGFuZGluZyBzdWJtZW51IGZyb20gQVQKCQkJdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgewoJCQkJdGhpcy5mb2N1cyggZXZlbnQsIG5ld0l0ZW0gKTsKCQkJfSApOwoJCX0KCX0sCgoJbmV4dDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXRoaXMuX21vdmUoICJuZXh0IiwgImZpcnN0IiwgZXZlbnQgKTsKCX0sCgoJcHJldmlvdXM6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl0aGlzLl9tb3ZlKCAicHJldiIsICJsYXN0IiwgZXZlbnQgKTsKCX0sCgoJaXNGaXJzdEl0ZW06IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmFjdGl2ZSAmJiAhdGhpcy5hY3RpdmUucHJldkFsbCggIi51aS1tZW51LWl0ZW0iICkubGVuZ3RoOwoJfSwKCglpc0xhc3RJdGVtOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5hY3RpdmUgJiYgIXRoaXMuYWN0aXZlLm5leHRBbGwoICIudWktbWVudS1pdGVtIiApLmxlbmd0aDsKCX0sCgoJX21vdmU6IGZ1bmN0aW9uKCBkaXJlY3Rpb24sIGZpbHRlciwgZXZlbnQgKSB7CgkJdmFyIG5leHQ7CgkJaWYgKCB0aGlzLmFjdGl2ZSApIHsKCQkJaWYgKCBkaXJlY3Rpb24gPT09ICJmaXJzdCIgfHwgZGlyZWN0aW9uID09PSAibGFzdCIgKSB7CgkJCQluZXh0ID0gdGhpcy5hY3RpdmUKCQkJCQlbIGRpcmVjdGlvbiA9PT0gImZpcnN0IiA/ICJwcmV2QWxsIiA6ICJuZXh0QWxsIiBdKCAiLnVpLW1lbnUtaXRlbSIgKQoJCQkJCS5lcSggLTEgKTsKCQkJfSBlbHNlIHsKCQkJCW5leHQgPSB0aGlzLmFjdGl2ZQoJCQkJCVsgZGlyZWN0aW9uICsgIkFsbCIgXSggIi51aS1tZW51LWl0ZW0iICkKCQkJCQkuZXEoIDAgKTsKCQkJfQoJCX0KCQlpZiAoICFuZXh0IHx8ICFuZXh0Lmxlbmd0aCB8fCAhdGhpcy5hY3RpdmUgKSB7CgkJCW5leHQgPSB0aGlzLmFjdGl2ZU1lbnUuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zIClbIGZpbHRlciBdKCk7CgkJfQoKCQl0aGlzLmZvY3VzKCBldmVudCwgbmV4dCApOwoJfSwKCgluZXh0UGFnZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBpdGVtLCBiYXNlLCBoZWlnaHQ7CgoJCWlmICggIXRoaXMuYWN0aXZlICkgewoJCQl0aGlzLm5leHQoIGV2ZW50ICk7CgkJCXJldHVybjsKCQl9CgkJaWYgKCB0aGlzLmlzTGFzdEl0ZW0oKSApIHsKCQkJcmV0dXJuOwoJCX0KCQlpZiAoIHRoaXMuX2hhc1Njcm9sbCgpICkgewoJCQliYXNlID0gdGhpcy5hY3RpdmUub2Zmc2V0KCkudG9wOwoJCQloZWlnaHQgPSB0aGlzLmVsZW1lbnQuaGVpZ2h0KCk7CgkJCXRoaXMuYWN0aXZlLm5leHRBbGwoICIudWktbWVudS1pdGVtIiApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJaXRlbSA9ICQoIHRoaXMgKTsKCQkJCXJldHVybiBpdGVtLm9mZnNldCgpLnRvcCAtIGJhc2UgLSBoZWlnaHQgPCAwOwoJCQl9ICk7CgoJCQl0aGlzLmZvY3VzKCBldmVudCwgaXRlbSApOwoJCX0gZWxzZSB7CgkJCXRoaXMuZm9jdXMoIGV2ZW50LCB0aGlzLmFjdGl2ZU1lbnUuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkKCQkJCVsgIXRoaXMuYWN0aXZlID8gImZpcnN0IiA6ICJsYXN0IiBdKCkgKTsKCQl9Cgl9LAoKCXByZXZpb3VzUGFnZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBpdGVtLCBiYXNlLCBoZWlnaHQ7CgkJaWYgKCAhdGhpcy5hY3RpdmUgKSB7CgkJCXRoaXMubmV4dCggZXZlbnQgKTsKCQkJcmV0dXJuOwoJCX0KCQlpZiAoIHRoaXMuaXNGaXJzdEl0ZW0oKSApIHsKCQkJcmV0dXJuOwoJCX0KCQlpZiAoIHRoaXMuX2hhc1Njcm9sbCgpICkgewoJCQliYXNlID0gdGhpcy5hY3RpdmUub2Zmc2V0KCkudG9wOwoJCQloZWlnaHQgPSB0aGlzLmVsZW1lbnQuaGVpZ2h0KCk7CgkJCXRoaXMuYWN0aXZlLnByZXZBbGwoICIudWktbWVudS1pdGVtIiApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJaXRlbSA9ICQoIHRoaXMgKTsKCQkJCXJldHVybiBpdGVtLm9mZnNldCgpLnRvcCAtIGJhc2UgKyBoZWlnaHQgPiAwOwoJCQl9ICk7CgoJCQl0aGlzLmZvY3VzKCBldmVudCwgaXRlbSApOwoJCX0gZWxzZSB7CgkJCXRoaXMuZm9jdXMoIGV2ZW50LCB0aGlzLmFjdGl2ZU1lbnUuZmluZCggdGhpcy5vcHRpb25zLml0ZW1zICkuZmlyc3QoKSApOwoJCX0KCX0sCgoJX2hhc1Njcm9sbDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpIDwgdGhpcy5lbGVtZW50LnByb3AoICJzY3JvbGxIZWlnaHQiICk7Cgl9LAoKCXNlbGVjdDogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkvLyBUT0RPOiBJdCBzaG91bGQgbmV2ZXIgYmUgcG9zc2libGUgdG8gbm90IGhhdmUgYW4gYWN0aXZlIGl0ZW0gYXQgdGhpcwoJCS8vIHBvaW50LCBidXQgdGhlIHRlc3RzIGRvbid0IHRyaWdnZXIgbW91c2VlbnRlciBiZWZvcmUgY2xpY2suCgkJdGhpcy5hY3RpdmUgPSB0aGlzLmFjdGl2ZSB8fCAkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLW1lbnUtaXRlbSIgKTsKCQl2YXIgdWkgPSB7IGl0ZW06IHRoaXMuYWN0aXZlIH07CgkJaWYgKCAhdGhpcy5hY3RpdmUuaGFzKCAiLnVpLW1lbnUiICkubGVuZ3RoICkgewoJCQl0aGlzLmNvbGxhcHNlQWxsKCBldmVudCwgdHJ1ZSApOwoJCX0KCQl0aGlzLl90cmlnZ2VyKCAic2VsZWN0IiwgZXZlbnQsIHVpICk7Cgl9LAoKCV9maWx0ZXJNZW51SXRlbXM6IGZ1bmN0aW9uKCBjaGFyYWN0ZXIgKSB7CgkJdmFyIGVzY2FwZWRDaGFyYWN0ZXIgPSBjaGFyYWN0ZXIucmVwbGFjZSggL1tcLVxbXF17fSgpKis/LixcXFxeJHwjXHNdL2csICJcXCQmIiApLAoJCQlyZWdleCA9IG5ldyBSZWdFeHAoICJeIiArIGVzY2FwZWRDaGFyYWN0ZXIsICJpIiApOwoKCQlyZXR1cm4gdGhpcy5hY3RpdmVNZW51CgkJCS5maW5kKCB0aGlzLm9wdGlvbnMuaXRlbXMgKQoKCQkJCS8vIE9ubHkgbWF0Y2ggb24gaXRlbXMsIG5vdCBkaXZpZGVycyBvciBvdGhlciBjb250ZW50ICgjMTA1NzEpCgkJCQkuZmlsdGVyKCAiLnVpLW1lbnUtaXRlbSIgKQoJCQkJCS5maWx0ZXIoIGZ1bmN0aW9uKCkgewoJCQkJCQlyZXR1cm4gcmVnZXgudGVzdCgKCQkJCQkJCSQudHJpbSggJCggdGhpcyApLmNoaWxkcmVuKCAiLnVpLW1lbnUtaXRlbS13cmFwcGVyIiApLnRleHQoKSApICk7CgkJCQkJfSApOwoJfQp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBBdXRvY29tcGxldGUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBBdXRvY29tcGxldGUKLy8+Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlwdGlvbjogTGlzdHMgc3VnZ2VzdGVkIHdvcmRzIGFzIHRoZSB1c2VyIGlzIHR5cGluZy4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2F1dG9jb21wbGV0ZS8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2F1dG9jb21wbGV0ZS8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9hdXRvY29tcGxldGUuY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgokLndpZGdldCggInVpLmF1dG9jb21wbGV0ZSIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJZGVmYXVsdEVsZW1lbnQ6ICI8aW5wdXQ+IiwKCW9wdGlvbnM6IHsKCQlhcHBlbmRUbzogbnVsbCwKCQlhdXRvRm9jdXM6IGZhbHNlLAoJCWRlbGF5OiAzMDAsCgkJbWluTGVuZ3RoOiAxLAoJCXBvc2l0aW9uOiB7CgkJCW15OiAibGVmdCB0b3AiLAoJCQlhdDogImxlZnQgYm90dG9tIiwKCQkJY29sbGlzaW9uOiAibm9uZSIKCQl9LAoJCXNvdXJjZTogbnVsbCwKCgkJLy8gQ2FsbGJhY2tzCgkJY2hhbmdlOiBudWxsLAoJCWNsb3NlOiBudWxsLAoJCWZvY3VzOiBudWxsLAoJCW9wZW46IG51bGwsCgkJcmVzcG9uc2U6IG51bGwsCgkJc2VhcmNoOiBudWxsLAoJCXNlbGVjdDogbnVsbAoJfSwKCglyZXF1ZXN0SW5kZXg6IDAsCglwZW5kaW5nOiAwLAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoKCQkvLyBTb21lIGJyb3dzZXJzIG9ubHkgcmVwZWF0IGtleWRvd24gZXZlbnRzLCBub3Qga2V5cHJlc3MgZXZlbnRzLAoJCS8vIHNvIHdlIHVzZSB0aGUgc3VwcHJlc3NLZXlQcmVzcyBmbGFnIHRvIGRldGVybWluZSBpZiB3ZSd2ZSBhbHJlYWR5CgkJLy8gaGFuZGxlZCB0aGUga2V5ZG93biBldmVudC4gIzcyNjkKCQkvLyBVbmZvcnR1bmF0ZWx5IHRoZSBjb2RlIGZvciAmIGluIGtleXByZXNzIGlzIHRoZSBzYW1lIGFzIHRoZSB1cCBhcnJvdywKCQkvLyBzbyB3ZSB1c2UgdGhlIHN1cHByZXNzS2V5UHJlc3NSZXBlYXQgZmxhZyB0byBhdm9pZCBoYW5kbGluZyBrZXlwcmVzcwoJCS8vIGV2ZW50cyB3aGVuIHdlIGtub3cgdGhlIGtleWRvd24gZXZlbnQgd2FzIHVzZWQgdG8gbW9kaWZ5IHRoZQoJCS8vIHNlYXJjaCB0ZXJtLiAjNzc5OQoJCXZhciBzdXBwcmVzc0tleVByZXNzLCBzdXBwcmVzc0tleVByZXNzUmVwZWF0LCBzdXBwcmVzc0lucHV0LAoJCQlub2RlTmFtZSA9IHRoaXMuZWxlbWVudFsgMCBdLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksCgkJCWlzVGV4dGFyZWEgPSBub2RlTmFtZSA9PT0gInRleHRhcmVhIiwKCQkJaXNJbnB1dCA9IG5vZGVOYW1lID09PSAiaW5wdXQiOwoKCQkvLyBUZXh0YXJlYXMgYXJlIGFsd2F5cyBtdWx0aS1saW5lCgkJLy8gSW5wdXRzIGFyZSBhbHdheXMgc2luZ2xlLWxpbmUsIGV2ZW4gaWYgaW5zaWRlIGEgY29udGVudEVkaXRhYmxlIGVsZW1lbnQKCQkvLyBJRSBhbHNvIHRyZWF0cyBpbnB1dHMgYXMgY29udGVudEVkaXRhYmxlCgkJLy8gQWxsIG90aGVyIGVsZW1lbnQgdHlwZXMgYXJlIGRldGVybWluZWQgYnkgd2hldGhlciBvciBub3QgdGhleSdyZSBjb250ZW50RWRpdGFibGUKCQl0aGlzLmlzTXVsdGlMaW5lID0gaXNUZXh0YXJlYSB8fCAhaXNJbnB1dCAmJiB0aGlzLl9pc0NvbnRlbnRFZGl0YWJsZSggdGhpcy5lbGVtZW50ICk7CgoJCXRoaXMudmFsdWVNZXRob2QgPSB0aGlzLmVsZW1lbnRbIGlzVGV4dGFyZWEgfHwgaXNJbnB1dCA/ICJ2YWwiIDogInRleHQiIF07CgkJdGhpcy5pc05ld01lbnUgPSB0cnVlOwoKCQl0aGlzLl9hZGRDbGFzcyggInVpLWF1dG9jb21wbGV0ZS1pbnB1dCIgKTsKCQl0aGlzLmVsZW1lbnQuYXR0ciggImF1dG9jb21wbGV0ZSIsICJvZmYiICk7CgoJCXRoaXMuX29uKCB0aGlzLmVsZW1lbnQsIHsKCQkJa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCB0aGlzLmVsZW1lbnQucHJvcCggInJlYWRPbmx5IiApICkgewoJCQkJCXN1cHByZXNzS2V5UHJlc3MgPSB0cnVlOwoJCQkJCXN1cHByZXNzSW5wdXQgPSB0cnVlOwoJCQkJCXN1cHByZXNzS2V5UHJlc3NSZXBlYXQgPSB0cnVlOwoJCQkJCXJldHVybjsKCQkJCX0KCgkJCQlzdXBwcmVzc0tleVByZXNzID0gZmFsc2U7CgkJCQlzdXBwcmVzc0lucHV0ID0gZmFsc2U7CgkJCQlzdXBwcmVzc0tleVByZXNzUmVwZWF0ID0gZmFsc2U7CgkJCQl2YXIga2V5Q29kZSA9ICQudWkua2V5Q29kZTsKCQkJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7CgkJCQljYXNlIGtleUNvZGUuUEFHRV9VUDoKCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsKCQkJCQl0aGlzLl9tb3ZlKCAicHJldmlvdXNQYWdlIiwgZXZlbnQgKTsKCQkJCQlicmVhazsKCQkJCWNhc2Uga2V5Q29kZS5QQUdFX0RPV046CgkJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IHRydWU7CgkJCQkJdGhpcy5fbW92ZSggIm5leHRQYWdlIiwgZXZlbnQgKTsKCQkJCQlicmVhazsKCQkJCWNhc2Uga2V5Q29kZS5VUDoKCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsKCQkJCQl0aGlzLl9rZXlFdmVudCggInByZXZpb3VzIiwgZXZlbnQgKTsKCQkJCQlicmVhazsKCQkJCWNhc2Uga2V5Q29kZS5ET1dOOgoJCQkJCXN1cHByZXNzS2V5UHJlc3MgPSB0cnVlOwoJCQkJCXRoaXMuX2tleUV2ZW50KCAibmV4dCIsIGV2ZW50ICk7CgkJCQkJYnJlYWs7CgkJCQljYXNlIGtleUNvZGUuRU5URVI6CgoJCQkJCS8vIHdoZW4gbWVudSBpcyBvcGVuIGFuZCBoYXMgZm9jdXMKCQkJCQlpZiAoIHRoaXMubWVudS5hY3RpdmUgKSB7CgoJCQkJCQkvLyAjNjA1NSAtIE9wZXJhIHN0aWxsIGFsbG93cyB0aGUga2V5cHJlc3MgdG8gb2NjdXIKCQkJCQkJLy8gd2hpY2ggY2F1c2VzIGZvcm1zIHRvIHN1Ym1pdAoJCQkJCQlzdXBwcmVzc0tleVByZXNzID0gdHJ1ZTsKCQkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCQkJdGhpcy5tZW51LnNlbGVjdCggZXZlbnQgKTsKCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQljYXNlIGtleUNvZGUuVEFCOgoJCQkJCWlmICggdGhpcy5tZW51LmFjdGl2ZSApIHsKCQkJCQkJdGhpcy5tZW51LnNlbGVjdCggZXZlbnQgKTsKCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQljYXNlIGtleUNvZGUuRVNDQVBFOgoJCQkJCWlmICggdGhpcy5tZW51LmVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSApIHsKCQkJCQkJaWYgKCAhdGhpcy5pc011bHRpTGluZSApIHsKCQkJCQkJCXRoaXMuX3ZhbHVlKCB0aGlzLnRlcm0gKTsKCQkJCQkJfQoJCQkJCQl0aGlzLmNsb3NlKCBldmVudCApOwoKCQkJCQkJLy8gRGlmZmVyZW50IGJyb3dzZXJzIGhhdmUgZGlmZmVyZW50IGRlZmF1bHQgYmVoYXZpb3IgZm9yIGVzY2FwZQoJCQkJCQkvLyBTaW5nbGUgcHJlc3MgY2FuIG1lYW4gdW5kbyBvciBjbGVhcgoJCQkJCQkvLyBEb3VibGUgcHJlc3MgaW4gSUUgbWVhbnMgY2xlYXIgdGhlIHdob2xlIGZvcm0KCQkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCQl9CgkJCQkJYnJlYWs7CgkJCQlkZWZhdWx0OgoJCQkJCXN1cHByZXNzS2V5UHJlc3NSZXBlYXQgPSB0cnVlOwoKCQkJCQkvLyBzZWFyY2ggdGltZW91dCBzaG91bGQgYmUgdHJpZ2dlcmVkIGJlZm9yZSB0aGUgaW5wdXQgdmFsdWUgaXMgY2hhbmdlZAoJCQkJCXRoaXMuX3NlYXJjaFRpbWVvdXQoIGV2ZW50ICk7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCX0sCgkJCWtleXByZXNzOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQlpZiAoIHN1cHByZXNzS2V5UHJlc3MgKSB7CgkJCQkJc3VwcHJlc3NLZXlQcmVzcyA9IGZhbHNlOwoJCQkJCWlmICggIXRoaXMuaXNNdWx0aUxpbmUgfHwgdGhpcy5tZW51LmVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSApIHsKCQkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCQl9CgkJCQkJcmV0dXJuOwoJCQkJfQoJCQkJaWYgKCBzdXBwcmVzc0tleVByZXNzUmVwZWF0ICkgewoJCQkJCXJldHVybjsKCQkJCX0KCgkJCQkvLyBSZXBsaWNhdGUgc29tZSBrZXkgaGFuZGxlcnMgdG8gYWxsb3cgdGhlbSB0byByZXBlYXQgaW4gRmlyZWZveCBhbmQgT3BlcmEKCQkJCXZhciBrZXlDb2RlID0gJC51aS5rZXlDb2RlOwoJCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsKCQkJCWNhc2Uga2V5Q29kZS5QQUdFX1VQOgoJCQkJCXRoaXMuX21vdmUoICJwcmV2aW91c1BhZ2UiLCBldmVudCApOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSBrZXlDb2RlLlBBR0VfRE9XTjoKCQkJCQl0aGlzLl9tb3ZlKCAibmV4dFBhZ2UiLCBldmVudCApOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSBrZXlDb2RlLlVQOgoJCQkJCXRoaXMuX2tleUV2ZW50KCAicHJldmlvdXMiLCBldmVudCApOwoJCQkJCWJyZWFrOwoJCQkJY2FzZSBrZXlDb2RlLkRPV046CgkJCQkJdGhpcy5fa2V5RXZlbnQoICJuZXh0IiwgZXZlbnQgKTsKCQkJCQlicmVhazsKCQkJCX0KCQkJfSwKCQkJaW5wdXQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWlmICggc3VwcHJlc3NJbnB1dCApIHsKCQkJCQlzdXBwcmVzc0lucHV0ID0gZmFsc2U7CgkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCQlyZXR1cm47CgkJCQl9CgkJCQl0aGlzLl9zZWFyY2hUaW1lb3V0KCBldmVudCApOwoJCQl9LAoJCQlmb2N1czogZnVuY3Rpb24oKSB7CgkJCQl0aGlzLnNlbGVjdGVkSXRlbSA9IG51bGw7CgkJCQl0aGlzLnByZXZpb3VzID0gdGhpcy5fdmFsdWUoKTsKCQkJfSwKCQkJYmx1cjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCB0aGlzLmNhbmNlbEJsdXIgKSB7CgkJCQkJZGVsZXRlIHRoaXMuY2FuY2VsQmx1cjsKCQkJCQlyZXR1cm47CgkJCQl9CgoJCQkJY2xlYXJUaW1lb3V0KCB0aGlzLnNlYXJjaGluZyApOwoJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsKCQkJCXRoaXMuX2NoYW5nZSggZXZlbnQgKTsKCQkJfQoJCX0gKTsKCgkJdGhpcy5faW5pdFNvdXJjZSgpOwoJCXRoaXMubWVudSA9ICQoICI8dWw+IiApCgkJCS5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApCgkJCS5tZW51KCB7CgoJCQkJLy8gZGlzYWJsZSBBUklBIHN1cHBvcnQsIHRoZSBsaXZlIHJlZ2lvbiB0YWtlcyBjYXJlIG9mIHRoYXQKCQkJCXJvbGU6IG51bGwKCQkJfSApCgkJCS5oaWRlKCkKCQkJLm1lbnUoICJpbnN0YW5jZSIgKTsKCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMubWVudS5lbGVtZW50LCAidWktYXV0b2NvbXBsZXRlIiwgInVpLWZyb250IiApOwoJCXRoaXMuX29uKCB0aGlzLm1lbnUuZWxlbWVudCwgewoJCQltb3VzZWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsKCgkJCQkvLyBwcmV2ZW50IG1vdmluZyBmb2N1cyBvdXQgb2YgdGhlIHRleHQgZmllbGQKCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgoJCQkJLy8gSUUgZG9lc24ndCBwcmV2ZW50IG1vdmluZyBmb2N1cyBldmVuIHdpdGggZXZlbnQucHJldmVudERlZmF1bHQoKQoJCQkJLy8gc28gd2Ugc2V0IGEgZmxhZyB0byBrbm93IHdoZW4gd2Ugc2hvdWxkIGlnbm9yZSB0aGUgYmx1ciBldmVudAoJCQkJdGhpcy5jYW5jZWxCbHVyID0gdHJ1ZTsKCQkJCXRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCQlkZWxldGUgdGhpcy5jYW5jZWxCbHVyOwoKCQkJCQkvLyBTdXBwb3J0OiBJRSA4IG9ubHkKCQkJCQkvLyBSaWdodCBjbGlja2luZyBhIG1lbnUgaXRlbSBvciBzZWxlY3RpbmcgdGV4dCBmcm9tIHRoZSBtZW51IGl0ZW1zIHdpbGwKCQkJCQkvLyByZXN1bHQgaW4gZm9jdXMgbW92aW5nIG91dCBvZiB0aGUgaW5wdXQuIEhvd2V2ZXIsIHdlJ3ZlIGFscmVhZHkgcmVjZWl2ZWQKCQkJCQkvLyBhbmQgaWdub3JlZCB0aGUgYmx1ciBldmVudCBiZWNhdXNlIG9mIHRoZSBjYW5jZWxCbHVyIGZsYWcgc2V0IGFib3ZlLiBTbwoJCQkJCS8vIHdlIHJlc3RvcmUgZm9jdXMgdG8gZW5zdXJlIHRoYXQgdGhlIG1lbnUgY2xvc2VzIHByb3Blcmx5IGJhc2VkIG9uIHRoZSB1c2VyJ3MKCQkJCQkvLyBuZXh0IGFjdGlvbnMuCgkJCQkJaWYgKCB0aGlzLmVsZW1lbnRbIDAgXSAhPT0gJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5kb2N1bWVudFsgMCBdICkgKSB7CgkJCQkJCXRoaXMuZWxlbWVudC50cmlnZ2VyKCAiZm9jdXMiICk7CgkJCQkJfQoJCQkJfSApOwoJCQl9LAoJCQltZW51Zm9jdXM6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7CgkJCQl2YXIgbGFiZWwsIGl0ZW07CgoJCQkJLy8gc3VwcG9ydDogRmlyZWZveAoJCQkJLy8gUHJldmVudCBhY2NpZGVudGFsIGFjdGl2YXRpb24gb2YgbWVudSBpdGVtcyBpbiBGaXJlZm94ICgjNzAyNCAjOTExOCkKCQkJCWlmICggdGhpcy5pc05ld01lbnUgKSB7CgkJCQkJdGhpcy5pc05ld01lbnUgPSBmYWxzZTsKCQkJCQlpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQgJiYgL15tb3VzZS8udGVzdCggZXZlbnQub3JpZ2luYWxFdmVudC50eXBlICkgKSB7CgkJCQkJCXRoaXMubWVudS5ibHVyKCk7CgoJCQkJCQl0aGlzLmRvY3VtZW50Lm9uZSggIm1vdXNlbW92ZSIsIGZ1bmN0aW9uKCkgewoJCQkJCQkJJCggZXZlbnQudGFyZ2V0ICkudHJpZ2dlciggZXZlbnQub3JpZ2luYWxFdmVudCApOwoJCQkJCQl9ICk7CgoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJfQoKCQkJCWl0ZW0gPSB1aS5pdGVtLmRhdGEoICJ1aS1hdXRvY29tcGxldGUtaXRlbSIgKTsKCQkJCWlmICggZmFsc2UgIT09IHRoaXMuX3RyaWdnZXIoICJmb2N1cyIsIGV2ZW50LCB7IGl0ZW06IGl0ZW0gfSApICkgewoKCQkJCQkvLyB1c2UgdmFsdWUgdG8gbWF0Y2ggd2hhdCB3aWxsIGVuZCB1cCBpbiB0aGUgaW5wdXQsIGlmIGl0IHdhcyBhIGtleSBldmVudAoJCQkJCWlmICggZXZlbnQub3JpZ2luYWxFdmVudCAmJiAvXmtleS8udGVzdCggZXZlbnQub3JpZ2luYWxFdmVudC50eXBlICkgKSB7CgkJCQkJCXRoaXMuX3ZhbHVlKCBpdGVtLnZhbHVlICk7CgkJCQkJfQoJCQkJfQoKCQkJCS8vIEFubm91bmNlIHRoZSB2YWx1ZSBpbiB0aGUgbGl2ZVJlZ2lvbgoJCQkJbGFiZWwgPSB1aS5pdGVtLmF0dHIoICJhcmlhLWxhYmVsIiApIHx8IGl0ZW0udmFsdWU7CgkJCQlpZiAoIGxhYmVsICYmICQudHJpbSggbGFiZWwgKS5sZW5ndGggKSB7CgkJCQkJdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpOwoJCQkJCSQoICI8ZGl2PiIgKS50ZXh0KCBsYWJlbCApLmFwcGVuZFRvKCB0aGlzLmxpdmVSZWdpb24gKTsKCQkJCX0KCQkJfSwKCQkJbWVudXNlbGVjdDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsKCQkJCXZhciBpdGVtID0gdWkuaXRlbS5kYXRhKCAidWktYXV0b2NvbXBsZXRlLWl0ZW0iICksCgkJCQkJcHJldmlvdXMgPSB0aGlzLnByZXZpb3VzOwoKCQkJCS8vIE9ubHkgdHJpZ2dlciB3aGVuIGZvY3VzIHdhcyBsb3N0IChjbGljayBvbiBtZW51KQoJCQkJaWYgKCB0aGlzLmVsZW1lbnRbIDAgXSAhPT0gJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5kb2N1bWVudFsgMCBdICkgKSB7CgkJCQkJdGhpcy5lbGVtZW50LnRyaWdnZXIoICJmb2N1cyIgKTsKCQkJCQl0aGlzLnByZXZpb3VzID0gcHJldmlvdXM7CgoJCQkJCS8vICM2MTA5IC0gSUUgdHJpZ2dlcnMgdHdvIGZvY3VzIGV2ZW50cyBhbmQgdGhlIHNlY29uZAoJCQkJCS8vIGlzIGFzeW5jaHJvbm91cywgc28gd2UgbmVlZCB0byByZXNldCB0aGUgcHJldmlvdXMKCQkJCQkvLyB0ZXJtIHN5bmNocm9ub3VzbHkgYW5kIGFzeW5jaHJvbm91c2x5IDotKAoJCQkJCXRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCQkJdGhpcy5wcmV2aW91cyA9IHByZXZpb3VzOwoJCQkJCQl0aGlzLnNlbGVjdGVkSXRlbSA9IGl0ZW07CgkJCQkJfSApOwoJCQkJfQoKCQkJCWlmICggZmFsc2UgIT09IHRoaXMuX3RyaWdnZXIoICJzZWxlY3QiLCBldmVudCwgeyBpdGVtOiBpdGVtIH0gKSApIHsKCQkJCQl0aGlzLl92YWx1ZSggaXRlbS52YWx1ZSApOwoJCQkJfQoKCQkJCS8vIHJlc2V0IHRoZSB0ZXJtIGFmdGVyIHRoZSBzZWxlY3QgZXZlbnQKCQkJCS8vIHRoaXMgYWxsb3dzIGN1c3RvbSBzZWxlY3QgaGFuZGxpbmcgdG8gd29yayBwcm9wZXJseQoJCQkJdGhpcy50ZXJtID0gdGhpcy5fdmFsdWUoKTsKCgkJCQl0aGlzLmNsb3NlKCBldmVudCApOwoJCQkJdGhpcy5zZWxlY3RlZEl0ZW0gPSBpdGVtOwoJCQl9CgkJfSApOwoKCQl0aGlzLmxpdmVSZWdpb24gPSAkKCAiPGRpdj4iLCB7CgkJCXJvbGU6ICJzdGF0dXMiLAoJCQkiYXJpYS1saXZlIjogImFzc2VydGl2ZSIsCgkJCSJhcmlhLXJlbGV2YW50IjogImFkZGl0aW9ucyIKCQl9ICkKCQkJLmFwcGVuZFRvKCB0aGlzLmRvY3VtZW50WyAwIF0uYm9keSApOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5saXZlUmVnaW9uLCBudWxsLCAidWktaGVscGVyLWhpZGRlbi1hY2Nlc3NpYmxlIiApOwoKCQkvLyBUdXJuaW5nIG9mZiBhdXRvY29tcGxldGUgcHJldmVudHMgdGhlIGJyb3dzZXIgZnJvbSByZW1lbWJlcmluZyB0aGUKCQkvLyB2YWx1ZSB3aGVuIG5hdmlnYXRpbmcgdGhyb3VnaCBoaXN0b3J5LCBzbyB3ZSByZS1lbmFibGUgYXV0b2NvbXBsZXRlCgkJLy8gaWYgdGhlIHBhZ2UgaXMgdW5sb2FkZWQgYmVmb3JlIHRoZSB3aWRnZXQgaXMgZGVzdHJveWVkLiAjNzc5MAoJCXRoaXMuX29uKCB0aGlzLndpbmRvdywgewoJCQliZWZvcmV1bmxvYWQ6IGZ1bmN0aW9uKCkgewoJCQkJdGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoICJhdXRvY29tcGxldGUiICk7CgkJCX0KCQl9ICk7Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQljbGVhclRpbWVvdXQoIHRoaXMuc2VhcmNoaW5nICk7CgkJdGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoICJhdXRvY29tcGxldGUiICk7CgkJdGhpcy5tZW51LmVsZW1lbnQucmVtb3ZlKCk7CgkJdGhpcy5saXZlUmVnaW9uLnJlbW92ZSgpOwoJfSwKCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOwoJCWlmICgga2V5ID09PSAic291cmNlIiApIHsKCQkJdGhpcy5faW5pdFNvdXJjZSgpOwoJCX0KCQlpZiAoIGtleSA9PT0gImFwcGVuZFRvIiApIHsKCQkJdGhpcy5tZW51LmVsZW1lbnQuYXBwZW5kVG8oIHRoaXMuX2FwcGVuZFRvKCkgKTsKCQl9CgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgJiYgdmFsdWUgJiYgdGhpcy54aHIgKSB7CgkJCXRoaXMueGhyLmFib3J0KCk7CgkJfQoJfSwKCglfaXNFdmVudFRhcmdldEluV2lkZ2V0OiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIG1lbnVFbGVtZW50ID0gdGhpcy5tZW51LmVsZW1lbnRbIDAgXTsKCgkJcmV0dXJuIGV2ZW50LnRhcmdldCA9PT0gdGhpcy5lbGVtZW50WyAwIF0gfHwKCQkJZXZlbnQudGFyZ2V0ID09PSBtZW51RWxlbWVudCB8fAoJCQkkLmNvbnRhaW5zKCBtZW51RWxlbWVudCwgZXZlbnQudGFyZ2V0ICk7Cgl9LAoKCV9jbG9zZU9uQ2xpY2tPdXRzaWRlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCAhdGhpcy5faXNFdmVudFRhcmdldEluV2lkZ2V0KCBldmVudCApICkgewoJCQl0aGlzLmNsb3NlKCk7CgkJfQoJfSwKCglfYXBwZW5kVG86IGZ1bmN0aW9uKCkgewoJCXZhciBlbGVtZW50ID0gdGhpcy5vcHRpb25zLmFwcGVuZFRvOwoKCQlpZiAoIGVsZW1lbnQgKSB7CgkJCWVsZW1lbnQgPSBlbGVtZW50LmpxdWVyeSB8fCBlbGVtZW50Lm5vZGVUeXBlID8KCQkJCSQoIGVsZW1lbnQgKSA6CgkJCQl0aGlzLmRvY3VtZW50LmZpbmQoIGVsZW1lbnQgKS5lcSggMCApOwoJCX0KCgkJaWYgKCAhZWxlbWVudCB8fCAhZWxlbWVudFsgMCBdICkgewoJCQllbGVtZW50ID0gdGhpcy5lbGVtZW50LmNsb3Nlc3QoICIudWktZnJvbnQsIGRpYWxvZyIgKTsKCQl9CgoJCWlmICggIWVsZW1lbnQubGVuZ3RoICkgewoJCQllbGVtZW50ID0gdGhpcy5kb2N1bWVudFsgMCBdLmJvZHk7CgkJfQoKCQlyZXR1cm4gZWxlbWVudDsKCX0sCgoJX2luaXRTb3VyY2U6IGZ1bmN0aW9uKCkgewoJCXZhciBhcnJheSwgdXJsLAoJCQl0aGF0ID0gdGhpczsKCQlpZiAoICQuaXNBcnJheSggdGhpcy5vcHRpb25zLnNvdXJjZSApICkgewoJCQlhcnJheSA9IHRoaXMub3B0aW9ucy5zb3VyY2U7CgkJCXRoaXMuc291cmNlID0gZnVuY3Rpb24oIHJlcXVlc3QsIHJlc3BvbnNlICkgewoJCQkJcmVzcG9uc2UoICQudWkuYXV0b2NvbXBsZXRlLmZpbHRlciggYXJyYXksIHJlcXVlc3QudGVybSApICk7CgkJCX07CgkJfSBlbHNlIGlmICggdHlwZW9mIHRoaXMub3B0aW9ucy5zb3VyY2UgPT09ICJzdHJpbmciICkgewoJCQl1cmwgPSB0aGlzLm9wdGlvbnMuc291cmNlOwoJCQl0aGlzLnNvdXJjZSA9IGZ1bmN0aW9uKCByZXF1ZXN0LCByZXNwb25zZSApIHsKCQkJCWlmICggdGhhdC54aHIgKSB7CgkJCQkJdGhhdC54aHIuYWJvcnQoKTsKCQkJCX0KCQkJCXRoYXQueGhyID0gJC5hamF4KCB7CgkJCQkJdXJsOiB1cmwsCgkJCQkJZGF0YTogcmVxdWVzdCwKCQkJCQlkYXRhVHlwZTogImpzb24iLAoJCQkJCXN1Y2Nlc3M6IGZ1bmN0aW9uKCBkYXRhICkgewoJCQkJCQlyZXNwb25zZSggZGF0YSApOwoJCQkJCX0sCgkJCQkJZXJyb3I6IGZ1bmN0aW9uKCkgewoJCQkJCQlyZXNwb25zZSggW10gKTsKCQkJCQl9CgkJCQl9ICk7CgkJCX07CgkJfSBlbHNlIHsKCQkJdGhpcy5zb3VyY2UgPSB0aGlzLm9wdGlvbnMuc291cmNlOwoJCX0KCX0sCgoJX3NlYXJjaFRpbWVvdXQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQljbGVhclRpbWVvdXQoIHRoaXMuc2VhcmNoaW5nICk7CgkJdGhpcy5zZWFyY2hpbmcgPSB0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgoJCQkvLyBTZWFyY2ggaWYgdGhlIHZhbHVlIGhhcyBjaGFuZ2VkLCBvciBpZiB0aGUgdXNlciByZXR5cGVzIHRoZSBzYW1lIHZhbHVlIChzZWUgIzc0MzQpCgkJCXZhciBlcXVhbFZhbHVlcyA9IHRoaXMudGVybSA9PT0gdGhpcy5fdmFsdWUoKSwKCQkJCW1lbnVWaXNpYmxlID0gdGhpcy5tZW51LmVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSwKCQkJCW1vZGlmaWVyS2V5ID0gZXZlbnQuYWx0S2V5IHx8IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSB8fCBldmVudC5zaGlmdEtleTsKCgkJCWlmICggIWVxdWFsVmFsdWVzIHx8ICggZXF1YWxWYWx1ZXMgJiYgIW1lbnVWaXNpYmxlICYmICFtb2RpZmllcktleSApICkgewoJCQkJdGhpcy5zZWxlY3RlZEl0ZW0gPSBudWxsOwoJCQkJdGhpcy5zZWFyY2goIG51bGwsIGV2ZW50ICk7CgkJCX0KCQl9LCB0aGlzLm9wdGlvbnMuZGVsYXkgKTsKCX0sCgoJc2VhcmNoOiBmdW5jdGlvbiggdmFsdWUsIGV2ZW50ICkgewoJCXZhbHVlID0gdmFsdWUgIT0gbnVsbCA/IHZhbHVlIDogdGhpcy5fdmFsdWUoKTsKCgkJLy8gQWx3YXlzIHNhdmUgdGhlIGFjdHVhbCB2YWx1ZSwgbm90IHRoZSBvbmUgcGFzc2VkIGFzIGFuIGFyZ3VtZW50CgkJdGhpcy50ZXJtID0gdGhpcy5fdmFsdWUoKTsKCgkJaWYgKCB2YWx1ZS5sZW5ndGggPCB0aGlzLm9wdGlvbnMubWluTGVuZ3RoICkgewoJCQlyZXR1cm4gdGhpcy5jbG9zZSggZXZlbnQgKTsKCQl9CgoJCWlmICggdGhpcy5fdHJpZ2dlciggInNlYXJjaCIsIGV2ZW50ICkgPT09IGZhbHNlICkgewoJCQlyZXR1cm47CgkJfQoKCQlyZXR1cm4gdGhpcy5fc2VhcmNoKCB2YWx1ZSApOwoJfSwKCglfc2VhcmNoOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhpcy5wZW5kaW5nKys7CgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1hdXRvY29tcGxldGUtbG9hZGluZyIgKTsKCQl0aGlzLmNhbmNlbFNlYXJjaCA9IGZhbHNlOwoKCQl0aGlzLnNvdXJjZSggeyB0ZXJtOiB2YWx1ZSB9LCB0aGlzLl9yZXNwb25zZSgpICk7Cgl9LAoKCV9yZXNwb25zZTogZnVuY3Rpb24oKSB7CgkJdmFyIGluZGV4ID0gKyt0aGlzLnJlcXVlc3RJbmRleDsKCgkJcmV0dXJuICQucHJveHkoIGZ1bmN0aW9uKCBjb250ZW50ICkgewoJCQlpZiAoIGluZGV4ID09PSB0aGlzLnJlcXVlc3RJbmRleCApIHsKCQkJCXRoaXMuX19yZXNwb25zZSggY29udGVudCApOwoJCQl9CgoJCQl0aGlzLnBlbmRpbmctLTsKCQkJaWYgKCAhdGhpcy5wZW5kaW5nICkgewoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoICJ1aS1hdXRvY29tcGxldGUtbG9hZGluZyIgKTsKCQkJfQoJCX0sIHRoaXMgKTsKCX0sCgoJX19yZXNwb25zZTogZnVuY3Rpb24oIGNvbnRlbnQgKSB7CgkJaWYgKCBjb250ZW50ICkgewoJCQljb250ZW50ID0gdGhpcy5fbm9ybWFsaXplKCBjb250ZW50ICk7CgkJfQoJCXRoaXMuX3RyaWdnZXIoICJyZXNwb25zZSIsIG51bGwsIHsgY29udGVudDogY29udGVudCB9ICk7CgkJaWYgKCAhdGhpcy5vcHRpb25zLmRpc2FibGVkICYmIGNvbnRlbnQgJiYgY29udGVudC5sZW5ndGggJiYgIXRoaXMuY2FuY2VsU2VhcmNoICkgewoJCQl0aGlzLl9zdWdnZXN0KCBjb250ZW50ICk7CgkJCXRoaXMuX3RyaWdnZXIoICJvcGVuIiApOwoJCX0gZWxzZSB7CgoJCQkvLyB1c2UgLl9jbG9zZSgpIGluc3RlYWQgb2YgLmNsb3NlKCkgc28gd2UgZG9uJ3QgY2FuY2VsIGZ1dHVyZSBzZWFyY2hlcwoJCQl0aGlzLl9jbG9zZSgpOwoJCX0KCX0sCgoJY2xvc2U6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl0aGlzLmNhbmNlbFNlYXJjaCA9IHRydWU7CgkJdGhpcy5fY2xvc2UoIGV2ZW50ICk7Cgl9LAoKCV9jbG9zZTogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkvLyBSZW1vdmUgdGhlIGhhbmRsZXIgdGhhdCBjbG9zZXMgdGhlIG1lbnUgb24gb3V0c2lkZSBjbGlja3MKCQl0aGlzLl9vZmYoIHRoaXMuZG9jdW1lbnQsICJtb3VzZWRvd24iICk7CgoJCWlmICggdGhpcy5tZW51LmVsZW1lbnQuaXMoICI6dmlzaWJsZSIgKSApIHsKCQkJdGhpcy5tZW51LmVsZW1lbnQuaGlkZSgpOwoJCQl0aGlzLm1lbnUuYmx1cigpOwoJCQl0aGlzLmlzTmV3TWVudSA9IHRydWU7CgkJCXRoaXMuX3RyaWdnZXIoICJjbG9zZSIsIGV2ZW50ICk7CgkJfQoJfSwKCglfY2hhbmdlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCB0aGlzLnByZXZpb3VzICE9PSB0aGlzLl92YWx1ZSgpICkgewoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQsIHsgaXRlbTogdGhpcy5zZWxlY3RlZEl0ZW0gfSApOwoJCX0KCX0sCgoJX25vcm1hbGl6ZTogZnVuY3Rpb24oIGl0ZW1zICkgewoKCQkvLyBhc3N1bWUgYWxsIGl0ZW1zIGhhdmUgdGhlIHJpZ2h0IGZvcm1hdCB3aGVuIHRoZSBmaXJzdCBpdGVtIGlzIGNvbXBsZXRlCgkJaWYgKCBpdGVtcy5sZW5ndGggJiYgaXRlbXNbIDAgXS5sYWJlbCAmJiBpdGVtc1sgMCBdLnZhbHVlICkgewoJCQlyZXR1cm4gaXRlbXM7CgkJfQoJCXJldHVybiAkLm1hcCggaXRlbXMsIGZ1bmN0aW9uKCBpdGVtICkgewoJCQlpZiAoIHR5cGVvZiBpdGVtID09PSAic3RyaW5nIiApIHsKCQkJCXJldHVybiB7CgkJCQkJbGFiZWw6IGl0ZW0sCgkJCQkJdmFsdWU6IGl0ZW0KCQkJCX07CgkJCX0KCQkJcmV0dXJuICQuZXh0ZW5kKCB7fSwgaXRlbSwgewoJCQkJbGFiZWw6IGl0ZW0ubGFiZWwgfHwgaXRlbS52YWx1ZSwKCQkJCXZhbHVlOiBpdGVtLnZhbHVlIHx8IGl0ZW0ubGFiZWwKCQkJfSApOwoJCX0gKTsKCX0sCgoJX3N1Z2dlc3Q6IGZ1bmN0aW9uKCBpdGVtcyApIHsKCQl2YXIgdWwgPSB0aGlzLm1lbnUuZWxlbWVudC5lbXB0eSgpOwoJCXRoaXMuX3JlbmRlck1lbnUoIHVsLCBpdGVtcyApOwoJCXRoaXMuaXNOZXdNZW51ID0gdHJ1ZTsKCQl0aGlzLm1lbnUucmVmcmVzaCgpOwoKCQkvLyBTaXplIGFuZCBwb3NpdGlvbiBtZW51CgkJdWwuc2hvdygpOwoJCXRoaXMuX3Jlc2l6ZU1lbnUoKTsKCQl1bC5wb3NpdGlvbiggJC5leHRlbmQoIHsKCQkJb2Y6IHRoaXMuZWxlbWVudAoJCX0sIHRoaXMub3B0aW9ucy5wb3NpdGlvbiApICk7CgoJCWlmICggdGhpcy5vcHRpb25zLmF1dG9Gb2N1cyApIHsKCQkJdGhpcy5tZW51Lm5leHQoKTsKCQl9CgoJCS8vIExpc3RlbiBmb3IgaW50ZXJhY3Rpb25zIG91dHNpZGUgb2YgdGhlIHdpZGdldCAoIzY2NDIpCgkJdGhpcy5fb24oIHRoaXMuZG9jdW1lbnQsIHsKCQkJbW91c2Vkb3duOiAiX2Nsb3NlT25DbGlja091dHNpZGUiCgkJfSApOwoJfSwKCglfcmVzaXplTWVudTogZnVuY3Rpb24oKSB7CgkJdmFyIHVsID0gdGhpcy5tZW51LmVsZW1lbnQ7CgkJdWwub3V0ZXJXaWR0aCggTWF0aC5tYXgoCgoJCQkvLyBGaXJlZm94IHdyYXBzIGxvbmcgdGV4dCAocG9zc2libHkgYSByb3VuZGluZyBidWcpCgkJCS8vIHNvIHdlIGFkZCAxcHggdG8gYXZvaWQgdGhlIHdyYXBwaW5nICgjNzUxMykKCQkJdWwud2lkdGgoICIiICkub3V0ZXJXaWR0aCgpICsgMSwKCQkJdGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKQoJCSkgKTsKCX0sCgoJX3JlbmRlck1lbnU6IGZ1bmN0aW9uKCB1bCwgaXRlbXMgKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoJCSQuZWFjaCggaXRlbXMsIGZ1bmN0aW9uKCBpbmRleCwgaXRlbSApIHsKCQkJdGhhdC5fcmVuZGVySXRlbURhdGEoIHVsLCBpdGVtICk7CgkJfSApOwoJfSwKCglfcmVuZGVySXRlbURhdGE6IGZ1bmN0aW9uKCB1bCwgaXRlbSApIHsKCQlyZXR1cm4gdGhpcy5fcmVuZGVySXRlbSggdWwsIGl0ZW0gKS5kYXRhKCAidWktYXV0b2NvbXBsZXRlLWl0ZW0iLCBpdGVtICk7Cgl9LAoKCV9yZW5kZXJJdGVtOiBmdW5jdGlvbiggdWwsIGl0ZW0gKSB7CgkJcmV0dXJuICQoICI8bGk+IiApCgkJCS5hcHBlbmQoICQoICI8ZGl2PiIgKS50ZXh0KCBpdGVtLmxhYmVsICkgKQoJCQkuYXBwZW5kVG8oIHVsICk7Cgl9LAoKCV9tb3ZlOiBmdW5jdGlvbiggZGlyZWN0aW9uLCBldmVudCApIHsKCQlpZiAoICF0aGlzLm1lbnUuZWxlbWVudC5pcyggIjp2aXNpYmxlIiApICkgewoJCQl0aGlzLnNlYXJjaCggbnVsbCwgZXZlbnQgKTsKCQkJcmV0dXJuOwoJCX0KCQlpZiAoIHRoaXMubWVudS5pc0ZpcnN0SXRlbSgpICYmIC9ecHJldmlvdXMvLnRlc3QoIGRpcmVjdGlvbiApIHx8CgkJCQl0aGlzLm1lbnUuaXNMYXN0SXRlbSgpICYmIC9ebmV4dC8udGVzdCggZGlyZWN0aW9uICkgKSB7CgoJCQlpZiAoICF0aGlzLmlzTXVsdGlMaW5lICkgewoJCQkJdGhpcy5fdmFsdWUoIHRoaXMudGVybSApOwoJCQl9CgoJCQl0aGlzLm1lbnUuYmx1cigpOwoJCQlyZXR1cm47CgkJfQoJCXRoaXMubWVudVsgZGlyZWN0aW9uIF0oIGV2ZW50ICk7Cgl9LAoKCXdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMubWVudS5lbGVtZW50OwoJfSwKCglfdmFsdWU6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLnZhbHVlTWV0aG9kLmFwcGx5KCB0aGlzLmVsZW1lbnQsIGFyZ3VtZW50cyApOwoJfSwKCglfa2V5RXZlbnQ6IGZ1bmN0aW9uKCBrZXlFdmVudCwgZXZlbnQgKSB7CgkJaWYgKCAhdGhpcy5pc011bHRpTGluZSB8fCB0aGlzLm1lbnUuZWxlbWVudC5pcyggIjp2aXNpYmxlIiApICkgewoJCQl0aGlzLl9tb3ZlKCBrZXlFdmVudCwgZXZlbnQgKTsKCgkJCS8vIFByZXZlbnRzIG1vdmluZyBjdXJzb3IgdG8gYmVnaW5uaW5nL2VuZCBvZiB0aGUgdGV4dCBmaWVsZCBpbiBzb21lIGJyb3dzZXJzCgkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJfQoJfSwKCgkvLyBTdXBwb3J0OiBDaHJvbWUgPD01MAoJLy8gV2Ugc2hvdWxkIGJlIGFibGUgdG8ganVzdCB1c2UgdGhpcy5lbGVtZW50LnByb3AoICJpc0NvbnRlbnRFZGl0YWJsZSIgKQoJLy8gYnV0IGhpZGRlbiBlbGVtZW50cyBhbHdheXMgcmVwb3J0IGZhbHNlIGluIENocm9tZS4KCS8vIGh0dHBzOi8vY29kZS5nb29nbGUuY29tL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zMTMwODIKCV9pc0NvbnRlbnRFZGl0YWJsZTogZnVuY3Rpb24oIGVsZW1lbnQgKSB7CgkJaWYgKCAhZWxlbWVudC5sZW5ndGggKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXZhciBlZGl0YWJsZSA9IGVsZW1lbnQucHJvcCggImNvbnRlbnRFZGl0YWJsZSIgKTsKCgkJaWYgKCBlZGl0YWJsZSA9PT0gImluaGVyaXQiICkgewoJCSAgcmV0dXJuIHRoaXMuX2lzQ29udGVudEVkaXRhYmxlKCBlbGVtZW50LnBhcmVudCgpICk7CgkJfQoKCQlyZXR1cm4gZWRpdGFibGUgPT09ICJ0cnVlIjsKCX0KfSApOwoKJC5leHRlbmQoICQudWkuYXV0b2NvbXBsZXRlLCB7Cgllc2NhcGVSZWdleDogZnVuY3Rpb24oIHZhbHVlICkgewoJCXJldHVybiB2YWx1ZS5yZXBsYWNlKCAvW1wtXFtcXXt9KCkqKz8uLFxcXF4kfCNcc10vZywgIlxcJCYiICk7Cgl9LAoJZmlsdGVyOiBmdW5jdGlvbiggYXJyYXksIHRlcm0gKSB7CgkJdmFyIG1hdGNoZXIgPSBuZXcgUmVnRXhwKCAkLnVpLmF1dG9jb21wbGV0ZS5lc2NhcGVSZWdleCggdGVybSApLCAiaSIgKTsKCQlyZXR1cm4gJC5ncmVwKCBhcnJheSwgZnVuY3Rpb24oIHZhbHVlICkgewoJCQlyZXR1cm4gbWF0Y2hlci50ZXN0KCB2YWx1ZS5sYWJlbCB8fCB2YWx1ZS52YWx1ZSB8fCB2YWx1ZSApOwoJCX0gKTsKCX0KfSApOwoKLy8gTGl2ZSByZWdpb24gZXh0ZW5zaW9uLCBhZGRpbmcgYSBgbWVzc2FnZXNgIG9wdGlvbgovLyBOT1RFOiBUaGlzIGlzIGFuIGV4cGVyaW1lbnRhbCBBUEkuIFdlIGFyZSBzdGlsbCBpbnZlc3RpZ2F0aW5nCi8vIGEgZnVsbCBzb2x1dGlvbiBmb3Igc3RyaW5nIG1hbmlwdWxhdGlvbiBhbmQgaW50ZXJuYXRpb25hbGl6YXRpb24uCiQud2lkZ2V0KCAidWkuYXV0b2NvbXBsZXRlIiwgJC51aS5hdXRvY29tcGxldGUsIHsKCW9wdGlvbnM6IHsKCQltZXNzYWdlczogewoJCQlub1Jlc3VsdHM6ICJObyBzZWFyY2ggcmVzdWx0cy4iLAoJCQlyZXN1bHRzOiBmdW5jdGlvbiggYW1vdW50ICkgewoJCQkJcmV0dXJuIGFtb3VudCArICggYW1vdW50ID4gMSA/ICIgcmVzdWx0cyBhcmUiIDogIiByZXN1bHQgaXMiICkgKwoJCQkJCSIgYXZhaWxhYmxlLCB1c2UgdXAgYW5kIGRvd24gYXJyb3cga2V5cyB0byBuYXZpZ2F0ZS4iOwoJCQl9CgkJfQoJfSwKCglfX3Jlc3BvbnNlOiBmdW5jdGlvbiggY29udGVudCApIHsKCQl2YXIgbWVzc2FnZTsKCQl0aGlzLl9zdXBlckFwcGx5KCBhcmd1bWVudHMgKTsKCQlpZiAoIHRoaXMub3B0aW9ucy5kaXNhYmxlZCB8fCB0aGlzLmNhbmNlbFNlYXJjaCApIHsKCQkJcmV0dXJuOwoJCX0KCQlpZiAoIGNvbnRlbnQgJiYgY29udGVudC5sZW5ndGggKSB7CgkJCW1lc3NhZ2UgPSB0aGlzLm9wdGlvbnMubWVzc2FnZXMucmVzdWx0cyggY29udGVudC5sZW5ndGggKTsKCQl9IGVsc2UgewoJCQltZXNzYWdlID0gdGhpcy5vcHRpb25zLm1lc3NhZ2VzLm5vUmVzdWx0czsKCQl9CgkJdGhpcy5saXZlUmVnaW9uLmNoaWxkcmVuKCkuaGlkZSgpOwoJCSQoICI8ZGl2PiIgKS50ZXh0KCBtZXNzYWdlICkuYXBwZW5kVG8oIHRoaXMubGl2ZVJlZ2lvbiApOwoJfQp9ICk7Cgp2YXIgd2lkZ2V0c0F1dG9jb21wbGV0ZSA9ICQudWkuYXV0b2NvbXBsZXRlOwoKCi8qIQogKiBqUXVlcnkgVUkgQ29udHJvbGdyb3VwIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogQ29udHJvbGdyb3VwCi8vPj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IFZpc3VhbGx5IGdyb3VwcyBmb3JtIGNvbnRyb2wgd2lkZ2V0cwovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vY29udHJvbGdyb3VwLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vY29udHJvbGdyb3VwLwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvY29yZS5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvbnRyb2xncm91cC5jc3MKLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzCgoKdmFyIGNvbnRyb2xncm91cENvcm5lclJlZ2V4ID0gL3VpLWNvcm5lci0oW2Etel0pezIsNn0vZzsKCnZhciB3aWRnZXRzQ29udHJvbGdyb3VwID0gJC53aWRnZXQoICJ1aS5jb250cm9sZ3JvdXAiLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCWRlZmF1bHRFbGVtZW50OiAiPGRpdj4iLAoJb3B0aW9uczogewoJCWRpcmVjdGlvbjogImhvcml6b250YWwiLAoJCWRpc2FibGVkOiBudWxsLAoJCW9ubHlWaXNpYmxlOiB0cnVlLAoJCWl0ZW1zOiB7CgkJCSJidXR0b24iOiAiaW5wdXRbdHlwZT1idXR0b25dLCBpbnB1dFt0eXBlPXN1Ym1pdF0sIGlucHV0W3R5cGU9cmVzZXRdLCBidXR0b24sIGEiLAoJCQkiY29udHJvbGdyb3VwTGFiZWwiOiAiLnVpLWNvbnRyb2xncm91cC1sYWJlbCIsCgkJCSJjaGVja2JveHJhZGlvIjogImlucHV0W3R5cGU9J2NoZWNrYm94J10sIGlucHV0W3R5cGU9J3JhZGlvJ10iLAoJCQkic2VsZWN0bWVudSI6ICJzZWxlY3QiLAoJCQkic3Bpbm5lciI6ICIudWktc3Bpbm5lci1pbnB1dCIKCQl9Cgl9LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX2VuaGFuY2UoKTsKCX0sCgoJLy8gVG8gc3VwcG9ydCB0aGUgZW5oYW5jZWQgb3B0aW9uIGluIGpRdWVyeSBNb2JpbGUsIHdlIGlzb2xhdGUgRE9NIG1hbmlwdWxhdGlvbgoJX2VuaGFuY2U6IGZ1bmN0aW9uKCkgewoJCXRoaXMuZWxlbWVudC5hdHRyKCAicm9sZSIsICJ0b29sYmFyIiApOwoJCXRoaXMucmVmcmVzaCgpOwoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdGhpcy5fY2FsbENoaWxkTWV0aG9kKCAiZGVzdHJveSIgKTsKCQl0aGlzLmNoaWxkV2lkZ2V0cy5yZW1vdmVEYXRhKCAidWktY29udHJvbGdyb3VwLWRhdGEiICk7CgkJdGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoICJyb2xlIiApOwoJCWlmICggdGhpcy5vcHRpb25zLml0ZW1zLmNvbnRyb2xncm91cExhYmVsICkgewoJCQl0aGlzLmVsZW1lbnQKCQkJCS5maW5kKCB0aGlzLm9wdGlvbnMuaXRlbXMuY29udHJvbGdyb3VwTGFiZWwgKQoJCQkJLmZpbmQoICIudWktY29udHJvbGdyb3VwLWxhYmVsLWNvbnRlbnRzIiApCgkJCQkuY29udGVudHMoKS51bndyYXAoKTsKCQl9Cgl9LAoKCV9pbml0V2lkZ2V0czogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlzLAoJCQljaGlsZFdpZGdldHMgPSBbXTsKCgkJLy8gRmlyc3Qgd2UgaXRlcmF0ZSBvdmVyIGVhY2ggb2YgdGhlIGl0ZW1zIG9wdGlvbnMKCQkkLmVhY2goIHRoaXMub3B0aW9ucy5pdGVtcywgZnVuY3Rpb24oIHdpZGdldCwgc2VsZWN0b3IgKSB7CgkJCXZhciBsYWJlbHM7CgkJCXZhciBvcHRpb25zID0ge307CgoJCQkvLyBNYWtlIHN1cmUgdGhlIHdpZGdldCBoYXMgYSBzZWxlY3RvciBzZXQKCQkJaWYgKCAhc2VsZWN0b3IgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCWlmICggd2lkZ2V0ID09PSAiY29udHJvbGdyb3VwTGFiZWwiICkgewoJCQkJbGFiZWxzID0gdGhhdC5lbGVtZW50LmZpbmQoIHNlbGVjdG9yICk7CgkJCQlsYWJlbHMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkJdmFyIGVsZW1lbnQgPSAkKCB0aGlzICk7CgoJCQkJCWlmICggZWxlbWVudC5jaGlsZHJlbiggIi51aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHMiICkubGVuZ3RoICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCWVsZW1lbnQuY29udGVudHMoKQoJCQkJCQkud3JhcEFsbCggIjxzcGFuIGNsYXNzPSd1aS1jb250cm9sZ3JvdXAtbGFiZWwtY29udGVudHMnPjwvc3Bhbj4iICk7CgkJCQl9ICk7CgkJCQl0aGF0Ll9hZGRDbGFzcyggbGFiZWxzLCBudWxsLCAidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IHVpLXN0YXRlLWRlZmF1bHQiICk7CgkJCQljaGlsZFdpZGdldHMgPSBjaGlsZFdpZGdldHMuY29uY2F0KCBsYWJlbHMuZ2V0KCkgKTsKCQkJCXJldHVybjsKCQkJfQoKCQkJLy8gTWFrZSBzdXJlIHRoZSB3aWRnZXQgYWN0dWFsbHkgZXhpc3RzCgkJCWlmICggISQuZm5bIHdpZGdldCBdICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQkvLyBXZSBhc3N1bWUgZXZlcnl0aGluZyBpcyBpbiB0aGUgbWlkZGxlIHRvIHN0YXJ0IGJlY2F1c2Ugd2UgY2FuJ3QgZGV0ZXJtaW5lCgkJCS8vIGZpcnN0IC8gbGFzdCBlbGVtZW50cyB1bnRpbCBhbGwgZW5oYW5jbWVudHMgYXJlIGRvbmUuCgkJCWlmICggdGhhdFsgIl8iICsgd2lkZ2V0ICsgIk9wdGlvbnMiIF0gKSB7CgkJCQlvcHRpb25zID0gdGhhdFsgIl8iICsgd2lkZ2V0ICsgIk9wdGlvbnMiIF0oICJtaWRkbGUiICk7CgkJCX0gZWxzZSB7CgkJCQlvcHRpb25zID0geyBjbGFzc2VzOiB7fSB9OwoJCQl9CgoJCQkvLyBGaW5kIGluc3RhbmNlcyBvZiB0aGlzIHdpZGdldCBpbnNpZGUgY29udHJvbGdyb3VwIGFuZCBpbml0IHRoZW0KCQkJdGhhdC5lbGVtZW50CgkJCQkuZmluZCggc2VsZWN0b3IgKQoJCQkJLmVhY2goIGZ1bmN0aW9uKCkgewoJCQkJCXZhciBlbGVtZW50ID0gJCggdGhpcyApOwoJCQkJCXZhciBpbnN0YW5jZSA9IGVsZW1lbnRbIHdpZGdldCBdKCAiaW5zdGFuY2UiICk7CgoJCQkJCS8vIFdlIG5lZWQgdG8gY2xvbmUgdGhlIGRlZmF1bHQgb3B0aW9ucyBmb3IgdGhpcyB0eXBlIG9mIHdpZGdldCB0byBhdm9pZAoJCQkJCS8vIHBvbGx1dGluZyB0aGUgdmFyaWFibGUgb3B0aW9ucyB3aGljaCBoYXMgYSB3aWRlciBzY29wZSB0aGFuIGEgc2luZ2xlIHdpZGdldC4KCQkJCQl2YXIgaW5zdGFuY2VPcHRpb25zID0gJC53aWRnZXQuZXh0ZW5kKCB7fSwgb3B0aW9ucyApOwoKCQkJCQkvLyBJZiB0aGUgYnV0dG9uIGlzIHRoZSBjaGlsZCBvZiBhIHNwaW5uZXIgaWdub3JlIGl0CgkJCQkJLy8gVE9ETzogRmluZCBhIG1vcmUgZ2VuZXJpYyBzb2x1dGlvbgoJCQkJCWlmICggd2lkZ2V0ID09PSAiYnV0dG9uIiAmJiBlbGVtZW50LnBhcmVudCggIi51aS1zcGlubmVyIiApLmxlbmd0aCApIHsKCQkJCQkJcmV0dXJuOwoJCQkJCX0KCgkJCQkJLy8gQ3JlYXRlIHRoZSB3aWRnZXQgaWYgaXQgZG9lc24ndCBleGlzdAoJCQkJCWlmICggIWluc3RhbmNlICkgewoJCQkJCQlpbnN0YW5jZSA9IGVsZW1lbnRbIHdpZGdldCBdKClbIHdpZGdldCBdKCAiaW5zdGFuY2UiICk7CgkJCQkJfQoJCQkJCWlmICggaW5zdGFuY2UgKSB7CgkJCQkJCWluc3RhbmNlT3B0aW9ucy5jbGFzc2VzID0KCQkJCQkJCXRoYXQuX3Jlc29sdmVDbGFzc2VzVmFsdWVzKCBpbnN0YW5jZU9wdGlvbnMuY2xhc3NlcywgaW5zdGFuY2UgKTsKCQkJCQl9CgkJCQkJZWxlbWVudFsgd2lkZ2V0IF0oIGluc3RhbmNlT3B0aW9ucyApOwoKCQkJCQkvLyBTdG9yZSBhbiBpbnN0YW5jZSBvZiB0aGUgY29udHJvbGdyb3VwIHRvIGJlIGFibGUgdG8gcmVmZXJlbmNlCgkJCQkJLy8gZnJvbSB0aGUgb3V0ZXJtb3N0IGVsZW1lbnQgZm9yIGNoYW5naW5nIG9wdGlvbnMgYW5kIHJlZnJlc2gKCQkJCQl2YXIgd2lkZ2V0RWxlbWVudCA9IGVsZW1lbnRbIHdpZGdldCBdKCAid2lkZ2V0IiApOwoJCQkJCSQuZGF0YSggd2lkZ2V0RWxlbWVudFsgMCBdLCAidWktY29udHJvbGdyb3VwLWRhdGEiLAoJCQkJCQlpbnN0YW5jZSA/IGluc3RhbmNlIDogZWxlbWVudFsgd2lkZ2V0IF0oICJpbnN0YW5jZSIgKSApOwoKCQkJCQljaGlsZFdpZGdldHMucHVzaCggd2lkZ2V0RWxlbWVudFsgMCBdICk7CgkJCQl9ICk7CgkJfSApOwoKCQl0aGlzLmNoaWxkV2lkZ2V0cyA9ICQoICQudW5pcXVlKCBjaGlsZFdpZGdldHMgKSApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmNoaWxkV2lkZ2V0cywgInVpLWNvbnRyb2xncm91cC1pdGVtIiApOwoJfSwKCglfY2FsbENoaWxkTWV0aG9kOiBmdW5jdGlvbiggbWV0aG9kICkgewoJCXRoaXMuY2hpbGRXaWRnZXRzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgZWxlbWVudCA9ICQoIHRoaXMgKSwKCQkJCWRhdGEgPSBlbGVtZW50LmRhdGEoICJ1aS1jb250cm9sZ3JvdXAtZGF0YSIgKTsKCQkJaWYgKCBkYXRhICYmIGRhdGFbIG1ldGhvZCBdICkgewoJCQkJZGF0YVsgbWV0aG9kIF0oKTsKCQkJfQoJCX0gKTsKCX0sCgoJX3VwZGF0ZUNvcm5lckNsYXNzOiBmdW5jdGlvbiggZWxlbWVudCwgcG9zaXRpb24gKSB7CgkJdmFyIHJlbW92ZSA9ICJ1aS1jb3JuZXItdG9wIHVpLWNvcm5lci1ib3R0b20gdWktY29ybmVyLWxlZnQgdWktY29ybmVyLXJpZ2h0IHVpLWNvcm5lci1hbGwiOwoJCXZhciBhZGQgPSB0aGlzLl9idWlsZFNpbXBsZU9wdGlvbnMoIHBvc2l0aW9uLCAibGFiZWwiICkuY2xhc3Nlcy5sYWJlbDsKCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGVsZW1lbnQsIG51bGwsIHJlbW92ZSApOwoJCXRoaXMuX2FkZENsYXNzKCBlbGVtZW50LCBudWxsLCBhZGQgKTsKCX0sCgoJX2J1aWxkU2ltcGxlT3B0aW9uczogZnVuY3Rpb24oIHBvc2l0aW9uLCBrZXkgKSB7CgkJdmFyIGRpcmVjdGlvbiA9IHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gPT09ICJ2ZXJ0aWNhbCI7CgkJdmFyIHJlc3VsdCA9IHsKCQkJY2xhc3Nlczoge30KCQl9OwoJCXJlc3VsdC5jbGFzc2VzWyBrZXkgXSA9IHsKCQkJIm1pZGRsZSI6ICIiLAoJCQkiZmlyc3QiOiAidWktY29ybmVyLSIgKyAoIGRpcmVjdGlvbiA/ICJ0b3AiIDogImxlZnQiICksCgkJCSJsYXN0IjogInVpLWNvcm5lci0iICsgKCBkaXJlY3Rpb24gPyAiYm90dG9tIiA6ICJyaWdodCIgKSwKCQkJIm9ubHkiOiAidWktY29ybmVyLWFsbCIKCQl9WyBwb3NpdGlvbiBdOwoKCQlyZXR1cm4gcmVzdWx0OwoJfSwKCglfc3Bpbm5lck9wdGlvbnM6IGZ1bmN0aW9uKCBwb3NpdGlvbiApIHsKCQl2YXIgb3B0aW9ucyA9IHRoaXMuX2J1aWxkU2ltcGxlT3B0aW9ucyggcG9zaXRpb24sICJ1aS1zcGlubmVyIiApOwoKCQlvcHRpb25zLmNsYXNzZXNbICJ1aS1zcGlubmVyLXVwIiBdID0gIiI7CgkJb3B0aW9ucy5jbGFzc2VzWyAidWktc3Bpbm5lci1kb3duIiBdID0gIiI7CgoJCXJldHVybiBvcHRpb25zOwoJfSwKCglfYnV0dG9uT3B0aW9uczogZnVuY3Rpb24oIHBvc2l0aW9uICkgewoJCXJldHVybiB0aGlzLl9idWlsZFNpbXBsZU9wdGlvbnMoIHBvc2l0aW9uLCAidWktYnV0dG9uIiApOwoJfSwKCglfY2hlY2tib3hyYWRpb09wdGlvbnM6IGZ1bmN0aW9uKCBwb3NpdGlvbiApIHsKCQlyZXR1cm4gdGhpcy5fYnVpbGRTaW1wbGVPcHRpb25zKCBwb3NpdGlvbiwgInVpLWNoZWNrYm94cmFkaW8tbGFiZWwiICk7Cgl9LAoKCV9zZWxlY3RtZW51T3B0aW9uczogZnVuY3Rpb24oIHBvc2l0aW9uICkgewoJCXZhciBkaXJlY3Rpb24gPSB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uID09PSAidmVydGljYWwiOwoJCXJldHVybiB7CgkJCXdpZHRoOiBkaXJlY3Rpb24gPyAiYXV0byIgOiBmYWxzZSwKCQkJY2xhc3NlczogewoJCQkJbWlkZGxlOiB7CgkJCQkJInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW4iOiAiIiwKCQkJCQkidWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkIjogIiIKCQkJCX0sCgkJCQlmaXJzdDogewoJCQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1vcGVuIjogInVpLWNvcm5lci0iICsgKCBkaXJlY3Rpb24gPyAidG9wIiA6ICJ0bCIgKSwKCQkJCQkidWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkIjogInVpLWNvcm5lci0iICsgKCBkaXJlY3Rpb24gPyAidG9wIiA6ICJsZWZ0IiApCgkJCQl9LAoJCQkJbGFzdDogewoJCQkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1vcGVuIjogZGlyZWN0aW9uID8gIiIgOiAidWktY29ybmVyLXRyIiwKCQkJCQkidWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkIjogInVpLWNvcm5lci0iICsgKCBkaXJlY3Rpb24gPyAiYm90dG9tIiA6ICJyaWdodCIgKQoJCQkJfSwKCQkJCW9ubHk6IHsKCQkJCQkidWktc2VsZWN0bWVudS1idXR0b24tb3BlbiI6ICJ1aS1jb3JuZXItdG9wIiwKCQkJCQkidWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkIjogInVpLWNvcm5lci1hbGwiCgkJCQl9CgoJCQl9WyBwb3NpdGlvbiBdCgkJfTsKCX0sCgoJX3Jlc29sdmVDbGFzc2VzVmFsdWVzOiBmdW5jdGlvbiggY2xhc3NlcywgaW5zdGFuY2UgKSB7CgkJdmFyIHJlc3VsdCA9IHt9OwoJCSQuZWFjaCggY2xhc3NlcywgZnVuY3Rpb24oIGtleSApIHsKCQkJdmFyIGN1cnJlbnQgPSBpbnN0YW5jZS5vcHRpb25zLmNsYXNzZXNbIGtleSBdIHx8ICIiOwoJCQljdXJyZW50ID0gJC50cmltKCBjdXJyZW50LnJlcGxhY2UoIGNvbnRyb2xncm91cENvcm5lclJlZ2V4LCAiIiApICk7CgkJCXJlc3VsdFsga2V5IF0gPSAoIGN1cnJlbnQgKyAiICIgKyBjbGFzc2VzWyBrZXkgXSApLnJlcGxhY2UoIC9ccysvZywgIiAiICk7CgkJfSApOwoJCXJldHVybiByZXN1bHQ7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCWlmICgga2V5ID09PSAiZGlyZWN0aW9uIiApIHsKCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoICJ1aS1jb250cm9sZ3JvdXAtIiArIHRoaXMub3B0aW9ucy5kaXJlY3Rpb24gKTsKCQl9CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7CgkJCXRoaXMuX2NhbGxDaGlsZE1ldGhvZCggdmFsdWUgPyAiZGlzYWJsZSIgOiAiZW5hYmxlIiApOwoJCQlyZXR1cm47CgkJfQoKCQl0aGlzLnJlZnJlc2goKTsKCX0sCgoJcmVmcmVzaDogZnVuY3Rpb24oKSB7CgkJdmFyIGNoaWxkcmVuLAoJCQl0aGF0ID0gdGhpczsKCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1jb250cm9sZ3JvdXAgdWktY29udHJvbGdyb3VwLSIgKyB0aGlzLm9wdGlvbnMuZGlyZWN0aW9uICk7CgoJCWlmICggdGhpcy5vcHRpb25zLmRpcmVjdGlvbiA9PT0gImhvcml6b250YWwiICkgewoJCQl0aGlzLl9hZGRDbGFzcyggbnVsbCwgInVpLWhlbHBlci1jbGVhcmZpeCIgKTsKCQl9CgkJdGhpcy5faW5pdFdpZGdldHMoKTsKCgkJY2hpbGRyZW4gPSB0aGlzLmNoaWxkV2lkZ2V0czsKCgkJLy8gV2UgZmlsdGVyIGhlcmUgYmVjYXVzZSB3ZSBuZWVkIHRvIHRyYWNrIGFsbCBjaGlsZFdpZGdldHMgbm90IGp1c3QgdGhlIHZpc2libGUgb25lcwoJCWlmICggdGhpcy5vcHRpb25zLm9ubHlWaXNpYmxlICkgewoJCQljaGlsZHJlbiA9IGNoaWxkcmVuLmZpbHRlciggIjp2aXNpYmxlIiApOwoJCX0KCgkJaWYgKCBjaGlsZHJlbi5sZW5ndGggKSB7CgoJCQkvLyBXZSBkbyB0aGlzIGxhc3QgYmVjYXVzZSB3ZSBuZWVkIHRvIG1ha2Ugc3VyZSBhbGwgZW5oYW5jbWVudCBpcyBkb25lCgkJCS8vIGJlZm9yZSBkZXRlcm1pbmluZyBmaXJzdCBhbmQgbGFzdAoJCQkkLmVhY2goIFsgImZpcnN0IiwgImxhc3QiIF0sIGZ1bmN0aW9uKCBpbmRleCwgdmFsdWUgKSB7CgkJCQl2YXIgaW5zdGFuY2UgPSBjaGlsZHJlblsgdmFsdWUgXSgpLmRhdGEoICJ1aS1jb250cm9sZ3JvdXAtZGF0YSIgKTsKCgkJCQlpZiAoIGluc3RhbmNlICYmIHRoYXRbICJfIiArIGluc3RhbmNlLndpZGdldE5hbWUgKyAiT3B0aW9ucyIgXSApIHsKCQkJCQl2YXIgb3B0aW9ucyA9IHRoYXRbICJfIiArIGluc3RhbmNlLndpZGdldE5hbWUgKyAiT3B0aW9ucyIgXSgKCQkJCQkJY2hpbGRyZW4ubGVuZ3RoID09PSAxID8gIm9ubHkiIDogdmFsdWUKCQkJCQkpOwoJCQkJCW9wdGlvbnMuY2xhc3NlcyA9IHRoYXQuX3Jlc29sdmVDbGFzc2VzVmFsdWVzKCBvcHRpb25zLmNsYXNzZXMsIGluc3RhbmNlICk7CgkJCQkJaW5zdGFuY2UuZWxlbWVudFsgaW5zdGFuY2Uud2lkZ2V0TmFtZSBdKCBvcHRpb25zICk7CgkJCQl9IGVsc2UgewoJCQkJCXRoYXQuX3VwZGF0ZUNvcm5lckNsYXNzKCBjaGlsZHJlblsgdmFsdWUgXSgpLCB2YWx1ZSApOwoJCQkJfQoJCQl9ICk7CgoJCQkvLyBGaW5hbGx5IGNhbGwgdGhlIHJlZnJlc2ggbWV0aG9kIG9uIGVhY2ggb2YgdGhlIGNoaWxkIHdpZGdldHMuCgkJCXRoaXMuX2NhbGxDaGlsZE1ldGhvZCggInJlZnJlc2giICk7CgkJfQoJfQp9ICk7CgovKiEKICogalF1ZXJ5IFVJIENoZWNrYm94cmFkaW8gMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBDaGVja2JveHJhZGlvCi8vPj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IEVuaGFuY2VzIGEgZm9ybSB3aXRoIG11bHRpcGxlIHRoZW1lYWJsZSBjaGVja2JveGVzIG9yIHJhZGlvIGJ1dHRvbnMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9jaGVja2JveHJhZGlvLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vY2hlY2tib3hyYWRpby8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9idXR0b24uY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jaGVja2JveHJhZGlvLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKJC53aWRnZXQoICJ1aS5jaGVja2JveHJhZGlvIiwgWyAkLnVpLmZvcm1SZXNldE1peGluLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCW9wdGlvbnM6IHsKCQlkaXNhYmxlZDogbnVsbCwKCQlsYWJlbDogbnVsbCwKCQlpY29uOiB0cnVlLAoJCWNsYXNzZXM6IHsKCQkJInVpLWNoZWNrYm94cmFkaW8tbGFiZWwiOiAidWktY29ybmVyLWFsbCIsCgkJCSJ1aS1jaGVja2JveHJhZGlvLWljb24iOiAidWktY29ybmVyLWFsbCIKCQl9Cgl9LAoKCV9nZXRDcmVhdGVPcHRpb25zOiBmdW5jdGlvbigpIHsKCQl2YXIgZGlzYWJsZWQsIGxhYmVsczsKCQl2YXIgdGhhdCA9IHRoaXM7CgkJdmFyIG9wdGlvbnMgPSB0aGlzLl9zdXBlcigpIHx8IHt9OwoKCQkvLyBXZSByZWFkIHRoZSB0eXBlIGhlcmUsIGJlY2F1c2UgaXQgbWFrZXMgbW9yZSBzZW5zZSB0byB0aHJvdyBhIGVsZW1lbnQgdHlwZSBlcnJvciBmaXJzdCwKCQkvLyByYXRoZXIgdGhlbiB0aGUgZXJyb3IgZm9yIGxhY2sgb2YgYSBsYWJlbC4gT2Z0ZW4gaWYgaXRzIHRoZSB3cm9uZyB0eXBlLCBpdAoJCS8vIHdvbid0IGhhdmUgYSBsYWJlbCAoZS5nLiBjYWxsaW5nIG9uIGEgZGl2LCBidG4sIGV0YykKCQl0aGlzLl9yZWFkVHlwZSgpOwoKCQlsYWJlbHMgPSB0aGlzLmVsZW1lbnQubGFiZWxzKCk7CgoJCS8vIElmIHRoZXJlIGFyZSBtdWx0aXBsZSBsYWJlbHMsIHVzZSB0aGUgbGFzdCBvbmUKCQl0aGlzLmxhYmVsID0gJCggbGFiZWxzWyBsYWJlbHMubGVuZ3RoIC0gMSBdICk7CgkJaWYgKCAhdGhpcy5sYWJlbC5sZW5ndGggKSB7CgkJCSQuZXJyb3IoICJObyBsYWJlbCBmb3VuZCBmb3IgY2hlY2tib3hyYWRpbyB3aWRnZXQiICk7CgkJfQoKCQl0aGlzLm9yaWdpbmFsTGFiZWwgPSAiIjsKCgkJLy8gV2UgbmVlZCB0byBnZXQgdGhlIGxhYmVsIHRleHQgYnV0IHRoaXMgbWF5IGFsc28gbmVlZCB0byBtYWtlIHN1cmUgaXQgZG9lcyBub3QgY29udGFpbiB0aGUKCQkvLyBpbnB1dCBpdHNlbGYuCgkJdGhpcy5sYWJlbC5jb250ZW50cygpLm5vdCggdGhpcy5lbGVtZW50WyAwIF0gKS5lYWNoKCBmdW5jdGlvbigpIHsKCgkJCS8vIFRoZSBsYWJlbCBjb250ZW50cyBjb3VsZCBiZSB0ZXh0LCBodG1sLCBvciBhIG1peC4gV2UgY29uY2F0IGVhY2ggZWxlbWVudCB0byBnZXQgYQoJCQkvLyBzdHJpbmcgcmVwcmVzZW50YXRpb24gb2YgdGhlIGxhYmVsLCB3aXRob3V0IHRoZSBpbnB1dCBhcyBwYXJ0IG9mIGl0LgoJCQl0aGF0Lm9yaWdpbmFsTGFiZWwgKz0gdGhpcy5ub2RlVHlwZSA9PT0gMyA/ICQoIHRoaXMgKS50ZXh0KCkgOiB0aGlzLm91dGVySFRNTDsKCQl9ICk7CgoJCS8vIFNldCB0aGUgbGFiZWwgb3B0aW9uIGlmIHdlIGZvdW5kIGxhYmVsIHRleHQKCQlpZiAoIHRoaXMub3JpZ2luYWxMYWJlbCApIHsKCQkJb3B0aW9ucy5sYWJlbCA9IHRoaXMub3JpZ2luYWxMYWJlbDsKCQl9CgoJCWRpc2FibGVkID0gdGhpcy5lbGVtZW50WyAwIF0uZGlzYWJsZWQ7CgkJaWYgKCBkaXNhYmxlZCAhPSBudWxsICkgewoJCQlvcHRpb25zLmRpc2FibGVkID0gZGlzYWJsZWQ7CgkJfQoJCXJldHVybiBvcHRpb25zOwoJfSwKCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCQl2YXIgY2hlY2tlZCA9IHRoaXMuZWxlbWVudFsgMCBdLmNoZWNrZWQ7CgoJCXRoaXMuX2JpbmRGb3JtUmVzZXRIYW5kbGVyKCk7CgoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkID09IG51bGwgKSB7CgkJCXRoaXMub3B0aW9ucy5kaXNhYmxlZCA9IHRoaXMuZWxlbWVudFsgMCBdLmRpc2FibGVkOwoJCX0KCgkJdGhpcy5fc2V0T3B0aW9uKCAiZGlzYWJsZWQiLCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKTsKCQl0aGlzLl9hZGRDbGFzcyggInVpLWNoZWNrYm94cmFkaW8iLCAidWktaGVscGVyLWhpZGRlbi1hY2Nlc3NpYmxlIiApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmxhYmVsLCAidWktY2hlY2tib3hyYWRpby1sYWJlbCIsICJ1aS1idXR0b24gdWktd2lkZ2V0IiApOwoKCQlpZiAoIHRoaXMudHlwZSA9PT0gInJhZGlvIiApIHsKCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMubGFiZWwsICJ1aS1jaGVja2JveHJhZGlvLXJhZGlvLWxhYmVsIiApOwoJCX0KCgkJaWYgKCB0aGlzLm9wdGlvbnMubGFiZWwgJiYgdGhpcy5vcHRpb25zLmxhYmVsICE9PSB0aGlzLm9yaWdpbmFsTGFiZWwgKSB7CgkJCXRoaXMuX3VwZGF0ZUxhYmVsKCk7CgkJfSBlbHNlIGlmICggdGhpcy5vcmlnaW5hbExhYmVsICkgewoJCQl0aGlzLm9wdGlvbnMubGFiZWwgPSB0aGlzLm9yaWdpbmFsTGFiZWw7CgkJfQoKCQl0aGlzLl9lbmhhbmNlKCk7CgoJCWlmICggY2hlY2tlZCApIHsKCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMubGFiZWwsICJ1aS1jaGVja2JveHJhZGlvLWNoZWNrZWQiLCAidWktc3RhdGUtYWN0aXZlIiApOwoJCQlpZiAoIHRoaXMuaWNvbiApIHsKCQkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmljb24sIG51bGwsICJ1aS1zdGF0ZS1ob3ZlciIgKTsKCQkJfQoJCX0KCgkJdGhpcy5fb24oIHsKCQkJY2hhbmdlOiAiX3RvZ2dsZUNsYXNzZXMiLAoJCQlmb2N1czogZnVuY3Rpb24oKSB7CgkJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5sYWJlbCwgbnVsbCwgInVpLXN0YXRlLWZvY3VzIHVpLXZpc3VhbC1mb2N1cyIgKTsKCQkJfSwKCQkJYmx1cjogZnVuY3Rpb24oKSB7CgkJCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5sYWJlbCwgbnVsbCwgInVpLXN0YXRlLWZvY3VzIHVpLXZpc3VhbC1mb2N1cyIgKTsKCQkJfQoJCX0gKTsKCX0sCgoJX3JlYWRUeXBlOiBmdW5jdGlvbigpIHsKCQl2YXIgbm9kZU5hbWUgPSB0aGlzLmVsZW1lbnRbIDAgXS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwoJCXRoaXMudHlwZSA9IHRoaXMuZWxlbWVudFsgMCBdLnR5cGU7CgkJaWYgKCBub2RlTmFtZSAhPT0gImlucHV0IiB8fCAhL3JhZGlvfGNoZWNrYm94Ly50ZXN0KCB0aGlzLnR5cGUgKSApIHsKCQkJJC5lcnJvciggIkNhbid0IGNyZWF0ZSBjaGVja2JveHJhZGlvIG9uIGVsZW1lbnQubm9kZU5hbWU9IiArIG5vZGVOYW1lICsKCQkJCSIgYW5kIGVsZW1lbnQudHlwZT0iICsgdGhpcy50eXBlICk7CgkJfQoJfSwKCgkvLyBTdXBwb3J0IGpRdWVyeSBNb2JpbGUgZW5oYW5jZWQgb3B0aW9uCglfZW5oYW5jZTogZnVuY3Rpb24oKSB7CgkJdGhpcy5fdXBkYXRlSWNvbiggdGhpcy5lbGVtZW50WyAwIF0uY2hlY2tlZCApOwoJfSwKCgl3aWRnZXQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmxhYmVsOwoJfSwKCglfZ2V0UmFkaW9Hcm91cDogZnVuY3Rpb24oKSB7CgkJdmFyIGdyb3VwOwoJCXZhciBuYW1lID0gdGhpcy5lbGVtZW50WyAwIF0ubmFtZTsKCQl2YXIgbmFtZVNlbGVjdG9yID0gImlucHV0W25hbWU9JyIgKyAkLnVpLmVzY2FwZVNlbGVjdG9yKCBuYW1lICkgKyAiJ10iOwoKCQlpZiAoICFuYW1lICkgewoJCQlyZXR1cm4gJCggW10gKTsKCQl9CgoJCWlmICggdGhpcy5mb3JtLmxlbmd0aCApIHsKCQkJZ3JvdXAgPSAkKCB0aGlzLmZvcm1bIDAgXS5lbGVtZW50cyApLmZpbHRlciggbmFtZVNlbGVjdG9yICk7CgkJfSBlbHNlIHsKCgkJCS8vIE5vdCBpbnNpZGUgYSBmb3JtLCBjaGVjayBhbGwgaW5wdXRzIHRoYXQgYWxzbyBhcmUgbm90IGluc2lkZSBhIGZvcm0KCQkJZ3JvdXAgPSAkKCBuYW1lU2VsZWN0b3IgKS5maWx0ZXIoIGZ1bmN0aW9uKCkgewoJCQkJcmV0dXJuICQoIHRoaXMgKS5mb3JtKCkubGVuZ3RoID09PSAwOwoJCQl9ICk7CgkJfQoKCQlyZXR1cm4gZ3JvdXAubm90KCB0aGlzLmVsZW1lbnQgKTsKCX0sCgoJX3RvZ2dsZUNsYXNzZXM6IGZ1bmN0aW9uKCkgewoJCXZhciBjaGVja2VkID0gdGhpcy5lbGVtZW50WyAwIF0uY2hlY2tlZDsKCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy5sYWJlbCwgInVpLWNoZWNrYm94cmFkaW8tY2hlY2tlZCIsICJ1aS1zdGF0ZS1hY3RpdmUiLCBjaGVja2VkICk7CgoJCWlmICggdGhpcy5vcHRpb25zLmljb24gJiYgdGhpcy50eXBlID09PSAiY2hlY2tib3giICkgewoJCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy5pY29uLCBudWxsLCAidWktaWNvbi1jaGVjayB1aS1zdGF0ZS1jaGVja2VkIiwgY2hlY2tlZCApCgkJCQkuX3RvZ2dsZUNsYXNzKCB0aGlzLmljb24sIG51bGwsICJ1aS1pY29uLWJsYW5rIiwgIWNoZWNrZWQgKTsKCQl9CgoJCWlmICggdGhpcy50eXBlID09PSAicmFkaW8iICkgewoJCQl0aGlzLl9nZXRSYWRpb0dyb3VwKCkKCQkJCS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCQl2YXIgaW5zdGFuY2UgPSAkKCB0aGlzICkuY2hlY2tib3hyYWRpbyggImluc3RhbmNlIiApOwoKCQkJCQlpZiAoIGluc3RhbmNlICkgewoJCQkJCQlpbnN0YW5jZS5fcmVtb3ZlQ2xhc3MoIGluc3RhbmNlLmxhYmVsLAoJCQkJCQkJInVpLWNoZWNrYm94cmFkaW8tY2hlY2tlZCIsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCQkJfQoJCQkJfSApOwoJCX0KCX0sCgoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX3VuYmluZEZvcm1SZXNldEhhbmRsZXIoKTsKCgkJaWYgKCB0aGlzLmljb24gKSB7CgkJCXRoaXMuaWNvbi5yZW1vdmUoKTsKCQkJdGhpcy5pY29uU3BhY2UucmVtb3ZlKCk7CgkJfQoJfSwKCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCgkJLy8gV2UgZG9uJ3QgYWxsb3cgdGhlIHZhbHVlIHRvIGJlIHNldCB0byBub3RoaW5nCgkJaWYgKCBrZXkgPT09ICJsYWJlbCIgJiYgIXZhbHVlICkgewoJCQlyZXR1cm47CgkJfQoKCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOwoKCQlpZiAoIGtleSA9PT0gImRpc2FibGVkIiApIHsKCQkJdGhpcy5fdG9nZ2xlQ2xhc3MoIHRoaXMubGFiZWwsIG51bGwsICJ1aS1zdGF0ZS1kaXNhYmxlZCIsIHZhbHVlICk7CgkJCXRoaXMuZWxlbWVudFsgMCBdLmRpc2FibGVkID0gdmFsdWU7CgoJCQkvLyBEb24ndCByZWZyZXNoIHdoZW4gc2V0dGluZyBkaXNhYmxlZAoJCQlyZXR1cm47CgkJfQoJCXRoaXMucmVmcmVzaCgpOwoJfSwKCglfdXBkYXRlSWNvbjogZnVuY3Rpb24oIGNoZWNrZWQgKSB7CgkJdmFyIHRvQWRkID0gInVpLWljb24gdWktaWNvbi1iYWNrZ3JvdW5kICI7CgoJCWlmICggdGhpcy5vcHRpb25zLmljb24gKSB7CgkJCWlmICggIXRoaXMuaWNvbiApIHsKCQkJCXRoaXMuaWNvbiA9ICQoICI8c3Bhbj4iICk7CgkJCQl0aGlzLmljb25TcGFjZSA9ICQoICI8c3Bhbj4gPC9zcGFuPiIgKTsKCQkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmljb25TcGFjZSwgInVpLWNoZWNrYm94cmFkaW8taWNvbi1zcGFjZSIgKTsKCQkJfQoKCQkJaWYgKCB0aGlzLnR5cGUgPT09ICJjaGVja2JveCIgKSB7CgkJCQl0b0FkZCArPSBjaGVja2VkID8gInVpLWljb24tY2hlY2sgdWktc3RhdGUtY2hlY2tlZCIgOiAidWktaWNvbi1ibGFuayI7CgkJCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5pY29uLCBudWxsLCBjaGVja2VkID8gInVpLWljb24tYmxhbmsiIDogInVpLWljb24tY2hlY2siICk7CgkJCX0gZWxzZSB7CgkJCQl0b0FkZCArPSAidWktaWNvbi1ibGFuayI7CgkJCX0KCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuaWNvbiwgInVpLWNoZWNrYm94cmFkaW8taWNvbiIsIHRvQWRkICk7CgkJCWlmICggIWNoZWNrZWQgKSB7CgkJCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5pY29uLCBudWxsLCAidWktaWNvbi1jaGVjayB1aS1zdGF0ZS1jaGVja2VkIiApOwoJCQl9CgkJCXRoaXMuaWNvbi5wcmVwZW5kVG8oIHRoaXMubGFiZWwgKS5hZnRlciggdGhpcy5pY29uU3BhY2UgKTsKCQl9IGVsc2UgaWYgKCB0aGlzLmljb24gIT09IHVuZGVmaW5lZCApIHsKCQkJdGhpcy5pY29uLnJlbW92ZSgpOwoJCQl0aGlzLmljb25TcGFjZS5yZW1vdmUoKTsKCQkJZGVsZXRlIHRoaXMuaWNvbjsKCQl9Cgl9LAoKCV91cGRhdGVMYWJlbDogZnVuY3Rpb24oKSB7CgoJCS8vIFJlbW92ZSB0aGUgY29udGVudHMgb2YgdGhlIGxhYmVsICggbWludXMgdGhlIGljb24sIGljb24gc3BhY2UsIGFuZCBpbnB1dCApCgkJdmFyIGNvbnRlbnRzID0gdGhpcy5sYWJlbC5jb250ZW50cygpLm5vdCggdGhpcy5lbGVtZW50WyAwIF0gKTsKCQlpZiAoIHRoaXMuaWNvbiApIHsKCQkJY29udGVudHMgPSBjb250ZW50cy5ub3QoIHRoaXMuaWNvblsgMCBdICk7CgkJfQoJCWlmICggdGhpcy5pY29uU3BhY2UgKSB7CgkJCWNvbnRlbnRzID0gY29udGVudHMubm90KCB0aGlzLmljb25TcGFjZVsgMCBdICk7CgkJfQoJCWNvbnRlbnRzLnJlbW92ZSgpOwoKCQl0aGlzLmxhYmVsLmFwcGVuZCggdGhpcy5vcHRpb25zLmxhYmVsICk7Cgl9LAoKCXJlZnJlc2g6IGZ1bmN0aW9uKCkgewoJCXZhciBjaGVja2VkID0gdGhpcy5lbGVtZW50WyAwIF0uY2hlY2tlZCwKCQkJaXNEaXNhYmxlZCA9IHRoaXMuZWxlbWVudFsgMCBdLmRpc2FibGVkOwoKCQl0aGlzLl91cGRhdGVJY29uKCBjaGVja2VkICk7CgkJdGhpcy5fdG9nZ2xlQ2xhc3MoIHRoaXMubGFiZWwsICJ1aS1jaGVja2JveHJhZGlvLWNoZWNrZWQiLCAidWktc3RhdGUtYWN0aXZlIiwgY2hlY2tlZCApOwoJCWlmICggdGhpcy5vcHRpb25zLmxhYmVsICE9PSBudWxsICkgewoJCQl0aGlzLl91cGRhdGVMYWJlbCgpOwoJCX0KCgkJaWYgKCBpc0Rpc2FibGVkICE9PSB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKSB7CgkJCXRoaXMuX3NldE9wdGlvbnMoIHsgImRpc2FibGVkIjogaXNEaXNhYmxlZCB9ICk7CgkJfQoJfQoKfSBdICk7Cgp2YXIgd2lkZ2V0c0NoZWNrYm94cmFkaW8gPSAkLnVpLmNoZWNrYm94cmFkaW87CgoKLyohCiAqIGpRdWVyeSBVSSBCdXR0b24gMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBCdXR0b24KLy8+Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlwdGlvbjogRW5oYW5jZXMgYSBmb3JtIHdpdGggdGhlbWVhYmxlIGJ1dHRvbnMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9idXR0b24vCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9idXR0b24vCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvYnV0dG9uLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKJC53aWRnZXQoICJ1aS5idXR0b24iLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCWRlZmF1bHRFbGVtZW50OiAiPGJ1dHRvbj4iLAoJb3B0aW9uczogewoJCWNsYXNzZXM6IHsKCQkJInVpLWJ1dHRvbiI6ICJ1aS1jb3JuZXItYWxsIgoJCX0sCgkJZGlzYWJsZWQ6IG51bGwsCgkJaWNvbjogbnVsbCwKCQlpY29uUG9zaXRpb246ICJiZWdpbm5pbmciLAoJCWxhYmVsOiBudWxsLAoJCXNob3dMYWJlbDogdHJ1ZQoJfSwKCglfZ2V0Q3JlYXRlT3B0aW9uczogZnVuY3Rpb24oKSB7CgkJdmFyIGRpc2FibGVkLAoKCQkJLy8gVGhpcyBpcyB0byBzdXBwb3J0IGNhc2VzIGxpa2UgaW4galF1ZXJ5IE1vYmlsZSB3aGVyZSB0aGUgYmFzZSB3aWRnZXQgZG9lcyBoYXZlCgkJCS8vIGFuIGltcGxlbWVudGF0aW9uIG9mIF9nZXRDcmVhdGVPcHRpb25zCgkJCW9wdGlvbnMgPSB0aGlzLl9zdXBlcigpIHx8IHt9OwoKCQl0aGlzLmlzSW5wdXQgPSB0aGlzLmVsZW1lbnQuaXMoICJpbnB1dCIgKTsKCgkJZGlzYWJsZWQgPSB0aGlzLmVsZW1lbnRbIDAgXS5kaXNhYmxlZDsKCQlpZiAoIGRpc2FibGVkICE9IG51bGwgKSB7CgkJCW9wdGlvbnMuZGlzYWJsZWQgPSBkaXNhYmxlZDsKCQl9CgoJCXRoaXMub3JpZ2luYWxMYWJlbCA9IHRoaXMuaXNJbnB1dCA/IHRoaXMuZWxlbWVudC52YWwoKSA6IHRoaXMuZWxlbWVudC5odG1sKCk7CgkJaWYgKCB0aGlzLm9yaWdpbmFsTGFiZWwgKSB7CgkJCW9wdGlvbnMubGFiZWwgPSB0aGlzLm9yaWdpbmFsTGFiZWw7CgkJfQoKCQlyZXR1cm4gb3B0aW9uczsKCX0sCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJaWYgKCAhdGhpcy5vcHRpb24uc2hvd0xhYmVsICYgIXRoaXMub3B0aW9ucy5pY29uICkgewoJCQl0aGlzLm9wdGlvbnMuc2hvd0xhYmVsID0gdHJ1ZTsKCQl9CgoJCS8vIFdlIGhhdmUgdG8gY2hlY2sgdGhlIG9wdGlvbiBhZ2FpbiBoZXJlIGV2ZW4gdGhvdWdoIHdlIGRpZCBpbiBfZ2V0Q3JlYXRlT3B0aW9ucywKCQkvLyBiZWNhdXNlIG51bGwgbWF5IGhhdmUgYmVlbiBwYXNzZWQgb24gaW5pdCB3aGljaCB3b3VsZCBvdmVycmlkZSB3aGF0IHdhcyBzZXQgaW4KCQkvLyBfZ2V0Q3JlYXRlT3B0aW9ucwoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkID09IG51bGwgKSB7CgkJCXRoaXMub3B0aW9ucy5kaXNhYmxlZCA9IHRoaXMuZWxlbWVudFsgMCBdLmRpc2FibGVkIHx8IGZhbHNlOwoJCX0KCgkJdGhpcy5oYXNUaXRsZSA9ICEhdGhpcy5lbGVtZW50LmF0dHIoICJ0aXRsZSIgKTsKCgkJLy8gQ2hlY2sgdG8gc2VlIGlmIHRoZSBsYWJlbCBuZWVkcyB0byBiZSBzZXQgb3IgaWYgaXRzIGFscmVhZHkgY29ycmVjdAoJCWlmICggdGhpcy5vcHRpb25zLmxhYmVsICYmIHRoaXMub3B0aW9ucy5sYWJlbCAhPT0gdGhpcy5vcmlnaW5hbExhYmVsICkgewoJCQlpZiAoIHRoaXMuaXNJbnB1dCApIHsKCQkJCXRoaXMuZWxlbWVudC52YWwoIHRoaXMub3B0aW9ucy5sYWJlbCApOwoJCQl9IGVsc2UgewoJCQkJdGhpcy5lbGVtZW50Lmh0bWwoIHRoaXMub3B0aW9ucy5sYWJlbCApOwoJCQl9CgkJfQoJCXRoaXMuX2FkZENsYXNzKCAidWktYnV0dG9uIiwgInVpLXdpZGdldCIgKTsKCQl0aGlzLl9zZXRPcHRpb24oICJkaXNhYmxlZCIsIHRoaXMub3B0aW9ucy5kaXNhYmxlZCApOwoJCXRoaXMuX2VuaGFuY2UoKTsKCgkJaWYgKCB0aGlzLmVsZW1lbnQuaXMoICJhIiApICkgewoJCQl0aGlzLl9vbiggewoJCQkJImtleXVwIjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJCWlmICggZXZlbnQua2V5Q29kZSA9PT0gJC51aS5rZXlDb2RlLlNQQUNFICkgewoJCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKCQkJCQkJLy8gU3VwcG9ydDogUGhhbnRvbUpTIDw9IDEuOSwgSUUgOCBPbmx5CgkJCQkJCS8vIElmIGEgbmF0aXZlIGNsaWNrIGlzIGF2YWlsYWJsZSB1c2UgaXQgc28gd2UgYWN0dWFsbHkgY2F1c2UgbmF2aWdhdGlvbgoJCQkJCQkvLyBvdGhlcndpc2UganVzdCB0cmlnZ2VyIGEgY2xpY2sgZXZlbnQKCQkJCQkJaWYgKCB0aGlzLmVsZW1lbnRbIDAgXS5jbGljayApIHsKCQkJCQkJCXRoaXMuZWxlbWVudFsgMCBdLmNsaWNrKCk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQl0aGlzLmVsZW1lbnQudHJpZ2dlciggImNsaWNrIiApOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQl9ICk7CgkJfQoJfSwKCglfZW5oYW5jZTogZnVuY3Rpb24oKSB7CgkJaWYgKCAhdGhpcy5lbGVtZW50LmlzKCAiYnV0dG9uIiApICkgewoJCQl0aGlzLmVsZW1lbnQuYXR0ciggInJvbGUiLCAiYnV0dG9uIiApOwoJCX0KCgkJaWYgKCB0aGlzLm9wdGlvbnMuaWNvbiApIHsKCQkJdGhpcy5fdXBkYXRlSWNvbiggImljb24iLCB0aGlzLm9wdGlvbnMuaWNvbiApOwoJCQl0aGlzLl91cGRhdGVUb29sdGlwKCk7CgkJfQoJfSwKCglfdXBkYXRlVG9vbHRpcDogZnVuY3Rpb24oKSB7CgkJdGhpcy50aXRsZSA9IHRoaXMuZWxlbWVudC5hdHRyKCAidGl0bGUiICk7CgoJCWlmICggIXRoaXMub3B0aW9ucy5zaG93TGFiZWwgJiYgIXRoaXMudGl0bGUgKSB7CgkJCXRoaXMuZWxlbWVudC5hdHRyKCAidGl0bGUiLCB0aGlzLm9wdGlvbnMubGFiZWwgKTsKCQl9Cgl9LAoKCV91cGRhdGVJY29uOiBmdW5jdGlvbiggb3B0aW9uLCB2YWx1ZSApIHsKCQl2YXIgaWNvbiA9IG9wdGlvbiAhPT0gImljb25Qb3NpdGlvbiIsCgkJCXBvc2l0aW9uID0gaWNvbiA/IHRoaXMub3B0aW9ucy5pY29uUG9zaXRpb24gOiB2YWx1ZSwKCQkJZGlzcGxheUJsb2NrID0gcG9zaXRpb24gPT09ICJ0b3AiIHx8IHBvc2l0aW9uID09PSAiYm90dG9tIjsKCgkJLy8gQ3JlYXRlIGljb24KCQlpZiAoICF0aGlzLmljb24gKSB7CgkJCXRoaXMuaWNvbiA9ICQoICI8c3Bhbj4iICk7CgoJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5pY29uLCAidWktYnV0dG9uLWljb24iLCAidWktaWNvbiIgKTsKCgkJCWlmICggIXRoaXMub3B0aW9ucy5zaG93TGFiZWwgKSB7CgkJCQl0aGlzLl9hZGRDbGFzcyggInVpLWJ1dHRvbi1pY29uLW9ubHkiICk7CgkJCX0KCQl9IGVsc2UgaWYgKCBpY29uICkgewoKCQkJLy8gSWYgd2UgYXJlIHVwZGF0aW5nIHRoZSBpY29uIHJlbW92ZSB0aGUgb2xkIGljb24gY2xhc3MKCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuaWNvbiwgbnVsbCwgdGhpcy5vcHRpb25zLmljb24gKTsKCQl9CgoJCS8vIElmIHdlIGFyZSB1cGRhdGluZyB0aGUgaWNvbiBhZGQgdGhlIG5ldyBpY29uIGNsYXNzCgkJaWYgKCBpY29uICkgewoJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5pY29uLCBudWxsLCB2YWx1ZSApOwoJCX0KCgkJdGhpcy5fYXR0YWNoSWNvbiggcG9zaXRpb24gKTsKCgkJLy8gSWYgdGhlIGljb24gaXMgb24gdG9wIG9yIGJvdHRvbSB3ZSBuZWVkIHRvIGFkZCB0aGUgdWktd2lkZ2V0LWljb24tYmxvY2sgY2xhc3MgYW5kIHJlbW92ZQoJCS8vIHRoZSBpY29uU3BhY2UgaWYgdGhlcmUgaXMgb25lLgoJCWlmICggZGlzcGxheUJsb2NrICkgewoJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5pY29uLCBudWxsLCAidWktd2lkZ2V0LWljb24tYmxvY2siICk7CgkJCWlmICggdGhpcy5pY29uU3BhY2UgKSB7CgkJCQl0aGlzLmljb25TcGFjZS5yZW1vdmUoKTsKCQkJfQoJCX0gZWxzZSB7CgoJCQkvLyBQb3NpdGlvbiBpcyBiZWdpbm5pbmcgb3IgZW5kIHNvIHJlbW92ZSB0aGUgdWktd2lkZ2V0LWljb24tYmxvY2sgY2xhc3MgYW5kIGFkZCB0aGUKCQkJLy8gc3BhY2UgaWYgaXQgZG9lcyBub3QgZXhpc3QKCQkJaWYgKCAhdGhpcy5pY29uU3BhY2UgKSB7CgkJCQl0aGlzLmljb25TcGFjZSA9ICQoICI8c3Bhbj4gPC9zcGFuPiIgKTsKCQkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmljb25TcGFjZSwgInVpLWJ1dHRvbi1pY29uLXNwYWNlIiApOwoJCQl9CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmljb24sIG51bGwsICJ1aS13aWdldC1pY29uLWJsb2NrIiApOwoJCQl0aGlzLl9hdHRhY2hJY29uU3BhY2UoIHBvc2l0aW9uICk7CgkJfQoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoICJyb2xlIiApOwoKCQlpZiAoIHRoaXMuaWNvbiApIHsKCQkJdGhpcy5pY29uLnJlbW92ZSgpOwoJCX0KCQlpZiAoIHRoaXMuaWNvblNwYWNlICkgewoJCQl0aGlzLmljb25TcGFjZS5yZW1vdmUoKTsKCQl9CgkJaWYgKCAhdGhpcy5oYXNUaXRsZSApIHsKCQkJdGhpcy5lbGVtZW50LnJlbW92ZUF0dHIoICJ0aXRsZSIgKTsKCQl9Cgl9LAoKCV9hdHRhY2hJY29uU3BhY2U6IGZ1bmN0aW9uKCBpY29uUG9zaXRpb24gKSB7CgkJdGhpcy5pY29uWyAvXig/OmVuZHxib3R0b20pLy50ZXN0KCBpY29uUG9zaXRpb24gKSA/ICJiZWZvcmUiIDogImFmdGVyIiBdKCB0aGlzLmljb25TcGFjZSApOwoJfSwKCglfYXR0YWNoSWNvbjogZnVuY3Rpb24oIGljb25Qb3NpdGlvbiApIHsKCQl0aGlzLmVsZW1lbnRbIC9eKD86ZW5kfGJvdHRvbSkvLnRlc3QoIGljb25Qb3NpdGlvbiApID8gImFwcGVuZCIgOiAicHJlcGVuZCIgXSggdGhpcy5pY29uICk7Cgl9LAoKCV9zZXRPcHRpb25zOiBmdW5jdGlvbiggb3B0aW9ucyApIHsKCQl2YXIgbmV3U2hvd0xhYmVsID0gb3B0aW9ucy5zaG93TGFiZWwgPT09IHVuZGVmaW5lZCA/CgkJCQl0aGlzLm9wdGlvbnMuc2hvd0xhYmVsIDoKCQkJCW9wdGlvbnMuc2hvd0xhYmVsLAoJCQluZXdJY29uID0gb3B0aW9ucy5pY29uID09PSB1bmRlZmluZWQgPyB0aGlzLm9wdGlvbnMuaWNvbiA6IG9wdGlvbnMuaWNvbjsKCgkJaWYgKCAhbmV3U2hvd0xhYmVsICYmICFuZXdJY29uICkgewoJCQlvcHRpb25zLnNob3dMYWJlbCA9IHRydWU7CgkJfQoJCXRoaXMuX3N1cGVyKCBvcHRpb25zICk7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCWlmICgga2V5ID09PSAiaWNvbiIgKSB7CgkJCWlmICggdmFsdWUgKSB7CgkJCQl0aGlzLl91cGRhdGVJY29uKCBrZXksIHZhbHVlICk7CgkJCX0gZWxzZSBpZiAoIHRoaXMuaWNvbiApIHsKCQkJCXRoaXMuaWNvbi5yZW1vdmUoKTsKCQkJCWlmICggdGhpcy5pY29uU3BhY2UgKSB7CgkJCQkJdGhpcy5pY29uU3BhY2UucmVtb3ZlKCk7CgkJCQl9CgkJCX0KCQl9CgoJCWlmICgga2V5ID09PSAiaWNvblBvc2l0aW9uIiApIHsKCQkJdGhpcy5fdXBkYXRlSWNvbigga2V5LCB2YWx1ZSApOwoJCX0KCgkJLy8gTWFrZSBzdXJlIHdlIGNhbid0IGVuZCB1cCB3aXRoIGEgYnV0dG9uIHRoYXQgaGFzIG5laXRoZXIgdGV4dCBub3IgaWNvbgoJCWlmICgga2V5ID09PSAic2hvd0xhYmVsIiApIHsKCQkJCXRoaXMuX3RvZ2dsZUNsYXNzKCAidWktYnV0dG9uLWljb24tb25seSIsIG51bGwsICF2YWx1ZSApOwoJCQkJdGhpcy5fdXBkYXRlVG9vbHRpcCgpOwoJCX0KCgkJaWYgKCBrZXkgPT09ICJsYWJlbCIgKSB7CgkJCWlmICggdGhpcy5pc0lucHV0ICkgewoJCQkJdGhpcy5lbGVtZW50LnZhbCggdmFsdWUgKTsKCQkJfSBlbHNlIHsKCgkJCQkvLyBJZiB0aGVyZSBpcyBhbiBpY29uLCBhcHBlbmQgaXQsIGVsc2Ugbm90aGluZyB0aGVuIGFwcGVuZCB0aGUgdmFsdWUKCQkJCS8vIHRoaXMgYXZvaWRzIHJlbW92YWwgb2YgdGhlIGljb24gd2hlbiBzZXR0aW5nIGxhYmVsIHRleHQKCQkJCXRoaXMuZWxlbWVudC5odG1sKCB2YWx1ZSApOwoJCQkJaWYgKCB0aGlzLmljb24gKSB7CgkJCQkJdGhpcy5fYXR0YWNoSWNvbiggdGhpcy5vcHRpb25zLmljb25Qb3NpdGlvbiApOwoJCQkJCXRoaXMuX2F0dGFjaEljb25TcGFjZSggdGhpcy5vcHRpb25zLmljb25Qb3NpdGlvbiApOwoJCQkJfQoJCQl9CgkJfQoKCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOwoKCQlpZiAoIGtleSA9PT0gImRpc2FibGVkIiApIHsKCQkJdGhpcy5fdG9nZ2xlQ2xhc3MoIG51bGwsICJ1aS1zdGF0ZS1kaXNhYmxlZCIsIHZhbHVlICk7CgkJCXRoaXMuZWxlbWVudFsgMCBdLmRpc2FibGVkID0gdmFsdWU7CgkJCWlmICggdmFsdWUgKSB7CgkJCQl0aGlzLmVsZW1lbnQuYmx1cigpOwoJCQl9CgkJfQoJfSwKCglyZWZyZXNoOiBmdW5jdGlvbigpIHsKCgkJLy8gTWFrZSBzdXJlIHRvIG9ubHkgY2hlY2sgZGlzYWJsZWQgaWYgaXRzIGFuIGVsZW1lbnQgdGhhdCBzdXBwb3J0cyB0aGlzIG90aGVyd2lzZQoJCS8vIGNoZWNrIGZvciB0aGUgZGlzYWJsZWQgY2xhc3MgdG8gZGV0ZXJtaW5lIHN0YXRlCgkJdmFyIGlzRGlzYWJsZWQgPSB0aGlzLmVsZW1lbnQuaXMoICJpbnB1dCwgYnV0dG9uIiApID8KCQkJdGhpcy5lbGVtZW50WyAwIF0uZGlzYWJsZWQgOiB0aGlzLmVsZW1lbnQuaGFzQ2xhc3MoICJ1aS1idXR0b24tZGlzYWJsZWQiICk7CgoJCWlmICggaXNEaXNhYmxlZCAhPT0gdGhpcy5vcHRpb25zLmRpc2FibGVkICkgewoJCQl0aGlzLl9zZXRPcHRpb25zKCB7IGRpc2FibGVkOiBpc0Rpc2FibGVkIH0gKTsKCQl9CgoJCXRoaXMuX3VwZGF0ZVRvb2x0aXAoKTsKCX0KfSApOwoKLy8gREVQUkVDQVRFRAppZiAoICQudWlCYWNrQ29tcGF0ICE9PSBmYWxzZSApIHsKCgkvLyBUZXh0IGFuZCBJY29ucyBvcHRpb25zCgkkLndpZGdldCggInVpLmJ1dHRvbiIsICQudWkuYnV0dG9uLCB7CgkJb3B0aW9uczogewoJCQl0ZXh0OiB0cnVlLAoJCQlpY29uczogewoJCQkJcHJpbWFyeTogbnVsbCwKCQkJCXNlY29uZGFyeTogbnVsbAoJCQl9CgkJfSwKCgkJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJCWlmICggdGhpcy5vcHRpb25zLnNob3dMYWJlbCAmJiAhdGhpcy5vcHRpb25zLnRleHQgKSB7CgkJCQl0aGlzLm9wdGlvbnMuc2hvd0xhYmVsID0gdGhpcy5vcHRpb25zLnRleHQ7CgkJCX0KCQkJaWYgKCAhdGhpcy5vcHRpb25zLnNob3dMYWJlbCAmJiB0aGlzLm9wdGlvbnMudGV4dCApIHsKCQkJCXRoaXMub3B0aW9ucy50ZXh0ID0gdGhpcy5vcHRpb25zLnNob3dMYWJlbDsKCQkJfQoJCQlpZiAoICF0aGlzLm9wdGlvbnMuaWNvbiAmJiAoIHRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5IHx8CgkJCQkJdGhpcy5vcHRpb25zLmljb25zLnNlY29uZGFyeSApICkgewoJCQkJaWYgKCB0aGlzLm9wdGlvbnMuaWNvbnMucHJpbWFyeSApIHsKCQkJCQl0aGlzLm9wdGlvbnMuaWNvbiA9IHRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5OwoJCQkJfSBlbHNlIHsKCQkJCQl0aGlzLm9wdGlvbnMuaWNvbiA9IHRoaXMub3B0aW9ucy5pY29ucy5zZWNvbmRhcnk7CgkJCQkJdGhpcy5vcHRpb25zLmljb25Qb3NpdGlvbiA9ICJlbmQiOwoJCQkJfQoJCQl9IGVsc2UgaWYgKCB0aGlzLm9wdGlvbnMuaWNvbiApIHsKCQkJCXRoaXMub3B0aW9ucy5pY29ucy5wcmltYXJ5ID0gdGhpcy5vcHRpb25zLmljb247CgkJCX0KCQkJdGhpcy5fc3VwZXIoKTsKCQl9LAoKCQlfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQkJaWYgKCBrZXkgPT09ICJ0ZXh0IiApIHsKCQkJCXRoaXMuX3N1cGVyKCAic2hvd0xhYmVsIiwgdmFsdWUgKTsKCQkJCXJldHVybjsKCQkJfQoJCQlpZiAoIGtleSA9PT0gInNob3dMYWJlbCIgKSB7CgkJCQl0aGlzLm9wdGlvbnMudGV4dCA9IHZhbHVlOwoJCQl9CgkJCWlmICgga2V5ID09PSAiaWNvbiIgKSB7CgkJCQl0aGlzLm9wdGlvbnMuaWNvbnMucHJpbWFyeSA9IHZhbHVlOwoJCQl9CgkJCWlmICgga2V5ID09PSAiaWNvbnMiICkgewoJCQkJaWYgKCB2YWx1ZS5wcmltYXJ5ICkgewoJCQkJCXRoaXMuX3N1cGVyKCAiaWNvbiIsIHZhbHVlLnByaW1hcnkgKTsKCQkJCQl0aGlzLl9zdXBlciggImljb25Qb3NpdGlvbiIsICJiZWdpbm5pbmciICk7CgkJCQl9IGVsc2UgaWYgKCB2YWx1ZS5zZWNvbmRhcnkgKSB7CgkJCQkJdGhpcy5fc3VwZXIoICJpY29uIiwgdmFsdWUuc2Vjb25kYXJ5ICk7CgkJCQkJdGhpcy5fc3VwZXIoICJpY29uUG9zaXRpb24iLCAiZW5kIiApOwoJCQkJfQoJCQl9CgkJCXRoaXMuX3N1cGVyQXBwbHkoIGFyZ3VtZW50cyApOwoJCX0KCX0gKTsKCgkkLmZuLmJ1dHRvbiA9ICggZnVuY3Rpb24oIG9yaWcgKSB7CgkJcmV0dXJuIGZ1bmN0aW9uKCkgewoJCQlpZiAoICF0aGlzLmxlbmd0aCB8fCAoIHRoaXMubGVuZ3RoICYmIHRoaXNbIDAgXS50YWdOYW1lICE9PSAiSU5QVVQiICkgfHwKCQkJCQkoIHRoaXMubGVuZ3RoICYmIHRoaXNbIDAgXS50YWdOYW1lID09PSAiSU5QVVQiICYmICgKCQkJCQkJdGhpcy5hdHRyKCAidHlwZSIgKSAhPT0gImNoZWNrYm94IiAmJiB0aGlzLmF0dHIoICJ0eXBlIiApICE9PSAicmFkaW8iCgkJCQkJKSApICkgewoJCQkJcmV0dXJuIG9yaWcuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJCQl9CgkJCWlmICggISQudWkuY2hlY2tib3hyYWRpbyApIHsKCQkJCSQuZXJyb3IoICJDaGVja2JveHJhZGlvIHdpZGdldCBtaXNzaW5nIiApOwoJCQl9CgkJCWlmICggYXJndW1lbnRzLmxlbmd0aCA9PT0gMCApIHsKCQkJCXJldHVybiB0aGlzLmNoZWNrYm94cmFkaW8oIHsKCQkJCQkiaWNvbiI6IGZhbHNlCgkJCQl9ICk7CgkJCX0KCQkJcmV0dXJuIHRoaXMuY2hlY2tib3hyYWRpby5hcHBseSggdGhpcywgYXJndW1lbnRzICk7CgkJfTsKCX0gKSggJC5mbi5idXR0b24gKTsKCgkkLmZuLmJ1dHRvbnNldCA9IGZ1bmN0aW9uKCkgewoJCWlmICggISQudWkuY29udHJvbGdyb3VwICkgewoJCQkkLmVycm9yKCAiQ29udHJvbGdyb3VwIHdpZGdldCBtaXNzaW5nIiApOwoJCX0KCQlpZiAoIGFyZ3VtZW50c1sgMCBdID09PSAib3B0aW9uIiAmJiBhcmd1bWVudHNbIDEgXSA9PT0gIml0ZW1zIiAmJiBhcmd1bWVudHNbIDIgXSApIHsKCQkJcmV0dXJuIHRoaXMuY29udHJvbGdyb3VwLmFwcGx5KCB0aGlzLAoJCQkJWyBhcmd1bWVudHNbIDAgXSwgIml0ZW1zLmJ1dHRvbiIsIGFyZ3VtZW50c1sgMiBdIF0gKTsKCQl9CgkJaWYgKCBhcmd1bWVudHNbIDAgXSA9PT0gIm9wdGlvbiIgJiYgYXJndW1lbnRzWyAxIF0gPT09ICJpdGVtcyIgKSB7CgkJCXJldHVybiB0aGlzLmNvbnRyb2xncm91cC5hcHBseSggdGhpcywgWyBhcmd1bWVudHNbIDAgXSwgIml0ZW1zLmJ1dHRvbiIgXSApOwoJCX0KCQlpZiAoIHR5cGVvZiBhcmd1bWVudHNbIDAgXSA9PT0gIm9iamVjdCIgJiYgYXJndW1lbnRzWyAwIF0uaXRlbXMgKSB7CgkJCWFyZ3VtZW50c1sgMCBdLml0ZW1zID0gewoJCQkJYnV0dG9uOiBhcmd1bWVudHNbIDAgXS5pdGVtcwoJCQl9OwoJCX0KCQlyZXR1cm4gdGhpcy5jb250cm9sZ3JvdXAuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApOwoJfTsKfQoKdmFyIHdpZGdldHNCdXR0b24gPSAkLnVpLmJ1dHRvbjsKCgovLyBqc2NzOmRpc2FibGUgbWF4aW11bUxpbmVMZW5ndGgKLyoganNjczpkaXNhYmxlIHJlcXVpcmVDYW1lbENhc2VPclVwcGVyQ2FzZUlkZW50aWZpZXJzICovCi8qIQogKiBqUXVlcnkgVUkgRGF0ZXBpY2tlciAxLjEyLjEKICogaHR0cDovL2pxdWVyeXVpLmNvbQogKgogKiBDb3B5cmlnaHQgalF1ZXJ5IEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9ycwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UuCiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2UKICovCgovLz4+bGFiZWw6IERhdGVwaWNrZXIKLy8+Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlwdGlvbjogRGlzcGxheXMgYSBjYWxlbmRhciBmcm9tIGFuIGlucHV0IG9yIGlubGluZSBmb3Igc2VsZWN0aW5nIGRhdGVzLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZGF0ZXBpY2tlci8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2RhdGVwaWNrZXIvCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvZGF0ZXBpY2tlci5jc3MKLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzCgoKCiQuZXh0ZW5kKCAkLnVpLCB7IGRhdGVwaWNrZXI6IHsgdmVyc2lvbjogIjEuMTIuMSIgfSB9ICk7Cgp2YXIgZGF0ZXBpY2tlcl9pbnN0QWN0aXZlOwoKZnVuY3Rpb24gZGF0ZXBpY2tlcl9nZXRaaW5kZXgoIGVsZW0gKSB7Cgl2YXIgcG9zaXRpb24sIHZhbHVlOwoJd2hpbGUgKCBlbGVtLmxlbmd0aCAmJiBlbGVtWyAwIF0gIT09IGRvY3VtZW50ICkgewoKCQkvLyBJZ25vcmUgei1pbmRleCBpZiBwb3NpdGlvbiBpcyBzZXQgdG8gYSB2YWx1ZSB3aGVyZSB6LWluZGV4IGlzIGlnbm9yZWQgYnkgdGhlIGJyb3dzZXIKCQkvLyBUaGlzIG1ha2VzIGJlaGF2aW9yIG9mIHRoaXMgZnVuY3Rpb24gY29uc2lzdGVudCBhY3Jvc3MgYnJvd3NlcnMKCQkvLyBXZWJLaXQgYWx3YXlzIHJldHVybnMgYXV0byBpZiB0aGUgZWxlbWVudCBpcyBwb3NpdGlvbmVkCgkJcG9zaXRpb24gPSBlbGVtLmNzcyggInBvc2l0aW9uIiApOwoJCWlmICggcG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgfHwgcG9zaXRpb24gPT09ICJyZWxhdGl2ZSIgfHwgcG9zaXRpb24gPT09ICJmaXhlZCIgKSB7CgoJCQkvLyBJRSByZXR1cm5zIDAgd2hlbiB6SW5kZXggaXMgbm90IHNwZWNpZmllZAoJCQkvLyBvdGhlciBicm93c2VycyByZXR1cm4gYSBzdHJpbmcKCQkJLy8gd2UgaWdub3JlIHRoZSBjYXNlIG9mIG5lc3RlZCBlbGVtZW50cyB3aXRoIGFuIGV4cGxpY2l0IHZhbHVlIG9mIDAKCQkJLy8gPGRpdiBzdHlsZT0iei1pbmRleDogLTEwOyI+PGRpdiBzdHlsZT0iei1pbmRleDogMDsiPjwvZGl2PjwvZGl2PgoJCQl2YWx1ZSA9IHBhcnNlSW50KCBlbGVtLmNzcyggInpJbmRleCIgKSwgMTAgKTsKCQkJaWYgKCAhaXNOYU4oIHZhbHVlICkgJiYgdmFsdWUgIT09IDAgKSB7CgkJCQlyZXR1cm4gdmFsdWU7CgkJCX0KCQl9CgkJZWxlbSA9IGVsZW0ucGFyZW50KCk7Cgl9CgoJcmV0dXJuIDA7Cn0KLyogRGF0ZSBwaWNrZXIgbWFuYWdlci4KICAgVXNlIHRoZSBzaW5nbGV0b24gaW5zdGFuY2Ugb2YgdGhpcyBjbGFzcywgJC5kYXRlcGlja2VyLCB0byBpbnRlcmFjdCB3aXRoIHRoZSBkYXRlIHBpY2tlci4KICAgU2V0dGluZ3MgZm9yIChncm91cHMgb2YpIGRhdGUgcGlja2VycyBhcmUgbWFpbnRhaW5lZCBpbiBhbiBpbnN0YW5jZSBvYmplY3QsCiAgIGFsbG93aW5nIG11bHRpcGxlIGRpZmZlcmVudCBzZXR0aW5ncyBvbiB0aGUgc2FtZSBwYWdlLiAqLwoKZnVuY3Rpb24gRGF0ZXBpY2tlcigpIHsKCXRoaXMuX2N1ckluc3QgPSBudWxsOyAvLyBUaGUgY3VycmVudCBpbnN0YW5jZSBpbiB1c2UKCXRoaXMuX2tleUV2ZW50ID0gZmFsc2U7IC8vIElmIHRoZSBsYXN0IGV2ZW50IHdhcyBhIGtleSBldmVudAoJdGhpcy5fZGlzYWJsZWRJbnB1dHMgPSBbXTsgLy8gTGlzdCBvZiBkYXRlIHBpY2tlciBpbnB1dHMgdGhhdCBoYXZlIGJlZW4gZGlzYWJsZWQKCXRoaXMuX2RhdGVwaWNrZXJTaG93aW5nID0gZmFsc2U7IC8vIFRydWUgaWYgdGhlIHBvcHVwIHBpY2tlciBpcyBzaG93aW5nICwgZmFsc2UgaWYgbm90Cgl0aGlzLl9pbkRpYWxvZyA9IGZhbHNlOyAvLyBUcnVlIGlmIHNob3dpbmcgd2l0aGluIGEgImRpYWxvZyIsIGZhbHNlIGlmIG5vdAoJdGhpcy5fbWFpbkRpdklkID0gInVpLWRhdGVwaWNrZXItZGl2IjsgLy8gVGhlIElEIG9mIHRoZSBtYWluIGRhdGVwaWNrZXIgZGl2aXNpb24KCXRoaXMuX2lubGluZUNsYXNzID0gInVpLWRhdGVwaWNrZXItaW5saW5lIjsgLy8gVGhlIG5hbWUgb2YgdGhlIGlubGluZSBtYXJrZXIgY2xhc3MKCXRoaXMuX2FwcGVuZENsYXNzID0gInVpLWRhdGVwaWNrZXItYXBwZW5kIjsgLy8gVGhlIG5hbWUgb2YgdGhlIGFwcGVuZCBtYXJrZXIgY2xhc3MKCXRoaXMuX3RyaWdnZXJDbGFzcyA9ICJ1aS1kYXRlcGlja2VyLXRyaWdnZXIiOyAvLyBUaGUgbmFtZSBvZiB0aGUgdHJpZ2dlciBtYXJrZXIgY2xhc3MKCXRoaXMuX2RpYWxvZ0NsYXNzID0gInVpLWRhdGVwaWNrZXItZGlhbG9nIjsgLy8gVGhlIG5hbWUgb2YgdGhlIGRpYWxvZyBtYXJrZXIgY2xhc3MKCXRoaXMuX2Rpc2FibGVDbGFzcyA9ICJ1aS1kYXRlcGlja2VyLWRpc2FibGVkIjsgLy8gVGhlIG5hbWUgb2YgdGhlIGRpc2FibGVkIGNvdmVyaW5nIG1hcmtlciBjbGFzcwoJdGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3MgPSAidWktZGF0ZXBpY2tlci11bnNlbGVjdGFibGUiOyAvLyBUaGUgbmFtZSBvZiB0aGUgdW5zZWxlY3RhYmxlIGNlbGwgbWFya2VyIGNsYXNzCgl0aGlzLl9jdXJyZW50Q2xhc3MgPSAidWktZGF0ZXBpY2tlci1jdXJyZW50LWRheSI7IC8vIFRoZSBuYW1lIG9mIHRoZSBjdXJyZW50IGRheSBtYXJrZXIgY2xhc3MKCXRoaXMuX2RheU92ZXJDbGFzcyA9ICJ1aS1kYXRlcGlja2VyLWRheXMtY2VsbC1vdmVyIjsgLy8gVGhlIG5hbWUgb2YgdGhlIGRheSBob3ZlciBtYXJrZXIgY2xhc3MKCXRoaXMucmVnaW9uYWwgPSBbXTsgLy8gQXZhaWxhYmxlIHJlZ2lvbmFsIHNldHRpbmdzLCBpbmRleGVkIGJ5IGxhbmd1YWdlIGNvZGUKCXRoaXMucmVnaW9uYWxbICIiIF0gPSB7IC8vIERlZmF1bHQgcmVnaW9uYWwgc2V0dGluZ3MKCQljbG9zZVRleHQ6ICJEb25lIiwgLy8gRGlzcGxheSB0ZXh0IGZvciBjbG9zZSBsaW5rCgkJcHJldlRleHQ6ICJQcmV2IiwgLy8gRGlzcGxheSB0ZXh0IGZvciBwcmV2aW91cyBtb250aCBsaW5rCgkJbmV4dFRleHQ6ICJOZXh0IiwgLy8gRGlzcGxheSB0ZXh0IGZvciBuZXh0IG1vbnRoIGxpbmsKCQljdXJyZW50VGV4dDogIlRvZGF5IiwgLy8gRGlzcGxheSB0ZXh0IGZvciBjdXJyZW50IG1vbnRoIGxpbmsKCQltb250aE5hbWVzOiBbICJKYW51YXJ5IiwiRmVicnVhcnkiLCJNYXJjaCIsIkFwcmlsIiwiTWF5IiwiSnVuZSIsCgkJCSJKdWx5IiwiQXVndXN0IiwiU2VwdGVtYmVyIiwiT2N0b2JlciIsIk5vdmVtYmVyIiwiRGVjZW1iZXIiIF0sIC8vIE5hbWVzIG9mIG1vbnRocyBmb3IgZHJvcC1kb3duIGFuZCBmb3JtYXR0aW5nCgkJbW9udGhOYW1lc1Nob3J0OiBbICJKYW4iLCAiRmViIiwgIk1hciIsICJBcHIiLCAiTWF5IiwgIkp1biIsICJKdWwiLCAiQXVnIiwgIlNlcCIsICJPY3QiLCAiTm92IiwgIkRlYyIgXSwgLy8gRm9yIGZvcm1hdHRpbmcKCQlkYXlOYW1lczogWyAiU3VuZGF5IiwgIk1vbmRheSIsICJUdWVzZGF5IiwgIldlZG5lc2RheSIsICJUaHVyc2RheSIsICJGcmlkYXkiLCAiU2F0dXJkYXkiIF0sIC8vIEZvciBmb3JtYXR0aW5nCgkJZGF5TmFtZXNTaG9ydDogWyAiU3VuIiwgIk1vbiIsICJUdWUiLCAiV2VkIiwgIlRodSIsICJGcmkiLCAiU2F0IiBdLCAvLyBGb3IgZm9ybWF0dGluZwoJCWRheU5hbWVzTWluOiBbICJTdSIsIk1vIiwiVHUiLCJXZSIsIlRoIiwiRnIiLCJTYSIgXSwgLy8gQ29sdW1uIGhlYWRpbmdzIGZvciBkYXlzIHN0YXJ0aW5nIGF0IFN1bmRheQoJCXdlZWtIZWFkZXI6ICJXayIsIC8vIENvbHVtbiBoZWFkZXIgZm9yIHdlZWsgb2YgdGhlIHllYXIKCQlkYXRlRm9ybWF0OiAibW0vZGQveXkiLCAvLyBTZWUgZm9ybWF0IG9wdGlvbnMgb24gcGFyc2VEYXRlCgkJZmlyc3REYXk6IDAsIC8vIFRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWssIFN1biA9IDAsIE1vbiA9IDEsIC4uLgoJCWlzUlRMOiBmYWxzZSwgLy8gVHJ1ZSBpZiByaWdodC10by1sZWZ0IGxhbmd1YWdlLCBmYWxzZSBpZiBsZWZ0LXRvLXJpZ2h0CgkJc2hvd01vbnRoQWZ0ZXJZZWFyOiBmYWxzZSwgLy8gVHJ1ZSBpZiB0aGUgeWVhciBzZWxlY3QgcHJlY2VkZXMgbW9udGgsIGZhbHNlIGZvciBtb250aCB0aGVuIHllYXIKCQl5ZWFyU3VmZml4OiAiIiAvLyBBZGRpdGlvbmFsIHRleHQgdG8gYXBwZW5kIHRvIHRoZSB5ZWFyIGluIHRoZSBtb250aCBoZWFkZXJzCgl9OwoJdGhpcy5fZGVmYXVsdHMgPSB7IC8vIEdsb2JhbCBkZWZhdWx0cyBmb3IgYWxsIHRoZSBkYXRlIHBpY2tlciBpbnN0YW5jZXMKCQlzaG93T246ICJmb2N1cyIsIC8vICJmb2N1cyIgZm9yIHBvcHVwIG9uIGZvY3VzLAoJCQkvLyAiYnV0dG9uIiBmb3IgdHJpZ2dlciBidXR0b24sIG9yICJib3RoIiBmb3IgZWl0aGVyCgkJc2hvd0FuaW06ICJmYWRlSW4iLCAvLyBOYW1lIG9mIGpRdWVyeSBhbmltYXRpb24gZm9yIHBvcHVwCgkJc2hvd09wdGlvbnM6IHt9LCAvLyBPcHRpb25zIGZvciBlbmhhbmNlZCBhbmltYXRpb25zCgkJZGVmYXVsdERhdGU6IG51bGwsIC8vIFVzZWQgd2hlbiBmaWVsZCBpcyBibGFuazogYWN0dWFsIGRhdGUsCgkJCS8vICsvLW51bWJlciBmb3Igb2Zmc2V0IGZyb20gdG9kYXksIG51bGwgZm9yIHRvZGF5CgkJYXBwZW5kVGV4dDogIiIsIC8vIERpc3BsYXkgdGV4dCBmb2xsb3dpbmcgdGhlIGlucHV0IGJveCwgZS5nLiBzaG93aW5nIHRoZSBmb3JtYXQKCQlidXR0b25UZXh0OiAiLi4uIiwgLy8gVGV4dCBmb3IgdHJpZ2dlciBidXR0b24KCQlidXR0b25JbWFnZTogIiIsIC8vIFVSTCBmb3IgdHJpZ2dlciBidXR0b24gaW1hZ2UKCQlidXR0b25JbWFnZU9ubHk6IGZhbHNlLCAvLyBUcnVlIGlmIHRoZSBpbWFnZSBhcHBlYXJzIGFsb25lLCBmYWxzZSBpZiBpdCBhcHBlYXJzIG9uIGEgYnV0dG9uCgkJaGlkZUlmTm9QcmV2TmV4dDogZmFsc2UsIC8vIFRydWUgdG8gaGlkZSBuZXh0L3ByZXZpb3VzIG1vbnRoIGxpbmtzCgkJCS8vIGlmIG5vdCBhcHBsaWNhYmxlLCBmYWxzZSB0byBqdXN0IGRpc2FibGUgdGhlbQoJCW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQ6IGZhbHNlLCAvLyBUcnVlIGlmIGRhdGUgZm9ybWF0dGluZyBhcHBsaWVkIHRvIHByZXYvdG9kYXkvbmV4dCBsaW5rcwoJCWdvdG9DdXJyZW50OiBmYWxzZSwgLy8gVHJ1ZSBpZiB0b2RheSBsaW5rIGdvZXMgYmFjayB0byBjdXJyZW50IHNlbGVjdGlvbiBpbnN0ZWFkCgkJY2hhbmdlTW9udGg6IGZhbHNlLCAvLyBUcnVlIGlmIG1vbnRoIGNhbiBiZSBzZWxlY3RlZCBkaXJlY3RseSwgZmFsc2UgaWYgb25seSBwcmV2L25leHQKCQljaGFuZ2VZZWFyOiBmYWxzZSwgLy8gVHJ1ZSBpZiB5ZWFyIGNhbiBiZSBzZWxlY3RlZCBkaXJlY3RseSwgZmFsc2UgaWYgb25seSBwcmV2L25leHQKCQl5ZWFyUmFuZ2U6ICJjLTEwOmMrMTAiLCAvLyBSYW5nZSBvZiB5ZWFycyB0byBkaXNwbGF5IGluIGRyb3AtZG93biwKCQkJLy8gZWl0aGVyIHJlbGF0aXZlIHRvIHRvZGF5J3MgeWVhciAoLW5uOitubiksIHJlbGF0aXZlIHRvIGN1cnJlbnRseSBkaXNwbGF5ZWQgeWVhcgoJCQkvLyAoYy1ubjpjK25uKSwgYWJzb2x1dGUgKG5ubm46bm5ubiksIG9yIGEgY29tYmluYXRpb24gb2YgdGhlIGFib3ZlIChubm5uOi1uKQoJCXNob3dPdGhlck1vbnRoczogZmFsc2UsIC8vIFRydWUgdG8gc2hvdyBkYXRlcyBpbiBvdGhlciBtb250aHMsIGZhbHNlIHRvIGxlYXZlIGJsYW5rCgkJc2VsZWN0T3RoZXJNb250aHM6IGZhbHNlLCAvLyBUcnVlIHRvIGFsbG93IHNlbGVjdGlvbiBvZiBkYXRlcyBpbiBvdGhlciBtb250aHMsIGZhbHNlIGZvciB1bnNlbGVjdGFibGUKCQlzaG93V2VlazogZmFsc2UsIC8vIFRydWUgdG8gc2hvdyB3ZWVrIG9mIHRoZSB5ZWFyLCBmYWxzZSB0byBub3Qgc2hvdyBpdAoJCWNhbGN1bGF0ZVdlZWs6IHRoaXMuaXNvODYwMVdlZWssIC8vIEhvdyB0byBjYWxjdWxhdGUgdGhlIHdlZWsgb2YgdGhlIHllYXIsCgkJCS8vIHRha2VzIGEgRGF0ZSBhbmQgcmV0dXJucyB0aGUgbnVtYmVyIG9mIHRoZSB3ZWVrIGZvciBpdAoJCXNob3J0WWVhckN1dG9mZjogIisxMCIsIC8vIFNob3J0IHllYXIgdmFsdWVzIDwgdGhpcyBhcmUgaW4gdGhlIGN1cnJlbnQgY2VudHVyeSwKCQkJLy8gPiB0aGlzIGFyZSBpbiB0aGUgcHJldmlvdXMgY2VudHVyeSwKCQkJLy8gc3RyaW5nIHZhbHVlIHN0YXJ0aW5nIHdpdGggIisiIGZvciBjdXJyZW50IHllYXIgKyB2YWx1ZQoJCW1pbkRhdGU6IG51bGwsIC8vIFRoZSBlYXJsaWVzdCBzZWxlY3RhYmxlIGRhdGUsIG9yIG51bGwgZm9yIG5vIGxpbWl0CgkJbWF4RGF0ZTogbnVsbCwgLy8gVGhlIGxhdGVzdCBzZWxlY3RhYmxlIGRhdGUsIG9yIG51bGwgZm9yIG5vIGxpbWl0CgkJZHVyYXRpb246ICJmYXN0IiwgLy8gRHVyYXRpb24gb2YgZGlzcGxheS9jbG9zdXJlCgkJYmVmb3JlU2hvd0RheTogbnVsbCwgLy8gRnVuY3Rpb24gdGhhdCB0YWtlcyBhIGRhdGUgYW5kIHJldHVybnMgYW4gYXJyYXkgd2l0aAoJCQkvLyBbMF0gPSB0cnVlIGlmIHNlbGVjdGFibGUsIGZhbHNlIGlmIG5vdCwgWzFdID0gY3VzdG9tIENTUyBjbGFzcyBuYW1lKHMpIG9yICIiLAoJCQkvLyBbMl0gPSBjZWxsIHRpdGxlIChvcHRpb25hbCksIGUuZy4gJC5kYXRlcGlja2VyLm5vV2Vla2VuZHMKCQliZWZvcmVTaG93OiBudWxsLCAvLyBGdW5jdGlvbiB0aGF0IHRha2VzIGFuIGlucHV0IGZpZWxkIGFuZAoJCQkvLyByZXR1cm5zIGEgc2V0IG9mIGN1c3RvbSBzZXR0aW5ncyBmb3IgdGhlIGRhdGUgcGlja2VyCgkJb25TZWxlY3Q6IG51bGwsIC8vIERlZmluZSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHdoZW4gYSBkYXRlIGlzIHNlbGVjdGVkCgkJb25DaGFuZ2VNb250aFllYXI6IG51bGwsIC8vIERlZmluZSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHdoZW4gdGhlIG1vbnRoIG9yIHllYXIgaXMgY2hhbmdlZAoJCW9uQ2xvc2U6IG51bGwsIC8vIERlZmluZSBhIGNhbGxiYWNrIGZ1bmN0aW9uIHdoZW4gdGhlIGRhdGVwaWNrZXIgaXMgY2xvc2VkCgkJbnVtYmVyT2ZNb250aHM6IDEsIC8vIE51bWJlciBvZiBtb250aHMgdG8gc2hvdyBhdCBhIHRpbWUKCQlzaG93Q3VycmVudEF0UG9zOiAwLCAvLyBUaGUgcG9zaXRpb24gaW4gbXVsdGlwZSBtb250aHMgYXQgd2hpY2ggdG8gc2hvdyB0aGUgY3VycmVudCBtb250aCAoc3RhcnRpbmcgYXQgMCkKCQlzdGVwTW9udGhzOiAxLCAvLyBOdW1iZXIgb2YgbW9udGhzIHRvIHN0ZXAgYmFjay9mb3J3YXJkCgkJc3RlcEJpZ01vbnRoczogMTIsIC8vIE51bWJlciBvZiBtb250aHMgdG8gc3RlcCBiYWNrL2ZvcndhcmQgZm9yIHRoZSBiaWcgbGlua3MKCQlhbHRGaWVsZDogIiIsIC8vIFNlbGVjdG9yIGZvciBhbiBhbHRlcm5hdGUgZmllbGQgdG8gc3RvcmUgc2VsZWN0ZWQgZGF0ZXMgaW50bwoJCWFsdEZvcm1hdDogIiIsIC8vIFRoZSBkYXRlIGZvcm1hdCB0byB1c2UgZm9yIHRoZSBhbHRlcm5hdGUgZmllbGQKCQljb25zdHJhaW5JbnB1dDogdHJ1ZSwgLy8gVGhlIGlucHV0IGlzIGNvbnN0cmFpbmVkIGJ5IHRoZSBjdXJyZW50IGRhdGUgZm9ybWF0CgkJc2hvd0J1dHRvblBhbmVsOiBmYWxzZSwgLy8gVHJ1ZSB0byBzaG93IGJ1dHRvbiBwYW5lbCwgZmFsc2UgdG8gbm90IHNob3cgaXQKCQlhdXRvU2l6ZTogZmFsc2UsIC8vIFRydWUgdG8gc2l6ZSB0aGUgaW5wdXQgZm9yIHRoZSBkYXRlIGZvcm1hdCwgZmFsc2UgdG8gbGVhdmUgYXMgaXMKCQlkaXNhYmxlZDogZmFsc2UgLy8gVGhlIGluaXRpYWwgZGlzYWJsZWQgc3RhdGUKCX07CgkkLmV4dGVuZCggdGhpcy5fZGVmYXVsdHMsIHRoaXMucmVnaW9uYWxbICIiIF0gKTsKCXRoaXMucmVnaW9uYWwuZW4gPSAkLmV4dGVuZCggdHJ1ZSwge30sIHRoaXMucmVnaW9uYWxbICIiIF0gKTsKCXRoaXMucmVnaW9uYWxbICJlbi1VUyIgXSA9ICQuZXh0ZW5kKCB0cnVlLCB7fSwgdGhpcy5yZWdpb25hbC5lbiApOwoJdGhpcy5kcERpdiA9IGRhdGVwaWNrZXJfYmluZEhvdmVyKCAkKCAiPGRpdiBpZD0nIiArIHRoaXMuX21haW5EaXZJZCArICInIGNsYXNzPSd1aS1kYXRlcGlja2VyIHVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCB1aS1oZWxwZXItY2xlYXJmaXggdWktY29ybmVyLWFsbCc+PC9kaXY+IiApICk7Cn0KCiQuZXh0ZW5kKCBEYXRlcGlja2VyLnByb3RvdHlwZSwgewoJLyogQ2xhc3MgbmFtZSBhZGRlZCB0byBlbGVtZW50cyB0byBpbmRpY2F0ZSBhbHJlYWR5IGNvbmZpZ3VyZWQgd2l0aCBhIGRhdGUgcGlja2VyLiAqLwoJbWFya2VyQ2xhc3NOYW1lOiAiaGFzRGF0ZXBpY2tlciIsCgoJLy9LZWVwIHRyYWNrIG9mIHRoZSBtYXhpbXVtIG51bWJlciBvZiByb3dzIGRpc3BsYXllZCAoc2VlICM3MDQzKQoJbWF4Um93czogNCwKCgkvLyBUT0RPIHJlbmFtZSB0byAid2lkZ2V0IiB3aGVuIHN3aXRjaGluZyB0byB3aWRnZXQgZmFjdG9yeQoJX3dpZGdldERhdGVwaWNrZXI6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmRwRGl2OwoJfSwKCgkvKiBPdmVycmlkZSB0aGUgZGVmYXVsdCBzZXR0aW5ncyBmb3IgYWxsIGluc3RhbmNlcyBvZiB0aGUgZGF0ZSBwaWNrZXIuCgkgKiBAcGFyYW0gIHNldHRpbmdzICBvYmplY3QgLSB0aGUgbmV3IHNldHRpbmdzIHRvIHVzZSBhcyBkZWZhdWx0cyAoYW5vbnltb3VzIG9iamVjdCkKCSAqIEByZXR1cm4gdGhlIG1hbmFnZXIgb2JqZWN0CgkgKi8KCXNldERlZmF1bHRzOiBmdW5jdGlvbiggc2V0dGluZ3MgKSB7CgkJZGF0ZXBpY2tlcl9leHRlbmRSZW1vdmUoIHRoaXMuX2RlZmF1bHRzLCBzZXR0aW5ncyB8fCB7fSApOwoJCXJldHVybiB0aGlzOwoJfSwKCgkvKiBBdHRhY2ggdGhlIGRhdGUgcGlja2VyIHRvIGEgalF1ZXJ5IHNlbGVjdGlvbi4KCSAqIEBwYXJhbSAgdGFyZ2V0CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAqIEBwYXJhbSAgc2V0dGluZ3MgIG9iamVjdCAtIHRoZSBuZXcgc2V0dGluZ3MgdG8gdXNlIGZvciB0aGlzIGRhdGUgcGlja2VyIGluc3RhbmNlIChhbm9ueW1vdXMpCgkgKi8KCV9hdHRhY2hEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHsKCQl2YXIgbm9kZU5hbWUsIGlubGluZSwgaW5zdDsKCQlub2RlTmFtZSA9IHRhcmdldC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpOwoJCWlubGluZSA9ICggbm9kZU5hbWUgPT09ICJkaXYiIHx8IG5vZGVOYW1lID09PSAic3BhbiIgKTsKCQlpZiAoICF0YXJnZXQuaWQgKSB7CgkJCXRoaXMudXVpZCArPSAxOwoJCQl0YXJnZXQuaWQgPSAiZHAiICsgdGhpcy51dWlkOwoJCX0KCQlpbnN0ID0gdGhpcy5fbmV3SW5zdCggJCggdGFyZ2V0ICksIGlubGluZSApOwoJCWluc3Quc2V0dGluZ3MgPSAkLmV4dGVuZCgge30sIHNldHRpbmdzIHx8IHt9ICk7CgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsKCQkJdGhpcy5fY29ubmVjdERhdGVwaWNrZXIoIHRhcmdldCwgaW5zdCApOwoJCX0gZWxzZSBpZiAoIGlubGluZSApIHsKCQkJdGhpcy5faW5saW5lRGF0ZXBpY2tlciggdGFyZ2V0LCBpbnN0ICk7CgkJfQoJfSwKCgkvKiBDcmVhdGUgYSBuZXcgaW5zdGFuY2Ugb2JqZWN0LiAqLwoJX25ld0luc3Q6IGZ1bmN0aW9uKCB0YXJnZXQsIGlubGluZSApIHsKCQl2YXIgaWQgPSB0YXJnZXRbIDAgXS5pZC5yZXBsYWNlKCAvKFteQS1aYS16MC05X1wtXSkvZywgIlxcXFwkMSIgKTsgLy8gZXNjYXBlIGpRdWVyeSBtZXRhIGNoYXJzCgkJcmV0dXJuIHsgaWQ6IGlkLCBpbnB1dDogdGFyZ2V0LCAvLyBhc3NvY2lhdGVkIHRhcmdldAoJCQlzZWxlY3RlZERheTogMCwgc2VsZWN0ZWRNb250aDogMCwgc2VsZWN0ZWRZZWFyOiAwLCAvLyBjdXJyZW50IHNlbGVjdGlvbgoJCQlkcmF3TW9udGg6IDAsIGRyYXdZZWFyOiAwLCAvLyBtb250aCBiZWluZyBkcmF3bgoJCQlpbmxpbmU6IGlubGluZSwgLy8gaXMgZGF0ZXBpY2tlciBpbmxpbmUgb3Igbm90CgkJCWRwRGl2OiAoICFpbmxpbmUgPyB0aGlzLmRwRGl2IDogLy8gcHJlc2VudGF0aW9uIGRpdgoJCQlkYXRlcGlja2VyX2JpbmRIb3ZlciggJCggIjxkaXYgY2xhc3M9JyIgKyB0aGlzLl9pbmxpbmVDbGFzcyArICIgdWktZGF0ZXBpY2tlciB1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4IHVpLWNvcm5lci1hbGwnPjwvZGl2PiIgKSApICkgfTsKCX0sCgoJLyogQXR0YWNoIHRoZSBkYXRlIHBpY2tlciB0byBhbiBpbnB1dCBmaWVsZC4gKi8KCV9jb25uZWN0RGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCwgaW5zdCApIHsKCQl2YXIgaW5wdXQgPSAkKCB0YXJnZXQgKTsKCQlpbnN0LmFwcGVuZCA9ICQoIFtdICk7CgkJaW5zdC50cmlnZ2VyID0gJCggW10gKTsKCQlpZiAoIGlucHV0Lmhhc0NsYXNzKCB0aGlzLm1hcmtlckNsYXNzTmFtZSApICkgewoJCQlyZXR1cm47CgkJfQoJCXRoaXMuX2F0dGFjaG1lbnRzKCBpbnB1dCwgaW5zdCApOwoJCWlucHV0LmFkZENsYXNzKCB0aGlzLm1hcmtlckNsYXNzTmFtZSApLm9uKCAia2V5ZG93biIsIHRoaXMuX2RvS2V5RG93biApLgoJCQlvbiggImtleXByZXNzIiwgdGhpcy5fZG9LZXlQcmVzcyApLm9uKCAia2V5dXAiLCB0aGlzLl9kb0tleVVwICk7CgkJdGhpcy5fYXV0b1NpemUoIGluc3QgKTsKCQkkLmRhdGEoIHRhcmdldCwgImRhdGVwaWNrZXIiLCBpbnN0ICk7CgoJCS8vSWYgZGlzYWJsZWQgb3B0aW9uIGlzIHRydWUsIGRpc2FibGUgdGhlIGRhdGVwaWNrZXIgb25jZSBpdCBoYXMgYmVlbiBhdHRhY2hlZCB0byB0aGUgaW5wdXQgKHNlZSB0aWNrZXQgIzU2NjUpCgkJaWYgKCBpbnN0LnNldHRpbmdzLmRpc2FibGVkICkgewoJCQl0aGlzLl9kaXNhYmxlRGF0ZXBpY2tlciggdGFyZ2V0ICk7CgkJfQoJfSwKCgkvKiBNYWtlIGF0dGFjaG1lbnRzIGJhc2VkIG9uIHNldHRpbmdzLiAqLwoJX2F0dGFjaG1lbnRzOiBmdW5jdGlvbiggaW5wdXQsIGluc3QgKSB7CgkJdmFyIHNob3dPbiwgYnV0dG9uVGV4dCwgYnV0dG9uSW1hZ2UsCgkJCWFwcGVuZFRleHQgPSB0aGlzLl9nZXQoIGluc3QsICJhcHBlbmRUZXh0IiApLAoJCQlpc1JUTCA9IHRoaXMuX2dldCggaW5zdCwgImlzUlRMIiApOwoKCQlpZiAoIGluc3QuYXBwZW5kICkgewoJCQlpbnN0LmFwcGVuZC5yZW1vdmUoKTsKCQl9CgkJaWYgKCBhcHBlbmRUZXh0ICkgewoJCQlpbnN0LmFwcGVuZCA9ICQoICI8c3BhbiBjbGFzcz0nIiArIHRoaXMuX2FwcGVuZENsYXNzICsgIic+IiArIGFwcGVuZFRleHQgKyAiPC9zcGFuPiIgKTsKCQkJaW5wdXRbIGlzUlRMID8gImJlZm9yZSIgOiAiYWZ0ZXIiIF0oIGluc3QuYXBwZW5kICk7CgkJfQoKCQlpbnB1dC5vZmYoICJmb2N1cyIsIHRoaXMuX3Nob3dEYXRlcGlja2VyICk7CgoJCWlmICggaW5zdC50cmlnZ2VyICkgewoJCQlpbnN0LnRyaWdnZXIucmVtb3ZlKCk7CgkJfQoKCQlzaG93T24gPSB0aGlzLl9nZXQoIGluc3QsICJzaG93T24iICk7CgkJaWYgKCBzaG93T24gPT09ICJmb2N1cyIgfHwgc2hvd09uID09PSAiYm90aCIgKSB7IC8vIHBvcC11cCBkYXRlIHBpY2tlciB3aGVuIGluIHRoZSBtYXJrZWQgZmllbGQKCQkJaW5wdXQub24oICJmb2N1cyIsIHRoaXMuX3Nob3dEYXRlcGlja2VyICk7CgkJfQoJCWlmICggc2hvd09uID09PSAiYnV0dG9uIiB8fCBzaG93T24gPT09ICJib3RoIiApIHsgLy8gcG9wLXVwIGRhdGUgcGlja2VyIHdoZW4gYnV0dG9uIGNsaWNrZWQKCQkJYnV0dG9uVGV4dCA9IHRoaXMuX2dldCggaW5zdCwgImJ1dHRvblRleHQiICk7CgkJCWJ1dHRvbkltYWdlID0gdGhpcy5fZ2V0KCBpbnN0LCAiYnV0dG9uSW1hZ2UiICk7CgkJCWluc3QudHJpZ2dlciA9ICQoIHRoaXMuX2dldCggaW5zdCwgImJ1dHRvbkltYWdlT25seSIgKSA/CgkJCQkkKCAiPGltZy8+IiApLmFkZENsYXNzKCB0aGlzLl90cmlnZ2VyQ2xhc3MgKS4KCQkJCQlhdHRyKCB7IHNyYzogYnV0dG9uSW1hZ2UsIGFsdDogYnV0dG9uVGV4dCwgdGl0bGU6IGJ1dHRvblRleHQgfSApIDoKCQkJCSQoICI8YnV0dG9uIHR5cGU9J2J1dHRvbic+PC9idXR0b24+IiApLmFkZENsYXNzKCB0aGlzLl90cmlnZ2VyQ2xhc3MgKS4KCQkJCQlodG1sKCAhYnV0dG9uSW1hZ2UgPyBidXR0b25UZXh0IDogJCggIjxpbWcvPiIgKS5hdHRyKAoJCQkJCXsgc3JjOmJ1dHRvbkltYWdlLCBhbHQ6YnV0dG9uVGV4dCwgdGl0bGU6YnV0dG9uVGV4dCB9ICkgKSApOwoJCQlpbnB1dFsgaXNSVEwgPyAiYmVmb3JlIiA6ICJhZnRlciIgXSggaW5zdC50cmlnZ2VyICk7CgkJCWluc3QudHJpZ2dlci5vbiggImNsaWNrIiwgZnVuY3Rpb24oKSB7CgkJCQlpZiAoICQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgJiYgJC5kYXRlcGlja2VyLl9sYXN0SW5wdXQgPT09IGlucHV0WyAwIF0gKSB7CgkJCQkJJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpOwoJCQkJfSBlbHNlIGlmICggJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyAmJiAkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCAhPT0gaW5wdXRbIDAgXSApIHsKCQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7CgkJCQkJJC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlciggaW5wdXRbIDAgXSApOwoJCQkJfSBlbHNlIHsKCQkJCQkkLmRhdGVwaWNrZXIuX3Nob3dEYXRlcGlja2VyKCBpbnB1dFsgMCBdICk7CgkJCQl9CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0gKTsKCQl9Cgl9LAoKCS8qIEFwcGx5IHRoZSBtYXhpbXVtIGxlbmd0aCBmb3IgdGhlIGRhdGUgZm9ybWF0LiAqLwoJX2F1dG9TaXplOiBmdW5jdGlvbiggaW5zdCApIHsKCQlpZiAoIHRoaXMuX2dldCggaW5zdCwgImF1dG9TaXplIiApICYmICFpbnN0LmlubGluZSApIHsKCQkJdmFyIGZpbmRNYXgsIG1heCwgbWF4SSwgaSwKCQkJCWRhdGUgPSBuZXcgRGF0ZSggMjAwOSwgMTIgLSAxLCAyMCApLCAvLyBFbnN1cmUgZG91YmxlIGRpZ2l0cwoJCQkJZGF0ZUZvcm1hdCA9IHRoaXMuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICk7CgoJCQlpZiAoIGRhdGVGb3JtYXQubWF0Y2goIC9bRE1dLyApICkgewoJCQkJZmluZE1heCA9IGZ1bmN0aW9uKCBuYW1lcyApIHsKCQkJCQltYXggPSAwOwoJCQkJCW1heEkgPSAwOwoJCQkJCWZvciAoIGkgPSAwOyBpIDwgbmFtZXMubGVuZ3RoOyBpKysgKSB7CgkJCQkJCWlmICggbmFtZXNbIGkgXS5sZW5ndGggPiBtYXggKSB7CgkJCQkJCQltYXggPSBuYW1lc1sgaSBdLmxlbmd0aDsKCQkJCQkJCW1heEkgPSBpOwoJCQkJCQl9CgkJCQkJfQoJCQkJCXJldHVybiBtYXhJOwoJCQkJfTsKCQkJCWRhdGUuc2V0TW9udGgoIGZpbmRNYXgoIHRoaXMuX2dldCggaW5zdCwgKCBkYXRlRm9ybWF0Lm1hdGNoKCAvTU0vICkgPwoJCQkJCSJtb250aE5hbWVzIiA6ICJtb250aE5hbWVzU2hvcnQiICkgKSApICk7CgkJCQlkYXRlLnNldERhdGUoIGZpbmRNYXgoIHRoaXMuX2dldCggaW5zdCwgKCBkYXRlRm9ybWF0Lm1hdGNoKCAvREQvICkgPwoJCQkJCSJkYXlOYW1lcyIgOiAiZGF5TmFtZXNTaG9ydCIgKSApICkgKyAyMCAtIGRhdGUuZ2V0RGF5KCkgKTsKCQkJfQoJCQlpbnN0LmlucHV0LmF0dHIoICJzaXplIiwgdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgZGF0ZSApLmxlbmd0aCApOwoJCX0KCX0sCgoJLyogQXR0YWNoIGFuIGlubGluZSBkYXRlIHBpY2tlciB0byBhIGRpdi4gKi8KCV9pbmxpbmVEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0LCBpbnN0ICkgewoJCXZhciBkaXZTcGFuID0gJCggdGFyZ2V0ICk7CgkJaWYgKCBkaXZTcGFuLmhhc0NsYXNzKCB0aGlzLm1hcmtlckNsYXNzTmFtZSApICkgewoJCQlyZXR1cm47CgkJfQoJCWRpdlNwYW4uYWRkQ2xhc3MoIHRoaXMubWFya2VyQ2xhc3NOYW1lICkuYXBwZW5kKCBpbnN0LmRwRGl2ICk7CgkJJC5kYXRhKCB0YXJnZXQsICJkYXRlcGlja2VyIiwgaW5zdCApOwoJCXRoaXMuX3NldERhdGUoIGluc3QsIHRoaXMuX2dldERlZmF1bHREYXRlKCBpbnN0ICksIHRydWUgKTsKCQl0aGlzLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7CgkJdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKCBpbnN0ICk7CgoJCS8vSWYgZGlzYWJsZWQgb3B0aW9uIGlzIHRydWUsIGRpc2FibGUgdGhlIGRhdGVwaWNrZXIgYmVmb3JlIHNob3dpbmcgaXQgKHNlZSB0aWNrZXQgIzU2NjUpCgkJaWYgKCBpbnN0LnNldHRpbmdzLmRpc2FibGVkICkgewoJCQl0aGlzLl9kaXNhYmxlRGF0ZXBpY2tlciggdGFyZ2V0ICk7CgkJfQoKCQkvLyBTZXQgZGlzcGxheTpibG9jayBpbiBwbGFjZSBvZiBpbnN0LmRwRGl2LnNob3coKSB3aGljaCB3b24ndCB3b3JrIG9uIGRpc2Nvbm5lY3RlZCBlbGVtZW50cwoJCS8vIGh0dHA6Ly9idWdzLmpxdWVyeXVpLmNvbS90aWNrZXQvNzU1MiAtIEEgRGF0ZXBpY2tlciBjcmVhdGVkIG9uIGEgZGV0YWNoZWQgZGl2IGhhcyB6ZXJvIGhlaWdodAoJCWluc3QuZHBEaXYuY3NzKCAiZGlzcGxheSIsICJibG9jayIgKTsKCX0sCgoJLyogUG9wLXVwIHRoZSBkYXRlIHBpY2tlciBpbiBhICJkaWFsb2ciIGJveC4KCSAqIEBwYXJhbSAgaW5wdXQgZWxlbWVudCAtIGlnbm9yZWQKCSAqIEBwYXJhbSAgZGF0ZQlzdHJpbmcgb3IgRGF0ZSAtIHRoZSBpbml0aWFsIGRhdGUgdG8gZGlzcGxheQoJICogQHBhcmFtICBvblNlbGVjdCAgZnVuY3Rpb24gLSB0aGUgZnVuY3Rpb24gdG8gY2FsbCB3aGVuIGEgZGF0ZSBpcyBzZWxlY3RlZAoJICogQHBhcmFtICBzZXR0aW5ncyAgb2JqZWN0IC0gdXBkYXRlIHRoZSBkaWFsb2cgZGF0ZSBwaWNrZXIgaW5zdGFuY2UncyBzZXR0aW5ncyAoYW5vbnltb3VzIG9iamVjdCkKCSAqIEBwYXJhbSAgcG9zIGludFsyXSAtIGNvb3JkaW5hdGVzIGZvciB0aGUgZGlhbG9nJ3MgcG9zaXRpb24gd2l0aGluIHRoZSBzY3JlZW4gb3IKCSAqCQkJCQlldmVudCAtIHdpdGggeC95IGNvb3JkaW5hdGVzIG9yCgkgKgkJCQkJbGVhdmUgZW1wdHkgZm9yIGRlZmF1bHQgKHNjcmVlbiBjZW50cmUpCgkgKiBAcmV0dXJuIHRoZSBtYW5hZ2VyIG9iamVjdAoJICovCglfZGlhbG9nRGF0ZXBpY2tlcjogZnVuY3Rpb24oIGlucHV0LCBkYXRlLCBvblNlbGVjdCwgc2V0dGluZ3MsIHBvcyApIHsKCQl2YXIgaWQsIGJyb3dzZXJXaWR0aCwgYnJvd3NlckhlaWdodCwgc2Nyb2xsWCwgc2Nyb2xsWSwKCQkJaW5zdCA9IHRoaXMuX2RpYWxvZ0luc3Q7IC8vIGludGVybmFsIGluc3RhbmNlCgoJCWlmICggIWluc3QgKSB7CgkJCXRoaXMudXVpZCArPSAxOwoJCQlpZCA9ICJkcCIgKyB0aGlzLnV1aWQ7CgkJCXRoaXMuX2RpYWxvZ0lucHV0ID0gJCggIjxpbnB1dCB0eXBlPSd0ZXh0JyBpZD0nIiArIGlkICsKCQkJCSInIHN0eWxlPSdwb3NpdGlvbjogYWJzb2x1dGU7IHRvcDogLTEwMHB4OyB3aWR0aDogMHB4OycvPiIgKTsKCQkJdGhpcy5fZGlhbG9nSW5wdXQub24oICJrZXlkb3duIiwgdGhpcy5fZG9LZXlEb3duICk7CgkJCSQoICJib2R5IiApLmFwcGVuZCggdGhpcy5fZGlhbG9nSW5wdXQgKTsKCQkJaW5zdCA9IHRoaXMuX2RpYWxvZ0luc3QgPSB0aGlzLl9uZXdJbnN0KCB0aGlzLl9kaWFsb2dJbnB1dCwgZmFsc2UgKTsKCQkJaW5zdC5zZXR0aW5ncyA9IHt9OwoJCQkkLmRhdGEoIHRoaXMuX2RpYWxvZ0lucHV0WyAwIF0sICJkYXRlcGlja2VyIiwgaW5zdCApOwoJCX0KCQlkYXRlcGlja2VyX2V4dGVuZFJlbW92ZSggaW5zdC5zZXR0aW5ncywgc2V0dGluZ3MgfHwge30gKTsKCQlkYXRlID0gKCBkYXRlICYmIGRhdGUuY29uc3RydWN0b3IgPT09IERhdGUgPyB0aGlzLl9mb3JtYXREYXRlKCBpbnN0LCBkYXRlICkgOiBkYXRlICk7CgkJdGhpcy5fZGlhbG9nSW5wdXQudmFsKCBkYXRlICk7CgoJCXRoaXMuX3BvcyA9ICggcG9zID8gKCBwb3MubGVuZ3RoID8gcG9zIDogWyBwb3MucGFnZVgsIHBvcy5wYWdlWSBdICkgOiBudWxsICk7CgkJaWYgKCAhdGhpcy5fcG9zICkgewoJCQlicm93c2VyV2lkdGggPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg7CgkJCWJyb3dzZXJIZWlnaHQgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0OwoJCQlzY3JvbGxYID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbExlZnQgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0OwoJCQlzY3JvbGxZID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDsKCQkJdGhpcy5fcG9zID0gLy8gc2hvdWxkIHVzZSBhY3R1YWwgd2lkdGgvaGVpZ2h0IGJlbG93CgkJCQlbICggYnJvd3NlcldpZHRoIC8gMiApIC0gMTAwICsgc2Nyb2xsWCwgKCBicm93c2VySGVpZ2h0IC8gMiApIC0gMTUwICsgc2Nyb2xsWSBdOwoJCX0KCgkJLy8gTW92ZSBpbnB1dCBvbiBzY3JlZW4gZm9yIGZvY3VzLCBidXQgaGlkZGVuIGJlaGluZCBkaWFsb2cKCQl0aGlzLl9kaWFsb2dJbnB1dC5jc3MoICJsZWZ0IiwgKCB0aGlzLl9wb3NbIDAgXSArIDIwICkgKyAicHgiICkuY3NzKCAidG9wIiwgdGhpcy5fcG9zWyAxIF0gKyAicHgiICk7CgkJaW5zdC5zZXR0aW5ncy5vblNlbGVjdCA9IG9uU2VsZWN0OwoJCXRoaXMuX2luRGlhbG9nID0gdHJ1ZTsKCQl0aGlzLmRwRGl2LmFkZENsYXNzKCB0aGlzLl9kaWFsb2dDbGFzcyApOwoJCXRoaXMuX3Nob3dEYXRlcGlja2VyKCB0aGlzLl9kaWFsb2dJbnB1dFsgMCBdICk7CgkJaWYgKCAkLmJsb2NrVUkgKSB7CgkJCSQuYmxvY2tVSSggdGhpcy5kcERpdiApOwoJCX0KCQkkLmRhdGEoIHRoaXMuX2RpYWxvZ0lucHV0WyAwIF0sICJkYXRlcGlja2VyIiwgaW5zdCApOwoJCXJldHVybiB0aGlzOwoJfSwKCgkvKiBEZXRhY2ggYSBkYXRlcGlja2VyIGZyb20gaXRzIGNvbnRyb2wuCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuCgkgKi8KCV9kZXN0cm95RGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCApIHsKCQl2YXIgbm9kZU5hbWUsCgkJCSR0YXJnZXQgPSAkKCB0YXJnZXQgKSwKCQkJaW5zdCA9ICQuZGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tlciIgKTsKCgkJaWYgKCAhJHRhcmdldC5oYXNDbGFzcyggdGhpcy5tYXJrZXJDbGFzc05hbWUgKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQkkLnJlbW92ZURhdGEoIHRhcmdldCwgImRhdGVwaWNrZXIiICk7CgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsKCQkJaW5zdC5hcHBlbmQucmVtb3ZlKCk7CgkJCWluc3QudHJpZ2dlci5yZW1vdmUoKTsKCQkJJHRhcmdldC5yZW1vdmVDbGFzcyggdGhpcy5tYXJrZXJDbGFzc05hbWUgKS4KCQkJCW9mZiggImZvY3VzIiwgdGhpcy5fc2hvd0RhdGVwaWNrZXIgKS4KCQkJCW9mZiggImtleWRvd24iLCB0aGlzLl9kb0tleURvd24gKS4KCQkJCW9mZiggImtleXByZXNzIiwgdGhpcy5fZG9LZXlQcmVzcyApLgoJCQkJb2ZmKCAia2V5dXAiLCB0aGlzLl9kb0tleVVwICk7CgkJfSBlbHNlIGlmICggbm9kZU5hbWUgPT09ICJkaXYiIHx8IG5vZGVOYW1lID09PSAic3BhbiIgKSB7CgkJCSR0YXJnZXQucmVtb3ZlQ2xhc3MoIHRoaXMubWFya2VyQ2xhc3NOYW1lICkuZW1wdHkoKTsKCQl9CgoJCWlmICggZGF0ZXBpY2tlcl9pbnN0QWN0aXZlID09PSBpbnN0ICkgewoJCQlkYXRlcGlja2VyX2luc3RBY3RpdmUgPSBudWxsOwoJCX0KCX0sCgoJLyogRW5hYmxlIHRoZSBkYXRlIHBpY2tlciB0byBhIGpRdWVyeSBzZWxlY3Rpb24uCgkgKiBAcGFyYW0gIHRhcmdldAllbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuCgkgKi8KCV9lbmFibGVEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0ICkgewoJCXZhciBub2RlTmFtZSwgaW5saW5lLAoJCQkkdGFyZ2V0ID0gJCggdGFyZ2V0ICksCgkJCWluc3QgPSAkLmRhdGEoIHRhcmdldCwgImRhdGVwaWNrZXIiICk7CgoJCWlmICggISR0YXJnZXQuaGFzQ2xhc3MoIHRoaXMubWFya2VyQ2xhc3NOYW1lICkgKSB7CgkJCXJldHVybjsKCQl9CgoJCW5vZGVOYW1lID0gdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7CgkJaWYgKCBub2RlTmFtZSA9PT0gImlucHV0IiApIHsKCQkJdGFyZ2V0LmRpc2FibGVkID0gZmFsc2U7CgkJCWluc3QudHJpZ2dlci5maWx0ZXIoICJidXR0b24iICkuCgkJCQllYWNoKCBmdW5jdGlvbigpIHsgdGhpcy5kaXNhYmxlZCA9IGZhbHNlOyB9ICkuZW5kKCkuCgkJCQlmaWx0ZXIoICJpbWciICkuY3NzKCB7IG9wYWNpdHk6ICIxLjAiLCBjdXJzb3I6ICIiIH0gKTsKCQl9IGVsc2UgaWYgKCBub2RlTmFtZSA9PT0gImRpdiIgfHwgbm9kZU5hbWUgPT09ICJzcGFuIiApIHsKCQkJaW5saW5lID0gJHRhcmdldC5jaGlsZHJlbiggIi4iICsgdGhpcy5faW5saW5lQ2xhc3MgKTsKCQkJaW5saW5lLmNoaWxkcmVuKCkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIgKTsKCQkJaW5saW5lLmZpbmQoICJzZWxlY3QudWktZGF0ZXBpY2tlci1tb250aCwgc2VsZWN0LnVpLWRhdGVwaWNrZXIteWVhciIgKS4KCQkJCXByb3AoICJkaXNhYmxlZCIsIGZhbHNlICk7CgkJfQoJCXRoaXMuX2Rpc2FibGVkSW5wdXRzID0gJC5tYXAoIHRoaXMuX2Rpc2FibGVkSW5wdXRzLAoJCQlmdW5jdGlvbiggdmFsdWUgKSB7IHJldHVybiAoIHZhbHVlID09PSB0YXJnZXQgPyBudWxsIDogdmFsdWUgKTsgfSApOyAvLyBkZWxldGUgZW50cnkKCX0sCgoJLyogRGlzYWJsZSB0aGUgZGF0ZSBwaWNrZXIgdG8gYSBqUXVlcnkgc2VsZWN0aW9uLgoJICogQHBhcmFtICB0YXJnZXQJZWxlbWVudCAtIHRoZSB0YXJnZXQgaW5wdXQgZmllbGQgb3IgZGl2aXNpb24gb3Igc3BhbgoJICovCglfZGlzYWJsZURhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7CgkJdmFyIG5vZGVOYW1lLCBpbmxpbmUsCgkJCSR0YXJnZXQgPSAkKCB0YXJnZXQgKSwKCQkJaW5zdCA9ICQuZGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tlciIgKTsKCgkJaWYgKCAhJHRhcmdldC5oYXNDbGFzcyggdGhpcy5tYXJrZXJDbGFzc05hbWUgKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJbm9kZU5hbWUgPSB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKTsKCQlpZiAoIG5vZGVOYW1lID09PSAiaW5wdXQiICkgewoJCQl0YXJnZXQuZGlzYWJsZWQgPSB0cnVlOwoJCQlpbnN0LnRyaWdnZXIuZmlsdGVyKCAiYnV0dG9uIiApLgoJCQkJZWFjaCggZnVuY3Rpb24oKSB7IHRoaXMuZGlzYWJsZWQgPSB0cnVlOyB9ICkuZW5kKCkuCgkJCQlmaWx0ZXIoICJpbWciICkuY3NzKCB7IG9wYWNpdHk6ICIwLjUiLCBjdXJzb3I6ICJkZWZhdWx0IiB9ICk7CgkJfSBlbHNlIGlmICggbm9kZU5hbWUgPT09ICJkaXYiIHx8IG5vZGVOYW1lID09PSAic3BhbiIgKSB7CgkJCWlubGluZSA9ICR0YXJnZXQuY2hpbGRyZW4oICIuIiArIHRoaXMuX2lubGluZUNsYXNzICk7CgkJCWlubGluZS5jaGlsZHJlbigpLmFkZENsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICk7CgkJCWlubGluZS5maW5kKCAic2VsZWN0LnVpLWRhdGVwaWNrZXItbW9udGgsIHNlbGVjdC51aS1kYXRlcGlja2VyLXllYXIiICkuCgkJCQlwcm9wKCAiZGlzYWJsZWQiLCB0cnVlICk7CgkJfQoJCXRoaXMuX2Rpc2FibGVkSW5wdXRzID0gJC5tYXAoIHRoaXMuX2Rpc2FibGVkSW5wdXRzLAoJCQlmdW5jdGlvbiggdmFsdWUgKSB7IHJldHVybiAoIHZhbHVlID09PSB0YXJnZXQgPyBudWxsIDogdmFsdWUgKTsgfSApOyAvLyBkZWxldGUgZW50cnkKCQl0aGlzLl9kaXNhYmxlZElucHV0c1sgdGhpcy5fZGlzYWJsZWRJbnB1dHMubGVuZ3RoIF0gPSB0YXJnZXQ7Cgl9LAoKCS8qIElzIHRoZSBmaXJzdCBmaWVsZCBpbiBhIGpRdWVyeSBjb2xsZWN0aW9uIGRpc2FibGVkIGFzIGEgZGF0ZXBpY2tlcj8KCSAqIEBwYXJhbSAgdGFyZ2V0CWVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAqIEByZXR1cm4gYm9vbGVhbiAtIHRydWUgaWYgZGlzYWJsZWQsIGZhbHNlIGlmIGVuYWJsZWQKCSAqLwoJX2lzRGlzYWJsZWREYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0ICkgewoJCWlmICggIXRhcmdldCApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQlmb3IgKCB2YXIgaSA9IDA7IGkgPCB0aGlzLl9kaXNhYmxlZElucHV0cy5sZW5ndGg7IGkrKyApIHsKCQkJaWYgKCB0aGlzLl9kaXNhYmxlZElucHV0c1sgaSBdID09PSB0YXJnZXQgKSB7CgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfQoJCX0KCQlyZXR1cm4gZmFsc2U7Cgl9LAoKCS8qIFJldHJpZXZlIHRoZSBpbnN0YW5jZSBkYXRhIGZvciB0aGUgdGFyZ2V0IGNvbnRyb2wuCgkgKiBAcGFyYW0gIHRhcmdldCAgZWxlbWVudCAtIHRoZSB0YXJnZXQgaW5wdXQgZmllbGQgb3IgZGl2aXNpb24gb3Igc3BhbgoJICogQHJldHVybiAgb2JqZWN0IC0gdGhlIGFzc29jaWF0ZWQgaW5zdGFuY2UgZGF0YQoJICogQHRocm93cyAgZXJyb3IgaWYgYSBqUXVlcnkgcHJvYmxlbSBnZXR0aW5nIGRhdGEKCSAqLwoJX2dldEluc3Q6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7CgkJdHJ5IHsKCQkJcmV0dXJuICQuZGF0YSggdGFyZ2V0LCAiZGF0ZXBpY2tlciIgKTsKCQl9CgkJY2F0Y2ggKCBlcnIgKSB7CgkJCXRocm93ICJNaXNzaW5nIGluc3RhbmNlIGRhdGEgZm9yIHRoaXMgZGF0ZXBpY2tlciI7CgkJfQoJfSwKCgkvKiBVcGRhdGUgb3IgcmV0cmlldmUgdGhlIHNldHRpbmdzIGZvciBhIGRhdGUgcGlja2VyIGF0dGFjaGVkIHRvIGFuIGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uLgoJICogQHBhcmFtICB0YXJnZXQgIGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAqIEBwYXJhbSAgbmFtZQlvYmplY3QgLSB0aGUgbmV3IHNldHRpbmdzIHRvIHVwZGF0ZSBvcgoJICoJCQkJc3RyaW5nIC0gdGhlIG5hbWUgb2YgdGhlIHNldHRpbmcgdG8gY2hhbmdlIG9yIHJldHJpZXZlLAoJICoJCQkJd2hlbiByZXRyaWV2aW5nIGFsc28gImFsbCIgZm9yIGFsbCBpbnN0YW5jZSBzZXR0aW5ncyBvcgoJICoJCQkJImRlZmF1bHRzIiBmb3IgYWxsIGdsb2JhbCBkZWZhdWx0cwoJICogQHBhcmFtICB2YWx1ZSAgIGFueSAtIHRoZSBuZXcgdmFsdWUgZm9yIHRoZSBzZXR0aW5nCgkgKgkJCQkob21pdCBpZiBhYm92ZSBpcyBhbiBvYmplY3Qgb3IgdG8gcmV0cmlldmUgYSB2YWx1ZSkKCSAqLwoJX29wdGlvbkRhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQsIG5hbWUsIHZhbHVlICkgewoJCXZhciBzZXR0aW5ncywgZGF0ZSwgbWluRGF0ZSwgbWF4RGF0ZSwKCQkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldCApOwoKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT09IDIgJiYgdHlwZW9mIG5hbWUgPT09ICJzdHJpbmciICkgewoJCQlyZXR1cm4gKCBuYW1lID09PSAiZGVmYXVsdHMiID8gJC5leHRlbmQoIHt9LCAkLmRhdGVwaWNrZXIuX2RlZmF1bHRzICkgOgoJCQkJKCBpbnN0ID8gKCBuYW1lID09PSAiYWxsIiA/ICQuZXh0ZW5kKCB7fSwgaW5zdC5zZXR0aW5ncyApIDoKCQkJCXRoaXMuX2dldCggaW5zdCwgbmFtZSApICkgOiBudWxsICkgKTsKCQl9CgoJCXNldHRpbmdzID0gbmFtZSB8fCB7fTsKCQlpZiAoIHR5cGVvZiBuYW1lID09PSAic3RyaW5nIiApIHsKCQkJc2V0dGluZ3MgPSB7fTsKCQkJc2V0dGluZ3NbIG5hbWUgXSA9IHZhbHVlOwoJCX0KCgkJaWYgKCBpbnN0ICkgewoJCQlpZiAoIHRoaXMuX2N1ckluc3QgPT09IGluc3QgKSB7CgkJCQl0aGlzLl9oaWRlRGF0ZXBpY2tlcigpOwoJCQl9CgoJCQlkYXRlID0gdGhpcy5fZ2V0RGF0ZURhdGVwaWNrZXIoIHRhcmdldCwgdHJ1ZSApOwoJCQltaW5EYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSggaW5zdCwgIm1pbiIgKTsKCQkJbWF4RGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJtYXgiICk7CgkJCWRhdGVwaWNrZXJfZXh0ZW5kUmVtb3ZlKCBpbnN0LnNldHRpbmdzLCBzZXR0aW5ncyApOwoKCQkJLy8gcmVmb3JtYXQgdGhlIG9sZCBtaW5EYXRlL21heERhdGUgdmFsdWVzIGlmIGRhdGVGb3JtYXQgY2hhbmdlcyBhbmQgYSBuZXcgbWluRGF0ZS9tYXhEYXRlIGlzbid0IHByb3ZpZGVkCgkJCWlmICggbWluRGF0ZSAhPT0gbnVsbCAmJiBzZXR0aW5ncy5kYXRlRm9ybWF0ICE9PSB1bmRlZmluZWQgJiYgc2V0dGluZ3MubWluRGF0ZSA9PT0gdW5kZWZpbmVkICkgewoJCQkJaW5zdC5zZXR0aW5ncy5taW5EYXRlID0gdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgbWluRGF0ZSApOwoJCQl9CgkJCWlmICggbWF4RGF0ZSAhPT0gbnVsbCAmJiBzZXR0aW5ncy5kYXRlRm9ybWF0ICE9PSB1bmRlZmluZWQgJiYgc2V0dGluZ3MubWF4RGF0ZSA9PT0gdW5kZWZpbmVkICkgewoJCQkJaW5zdC5zZXR0aW5ncy5tYXhEYXRlID0gdGhpcy5fZm9ybWF0RGF0ZSggaW5zdCwgbWF4RGF0ZSApOwoJCQl9CgkJCWlmICggImRpc2FibGVkIiBpbiBzZXR0aW5ncyApIHsKCQkJCWlmICggc2V0dGluZ3MuZGlzYWJsZWQgKSB7CgkJCQkJdGhpcy5fZGlzYWJsZURhdGVwaWNrZXIoIHRhcmdldCApOwoJCQkJfSBlbHNlIHsKCQkJCQl0aGlzLl9lbmFibGVEYXRlcGlja2VyKCB0YXJnZXQgKTsKCQkJCX0KCQkJfQoJCQl0aGlzLl9hdHRhY2htZW50cyggJCggdGFyZ2V0ICksIGluc3QgKTsKCQkJdGhpcy5fYXV0b1NpemUoIGluc3QgKTsKCQkJdGhpcy5fc2V0RGF0ZSggaW5zdCwgZGF0ZSApOwoJCQl0aGlzLl91cGRhdGVBbHRlcm5hdGUoIGluc3QgKTsKCQkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlciggaW5zdCApOwoJCX0KCX0sCgoJLy8gQ2hhbmdlIG1ldGhvZCBkZXByZWNhdGVkCglfY2hhbmdlRGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCwgbmFtZSwgdmFsdWUgKSB7CgkJdGhpcy5fb3B0aW9uRGF0ZXBpY2tlciggdGFyZ2V0LCBuYW1lLCB2YWx1ZSApOwoJfSwKCgkvKiBSZWRyYXcgdGhlIGRhdGUgcGlja2VyIGF0dGFjaGVkIHRvIGFuIGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uLgoJICogQHBhcmFtICB0YXJnZXQgIGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAqLwoJX3JlZnJlc2hEYXRlcGlja2VyOiBmdW5jdGlvbiggdGFyZ2V0ICkgewoJCXZhciBpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0ICk7CgkJaWYgKCBpbnN0ICkgewoJCQl0aGlzLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7CgkJfQoJfSwKCgkvKiBTZXQgdGhlIGRhdGVzIGZvciBhIGpRdWVyeSBzZWxlY3Rpb24uCgkgKiBAcGFyYW0gIHRhcmdldCBlbGVtZW50IC0gdGhlIHRhcmdldCBpbnB1dCBmaWVsZCBvciBkaXZpc2lvbiBvciBzcGFuCgkgKiBAcGFyYW0gIGRhdGUJRGF0ZSAtIHRoZSBuZXcgZGF0ZQoJICovCglfc2V0RGF0ZURhdGVwaWNrZXI6IGZ1bmN0aW9uKCB0YXJnZXQsIGRhdGUgKSB7CgkJdmFyIGluc3QgPSB0aGlzLl9nZXRJbnN0KCB0YXJnZXQgKTsKCQlpZiAoIGluc3QgKSB7CgkJCXRoaXMuX3NldERhdGUoIGluc3QsIGRhdGUgKTsKCQkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlciggaW5zdCApOwoJCQl0aGlzLl91cGRhdGVBbHRlcm5hdGUoIGluc3QgKTsKCQl9Cgl9LAoKCS8qIEdldCB0aGUgZGF0ZShzKSBmb3IgdGhlIGZpcnN0IGVudHJ5IGluIGEgalF1ZXJ5IHNlbGVjdGlvbi4KCSAqIEBwYXJhbSAgdGFyZ2V0IGVsZW1lbnQgLSB0aGUgdGFyZ2V0IGlucHV0IGZpZWxkIG9yIGRpdmlzaW9uIG9yIHNwYW4KCSAqIEBwYXJhbSAgbm9EZWZhdWx0IGJvb2xlYW4gLSB0cnVlIGlmIG5vIGRlZmF1bHQgZGF0ZSBpcyB0byBiZSB1c2VkCgkgKiBAcmV0dXJuIERhdGUgLSB0aGUgY3VycmVudCBkYXRlCgkgKi8KCV9nZXREYXRlRGF0ZXBpY2tlcjogZnVuY3Rpb24oIHRhcmdldCwgbm9EZWZhdWx0ICkgewoJCXZhciBpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0ICk7CgkJaWYgKCBpbnN0ICYmICFpbnN0LmlubGluZSApIHsKCQkJdGhpcy5fc2V0RGF0ZUZyb21GaWVsZCggaW5zdCwgbm9EZWZhdWx0ICk7CgkJfQoJCXJldHVybiAoIGluc3QgPyB0aGlzLl9nZXREYXRlKCBpbnN0ICkgOiBudWxsICk7Cgl9LAoKCS8qIEhhbmRsZSBrZXlzdHJva2VzLiAqLwoJX2RvS2V5RG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBvblNlbGVjdCwgZGF0ZVN0ciwgc2VsLAoJCQlpbnN0ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KCBldmVudC50YXJnZXQgKSwKCQkJaGFuZGxlZCA9IHRydWUsCgkJCWlzUlRMID0gaW5zdC5kcERpdi5pcyggIi51aS1kYXRlcGlja2VyLXJ0bCIgKTsKCgkJaW5zdC5fa2V5RXZlbnQgPSB0cnVlOwoJCWlmICggJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyApIHsKCQkJc3dpdGNoICggZXZlbnQua2V5Q29kZSApIHsKCQkJCWNhc2UgOTogJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpOwoJCQkJCQloYW5kbGVkID0gZmFsc2U7CgkJCQkJCWJyZWFrOyAvLyBoaWRlIG9uIHRhYiBvdXQKCQkJCWNhc2UgMTM6IHNlbCA9ICQoICJ0ZC4iICsgJC5kYXRlcGlja2VyLl9kYXlPdmVyQ2xhc3MgKyAiOm5vdCguIiArCgkJCQkJCQkJCSQuZGF0ZXBpY2tlci5fY3VycmVudENsYXNzICsgIikiLCBpbnN0LmRwRGl2ICk7CgkJCQkJCWlmICggc2VsWyAwIF0gKSB7CgkJCQkJCQkkLmRhdGVwaWNrZXIuX3NlbGVjdERheSggZXZlbnQudGFyZ2V0LCBpbnN0LnNlbGVjdGVkTW9udGgsIGluc3Quc2VsZWN0ZWRZZWFyLCBzZWxbIDAgXSApOwoJCQkJCQl9CgoJCQkJCQlvblNlbGVjdCA9ICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAib25TZWxlY3QiICk7CgkJCQkJCWlmICggb25TZWxlY3QgKSB7CgkJCQkJCQlkYXRlU3RyID0gJC5kYXRlcGlja2VyLl9mb3JtYXREYXRlKCBpbnN0ICk7CgoJCQkJCQkJLy8gVHJpZ2dlciBjdXN0b20gY2FsbGJhY2sKCQkJCQkJCW9uU2VsZWN0LmFwcGx5KCAoIGluc3QuaW5wdXQgPyBpbnN0LmlucHV0WyAwIF0gOiBudWxsICksIFsgZGF0ZVN0ciwgaW5zdCBdICk7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQkkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7CgkJCQkJCX0KCgkJCQkJCXJldHVybiBmYWxzZTsgLy8gZG9uJ3Qgc3VibWl0IHRoZSBmb3JtCgkJCQljYXNlIDI3OiAkLmRhdGVwaWNrZXIuX2hpZGVEYXRlcGlja2VyKCk7CgkJCQkJCWJyZWFrOyAvLyBoaWRlIG9uIGVzY2FwZQoJCQkJY2FzZSAzMzogJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBldmVudC50YXJnZXQsICggZXZlbnQuY3RybEtleSA/CgkJCQkJCQktJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJzdGVwQmlnTW9udGhzIiApIDoKCQkJCQkJCS0kLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInN0ZXBNb250aHMiICkgKSwgIk0iICk7CgkJCQkJCWJyZWFrOyAvLyBwcmV2aW91cyBtb250aC95ZWFyIG9uIHBhZ2UgdXAvKyBjdHJsCgkJCQljYXNlIDM0OiAkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKCBldmVudC5jdHJsS2V5ID8KCQkJCQkJCSskLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInN0ZXBCaWdNb250aHMiICkgOgoJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIgKSApLCAiTSIgKTsKCQkJCQkJYnJlYWs7IC8vIG5leHQgbW9udGgveWVhciBvbiBwYWdlIGRvd24vKyBjdHJsCgkJCQljYXNlIDM1OiBpZiAoIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsKCQkJCQkJCSQuZGF0ZXBpY2tlci5fY2xlYXJEYXRlKCBldmVudC50YXJnZXQgKTsKCQkJCQkJfQoJCQkJCQloYW5kbGVkID0gZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5OwoJCQkJCQlicmVhazsgLy8gY2xlYXIgb24gY3RybCBvciBjb21tYW5kICtlbmQKCQkJCWNhc2UgMzY6IGlmICggZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5ICkgewoJCQkJCQkJJC5kYXRlcGlja2VyLl9nb3RvVG9kYXkoIGV2ZW50LnRhcmdldCApOwoJCQkJCQl9CgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7CgkJCQkJCWJyZWFrOyAvLyBjdXJyZW50IG9uIGN0cmwgb3IgY29tbWFuZCAraG9tZQoJCQkJY2FzZSAzNzogaWYgKCBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkgKSB7CgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgKCBpc1JUTCA/ICsxIDogLTEgKSwgIkQiICk7CgkJCQkJCX0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsKCgkJCQkJCS8vIC0xIGRheSBvbiBjdHJsIG9yIGNvbW1hbmQgK2xlZnQKCQkJCQkJaWYgKCBldmVudC5vcmlnaW5hbEV2ZW50LmFsdEtleSApIHsKCQkJCQkJCSQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZSggZXZlbnQudGFyZ2V0LCAoIGV2ZW50LmN0cmxLZXkgPwoJCQkJCQkJCS0kLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInN0ZXBCaWdNb250aHMiICkgOgoJCQkJCQkJCS0kLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInN0ZXBNb250aHMiICkgKSwgIk0iICk7CgkJCQkJCX0KCgkJCQkJCS8vIG5leHQgbW9udGgveWVhciBvbiBhbHQgK2xlZnQgb24gTWFjCgkJCQkJCWJyZWFrOwoJCQkJY2FzZSAzODogaWYgKCBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXkgKSB7CgkJCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGV2ZW50LnRhcmdldCwgLTcsICJEIiApOwoJCQkJCQl9CgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7CgkJCQkJCWJyZWFrOyAvLyAtMSB3ZWVrIG9uIGN0cmwgb3IgY29tbWFuZCArdXAKCQkJCWNhc2UgMzk6IGlmICggZXZlbnQuY3RybEtleSB8fCBldmVudC5tZXRhS2V5ICkgewoJCQkJCQkJJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBldmVudC50YXJnZXQsICggaXNSVEwgPyAtMSA6ICsxICksICJEIiApOwoJCQkJCQl9CgkJCQkJCWhhbmRsZWQgPSBldmVudC5jdHJsS2V5IHx8IGV2ZW50Lm1ldGFLZXk7CgoJCQkJCQkvLyArMSBkYXkgb24gY3RybCBvciBjb21tYW5kICtyaWdodAoJCQkJCQlpZiAoIGV2ZW50Lm9yaWdpbmFsRXZlbnQuYWx0S2V5ICkgewoJCQkJCQkJJC5kYXRlcGlja2VyLl9hZGp1c3REYXRlKCBldmVudC50YXJnZXQsICggZXZlbnQuY3RybEtleSA/CgkJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcEJpZ01vbnRocyIgKSA6CgkJCQkJCQkJKyQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIgKSApLCAiTSIgKTsKCQkJCQkJfQoKCQkJCQkJLy8gbmV4dCBtb250aC95ZWFyIG9uIGFsdCArcmlnaHQKCQkJCQkJYnJlYWs7CgkJCQljYXNlIDQwOiBpZiAoIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSApIHsKCQkJCQkJCSQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZSggZXZlbnQudGFyZ2V0LCArNywgIkQiICk7CgkJCQkJCX0KCQkJCQkJaGFuZGxlZCA9IGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleTsKCQkJCQkJYnJlYWs7IC8vICsxIHdlZWsgb24gY3RybCBvciBjb21tYW5kICtkb3duCgkJCQlkZWZhdWx0OiBoYW5kbGVkID0gZmFsc2U7CgkJCX0KCQl9IGVsc2UgaWYgKCBldmVudC5rZXlDb2RlID09PSAzNiAmJiBldmVudC5jdHJsS2V5ICkgeyAvLyBkaXNwbGF5IHRoZSBkYXRlIHBpY2tlciBvbiBjdHJsK2hvbWUKCQkJJC5kYXRlcGlja2VyLl9zaG93RGF0ZXBpY2tlciggdGhpcyApOwoJCX0gZWxzZSB7CgkJCWhhbmRsZWQgPSBmYWxzZTsKCQl9CgoJCWlmICggaGFuZGxlZCApIHsKCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CgkJfQoJfSwKCgkvKiBGaWx0ZXIgZW50ZXJlZCBjaGFyYWN0ZXJzIC0gYmFzZWQgb24gZGF0ZSBmb3JtYXQuICovCglfZG9LZXlQcmVzczogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBjaGFycywgY2hyLAoJCQlpbnN0ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KCBldmVudC50YXJnZXQgKTsKCgkJaWYgKCAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgImNvbnN0cmFpbklucHV0IiApICkgewoJCQljaGFycyA9ICQuZGF0ZXBpY2tlci5fcG9zc2libGVDaGFycyggJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJkYXRlRm9ybWF0IiApICk7CgkJCWNociA9IFN0cmluZy5mcm9tQ2hhckNvZGUoIGV2ZW50LmNoYXJDb2RlID09IG51bGwgPyBldmVudC5rZXlDb2RlIDogZXZlbnQuY2hhckNvZGUgKTsKCQkJcmV0dXJuIGV2ZW50LmN0cmxLZXkgfHwgZXZlbnQubWV0YUtleSB8fCAoIGNociA8ICIgIiB8fCAhY2hhcnMgfHwgY2hhcnMuaW5kZXhPZiggY2hyICkgPiAtMSApOwoJCX0KCX0sCgoJLyogU3luY2hyb25pc2UgbWFudWFsIGVudHJ5IGFuZCBmaWVsZC9hbHRlcm5hdGUgZmllbGQuICovCglfZG9LZXlVcDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBkYXRlLAoJCQlpbnN0ID0gJC5kYXRlcGlja2VyLl9nZXRJbnN0KCBldmVudC50YXJnZXQgKTsKCgkJaWYgKCBpbnN0LmlucHV0LnZhbCgpICE9PSBpbnN0Lmxhc3RWYWwgKSB7CgkJCXRyeSB7CgkJCQlkYXRlID0gJC5kYXRlcGlja2VyLnBhcnNlRGF0ZSggJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJkYXRlRm9ybWF0IiApLAoJCQkJCSggaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQudmFsKCkgOiBudWxsICksCgkJCQkJJC5kYXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApOwoKCQkJCWlmICggZGF0ZSApIHsgLy8gb25seSBpZiB2YWxpZAoJCQkJCSQuZGF0ZXBpY2tlci5fc2V0RGF0ZUZyb21GaWVsZCggaW5zdCApOwoJCQkJCSQuZGF0ZXBpY2tlci5fdXBkYXRlQWx0ZXJuYXRlKCBpbnN0ICk7CgkJCQkJJC5kYXRlcGlja2VyLl91cGRhdGVEYXRlcGlja2VyKCBpbnN0ICk7CgkJCQl9CgkJCX0KCQkJY2F0Y2ggKCBlcnIgKSB7CgkJCX0KCQl9CgkJcmV0dXJuIHRydWU7Cgl9LAoKCS8qIFBvcC11cCB0aGUgZGF0ZSBwaWNrZXIgZm9yIGEgZ2l2ZW4gaW5wdXQgZmllbGQuCgkgKiBJZiBmYWxzZSByZXR1cm5lZCBmcm9tIGJlZm9yZVNob3cgZXZlbnQgaGFuZGxlciBkbyBub3Qgc2hvdy4KCSAqIEBwYXJhbSAgaW5wdXQgIGVsZW1lbnQgLSB0aGUgaW5wdXQgZmllbGQgYXR0YWNoZWQgdG8gdGhlIGRhdGUgcGlja2VyIG9yCgkgKgkJCQkJZXZlbnQgLSBpZiB0cmlnZ2VyZWQgYnkgZm9jdXMKCSAqLwoJX3Nob3dEYXRlcGlja2VyOiBmdW5jdGlvbiggaW5wdXQgKSB7CgkJaW5wdXQgPSBpbnB1dC50YXJnZXQgfHwgaW5wdXQ7CgkJaWYgKCBpbnB1dC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAiaW5wdXQiICkgeyAvLyBmaW5kIGZyb20gYnV0dG9uL2ltYWdlIHRyaWdnZXIKCQkJaW5wdXQgPSAkKCAiaW5wdXQiLCBpbnB1dC5wYXJlbnROb2RlIClbIDAgXTsKCQl9CgoJCWlmICggJC5kYXRlcGlja2VyLl9pc0Rpc2FibGVkRGF0ZXBpY2tlciggaW5wdXQgKSB8fCAkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCA9PT0gaW5wdXQgKSB7IC8vIGFscmVhZHkgaGVyZQoJCQlyZXR1cm47CgkJfQoKCQl2YXIgaW5zdCwgYmVmb3JlU2hvdywgYmVmb3JlU2hvd1NldHRpbmdzLCBpc0ZpeGVkLAoJCQlvZmZzZXQsIHNob3dBbmltLCBkdXJhdGlvbjsKCgkJaW5zdCA9ICQuZGF0ZXBpY2tlci5fZ2V0SW5zdCggaW5wdXQgKTsKCQlpZiAoICQuZGF0ZXBpY2tlci5fY3VySW5zdCAmJiAkLmRhdGVwaWNrZXIuX2N1ckluc3QgIT09IGluc3QgKSB7CgkJCSQuZGF0ZXBpY2tlci5fY3VySW5zdC5kcERpdi5zdG9wKCB0cnVlLCB0cnVlICk7CgkJCWlmICggaW5zdCAmJiAkLmRhdGVwaWNrZXIuX2RhdGVwaWNrZXJTaG93aW5nICkgewoJCQkJJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlciggJC5kYXRlcGlja2VyLl9jdXJJbnN0LmlucHV0WyAwIF0gKTsKCQkJfQoJCX0KCgkJYmVmb3JlU2hvdyA9ICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAiYmVmb3JlU2hvdyIgKTsKCQliZWZvcmVTaG93U2V0dGluZ3MgPSBiZWZvcmVTaG93ID8gYmVmb3JlU2hvdy5hcHBseSggaW5wdXQsIFsgaW5wdXQsIGluc3QgXSApIDoge307CgkJaWYgKCBiZWZvcmVTaG93U2V0dGluZ3MgPT09IGZhbHNlICkgewoJCQlyZXR1cm47CgkJfQoJCWRhdGVwaWNrZXJfZXh0ZW5kUmVtb3ZlKCBpbnN0LnNldHRpbmdzLCBiZWZvcmVTaG93U2V0dGluZ3MgKTsKCgkJaW5zdC5sYXN0VmFsID0gbnVsbDsKCQkkLmRhdGVwaWNrZXIuX2xhc3RJbnB1dCA9IGlucHV0OwoJCSQuZGF0ZXBpY2tlci5fc2V0RGF0ZUZyb21GaWVsZCggaW5zdCApOwoKCQlpZiAoICQuZGF0ZXBpY2tlci5faW5EaWFsb2cgKSB7IC8vIGhpZGUgY3Vyc29yCgkJCWlucHV0LnZhbHVlID0gIiI7CgkJfQoJCWlmICggISQuZGF0ZXBpY2tlci5fcG9zICkgeyAvLyBwb3NpdGlvbiBiZWxvdyBpbnB1dAoJCQkkLmRhdGVwaWNrZXIuX3BvcyA9ICQuZGF0ZXBpY2tlci5fZmluZFBvcyggaW5wdXQgKTsKCQkJJC5kYXRlcGlja2VyLl9wb3NbIDEgXSArPSBpbnB1dC5vZmZzZXRIZWlnaHQ7IC8vIGFkZCB0aGUgaGVpZ2h0CgkJfQoKCQlpc0ZpeGVkID0gZmFsc2U7CgkJJCggaW5wdXQgKS5wYXJlbnRzKCkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCWlzRml4ZWQgfD0gJCggdGhpcyApLmNzcyggInBvc2l0aW9uIiApID09PSAiZml4ZWQiOwoJCQlyZXR1cm4gIWlzRml4ZWQ7CgkJfSApOwoKCQlvZmZzZXQgPSB7IGxlZnQ6ICQuZGF0ZXBpY2tlci5fcG9zWyAwIF0sIHRvcDogJC5kYXRlcGlja2VyLl9wb3NbIDEgXSB9OwoJCSQuZGF0ZXBpY2tlci5fcG9zID0gbnVsbDsKCgkJLy90byBhdm9pZCBmbGFzaGVzIG9uIEZpcmVmb3gKCQlpbnN0LmRwRGl2LmVtcHR5KCk7CgoJCS8vIGRldGVybWluZSBzaXppbmcgb2Zmc2NyZWVuCgkJaW5zdC5kcERpdi5jc3MoIHsgcG9zaXRpb246ICJhYnNvbHV0ZSIsIGRpc3BsYXk6ICJibG9jayIsIHRvcDogIi0xMDAwcHgiIH0gKTsKCQkkLmRhdGVwaWNrZXIuX3VwZGF0ZURhdGVwaWNrZXIoIGluc3QgKTsKCgkJLy8gZml4IHdpZHRoIGZvciBkeW5hbWljIG51bWJlciBvZiBkYXRlIHBpY2tlcnMKCQkvLyBhbmQgYWRqdXN0IHBvc2l0aW9uIGJlZm9yZSBzaG93aW5nCgkJb2Zmc2V0ID0gJC5kYXRlcGlja2VyLl9jaGVja09mZnNldCggaW5zdCwgb2Zmc2V0LCBpc0ZpeGVkICk7CgkJaW5zdC5kcERpdi5jc3MoIHsgcG9zaXRpb246ICggJC5kYXRlcGlja2VyLl9pbkRpYWxvZyAmJiAkLmJsb2NrVUkgPwoJCQkic3RhdGljIiA6ICggaXNGaXhlZCA/ICJmaXhlZCIgOiAiYWJzb2x1dGUiICkgKSwgZGlzcGxheTogIm5vbmUiLAoJCQlsZWZ0OiBvZmZzZXQubGVmdCArICJweCIsIHRvcDogb2Zmc2V0LnRvcCArICJweCIgfSApOwoKCQlpZiAoICFpbnN0LmlubGluZSApIHsKCQkJc2hvd0FuaW0gPSAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgInNob3dBbmltIiApOwoJCQlkdXJhdGlvbiA9ICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAiZHVyYXRpb24iICk7CgkJCWluc3QuZHBEaXYuY3NzKCAiei1pbmRleCIsIGRhdGVwaWNrZXJfZ2V0WmluZGV4KCAkKCBpbnB1dCApICkgKyAxICk7CgkJCSQuZGF0ZXBpY2tlci5fZGF0ZXBpY2tlclNob3dpbmcgPSB0cnVlOwoKCQkJaWYgKCAkLmVmZmVjdHMgJiYgJC5lZmZlY3RzLmVmZmVjdFsgc2hvd0FuaW0gXSApIHsKCQkJCWluc3QuZHBEaXYuc2hvdyggc2hvd0FuaW0sICQuZGF0ZXBpY2tlci5fZ2V0KCBpbnN0LCAic2hvd09wdGlvbnMiICksIGR1cmF0aW9uICk7CgkJCX0gZWxzZSB7CgkJCQlpbnN0LmRwRGl2WyBzaG93QW5pbSB8fCAic2hvdyIgXSggc2hvd0FuaW0gPyBkdXJhdGlvbiA6IG51bGwgKTsKCQkJfQoKCQkJaWYgKCAkLmRhdGVwaWNrZXIuX3Nob3VsZEZvY3VzSW5wdXQoIGluc3QgKSApIHsKCQkJCWluc3QuaW5wdXQudHJpZ2dlciggImZvY3VzIiApOwoJCQl9CgoJCQkkLmRhdGVwaWNrZXIuX2N1ckluc3QgPSBpbnN0OwoJCX0KCX0sCgoJLyogR2VuZXJhdGUgdGhlIGRhdGUgcGlja2VyIGNvbnRlbnQuICovCglfdXBkYXRlRGF0ZXBpY2tlcjogZnVuY3Rpb24oIGluc3QgKSB7CgkJdGhpcy5tYXhSb3dzID0gNDsgLy9SZXNldCB0aGUgbWF4IG51bWJlciBvZiByb3dzIGJlaW5nIGRpc3BsYXllZCAoc2VlICM3MDQzKQoJCWRhdGVwaWNrZXJfaW5zdEFjdGl2ZSA9IGluc3Q7IC8vIGZvciBkZWxlZ2F0ZSBob3ZlciBldmVudHMKCQlpbnN0LmRwRGl2LmVtcHR5KCkuYXBwZW5kKCB0aGlzLl9nZW5lcmF0ZUhUTUwoIGluc3QgKSApOwoJCXRoaXMuX2F0dGFjaEhhbmRsZXJzKCBpbnN0ICk7CgoJCXZhciBvcmlneWVhcnNodG1sLAoJCQludW1Nb250aHMgPSB0aGlzLl9nZXROdW1iZXJPZk1vbnRocyggaW5zdCApLAoJCQljb2xzID0gbnVtTW9udGhzWyAxIF0sCgkJCXdpZHRoID0gMTcsCgkJCWFjdGl2ZUNlbGwgPSBpbnN0LmRwRGl2LmZpbmQoICIuIiArIHRoaXMuX2RheU92ZXJDbGFzcyArICIgYSIgKTsKCgkJaWYgKCBhY3RpdmVDZWxsLmxlbmd0aCA+IDAgKSB7CgkJCWRhdGVwaWNrZXJfaGFuZGxlTW91c2VvdmVyLmFwcGx5KCBhY3RpdmVDZWxsLmdldCggMCApICk7CgkJfQoKCQlpbnN0LmRwRGl2LnJlbW92ZUNsYXNzKCAidWktZGF0ZXBpY2tlci1tdWx0aS0yIHVpLWRhdGVwaWNrZXItbXVsdGktMyB1aS1kYXRlcGlja2VyLW11bHRpLTQiICkud2lkdGgoICIiICk7CgkJaWYgKCBjb2xzID4gMSApIHsKCQkJaW5zdC5kcERpdi5hZGRDbGFzcyggInVpLWRhdGVwaWNrZXItbXVsdGktIiArIGNvbHMgKS5jc3MoICJ3aWR0aCIsICggd2lkdGggKiBjb2xzICkgKyAiZW0iICk7CgkJfQoJCWluc3QuZHBEaXZbICggbnVtTW9udGhzWyAwIF0gIT09IDEgfHwgbnVtTW9udGhzWyAxIF0gIT09IDEgPyAiYWRkIiA6ICJyZW1vdmUiICkgKwoJCQkiQ2xhc3MiIF0oICJ1aS1kYXRlcGlja2VyLW11bHRpIiApOwoJCWluc3QuZHBEaXZbICggdGhpcy5fZ2V0KCBpbnN0LCAiaXNSVEwiICkgPyAiYWRkIiA6ICJyZW1vdmUiICkgKwoJCQkiQ2xhc3MiIF0oICJ1aS1kYXRlcGlja2VyLXJ0bCIgKTsKCgkJaWYgKCBpbnN0ID09PSAkLmRhdGVwaWNrZXIuX2N1ckluc3QgJiYgJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyAmJiAkLmRhdGVwaWNrZXIuX3Nob3VsZEZvY3VzSW5wdXQoIGluc3QgKSApIHsKCQkJaW5zdC5pbnB1dC50cmlnZ2VyKCAiZm9jdXMiICk7CgkJfQoKCQkvLyBEZWZmZXJlZCByZW5kZXIgb2YgdGhlIHllYXJzIHNlbGVjdCAodG8gYXZvaWQgZmxhc2hlcyBvbiBGaXJlZm94KQoJCWlmICggaW5zdC55ZWFyc2h0bWwgKSB7CgkJCW9yaWd5ZWFyc2h0bWwgPSBpbnN0LnllYXJzaHRtbDsKCQkJc2V0VGltZW91dCggZnVuY3Rpb24oKSB7CgoJCQkJLy9hc3N1cmUgdGhhdCBpbnN0LnllYXJzaHRtbCBkaWRuJ3QgY2hhbmdlLgoJCQkJaWYgKCBvcmlneWVhcnNodG1sID09PSBpbnN0LnllYXJzaHRtbCAmJiBpbnN0LnllYXJzaHRtbCApIHsKCQkJCQlpbnN0LmRwRGl2LmZpbmQoICJzZWxlY3QudWktZGF0ZXBpY2tlci15ZWFyOmZpcnN0IiApLnJlcGxhY2VXaXRoKCBpbnN0LnllYXJzaHRtbCApOwoJCQkJfQoJCQkJb3JpZ3llYXJzaHRtbCA9IGluc3QueWVhcnNodG1sID0gbnVsbDsKCQkJfSwgMCApOwoJCX0KCX0sCgoJLy8gIzY2OTQgLSBkb24ndCBmb2N1cyB0aGUgaW5wdXQgaWYgaXQncyBhbHJlYWR5IGZvY3VzZWQKCS8vIHRoaXMgYnJlYWtzIHRoZSBjaGFuZ2UgZXZlbnQgaW4gSUUKCS8vIFN1cHBvcnQ6IElFIGFuZCBqUXVlcnkgPDEuOQoJX3Nob3VsZEZvY3VzSW5wdXQ6IGZ1bmN0aW9uKCBpbnN0ICkgewoJCXJldHVybiBpbnN0LmlucHV0ICYmIGluc3QuaW5wdXQuaXMoICI6dmlzaWJsZSIgKSAmJiAhaW5zdC5pbnB1dC5pcyggIjpkaXNhYmxlZCIgKSAmJiAhaW5zdC5pbnB1dC5pcyggIjpmb2N1cyIgKTsKCX0sCgoJLyogQ2hlY2sgcG9zaXRpb25pbmcgdG8gcmVtYWluIG9uIHNjcmVlbi4gKi8KCV9jaGVja09mZnNldDogZnVuY3Rpb24oIGluc3QsIG9mZnNldCwgaXNGaXhlZCApIHsKCQl2YXIgZHBXaWR0aCA9IGluc3QuZHBEaXYub3V0ZXJXaWR0aCgpLAoJCQlkcEhlaWdodCA9IGluc3QuZHBEaXYub3V0ZXJIZWlnaHQoKSwKCQkJaW5wdXRXaWR0aCA9IGluc3QuaW5wdXQgPyBpbnN0LmlucHV0Lm91dGVyV2lkdGgoKSA6IDAsCgkJCWlucHV0SGVpZ2h0ID0gaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQub3V0ZXJIZWlnaHQoKSA6IDAsCgkJCXZpZXdXaWR0aCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aCArICggaXNGaXhlZCA/IDAgOiAkKCBkb2N1bWVudCApLnNjcm9sbExlZnQoKSApLAoJCQl2aWV3SGVpZ2h0ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodCArICggaXNGaXhlZCA/IDAgOiAkKCBkb2N1bWVudCApLnNjcm9sbFRvcCgpICk7CgoJCW9mZnNldC5sZWZ0IC09ICggdGhpcy5fZ2V0KCBpbnN0LCAiaXNSVEwiICkgPyAoIGRwV2lkdGggLSBpbnB1dFdpZHRoICkgOiAwICk7CgkJb2Zmc2V0LmxlZnQgLT0gKCBpc0ZpeGVkICYmIG9mZnNldC5sZWZ0ID09PSBpbnN0LmlucHV0Lm9mZnNldCgpLmxlZnQgKSA/ICQoIGRvY3VtZW50ICkuc2Nyb2xsTGVmdCgpIDogMDsKCQlvZmZzZXQudG9wIC09ICggaXNGaXhlZCAmJiBvZmZzZXQudG9wID09PSAoIGluc3QuaW5wdXQub2Zmc2V0KCkudG9wICsgaW5wdXRIZWlnaHQgKSApID8gJCggZG9jdW1lbnQgKS5zY3JvbGxUb3AoKSA6IDA7CgoJCS8vIE5vdyBjaGVjayBpZiBkYXRlcGlja2VyIGlzIHNob3dpbmcgb3V0c2lkZSB3aW5kb3cgdmlld3BvcnQgLSBtb3ZlIHRvIGEgYmV0dGVyIHBsYWNlIGlmIHNvLgoJCW9mZnNldC5sZWZ0IC09IE1hdGgubWluKCBvZmZzZXQubGVmdCwgKCBvZmZzZXQubGVmdCArIGRwV2lkdGggPiB2aWV3V2lkdGggJiYgdmlld1dpZHRoID4gZHBXaWR0aCApID8KCQkJTWF0aC5hYnMoIG9mZnNldC5sZWZ0ICsgZHBXaWR0aCAtIHZpZXdXaWR0aCApIDogMCApOwoJCW9mZnNldC50b3AgLT0gTWF0aC5taW4oIG9mZnNldC50b3AsICggb2Zmc2V0LnRvcCArIGRwSGVpZ2h0ID4gdmlld0hlaWdodCAmJiB2aWV3SGVpZ2h0ID4gZHBIZWlnaHQgKSA/CgkJCU1hdGguYWJzKCBkcEhlaWdodCArIGlucHV0SGVpZ2h0ICkgOiAwICk7CgoJCXJldHVybiBvZmZzZXQ7Cgl9LAoKCS8qIEZpbmQgYW4gb2JqZWN0J3MgcG9zaXRpb24gb24gdGhlIHNjcmVlbi4gKi8KCV9maW5kUG9zOiBmdW5jdGlvbiggb2JqICkgewoJCXZhciBwb3NpdGlvbiwKCQkJaW5zdCA9IHRoaXMuX2dldEluc3QoIG9iaiApLAoJCQlpc1JUTCA9IHRoaXMuX2dldCggaW5zdCwgImlzUlRMIiApOwoKCQl3aGlsZSAoIG9iaiAmJiAoIG9iai50eXBlID09PSAiaGlkZGVuIiB8fCBvYmoubm9kZVR5cGUgIT09IDEgfHwgJC5leHByLmZpbHRlcnMuaGlkZGVuKCBvYmogKSApICkgewoJCQlvYmogPSBvYmpbIGlzUlRMID8gInByZXZpb3VzU2libGluZyIgOiAibmV4dFNpYmxpbmciIF07CgkJfQoKCQlwb3NpdGlvbiA9ICQoIG9iaiApLm9mZnNldCgpOwoJCXJldHVybiBbIHBvc2l0aW9uLmxlZnQsIHBvc2l0aW9uLnRvcCBdOwoJfSwKCgkvKiBIaWRlIHRoZSBkYXRlIHBpY2tlciBmcm9tIHZpZXcuCgkgKiBAcGFyYW0gIGlucHV0ICBlbGVtZW50IC0gdGhlIGlucHV0IGZpZWxkIGF0dGFjaGVkIHRvIHRoZSBkYXRlIHBpY2tlcgoJICovCglfaGlkZURhdGVwaWNrZXI6IGZ1bmN0aW9uKCBpbnB1dCApIHsKCQl2YXIgc2hvd0FuaW0sIGR1cmF0aW9uLCBwb3N0UHJvY2Vzcywgb25DbG9zZSwKCQkJaW5zdCA9IHRoaXMuX2N1ckluc3Q7CgoJCWlmICggIWluc3QgfHwgKCBpbnB1dCAmJiBpbnN0ICE9PSAkLmRhdGEoIGlucHV0LCAiZGF0ZXBpY2tlciIgKSApICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIHRoaXMuX2RhdGVwaWNrZXJTaG93aW5nICkgewoJCQlzaG93QW5pbSA9IHRoaXMuX2dldCggaW5zdCwgInNob3dBbmltIiApOwoJCQlkdXJhdGlvbiA9IHRoaXMuX2dldCggaW5zdCwgImR1cmF0aW9uIiApOwoJCQlwb3N0UHJvY2VzcyA9IGZ1bmN0aW9uKCkgewoJCQkJJC5kYXRlcGlja2VyLl90aWR5RGlhbG9nKCBpbnN0ICk7CgkJCX07CgoJCQkvLyBERVBSRUNBVEVEOiBhZnRlciBCQyBmb3IgMS44LnggJC5lZmZlY3RzWyBzaG93QW5pbSBdIGlzIG5vdCBuZWVkZWQKCQkJaWYgKCAkLmVmZmVjdHMgJiYgKCAkLmVmZmVjdHMuZWZmZWN0WyBzaG93QW5pbSBdIHx8ICQuZWZmZWN0c1sgc2hvd0FuaW0gXSApICkgewoJCQkJaW5zdC5kcERpdi5oaWRlKCBzaG93QW5pbSwgJC5kYXRlcGlja2VyLl9nZXQoIGluc3QsICJzaG93T3B0aW9ucyIgKSwgZHVyYXRpb24sIHBvc3RQcm9jZXNzICk7CgkJCX0gZWxzZSB7CgkJCQlpbnN0LmRwRGl2WyAoIHNob3dBbmltID09PSAic2xpZGVEb3duIiA/ICJzbGlkZVVwIiA6CgkJCQkJKCBzaG93QW5pbSA9PT0gImZhZGVJbiIgPyAiZmFkZU91dCIgOiAiaGlkZSIgKSApIF0oICggc2hvd0FuaW0gPyBkdXJhdGlvbiA6IG51bGwgKSwgcG9zdFByb2Nlc3MgKTsKCQkJfQoKCQkJaWYgKCAhc2hvd0FuaW0gKSB7CgkJCQlwb3N0UHJvY2VzcygpOwoJCQl9CgkJCXRoaXMuX2RhdGVwaWNrZXJTaG93aW5nID0gZmFsc2U7CgoJCQlvbkNsb3NlID0gdGhpcy5fZ2V0KCBpbnN0LCAib25DbG9zZSIgKTsKCQkJaWYgKCBvbkNsb3NlICkgewoJCQkJb25DbG9zZS5hcHBseSggKCBpbnN0LmlucHV0ID8gaW5zdC5pbnB1dFsgMCBdIDogbnVsbCApLCBbICggaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQudmFsKCkgOiAiIiApLCBpbnN0IF0gKTsKCQkJfQoKCQkJdGhpcy5fbGFzdElucHV0ID0gbnVsbDsKCQkJaWYgKCB0aGlzLl9pbkRpYWxvZyApIHsKCQkJCXRoaXMuX2RpYWxvZ0lucHV0LmNzcyggeyBwb3NpdGlvbjogImFic29sdXRlIiwgbGVmdDogIjAiLCB0b3A6ICItMTAwcHgiIH0gKTsKCQkJCWlmICggJC5ibG9ja1VJICkgewoJCQkJCSQudW5ibG9ja1VJKCk7CgkJCQkJJCggImJvZHkiICkuYXBwZW5kKCB0aGlzLmRwRGl2ICk7CgkJCQl9CgkJCX0KCQkJdGhpcy5faW5EaWFsb2cgPSBmYWxzZTsKCQl9Cgl9LAoKCS8qIFRpZHkgdXAgYWZ0ZXIgYSBkaWFsb2cgZGlzcGxheS4gKi8KCV90aWR5RGlhbG9nOiBmdW5jdGlvbiggaW5zdCApIHsKCQlpbnN0LmRwRGl2LnJlbW92ZUNsYXNzKCB0aGlzLl9kaWFsb2dDbGFzcyApLm9mZiggIi51aS1kYXRlcGlja2VyLWNhbGVuZGFyIiApOwoJfSwKCgkvKiBDbG9zZSBkYXRlIHBpY2tlciBpZiBjbGlja2VkIGVsc2V3aGVyZS4gKi8KCV9jaGVja0V4dGVybmFsQ2xpY2s6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoICEkLmRhdGVwaWNrZXIuX2N1ckluc3QgKSB7CgkJCXJldHVybjsKCQl9CgoJCXZhciAkdGFyZ2V0ID0gJCggZXZlbnQudGFyZ2V0ICksCgkJCWluc3QgPSAkLmRhdGVwaWNrZXIuX2dldEluc3QoICR0YXJnZXRbIDAgXSApOwoKCQlpZiAoICggKCAkdGFyZ2V0WyAwIF0uaWQgIT09ICQuZGF0ZXBpY2tlci5fbWFpbkRpdklkICYmCgkJCQkkdGFyZ2V0LnBhcmVudHMoICIjIiArICQuZGF0ZXBpY2tlci5fbWFpbkRpdklkICkubGVuZ3RoID09PSAwICYmCgkJCQkhJHRhcmdldC5oYXNDbGFzcyggJC5kYXRlcGlja2VyLm1hcmtlckNsYXNzTmFtZSApICYmCgkJCQkhJHRhcmdldC5jbG9zZXN0KCAiLiIgKyAkLmRhdGVwaWNrZXIuX3RyaWdnZXJDbGFzcyApLmxlbmd0aCAmJgoJCQkJJC5kYXRlcGlja2VyLl9kYXRlcGlja2VyU2hvd2luZyAmJiAhKCAkLmRhdGVwaWNrZXIuX2luRGlhbG9nICYmICQuYmxvY2tVSSApICkgKSB8fAoJCQkoICR0YXJnZXQuaGFzQ2xhc3MoICQuZGF0ZXBpY2tlci5tYXJrZXJDbGFzc05hbWUgKSAmJiAkLmRhdGVwaWNrZXIuX2N1ckluc3QgIT09IGluc3QgKSApIHsKCQkJCSQuZGF0ZXBpY2tlci5faGlkZURhdGVwaWNrZXIoKTsKCQl9Cgl9LAoKCS8qIEFkanVzdCBvbmUgb2YgdGhlIGRhdGUgc3ViLWZpZWxkcy4gKi8KCV9hZGp1c3REYXRlOiBmdW5jdGlvbiggaWQsIG9mZnNldCwgcGVyaW9kICkgewoJCXZhciB0YXJnZXQgPSAkKCBpZCApLAoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0WyAwIF0gKTsKCgkJaWYgKCB0aGlzLl9pc0Rpc2FibGVkRGF0ZXBpY2tlciggdGFyZ2V0WyAwIF0gKSApIHsKCQkJcmV0dXJuOwoJCX0KCQl0aGlzLl9hZGp1c3RJbnN0RGF0ZSggaW5zdCwgb2Zmc2V0ICsKCQkJKCBwZXJpb2QgPT09ICJNIiA/IHRoaXMuX2dldCggaW5zdCwgInNob3dDdXJyZW50QXRQb3MiICkgOiAwICksIC8vIHVuZG8gcG9zaXRpb25pbmcKCQkJcGVyaW9kICk7CgkJdGhpcy5fdXBkYXRlRGF0ZXBpY2tlciggaW5zdCApOwoJfSwKCgkvKiBBY3Rpb24gZm9yIGN1cnJlbnQgbGluay4gKi8KCV9nb3RvVG9kYXk6IGZ1bmN0aW9uKCBpZCApIHsKCQl2YXIgZGF0ZSwKCQkJdGFyZ2V0ID0gJCggaWQgKSwKCQkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldFsgMCBdICk7CgoJCWlmICggdGhpcy5fZ2V0KCBpbnN0LCAiZ290b0N1cnJlbnQiICkgJiYgaW5zdC5jdXJyZW50RGF5ICkgewoJCQlpbnN0LnNlbGVjdGVkRGF5ID0gaW5zdC5jdXJyZW50RGF5OwoJCQlpbnN0LmRyYXdNb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCA9IGluc3QuY3VycmVudE1vbnRoOwoJCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBpbnN0LmN1cnJlbnRZZWFyOwoJCX0gZWxzZSB7CgkJCWRhdGUgPSBuZXcgRGF0ZSgpOwoJCQlpbnN0LnNlbGVjdGVkRGF5ID0gZGF0ZS5nZXREYXRlKCk7CgkJCWluc3QuZHJhd01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoID0gZGF0ZS5nZXRNb250aCgpOwoJCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CgkJfQoJCXRoaXMuX25vdGlmeUNoYW5nZSggaW5zdCApOwoJCXRoaXMuX2FkanVzdERhdGUoIHRhcmdldCApOwoJfSwKCgkvKiBBY3Rpb24gZm9yIHNlbGVjdGluZyBhIG5ldyBtb250aC95ZWFyLiAqLwoJX3NlbGVjdE1vbnRoWWVhcjogZnVuY3Rpb24oIGlkLCBzZWxlY3QsIHBlcmlvZCApIHsKCQl2YXIgdGFyZ2V0ID0gJCggaWQgKSwKCQkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldFsgMCBdICk7CgoJCWluc3RbICJzZWxlY3RlZCIgKyAoIHBlcmlvZCA9PT0gIk0iID8gIk1vbnRoIiA6ICJZZWFyIiApIF0gPQoJCWluc3RbICJkcmF3IiArICggcGVyaW9kID09PSAiTSIgPyAiTW9udGgiIDogIlllYXIiICkgXSA9CgkJCXBhcnNlSW50KCBzZWxlY3Qub3B0aW9uc1sgc2VsZWN0LnNlbGVjdGVkSW5kZXggXS52YWx1ZSwgMTAgKTsKCgkJdGhpcy5fbm90aWZ5Q2hhbmdlKCBpbnN0ICk7CgkJdGhpcy5fYWRqdXN0RGF0ZSggdGFyZ2V0ICk7Cgl9LAoKCS8qIEFjdGlvbiBmb3Igc2VsZWN0aW5nIGEgZGF5LiAqLwoJX3NlbGVjdERheTogZnVuY3Rpb24oIGlkLCBtb250aCwgeWVhciwgdGQgKSB7CgkJdmFyIGluc3QsCgkJCXRhcmdldCA9ICQoIGlkICk7CgoJCWlmICggJCggdGQgKS5oYXNDbGFzcyggdGhpcy5fdW5zZWxlY3RhYmxlQ2xhc3MgKSB8fCB0aGlzLl9pc0Rpc2FibGVkRGF0ZXBpY2tlciggdGFyZ2V0WyAwIF0gKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaW5zdCA9IHRoaXMuX2dldEluc3QoIHRhcmdldFsgMCBdICk7CgkJaW5zdC5zZWxlY3RlZERheSA9IGluc3QuY3VycmVudERheSA9ICQoICJhIiwgdGQgKS5odG1sKCk7CgkJaW5zdC5zZWxlY3RlZE1vbnRoID0gaW5zdC5jdXJyZW50TW9udGggPSBtb250aDsKCQlpbnN0LnNlbGVjdGVkWWVhciA9IGluc3QuY3VycmVudFllYXIgPSB5ZWFyOwoJCXRoaXMuX3NlbGVjdERhdGUoIGlkLCB0aGlzLl9mb3JtYXREYXRlKCBpbnN0LAoJCQlpbnN0LmN1cnJlbnREYXksIGluc3QuY3VycmVudE1vbnRoLCBpbnN0LmN1cnJlbnRZZWFyICkgKTsKCX0sCgoJLyogRXJhc2UgdGhlIGlucHV0IGZpZWxkIGFuZCBoaWRlIHRoZSBkYXRlIHBpY2tlci4gKi8KCV9jbGVhckRhdGU6IGZ1bmN0aW9uKCBpZCApIHsKCQl2YXIgdGFyZ2V0ID0gJCggaWQgKTsKCQl0aGlzLl9zZWxlY3REYXRlKCB0YXJnZXQsICIiICk7Cgl9LAoKCS8qIFVwZGF0ZSB0aGUgaW5wdXQgZmllbGQgd2l0aCB0aGUgc2VsZWN0ZWQgZGF0ZS4gKi8KCV9zZWxlY3REYXRlOiBmdW5jdGlvbiggaWQsIGRhdGVTdHIgKSB7CgkJdmFyIG9uU2VsZWN0LAoJCQl0YXJnZXQgPSAkKCBpZCApLAoJCQlpbnN0ID0gdGhpcy5fZ2V0SW5zdCggdGFyZ2V0WyAwIF0gKTsKCgkJZGF0ZVN0ciA9ICggZGF0ZVN0ciAhPSBudWxsID8gZGF0ZVN0ciA6IHRoaXMuX2Zvcm1hdERhdGUoIGluc3QgKSApOwoJCWlmICggaW5zdC5pbnB1dCApIHsKCQkJaW5zdC5pbnB1dC52YWwoIGRhdGVTdHIgKTsKCQl9CgkJdGhpcy5fdXBkYXRlQWx0ZXJuYXRlKCBpbnN0ICk7CgoJCW9uU2VsZWN0ID0gdGhpcy5fZ2V0KCBpbnN0LCAib25TZWxlY3QiICk7CgkJaWYgKCBvblNlbGVjdCApIHsKCQkJb25TZWxlY3QuYXBwbHkoICggaW5zdC5pbnB1dCA/IGluc3QuaW5wdXRbIDAgXSA6IG51bGwgKSwgWyBkYXRlU3RyLCBpbnN0IF0gKTsgIC8vIHRyaWdnZXIgY3VzdG9tIGNhbGxiYWNrCgkJfSBlbHNlIGlmICggaW5zdC5pbnB1dCApIHsKCQkJaW5zdC5pbnB1dC50cmlnZ2VyKCAiY2hhbmdlIiApOyAvLyBmaXJlIHRoZSBjaGFuZ2UgZXZlbnQKCQl9CgoJCWlmICggaW5zdC5pbmxpbmUgKSB7CgkJCXRoaXMuX3VwZGF0ZURhdGVwaWNrZXIoIGluc3QgKTsKCQl9IGVsc2UgewoJCQl0aGlzLl9oaWRlRGF0ZXBpY2tlcigpOwoJCQl0aGlzLl9sYXN0SW5wdXQgPSBpbnN0LmlucHV0WyAwIF07CgkJCWlmICggdHlwZW9mKCBpbnN0LmlucHV0WyAwIF0gKSAhPT0gIm9iamVjdCIgKSB7CgkJCQlpbnN0LmlucHV0LnRyaWdnZXIoICJmb2N1cyIgKTsgLy8gcmVzdG9yZSBmb2N1cwoJCQl9CgkJCXRoaXMuX2xhc3RJbnB1dCA9IG51bGw7CgkJfQoJfSwKCgkvKiBVcGRhdGUgYW55IGFsdGVybmF0ZSBmaWVsZCB0byBzeW5jaHJvbmlzZSB3aXRoIHRoZSBtYWluIGZpZWxkLiAqLwoJX3VwZGF0ZUFsdGVybmF0ZTogZnVuY3Rpb24oIGluc3QgKSB7CgkJdmFyIGFsdEZvcm1hdCwgZGF0ZSwgZGF0ZVN0ciwKCQkJYWx0RmllbGQgPSB0aGlzLl9nZXQoIGluc3QsICJhbHRGaWVsZCIgKTsKCgkJaWYgKCBhbHRGaWVsZCApIHsgLy8gdXBkYXRlIGFsdGVybmF0ZSBmaWVsZCB0b28KCQkJYWx0Rm9ybWF0ID0gdGhpcy5fZ2V0KCBpbnN0LCAiYWx0Rm9ybWF0IiApIHx8IHRoaXMuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICk7CgkJCWRhdGUgPSB0aGlzLl9nZXREYXRlKCBpbnN0ICk7CgkJCWRhdGVTdHIgPSB0aGlzLmZvcm1hdERhdGUoIGFsdEZvcm1hdCwgZGF0ZSwgdGhpcy5fZ2V0Rm9ybWF0Q29uZmlnKCBpbnN0ICkgKTsKCQkJJCggYWx0RmllbGQgKS52YWwoIGRhdGVTdHIgKTsKCQl9Cgl9LAoKCS8qIFNldCBhcyBiZWZvcmVTaG93RGF5IGZ1bmN0aW9uIHRvIHByZXZlbnQgc2VsZWN0aW9uIG9mIHdlZWtlbmRzLgoJICogQHBhcmFtICBkYXRlICBEYXRlIC0gdGhlIGRhdGUgdG8gY3VzdG9taXNlCgkgKiBAcmV0dXJuIFtib29sZWFuLCBzdHJpbmddIC0gaXMgdGhpcyBkYXRlIHNlbGVjdGFibGU/LCB3aGF0IGlzIGl0cyBDU1MgY2xhc3M/CgkgKi8KCW5vV2Vla2VuZHM6IGZ1bmN0aW9uKCBkYXRlICkgewoJCXZhciBkYXkgPSBkYXRlLmdldERheSgpOwoJCXJldHVybiBbICggZGF5ID4gMCAmJiBkYXkgPCA2ICksICIiIF07Cgl9LAoKCS8qIFNldCBhcyBjYWxjdWxhdGVXZWVrIHRvIGRldGVybWluZSB0aGUgd2VlayBvZiB0aGUgeWVhciBiYXNlZCBvbiB0aGUgSVNPIDg2MDEgZGVmaW5pdGlvbi4KCSAqIEBwYXJhbSAgZGF0ZSAgRGF0ZSAtIHRoZSBkYXRlIHRvIGdldCB0aGUgd2VlayBmb3IKCSAqIEByZXR1cm4gIG51bWJlciAtIHRoZSBudW1iZXIgb2YgdGhlIHdlZWsgd2l0aGluIHRoZSB5ZWFyIHRoYXQgY29udGFpbnMgdGhpcyBkYXRlCgkgKi8KCWlzbzg2MDFXZWVrOiBmdW5jdGlvbiggZGF0ZSApIHsKCQl2YXIgdGltZSwKCQkJY2hlY2tEYXRlID0gbmV3IERhdGUoIGRhdGUuZ2V0VGltZSgpICk7CgoJCS8vIEZpbmQgVGh1cnNkYXkgb2YgdGhpcyB3ZWVrIHN0YXJ0aW5nIG9uIE1vbmRheQoJCWNoZWNrRGF0ZS5zZXREYXRlKCBjaGVja0RhdGUuZ2V0RGF0ZSgpICsgNCAtICggY2hlY2tEYXRlLmdldERheSgpIHx8IDcgKSApOwoKCQl0aW1lID0gY2hlY2tEYXRlLmdldFRpbWUoKTsKCQljaGVja0RhdGUuc2V0TW9udGgoIDAgKTsgLy8gQ29tcGFyZSB3aXRoIEphbiAxCgkJY2hlY2tEYXRlLnNldERhdGUoIDEgKTsKCQlyZXR1cm4gTWF0aC5mbG9vciggTWF0aC5yb3VuZCggKCB0aW1lIC0gY2hlY2tEYXRlICkgLyA4NjQwMDAwMCApIC8gNyApICsgMTsKCX0sCgoJLyogUGFyc2UgYSBzdHJpbmcgdmFsdWUgaW50byBhIGRhdGUgb2JqZWN0LgoJICogU2VlIGZvcm1hdERhdGUgYmVsb3cgZm9yIHRoZSBwb3NzaWJsZSBmb3JtYXRzLgoJICoKCSAqIEBwYXJhbSAgZm9ybWF0IHN0cmluZyAtIHRoZSBleHBlY3RlZCBmb3JtYXQgb2YgdGhlIGRhdGUKCSAqIEBwYXJhbSAgdmFsdWUgc3RyaW5nIC0gdGhlIGRhdGUgaW4gdGhlIGFib3ZlIGZvcm1hdAoJICogQHBhcmFtICBzZXR0aW5ncyBPYmplY3QgLSBhdHRyaWJ1dGVzIGluY2x1ZGU6CgkgKgkJCQkJc2hvcnRZZWFyQ3V0b2ZmICBudW1iZXIgLSB0aGUgY3V0b2ZmIHllYXIgZm9yIGRldGVybWluaW5nIHRoZSBjZW50dXJ5IChvcHRpb25hbCkKCSAqCQkJCQlkYXlOYW1lc1Nob3J0CXN0cmluZ1s3XSAtIGFiYnJldmlhdGVkIG5hbWVzIG9mIHRoZSBkYXlzIGZyb20gU3VuZGF5IChvcHRpb25hbCkKCSAqCQkJCQlkYXlOYW1lcwkJc3RyaW5nWzddIC0gbmFtZXMgb2YgdGhlIGRheXMgZnJvbSBTdW5kYXkgKG9wdGlvbmFsKQoJICoJCQkJCW1vbnRoTmFtZXNTaG9ydCBzdHJpbmdbMTJdIC0gYWJicmV2aWF0ZWQgbmFtZXMgb2YgdGhlIG1vbnRocyAob3B0aW9uYWwpCgkgKgkJCQkJbW9udGhOYW1lcwkJc3RyaW5nWzEyXSAtIG5hbWVzIG9mIHRoZSBtb250aHMgKG9wdGlvbmFsKQoJICogQHJldHVybiAgRGF0ZSAtIHRoZSBleHRyYWN0ZWQgZGF0ZSB2YWx1ZSBvciBudWxsIGlmIHZhbHVlIGlzIGJsYW5rCgkgKi8KCXBhcnNlRGF0ZTogZnVuY3Rpb24oIGZvcm1hdCwgdmFsdWUsIHNldHRpbmdzICkgewoJCWlmICggZm9ybWF0ID09IG51bGwgfHwgdmFsdWUgPT0gbnVsbCApIHsKCQkJdGhyb3cgIkludmFsaWQgYXJndW1lbnRzIjsKCQl9CgoJCXZhbHVlID0gKCB0eXBlb2YgdmFsdWUgPT09ICJvYmplY3QiID8gdmFsdWUudG9TdHJpbmcoKSA6IHZhbHVlICsgIiIgKTsKCQlpZiAoIHZhbHVlID09PSAiIiApIHsKCQkJcmV0dXJuIG51bGw7CgkJfQoKCQl2YXIgaUZvcm1hdCwgZGltLCBleHRyYSwKCQkJaVZhbHVlID0gMCwKCQkJc2hvcnRZZWFyQ3V0b2ZmVGVtcCA9ICggc2V0dGluZ3MgPyBzZXR0aW5ncy5zaG9ydFllYXJDdXRvZmYgOiBudWxsICkgfHwgdGhpcy5fZGVmYXVsdHMuc2hvcnRZZWFyQ3V0b2ZmLAoJCQlzaG9ydFllYXJDdXRvZmYgPSAoIHR5cGVvZiBzaG9ydFllYXJDdXRvZmZUZW1wICE9PSAic3RyaW5nIiA/IHNob3J0WWVhckN1dG9mZlRlbXAgOgoJCQkJbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpICUgMTAwICsgcGFyc2VJbnQoIHNob3J0WWVhckN1dG9mZlRlbXAsIDEwICkgKSwKCQkJZGF5TmFtZXNTaG9ydCA9ICggc2V0dGluZ3MgPyBzZXR0aW5ncy5kYXlOYW1lc1Nob3J0IDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzU2hvcnQsCgkJCWRheU5hbWVzID0gKCBzZXR0aW5ncyA/IHNldHRpbmdzLmRheU5hbWVzIDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzLAoJCQltb250aE5hbWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lc1Nob3J0IDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXNTaG9ydCwKCQkJbW9udGhOYW1lcyA9ICggc2V0dGluZ3MgPyBzZXR0aW5ncy5tb250aE5hbWVzIDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXMsCgkJCXllYXIgPSAtMSwKCQkJbW9udGggPSAtMSwKCQkJZGF5ID0gLTEsCgkJCWRveSA9IC0xLAoJCQlsaXRlcmFsID0gZmFsc2UsCgkJCWRhdGUsCgoJCQkvLyBDaGVjayB3aGV0aGVyIGEgZm9ybWF0IGNoYXJhY3RlciBpcyBkb3VibGVkCgkJCWxvb2tBaGVhZCA9IGZ1bmN0aW9uKCBtYXRjaCApIHsKCQkJCXZhciBtYXRjaGVzID0gKCBpRm9ybWF0ICsgMSA8IGZvcm1hdC5sZW5ndGggJiYgZm9ybWF0LmNoYXJBdCggaUZvcm1hdCArIDEgKSA9PT0gbWF0Y2ggKTsKCQkJCWlmICggbWF0Y2hlcyApIHsKCQkJCQlpRm9ybWF0Kys7CgkJCQl9CgkJCQlyZXR1cm4gbWF0Y2hlczsKCQkJfSwKCgkJCS8vIEV4dHJhY3QgYSBudW1iZXIgZnJvbSB0aGUgc3RyaW5nIHZhbHVlCgkJCWdldE51bWJlciA9IGZ1bmN0aW9uKCBtYXRjaCApIHsKCQkJCXZhciBpc0RvdWJsZWQgPSBsb29rQWhlYWQoIG1hdGNoICksCgkJCQkJc2l6ZSA9ICggbWF0Y2ggPT09ICJAIiA/IDE0IDogKCBtYXRjaCA9PT0gIiEiID8gMjAgOgoJCQkJCSggbWF0Y2ggPT09ICJ5IiAmJiBpc0RvdWJsZWQgPyA0IDogKCBtYXRjaCA9PT0gIm8iID8gMyA6IDIgKSApICkgKSwKCQkJCQltaW5TaXplID0gKCBtYXRjaCA9PT0gInkiID8gc2l6ZSA6IDEgKSwKCQkJCQlkaWdpdHMgPSBuZXcgUmVnRXhwKCAiXlxcZHsiICsgbWluU2l6ZSArICIsIiArIHNpemUgKyAifSIgKSwKCQkJCQludW0gPSB2YWx1ZS5zdWJzdHJpbmcoIGlWYWx1ZSApLm1hdGNoKCBkaWdpdHMgKTsKCQkJCWlmICggIW51bSApIHsKCQkJCQl0aHJvdyAiTWlzc2luZyBudW1iZXIgYXQgcG9zaXRpb24gIiArIGlWYWx1ZTsKCQkJCX0KCQkJCWlWYWx1ZSArPSBudW1bIDAgXS5sZW5ndGg7CgkJCQlyZXR1cm4gcGFyc2VJbnQoIG51bVsgMCBdLCAxMCApOwoJCQl9LAoKCQkJLy8gRXh0cmFjdCBhIG5hbWUgZnJvbSB0aGUgc3RyaW5nIHZhbHVlIGFuZCBjb252ZXJ0IHRvIGFuIGluZGV4CgkJCWdldE5hbWUgPSBmdW5jdGlvbiggbWF0Y2gsIHNob3J0TmFtZXMsIGxvbmdOYW1lcyApIHsKCQkJCXZhciBpbmRleCA9IC0xLAoJCQkJCW5hbWVzID0gJC5tYXAoIGxvb2tBaGVhZCggbWF0Y2ggKSA/IGxvbmdOYW1lcyA6IHNob3J0TmFtZXMsIGZ1bmN0aW9uKCB2LCBrICkgewoJCQkJCQlyZXR1cm4gWyBbIGssIHYgXSBdOwoJCQkJCX0gKS5zb3J0KCBmdW5jdGlvbiggYSwgYiApIHsKCQkJCQkJcmV0dXJuIC0oIGFbIDEgXS5sZW5ndGggLSBiWyAxIF0ubGVuZ3RoICk7CgkJCQkJfSApOwoKCQkJCSQuZWFjaCggbmFtZXMsIGZ1bmN0aW9uKCBpLCBwYWlyICkgewoJCQkJCXZhciBuYW1lID0gcGFpclsgMSBdOwoJCQkJCWlmICggdmFsdWUuc3Vic3RyKCBpVmFsdWUsIG5hbWUubGVuZ3RoICkudG9Mb3dlckNhc2UoKSA9PT0gbmFtZS50b0xvd2VyQ2FzZSgpICkgewoJCQkJCQlpbmRleCA9IHBhaXJbIDAgXTsKCQkJCQkJaVZhbHVlICs9IG5hbWUubGVuZ3RoOwoJCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQkJfQoJCQkJfSApOwoJCQkJaWYgKCBpbmRleCAhPT0gLTEgKSB7CgkJCQkJcmV0dXJuIGluZGV4ICsgMTsKCQkJCX0gZWxzZSB7CgkJCQkJdGhyb3cgIlVua25vd24gbmFtZSBhdCBwb3NpdGlvbiAiICsgaVZhbHVlOwoJCQkJfQoJCQl9LAoKCQkJLy8gQ29uZmlybSB0aGF0IGEgbGl0ZXJhbCBjaGFyYWN0ZXIgbWF0Y2hlcyB0aGUgc3RyaW5nIHZhbHVlCgkJCWNoZWNrTGl0ZXJhbCA9IGZ1bmN0aW9uKCkgewoJCQkJaWYgKCB2YWx1ZS5jaGFyQXQoIGlWYWx1ZSApICE9PSBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgKSB7CgkJCQkJdGhyb3cgIlVuZXhwZWN0ZWQgbGl0ZXJhbCBhdCBwb3NpdGlvbiAiICsgaVZhbHVlOwoJCQkJfQoJCQkJaVZhbHVlKys7CgkJCX07CgoJCWZvciAoIGlGb3JtYXQgPSAwOyBpRm9ybWF0IDwgZm9ybWF0Lmxlbmd0aDsgaUZvcm1hdCsrICkgewoJCQlpZiAoIGxpdGVyYWwgKSB7CgkJCQlpZiAoIGZvcm1hdC5jaGFyQXQoIGlGb3JtYXQgKSA9PT0gIiciICYmICFsb29rQWhlYWQoICInIiApICkgewoJCQkJCWxpdGVyYWwgPSBmYWxzZTsKCQkJCX0gZWxzZSB7CgkJCQkJY2hlY2tMaXRlcmFsKCk7CgkJCQl9CgkJCX0gZWxzZSB7CgkJCQlzd2l0Y2ggKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgKSB7CgkJCQkJY2FzZSAiZCI6CgkJCQkJCWRheSA9IGdldE51bWJlciggImQiICk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIkQiOgoJCQkJCQlnZXROYW1lKCAiRCIsIGRheU5hbWVzU2hvcnQsIGRheU5hbWVzICk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIm8iOgoJCQkJCQlkb3kgPSBnZXROdW1iZXIoICJvIiApOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJtIjoKCQkJCQkJbW9udGggPSBnZXROdW1iZXIoICJtIiApOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJNIjoKCQkJCQkJbW9udGggPSBnZXROYW1lKCAiTSIsIG1vbnRoTmFtZXNTaG9ydCwgbW9udGhOYW1lcyApOwoJCQkJCQlicmVhazsKCQkJCQljYXNlICJ5IjoKCQkJCQkJeWVhciA9IGdldE51bWJlciggInkiICk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIkAiOgoJCQkJCQlkYXRlID0gbmV3IERhdGUoIGdldE51bWJlciggIkAiICkgKTsKCQkJCQkJeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTsKCQkJCQkJbW9udGggPSBkYXRlLmdldE1vbnRoKCkgKyAxOwoJCQkJCQlkYXkgPSBkYXRlLmdldERhdGUoKTsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiISI6CgkJCQkJCWRhdGUgPSBuZXcgRGF0ZSggKCBnZXROdW1iZXIoICIhIiApIC0gdGhpcy5fdGlja3NUbzE5NzAgKSAvIDEwMDAwICk7CgkJCQkJCXllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CgkJCQkJCW1vbnRoID0gZGF0ZS5nZXRNb250aCgpICsgMTsKCQkJCQkJZGF5ID0gZGF0ZS5nZXREYXRlKCk7CgkJCQkJCWJyZWFrOwoJCQkJCWNhc2UgIiciOgoJCQkJCQlpZiAoIGxvb2tBaGVhZCggIiciICkgKSB7CgkJCQkJCQljaGVja0xpdGVyYWwoKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWxpdGVyYWwgPSB0cnVlOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWRlZmF1bHQ6CgkJCQkJCWNoZWNrTGl0ZXJhbCgpOwoJCQkJfQoJCQl9CgkJfQoKCQlpZiAoIGlWYWx1ZSA8IHZhbHVlLmxlbmd0aCApIHsKCQkJZXh0cmEgPSB2YWx1ZS5zdWJzdHIoIGlWYWx1ZSApOwoJCQlpZiAoICEvXlxzKy8udGVzdCggZXh0cmEgKSApIHsKCQkJCXRocm93ICJFeHRyYS91bnBhcnNlZCBjaGFyYWN0ZXJzIGZvdW5kIGluIGRhdGU6ICIgKyBleHRyYTsKCQkJfQoJCX0KCgkJaWYgKCB5ZWFyID09PSAtMSApIHsKCQkJeWVhciA9IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTsKCQl9IGVsc2UgaWYgKCB5ZWFyIDwgMTAwICkgewoJCQl5ZWFyICs9IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSAtIG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKSAlIDEwMCArCgkJCQkoIHllYXIgPD0gc2hvcnRZZWFyQ3V0b2ZmID8gMCA6IC0xMDAgKTsKCQl9CgoJCWlmICggZG95ID4gLTEgKSB7CgkJCW1vbnRoID0gMTsKCQkJZGF5ID0gZG95OwoJCQlkbyB7CgkJCQlkaW0gPSB0aGlzLl9nZXREYXlzSW5Nb250aCggeWVhciwgbW9udGggLSAxICk7CgkJCQlpZiAoIGRheSA8PSBkaW0gKSB7CgkJCQkJYnJlYWs7CgkJCQl9CgkJCQltb250aCsrOwoJCQkJZGF5IC09IGRpbTsKCQkJfSB3aGlsZSAoIHRydWUgKTsKCQl9CgoJCWRhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIHllYXIsIG1vbnRoIC0gMSwgZGF5ICkgKTsKCQlpZiAoIGRhdGUuZ2V0RnVsbFllYXIoKSAhPT0geWVhciB8fCBkYXRlLmdldE1vbnRoKCkgKyAxICE9PSBtb250aCB8fCBkYXRlLmdldERhdGUoKSAhPT0gZGF5ICkgewoJCQl0aHJvdyAiSW52YWxpZCBkYXRlIjsgLy8gRS5nLiAzMS8wMi8wMAoJCX0KCQlyZXR1cm4gZGF0ZTsKCX0sCgoJLyogU3RhbmRhcmQgZGF0ZSBmb3JtYXRzLiAqLwoJQVRPTTogInl5LW1tLWRkIiwgLy8gUkZDIDMzMzkgKElTTyA4NjAxKQoJQ09PS0lFOiAiRCwgZGQgTSB5eSIsCglJU09fODYwMTogInl5LW1tLWRkIiwKCVJGQ184MjI6ICJELCBkIE0geSIsCglSRkNfODUwOiAiREQsIGRkLU0teSIsCglSRkNfMTAzNjogIkQsIGQgTSB5IiwKCVJGQ18xMTIzOiAiRCwgZCBNIHl5IiwKCVJGQ18yODIyOiAiRCwgZCBNIHl5IiwKCVJTUzogIkQsIGQgTSB5IiwgLy8gUkZDIDgyMgoJVElDS1M6ICIhIiwKCVRJTUVTVEFNUDogIkAiLAoJVzNDOiAieXktbW0tZGQiLCAvLyBJU08gODYwMQoKCV90aWNrc1RvMTk3MDogKCAoICggMTk3MCAtIDEgKSAqIDM2NSArIE1hdGguZmxvb3IoIDE5NzAgLyA0ICkgLSBNYXRoLmZsb29yKCAxOTcwIC8gMTAwICkgKwoJCU1hdGguZmxvb3IoIDE5NzAgLyA0MDAgKSApICogMjQgKiA2MCAqIDYwICogMTAwMDAwMDAgKSwKCgkvKiBGb3JtYXQgYSBkYXRlIG9iamVjdCBpbnRvIGEgc3RyaW5nIHZhbHVlLgoJICogVGhlIGZvcm1hdCBjYW4gYmUgY29tYmluYXRpb25zIG9mIHRoZSBmb2xsb3dpbmc6CgkgKiBkICAtIGRheSBvZiBtb250aCAobm8gbGVhZGluZyB6ZXJvKQoJICogZGQgLSBkYXkgb2YgbW9udGggKHR3byBkaWdpdCkKCSAqIG8gIC0gZGF5IG9mIHllYXIgKG5vIGxlYWRpbmcgemVyb3MpCgkgKiBvbyAtIGRheSBvZiB5ZWFyICh0aHJlZSBkaWdpdCkKCSAqIEQgIC0gZGF5IG5hbWUgc2hvcnQKCSAqIEREIC0gZGF5IG5hbWUgbG9uZwoJICogbSAgLSBtb250aCBvZiB5ZWFyIChubyBsZWFkaW5nIHplcm8pCgkgKiBtbSAtIG1vbnRoIG9mIHllYXIgKHR3byBkaWdpdCkKCSAqIE0gIC0gbW9udGggbmFtZSBzaG9ydAoJICogTU0gLSBtb250aCBuYW1lIGxvbmcKCSAqIHkgIC0geWVhciAodHdvIGRpZ2l0KQoJICogeXkgLSB5ZWFyIChmb3VyIGRpZ2l0KQoJICogQCAtIFVuaXggdGltZXN0YW1wIChtcyBzaW5jZSAwMS8wMS8xOTcwKQoJICogISAtIFdpbmRvd3MgdGlja3MgKDEwMG5zIHNpbmNlIDAxLzAxLzAwMDEpCgkgKiAiLi4uIiAtIGxpdGVyYWwgdGV4dAoJICogJycgLSBzaW5nbGUgcXVvdGUKCSAqCgkgKiBAcGFyYW0gIGZvcm1hdCBzdHJpbmcgLSB0aGUgZGVzaXJlZCBmb3JtYXQgb2YgdGhlIGRhdGUKCSAqIEBwYXJhbSAgZGF0ZSBEYXRlIC0gdGhlIGRhdGUgdmFsdWUgdG8gZm9ybWF0CgkgKiBAcGFyYW0gIHNldHRpbmdzIE9iamVjdCAtIGF0dHJpYnV0ZXMgaW5jbHVkZToKCSAqCQkJCQlkYXlOYW1lc1Nob3J0CXN0cmluZ1s3XSAtIGFiYnJldmlhdGVkIG5hbWVzIG9mIHRoZSBkYXlzIGZyb20gU3VuZGF5IChvcHRpb25hbCkKCSAqCQkJCQlkYXlOYW1lcwkJc3RyaW5nWzddIC0gbmFtZXMgb2YgdGhlIGRheXMgZnJvbSBTdW5kYXkgKG9wdGlvbmFsKQoJICoJCQkJCW1vbnRoTmFtZXNTaG9ydCBzdHJpbmdbMTJdIC0gYWJicmV2aWF0ZWQgbmFtZXMgb2YgdGhlIG1vbnRocyAob3B0aW9uYWwpCgkgKgkJCQkJbW9udGhOYW1lcwkJc3RyaW5nWzEyXSAtIG5hbWVzIG9mIHRoZSBtb250aHMgKG9wdGlvbmFsKQoJICogQHJldHVybiAgc3RyaW5nIC0gdGhlIGRhdGUgaW4gdGhlIGFib3ZlIGZvcm1hdAoJICovCglmb3JtYXREYXRlOiBmdW5jdGlvbiggZm9ybWF0LCBkYXRlLCBzZXR0aW5ncyApIHsKCQlpZiAoICFkYXRlICkgewoJCQlyZXR1cm4gIiI7CgkJfQoKCQl2YXIgaUZvcm1hdCwKCQkJZGF5TmFtZXNTaG9ydCA9ICggc2V0dGluZ3MgPyBzZXR0aW5ncy5kYXlOYW1lc1Nob3J0IDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzU2hvcnQsCgkJCWRheU5hbWVzID0gKCBzZXR0aW5ncyA/IHNldHRpbmdzLmRheU5hbWVzIDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLmRheU5hbWVzLAoJCQltb250aE5hbWVzU2hvcnQgPSAoIHNldHRpbmdzID8gc2V0dGluZ3MubW9udGhOYW1lc1Nob3J0IDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXNTaG9ydCwKCQkJbW9udGhOYW1lcyA9ICggc2V0dGluZ3MgPyBzZXR0aW5ncy5tb250aE5hbWVzIDogbnVsbCApIHx8IHRoaXMuX2RlZmF1bHRzLm1vbnRoTmFtZXMsCgoJCQkvLyBDaGVjayB3aGV0aGVyIGEgZm9ybWF0IGNoYXJhY3RlciBpcyBkb3VibGVkCgkJCWxvb2tBaGVhZCA9IGZ1bmN0aW9uKCBtYXRjaCApIHsKCQkJCXZhciBtYXRjaGVzID0gKCBpRm9ybWF0ICsgMSA8IGZvcm1hdC5sZW5ndGggJiYgZm9ybWF0LmNoYXJBdCggaUZvcm1hdCArIDEgKSA9PT0gbWF0Y2ggKTsKCQkJCWlmICggbWF0Y2hlcyApIHsKCQkJCQlpRm9ybWF0Kys7CgkJCQl9CgkJCQlyZXR1cm4gbWF0Y2hlczsKCQkJfSwKCgkJCS8vIEZvcm1hdCBhIG51bWJlciwgd2l0aCBsZWFkaW5nIHplcm8gaWYgbmVjZXNzYXJ5CgkJCWZvcm1hdE51bWJlciA9IGZ1bmN0aW9uKCBtYXRjaCwgdmFsdWUsIGxlbiApIHsKCQkJCXZhciBudW0gPSAiIiArIHZhbHVlOwoJCQkJaWYgKCBsb29rQWhlYWQoIG1hdGNoICkgKSB7CgkJCQkJd2hpbGUgKCBudW0ubGVuZ3RoIDwgbGVuICkgewoJCQkJCQludW0gPSAiMCIgKyBudW07CgkJCQkJfQoJCQkJfQoJCQkJcmV0dXJuIG51bTsKCQkJfSwKCgkJCS8vIEZvcm1hdCBhIG5hbWUsIHNob3J0IG9yIGxvbmcgYXMgcmVxdWVzdGVkCgkJCWZvcm1hdE5hbWUgPSBmdW5jdGlvbiggbWF0Y2gsIHZhbHVlLCBzaG9ydE5hbWVzLCBsb25nTmFtZXMgKSB7CgkJCQlyZXR1cm4gKCBsb29rQWhlYWQoIG1hdGNoICkgPyBsb25nTmFtZXNbIHZhbHVlIF0gOiBzaG9ydE5hbWVzWyB2YWx1ZSBdICk7CgkJCX0sCgkJCW91dHB1dCA9ICIiLAoJCQlsaXRlcmFsID0gZmFsc2U7CgoJCWlmICggZGF0ZSApIHsKCQkJZm9yICggaUZvcm1hdCA9IDA7IGlGb3JtYXQgPCBmb3JtYXQubGVuZ3RoOyBpRm9ybWF0KysgKSB7CgkJCQlpZiAoIGxpdGVyYWwgKSB7CgkJCQkJaWYgKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgPT09ICInIiAmJiAhbG9va0FoZWFkKCAiJyIgKSApIHsKCQkJCQkJbGl0ZXJhbCA9IGZhbHNlOwoJCQkJCX0gZWxzZSB7CgkJCQkJCW91dHB1dCArPSBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICk7CgkJCQkJfQoJCQkJfSBlbHNlIHsKCQkJCQlzd2l0Y2ggKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgKSB7CgkJCQkJCWNhc2UgImQiOgoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdE51bWJlciggImQiLCBkYXRlLmdldERhdGUoKSwgMiApOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWNhc2UgIkQiOgoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdE5hbWUoICJEIiwgZGF0ZS5nZXREYXkoKSwgZGF5TmFtZXNTaG9ydCwgZGF5TmFtZXMgKTsKCQkJCQkJCWJyZWFrOwoJCQkJCQljYXNlICJvIjoKCQkJCQkJCW91dHB1dCArPSBmb3JtYXROdW1iZXIoICJvIiwKCQkJCQkJCQlNYXRoLnJvdW5kKCAoIG5ldyBEYXRlKCBkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSwgZGF0ZS5nZXREYXRlKCkgKS5nZXRUaW1lKCkgLSBuZXcgRGF0ZSggZGF0ZS5nZXRGdWxsWWVhcigpLCAwLCAwICkuZ2V0VGltZSgpICkgLyA4NjQwMDAwMCApLCAzICk7CgkJCQkJCQlicmVhazsKCQkJCQkJY2FzZSAibSI6CgkJCQkJCQlvdXRwdXQgKz0gZm9ybWF0TnVtYmVyKCAibSIsIGRhdGUuZ2V0TW9udGgoKSArIDEsIDIgKTsKCQkJCQkJCWJyZWFrOwoJCQkJCQljYXNlICJNIjoKCQkJCQkJCW91dHB1dCArPSBmb3JtYXROYW1lKCAiTSIsIGRhdGUuZ2V0TW9udGgoKSwgbW9udGhOYW1lc1Nob3J0LCBtb250aE5hbWVzICk7CgkJCQkJCQlicmVhazsKCQkJCQkJY2FzZSAieSI6CgkJCQkJCQlvdXRwdXQgKz0gKCBsb29rQWhlYWQoICJ5IiApID8gZGF0ZS5nZXRGdWxsWWVhcigpIDoKCQkJCQkJCQkoIGRhdGUuZ2V0RnVsbFllYXIoKSAlIDEwMCA8IDEwID8gIjAiIDogIiIgKSArIGRhdGUuZ2V0RnVsbFllYXIoKSAlIDEwMCApOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWNhc2UgIkAiOgoJCQkJCQkJb3V0cHV0ICs9IGRhdGUuZ2V0VGltZSgpOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWNhc2UgIiEiOgoJCQkJCQkJb3V0cHV0ICs9IGRhdGUuZ2V0VGltZSgpICogMTAwMDAgKyB0aGlzLl90aWNrc1RvMTk3MDsKCQkJCQkJCWJyZWFrOwoJCQkJCQljYXNlICInIjoKCQkJCQkJCWlmICggbG9va0FoZWFkKCAiJyIgKSApIHsKCQkJCQkJCQlvdXRwdXQgKz0gIiciOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQlsaXRlcmFsID0gdHJ1ZTsKCQkJCQkJCX0KCQkJCQkJCWJyZWFrOwoJCQkJCQlkZWZhdWx0OgoJCQkJCQkJb3V0cHV0ICs9IGZvcm1hdC5jaGFyQXQoIGlGb3JtYXQgKTsKCQkJCQl9CgkJCQl9CgkJCX0KCQl9CgkJcmV0dXJuIG91dHB1dDsKCX0sCgoJLyogRXh0cmFjdCBhbGwgcG9zc2libGUgY2hhcmFjdGVycyBmcm9tIHRoZSBkYXRlIGZvcm1hdC4gKi8KCV9wb3NzaWJsZUNoYXJzOiBmdW5jdGlvbiggZm9ybWF0ICkgewoJCXZhciBpRm9ybWF0LAoJCQljaGFycyA9ICIiLAoJCQlsaXRlcmFsID0gZmFsc2UsCgoJCQkvLyBDaGVjayB3aGV0aGVyIGEgZm9ybWF0IGNoYXJhY3RlciBpcyBkb3VibGVkCgkJCWxvb2tBaGVhZCA9IGZ1bmN0aW9uKCBtYXRjaCApIHsKCQkJCXZhciBtYXRjaGVzID0gKCBpRm9ybWF0ICsgMSA8IGZvcm1hdC5sZW5ndGggJiYgZm9ybWF0LmNoYXJBdCggaUZvcm1hdCArIDEgKSA9PT0gbWF0Y2ggKTsKCQkJCWlmICggbWF0Y2hlcyApIHsKCQkJCQlpRm9ybWF0Kys7CgkJCQl9CgkJCQlyZXR1cm4gbWF0Y2hlczsKCQkJfTsKCgkJZm9yICggaUZvcm1hdCA9IDA7IGlGb3JtYXQgPCBmb3JtYXQubGVuZ3RoOyBpRm9ybWF0KysgKSB7CgkJCWlmICggbGl0ZXJhbCApIHsKCQkJCWlmICggZm9ybWF0LmNoYXJBdCggaUZvcm1hdCApID09PSAiJyIgJiYgIWxvb2tBaGVhZCggIiciICkgKSB7CgkJCQkJbGl0ZXJhbCA9IGZhbHNlOwoJCQkJfSBlbHNlIHsKCQkJCQljaGFycyArPSBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICk7CgkJCQl9CgkJCX0gZWxzZSB7CgkJCQlzd2l0Y2ggKCBmb3JtYXQuY2hhckF0KCBpRm9ybWF0ICkgKSB7CgkJCQkJY2FzZSAiZCI6IGNhc2UgIm0iOiBjYXNlICJ5IjogY2FzZSAiQCI6CgkJCQkJCWNoYXJzICs9ICIwMTIzNDU2Nzg5IjsKCQkJCQkJYnJlYWs7CgkJCQkJY2FzZSAiRCI6IGNhc2UgIk0iOgoJCQkJCQlyZXR1cm4gbnVsbDsgLy8gQWNjZXB0IGFueXRoaW5nCgkJCQkJY2FzZSAiJyI6CgkJCQkJCWlmICggbG9va0FoZWFkKCAiJyIgKSApIHsKCQkJCQkJCWNoYXJzICs9ICInIjsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWxpdGVyYWwgPSB0cnVlOwoJCQkJCQl9CgkJCQkJCWJyZWFrOwoJCQkJCWRlZmF1bHQ6CgkJCQkJCWNoYXJzICs9IGZvcm1hdC5jaGFyQXQoIGlGb3JtYXQgKTsKCQkJCX0KCQkJfQoJCX0KCQlyZXR1cm4gY2hhcnM7Cgl9LAoKCS8qIEdldCBhIHNldHRpbmcgdmFsdWUsIGRlZmF1bHRpbmcgaWYgbmVjZXNzYXJ5LiAqLwoJX2dldDogZnVuY3Rpb24oIGluc3QsIG5hbWUgKSB7CgkJcmV0dXJuIGluc3Quc2V0dGluZ3NbIG5hbWUgXSAhPT0gdW5kZWZpbmVkID8KCQkJaW5zdC5zZXR0aW5nc1sgbmFtZSBdIDogdGhpcy5fZGVmYXVsdHNbIG5hbWUgXTsKCX0sCgoJLyogUGFyc2UgZXhpc3RpbmcgZGF0ZSBhbmQgaW5pdGlhbGlzZSBkYXRlIHBpY2tlci4gKi8KCV9zZXREYXRlRnJvbUZpZWxkOiBmdW5jdGlvbiggaW5zdCwgbm9EZWZhdWx0ICkgewoJCWlmICggaW5zdC5pbnB1dC52YWwoKSA9PT0gaW5zdC5sYXN0VmFsICkgewoJCQlyZXR1cm47CgkJfQoKCQl2YXIgZGF0ZUZvcm1hdCA9IHRoaXMuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICksCgkJCWRhdGVzID0gaW5zdC5sYXN0VmFsID0gaW5zdC5pbnB1dCA/IGluc3QuaW5wdXQudmFsKCkgOiBudWxsLAoJCQlkZWZhdWx0RGF0ZSA9IHRoaXMuX2dldERlZmF1bHREYXRlKCBpbnN0ICksCgkJCWRhdGUgPSBkZWZhdWx0RGF0ZSwKCQkJc2V0dGluZ3MgPSB0aGlzLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKTsKCgkJdHJ5IHsKCQkJZGF0ZSA9IHRoaXMucGFyc2VEYXRlKCBkYXRlRm9ybWF0LCBkYXRlcywgc2V0dGluZ3MgKSB8fCBkZWZhdWx0RGF0ZTsKCQl9IGNhdGNoICggZXZlbnQgKSB7CgkJCWRhdGVzID0gKCBub0RlZmF1bHQgPyAiIiA6IGRhdGVzICk7CgkJfQoJCWluc3Quc2VsZWN0ZWREYXkgPSBkYXRlLmdldERhdGUoKTsKCQlpbnN0LmRyYXdNb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCA9IGRhdGUuZ2V0TW9udGgoKTsKCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CgkJaW5zdC5jdXJyZW50RGF5ID0gKCBkYXRlcyA/IGRhdGUuZ2V0RGF0ZSgpIDogMCApOwoJCWluc3QuY3VycmVudE1vbnRoID0gKCBkYXRlcyA/IGRhdGUuZ2V0TW9udGgoKSA6IDAgKTsKCQlpbnN0LmN1cnJlbnRZZWFyID0gKCBkYXRlcyA/IGRhdGUuZ2V0RnVsbFllYXIoKSA6IDAgKTsKCQl0aGlzLl9hZGp1c3RJbnN0RGF0ZSggaW5zdCApOwoJfSwKCgkvKiBSZXRyaWV2ZSB0aGUgZGVmYXVsdCBkYXRlIHNob3duIG9uIG9wZW5pbmcuICovCglfZ2V0RGVmYXVsdERhdGU6IGZ1bmN0aW9uKCBpbnN0ICkgewoJCXJldHVybiB0aGlzLl9yZXN0cmljdE1pbk1heCggaW5zdCwKCQkJdGhpcy5fZGV0ZXJtaW5lRGF0ZSggaW5zdCwgdGhpcy5fZ2V0KCBpbnN0LCAiZGVmYXVsdERhdGUiICksIG5ldyBEYXRlKCkgKSApOwoJfSwKCgkvKiBBIGRhdGUgbWF5IGJlIHNwZWNpZmllZCBhcyBhbiBleGFjdCB2YWx1ZSBvciBhIHJlbGF0aXZlIG9uZS4gKi8KCV9kZXRlcm1pbmVEYXRlOiBmdW5jdGlvbiggaW5zdCwgZGF0ZSwgZGVmYXVsdERhdGUgKSB7CgkJdmFyIG9mZnNldE51bWVyaWMgPSBmdW5jdGlvbiggb2Zmc2V0ICkgewoJCQkJdmFyIGRhdGUgPSBuZXcgRGF0ZSgpOwoJCQkJZGF0ZS5zZXREYXRlKCBkYXRlLmdldERhdGUoKSArIG9mZnNldCApOwoJCQkJcmV0dXJuIGRhdGU7CgkJCX0sCgkJCW9mZnNldFN0cmluZyA9IGZ1bmN0aW9uKCBvZmZzZXQgKSB7CgkJCQl0cnkgewoJCQkJCXJldHVybiAkLmRhdGVwaWNrZXIucGFyc2VEYXRlKCAkLmRhdGVwaWNrZXIuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICksCgkJCQkJCW9mZnNldCwgJC5kYXRlcGlja2VyLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApOwoJCQkJfQoJCQkJY2F0Y2ggKCBlICkgewoKCQkJCQkvLyBJZ25vcmUKCQkJCX0KCgkJCQl2YXIgZGF0ZSA9ICggb2Zmc2V0LnRvTG93ZXJDYXNlKCkubWF0Y2goIC9eYy8gKSA/CgkJCQkJJC5kYXRlcGlja2VyLl9nZXREYXRlKCBpbnN0ICkgOiBudWxsICkgfHwgbmV3IERhdGUoKSwKCQkJCQl5ZWFyID0gZGF0ZS5nZXRGdWxsWWVhcigpLAoJCQkJCW1vbnRoID0gZGF0ZS5nZXRNb250aCgpLAoJCQkJCWRheSA9IGRhdGUuZ2V0RGF0ZSgpLAoJCQkJCXBhdHRlcm4gPSAvKFsrXC1dP1swLTldKylccyooZHxEfHd8V3xtfE18eXxZKT8vZywKCQkJCQltYXRjaGVzID0gcGF0dGVybi5leGVjKCBvZmZzZXQgKTsKCgkJCQl3aGlsZSAoIG1hdGNoZXMgKSB7CgkJCQkJc3dpdGNoICggbWF0Y2hlc1sgMiBdIHx8ICJkIiApIHsKCQkJCQkJY2FzZSAiZCIgOiBjYXNlICJEIiA6CgkJCQkJCQlkYXkgKz0gcGFyc2VJbnQoIG1hdGNoZXNbIDEgXSwgMTAgKTsgYnJlYWs7CgkJCQkJCWNhc2UgInciIDogY2FzZSAiVyIgOgoJCQkJCQkJZGF5ICs9IHBhcnNlSW50KCBtYXRjaGVzWyAxIF0sIDEwICkgKiA3OyBicmVhazsKCQkJCQkJY2FzZSAibSIgOiBjYXNlICJNIiA6CgkJCQkJCQltb250aCArPSBwYXJzZUludCggbWF0Y2hlc1sgMSBdLCAxMCApOwoJCQkJCQkJZGF5ID0gTWF0aC5taW4oIGRheSwgJC5kYXRlcGlja2VyLl9nZXREYXlzSW5Nb250aCggeWVhciwgbW9udGggKSApOwoJCQkJCQkJYnJlYWs7CgkJCQkJCWNhc2UgInkiOiBjYXNlICJZIiA6CgkJCQkJCQl5ZWFyICs9IHBhcnNlSW50KCBtYXRjaGVzWyAxIF0sIDEwICk7CgkJCQkJCQlkYXkgPSBNYXRoLm1pbiggZGF5LCAkLmRhdGVwaWNrZXIuX2dldERheXNJbk1vbnRoKCB5ZWFyLCBtb250aCApICk7CgkJCQkJCQlicmVhazsKCQkJCQl9CgkJCQkJbWF0Y2hlcyA9IHBhdHRlcm4uZXhlYyggb2Zmc2V0ICk7CgkJCQl9CgkJCQlyZXR1cm4gbmV3IERhdGUoIHllYXIsIG1vbnRoLCBkYXkgKTsKCQkJfSwKCQkJbmV3RGF0ZSA9ICggZGF0ZSA9PSBudWxsIHx8IGRhdGUgPT09ICIiID8gZGVmYXVsdERhdGUgOiAoIHR5cGVvZiBkYXRlID09PSAic3RyaW5nIiA/IG9mZnNldFN0cmluZyggZGF0ZSApIDoKCQkJCSggdHlwZW9mIGRhdGUgPT09ICJudW1iZXIiID8gKCBpc05hTiggZGF0ZSApID8gZGVmYXVsdERhdGUgOiBvZmZzZXROdW1lcmljKCBkYXRlICkgKSA6IG5ldyBEYXRlKCBkYXRlLmdldFRpbWUoKSApICkgKSApOwoKCQluZXdEYXRlID0gKCBuZXdEYXRlICYmIG5ld0RhdGUudG9TdHJpbmcoKSA9PT0gIkludmFsaWQgRGF0ZSIgPyBkZWZhdWx0RGF0ZSA6IG5ld0RhdGUgKTsKCQlpZiAoIG5ld0RhdGUgKSB7CgkJCW5ld0RhdGUuc2V0SG91cnMoIDAgKTsKCQkJbmV3RGF0ZS5zZXRNaW51dGVzKCAwICk7CgkJCW5ld0RhdGUuc2V0U2Vjb25kcyggMCApOwoJCQluZXdEYXRlLnNldE1pbGxpc2Vjb25kcyggMCApOwoJCX0KCQlyZXR1cm4gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ld0RhdGUgKTsKCX0sCgoJLyogSGFuZGxlIHN3aXRjaCB0by9mcm9tIGRheWxpZ2h0IHNhdmluZy4KCSAqIEhvdXJzIG1heSBiZSBub24temVybyBvbiBkYXlsaWdodCBzYXZpbmcgY3V0LW92ZXI6CgkgKiA+IDEyIHdoZW4gbWlkbmlnaHQgY2hhbmdlb3ZlciwgYnV0IHRoZW4gY2Fubm90IGdlbmVyYXRlCgkgKiBtaWRuaWdodCBkYXRldGltZSwgc28ganVtcCB0byAxQU0sIG90aGVyd2lzZSByZXNldC4KCSAqIEBwYXJhbSAgZGF0ZSAgKERhdGUpIHRoZSBkYXRlIHRvIGNoZWNrCgkgKiBAcmV0dXJuICAoRGF0ZSkgdGhlIGNvcnJlY3RlZCBkYXRlCgkgKi8KCV9kYXlsaWdodFNhdmluZ0FkanVzdDogZnVuY3Rpb24oIGRhdGUgKSB7CgkJaWYgKCAhZGF0ZSApIHsKCQkJcmV0dXJuIG51bGw7CgkJfQoJCWRhdGUuc2V0SG91cnMoIGRhdGUuZ2V0SG91cnMoKSA+IDEyID8gZGF0ZS5nZXRIb3VycygpICsgMiA6IDAgKTsKCQlyZXR1cm4gZGF0ZTsKCX0sCgoJLyogU2V0IHRoZSBkYXRlKHMpIGRpcmVjdGx5LiAqLwoJX3NldERhdGU6IGZ1bmN0aW9uKCBpbnN0LCBkYXRlLCBub0NoYW5nZSApIHsKCQl2YXIgY2xlYXIgPSAhZGF0ZSwKCQkJb3JpZ01vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoLAoJCQlvcmlnWWVhciA9IGluc3Quc2VsZWN0ZWRZZWFyLAoJCQluZXdEYXRlID0gdGhpcy5fcmVzdHJpY3RNaW5NYXgoIGluc3QsIHRoaXMuX2RldGVybWluZURhdGUoIGluc3QsIGRhdGUsIG5ldyBEYXRlKCkgKSApOwoKCQlpbnN0LnNlbGVjdGVkRGF5ID0gaW5zdC5jdXJyZW50RGF5ID0gbmV3RGF0ZS5nZXREYXRlKCk7CgkJaW5zdC5kcmF3TW9udGggPSBpbnN0LnNlbGVjdGVkTW9udGggPSBpbnN0LmN1cnJlbnRNb250aCA9IG5ld0RhdGUuZ2V0TW9udGgoKTsKCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBpbnN0LmN1cnJlbnRZZWFyID0gbmV3RGF0ZS5nZXRGdWxsWWVhcigpOwoJCWlmICggKCBvcmlnTW9udGggIT09IGluc3Quc2VsZWN0ZWRNb250aCB8fCBvcmlnWWVhciAhPT0gaW5zdC5zZWxlY3RlZFllYXIgKSAmJiAhbm9DaGFuZ2UgKSB7CgkJCXRoaXMuX25vdGlmeUNoYW5nZSggaW5zdCApOwoJCX0KCQl0aGlzLl9hZGp1c3RJbnN0RGF0ZSggaW5zdCApOwoJCWlmICggaW5zdC5pbnB1dCApIHsKCQkJaW5zdC5pbnB1dC52YWwoIGNsZWFyID8gIiIgOiB0aGlzLl9mb3JtYXREYXRlKCBpbnN0ICkgKTsKCQl9Cgl9LAoKCS8qIFJldHJpZXZlIHRoZSBkYXRlKHMpIGRpcmVjdGx5LiAqLwoJX2dldERhdGU6IGZ1bmN0aW9uKCBpbnN0ICkgewoJCXZhciBzdGFydERhdGUgPSAoICFpbnN0LmN1cnJlbnRZZWFyIHx8ICggaW5zdC5pbnB1dCAmJiBpbnN0LmlucHV0LnZhbCgpID09PSAiIiApID8gbnVsbCA6CgkJCXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSgKCQkJaW5zdC5jdXJyZW50WWVhciwgaW5zdC5jdXJyZW50TW9udGgsIGluc3QuY3VycmVudERheSApICkgKTsKCQkJcmV0dXJuIHN0YXJ0RGF0ZTsKCX0sCgoJLyogQXR0YWNoIHRoZSBvbnh4eCBoYW5kbGVycy4gIFRoZXNlIGFyZSBkZWNsYXJlZCBzdGF0aWNhbGx5IHNvCgkgKiB0aGV5IHdvcmsgd2l0aCBzdGF0aWMgY29kZSB0cmFuc2Zvcm1lcnMgbGlrZSBDYWphLgoJICovCglfYXR0YWNoSGFuZGxlcnM6IGZ1bmN0aW9uKCBpbnN0ICkgewoJCXZhciBzdGVwTW9udGhzID0gdGhpcy5fZ2V0KCBpbnN0LCAic3RlcE1vbnRocyIgKSwKCQkJaWQgPSAiIyIgKyBpbnN0LmlkLnJlcGxhY2UoIC9cXFxcL2csICJcXCIgKTsKCQlpbnN0LmRwRGl2LmZpbmQoICJbZGF0YS1oYW5kbGVyXSIgKS5tYXAoIGZ1bmN0aW9uKCkgewoJCQl2YXIgaGFuZGxlciA9IHsKCQkJCXByZXY6IGZ1bmN0aW9uKCkgewoJCQkJCSQuZGF0ZXBpY2tlci5fYWRqdXN0RGF0ZSggaWQsIC1zdGVwTW9udGhzLCAiTSIgKTsKCQkJCX0sCgkJCQluZXh0OiBmdW5jdGlvbigpIHsKCQkJCQkkLmRhdGVwaWNrZXIuX2FkanVzdERhdGUoIGlkLCArc3RlcE1vbnRocywgIk0iICk7CgkJCQl9LAoJCQkJaGlkZTogZnVuY3Rpb24oKSB7CgkJCQkJJC5kYXRlcGlja2VyLl9oaWRlRGF0ZXBpY2tlcigpOwoJCQkJfSwKCQkJCXRvZGF5OiBmdW5jdGlvbigpIHsKCQkJCQkkLmRhdGVwaWNrZXIuX2dvdG9Ub2RheSggaWQgKTsKCQkJCX0sCgkJCQlzZWxlY3REYXk6IGZ1bmN0aW9uKCkgewoJCQkJCSQuZGF0ZXBpY2tlci5fc2VsZWN0RGF5KCBpZCwgK3RoaXMuZ2V0QXR0cmlidXRlKCAiZGF0YS1tb250aCIgKSwgK3RoaXMuZ2V0QXR0cmlidXRlKCAiZGF0YS15ZWFyIiApLCB0aGlzICk7CgkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJfSwKCQkJCXNlbGVjdE1vbnRoOiBmdW5jdGlvbigpIHsKCQkJCQkkLmRhdGVwaWNrZXIuX3NlbGVjdE1vbnRoWWVhciggaWQsIHRoaXMsICJNIiApOwoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0sCgkJCQlzZWxlY3RZZWFyOiBmdW5jdGlvbigpIHsKCQkJCQkkLmRhdGVwaWNrZXIuX3NlbGVjdE1vbnRoWWVhciggaWQsIHRoaXMsICJZIiApOwoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfTsKCQkJJCggdGhpcyApLm9uKCB0aGlzLmdldEF0dHJpYnV0ZSggImRhdGEtZXZlbnQiICksIGhhbmRsZXJbIHRoaXMuZ2V0QXR0cmlidXRlKCAiZGF0YS1oYW5kbGVyIiApIF0gKTsKCQl9ICk7Cgl9LAoKCS8qIEdlbmVyYXRlIHRoZSBIVE1MIGZvciB0aGUgY3VycmVudCBzdGF0ZSBvZiB0aGUgZGF0ZSBwaWNrZXIuICovCglfZ2VuZXJhdGVIVE1MOiBmdW5jdGlvbiggaW5zdCApIHsKCQl2YXIgbWF4RHJhdywgcHJldlRleHQsIHByZXYsIG5leHRUZXh0LCBuZXh0LCBjdXJyZW50VGV4dCwgZ290b0RhdGUsCgkJCWNvbnRyb2xzLCBidXR0b25QYW5lbCwgZmlyc3REYXksIHNob3dXZWVrLCBkYXlOYW1lcywgZGF5TmFtZXNNaW4sCgkJCW1vbnRoTmFtZXMsIG1vbnRoTmFtZXNTaG9ydCwgYmVmb3JlU2hvd0RheSwgc2hvd090aGVyTW9udGhzLAoJCQlzZWxlY3RPdGhlck1vbnRocywgZGVmYXVsdERhdGUsIGh0bWwsIGRvdywgcm93LCBncm91cCwgY29sLCBzZWxlY3RlZERhdGUsCgkJCWNvcm5lckNsYXNzLCBjYWxlbmRlciwgdGhlYWQsIGRheSwgZGF5c0luTW9udGgsIGxlYWREYXlzLCBjdXJSb3dzLCBudW1Sb3dzLAoJCQlwcmludERhdGUsIGRSb3csIHRib2R5LCBkYXlTZXR0aW5ncywgb3RoZXJNb250aCwgdW5zZWxlY3RhYmxlLAoJCQl0ZW1wRGF0ZSA9IG5ldyBEYXRlKCksCgkJCXRvZGF5ID0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoCgkJCQluZXcgRGF0ZSggdGVtcERhdGUuZ2V0RnVsbFllYXIoKSwgdGVtcERhdGUuZ2V0TW9udGgoKSwgdGVtcERhdGUuZ2V0RGF0ZSgpICkgKSwgLy8gY2xlYXIgdGltZQoJCQlpc1JUTCA9IHRoaXMuX2dldCggaW5zdCwgImlzUlRMIiApLAoJCQlzaG93QnV0dG9uUGFuZWwgPSB0aGlzLl9nZXQoIGluc3QsICJzaG93QnV0dG9uUGFuZWwiICksCgkJCWhpZGVJZk5vUHJldk5leHQgPSB0aGlzLl9nZXQoIGluc3QsICJoaWRlSWZOb1ByZXZOZXh0IiApLAoJCQluYXZpZ2F0aW9uQXNEYXRlRm9ybWF0ID0gdGhpcy5fZ2V0KCBpbnN0LCAibmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCIgKSwKCQkJbnVtTW9udGhzID0gdGhpcy5fZ2V0TnVtYmVyT2ZNb250aHMoIGluc3QgKSwKCQkJc2hvd0N1cnJlbnRBdFBvcyA9IHRoaXMuX2dldCggaW5zdCwgInNob3dDdXJyZW50QXRQb3MiICksCgkJCXN0ZXBNb250aHMgPSB0aGlzLl9nZXQoIGluc3QsICJzdGVwTW9udGhzIiApLAoJCQlpc011bHRpTW9udGggPSAoIG51bU1vbnRoc1sgMCBdICE9PSAxIHx8IG51bU1vbnRoc1sgMSBdICE9PSAxICksCgkJCWN1cnJlbnREYXRlID0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoICggIWluc3QuY3VycmVudERheSA/IG5ldyBEYXRlKCA5OTk5LCA5LCA5ICkgOgoJCQkJbmV3IERhdGUoIGluc3QuY3VycmVudFllYXIsIGluc3QuY3VycmVudE1vbnRoLCBpbnN0LmN1cnJlbnREYXkgKSApICksCgkJCW1pbkRhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKCBpbnN0LCAibWluIiApLAoJCQltYXhEYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSggaW5zdCwgIm1heCIgKSwKCQkJZHJhd01vbnRoID0gaW5zdC5kcmF3TW9udGggLSBzaG93Q3VycmVudEF0UG9zLAoJCQlkcmF3WWVhciA9IGluc3QuZHJhd1llYXI7CgoJCWlmICggZHJhd01vbnRoIDwgMCApIHsKCQkJZHJhd01vbnRoICs9IDEyOwoJCQlkcmF3WWVhci0tOwoJCX0KCQlpZiAoIG1heERhdGUgKSB7CgkJCW1heERyYXcgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIG1heERhdGUuZ2V0RnVsbFllYXIoKSwKCQkJCW1heERhdGUuZ2V0TW9udGgoKSAtICggbnVtTW9udGhzWyAwIF0gKiBudW1Nb250aHNbIDEgXSApICsgMSwgbWF4RGF0ZS5nZXREYXRlKCkgKSApOwoJCQltYXhEcmF3ID0gKCBtaW5EYXRlICYmIG1heERyYXcgPCBtaW5EYXRlID8gbWluRGF0ZSA6IG1heERyYXcgKTsKCQkJd2hpbGUgKCB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIGRyYXdZZWFyLCBkcmF3TW9udGgsIDEgKSApID4gbWF4RHJhdyApIHsKCQkJCWRyYXdNb250aC0tOwoJCQkJaWYgKCBkcmF3TW9udGggPCAwICkgewoJCQkJCWRyYXdNb250aCA9IDExOwoJCQkJCWRyYXdZZWFyLS07CgkJCQl9CgkJCX0KCQl9CgkJaW5zdC5kcmF3TW9udGggPSBkcmF3TW9udGg7CgkJaW5zdC5kcmF3WWVhciA9IGRyYXdZZWFyOwoKCQlwcmV2VGV4dCA9IHRoaXMuX2dldCggaW5zdCwgInByZXZUZXh0IiApOwoJCXByZXZUZXh0ID0gKCAhbmF2aWdhdGlvbkFzRGF0ZUZvcm1hdCA/IHByZXZUZXh0IDogdGhpcy5mb3JtYXREYXRlKCBwcmV2VGV4dCwKCQkJdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBkcmF3WWVhciwgZHJhd01vbnRoIC0gc3RlcE1vbnRocywgMSApICksCgkJCXRoaXMuX2dldEZvcm1hdENvbmZpZyggaW5zdCApICkgKTsKCgkJcHJldiA9ICggdGhpcy5fY2FuQWRqdXN0TW9udGgoIGluc3QsIC0xLCBkcmF3WWVhciwgZHJhd01vbnRoICkgPwoJCQkiPGEgY2xhc3M9J3VpLWRhdGVwaWNrZXItcHJldiB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J3ByZXYnIGRhdGEtZXZlbnQ9J2NsaWNrJyIgKwoJCQkiIHRpdGxlPSciICsgcHJldlRleHQgKyAiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0iICsgKCBpc1JUTCA/ICJlIiA6ICJ3IiApICsgIic+IiArIHByZXZUZXh0ICsgIjwvc3Bhbj48L2E+IiA6CgkJCSggaGlkZUlmTm9QcmV2TmV4dCA/ICIiIDogIjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLXByZXYgdWktY29ybmVyLWFsbCB1aS1zdGF0ZS1kaXNhYmxlZCcgdGl0bGU9JyIgKyBwcmV2VGV4dCArICInPjxzcGFuIGNsYXNzPSd1aS1pY29uIHVpLWljb24tY2lyY2xlLXRyaWFuZ2xlLSIgKyAoIGlzUlRMID8gImUiIDogInciICkgKyAiJz4iICsgcHJldlRleHQgKyAiPC9zcGFuPjwvYT4iICkgKTsKCgkJbmV4dFRleHQgPSB0aGlzLl9nZXQoIGluc3QsICJuZXh0VGV4dCIgKTsKCQluZXh0VGV4dCA9ICggIW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQgPyBuZXh0VGV4dCA6IHRoaXMuZm9ybWF0RGF0ZSggbmV4dFRleHQsCgkJCXRoaXMuX2RheWxpZ2h0U2F2aW5nQWRqdXN0KCBuZXcgRGF0ZSggZHJhd1llYXIsIGRyYXdNb250aCArIHN0ZXBNb250aHMsIDEgKSApLAoJCQl0aGlzLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApICk7CgoJCW5leHQgPSAoIHRoaXMuX2NhbkFkanVzdE1vbnRoKCBpbnN0LCArMSwgZHJhd1llYXIsIGRyYXdNb250aCApID8KCQkJIjxhIGNsYXNzPSd1aS1kYXRlcGlja2VyLW5leHQgdWktY29ybmVyLWFsbCcgZGF0YS1oYW5kbGVyPSduZXh0JyBkYXRhLWV2ZW50PSdjbGljayciICsKCQkJIiB0aXRsZT0nIiArIG5leHRUZXh0ICsgIic+PHNwYW4gY2xhc3M9J3VpLWljb24gdWktaWNvbi1jaXJjbGUtdHJpYW5nbGUtIiArICggaXNSVEwgPyAidyIgOiAiZSIgKSArICInPiIgKyBuZXh0VGV4dCArICI8L3NwYW4+PC9hPiIgOgoJCQkoIGhpZGVJZk5vUHJldk5leHQgPyAiIiA6ICI8YSBjbGFzcz0ndWktZGF0ZXBpY2tlci1uZXh0IHVpLWNvcm5lci1hbGwgdWktc3RhdGUtZGlzYWJsZWQnIHRpdGxlPSciICsgbmV4dFRleHQgKyAiJz48c3BhbiBjbGFzcz0ndWktaWNvbiB1aS1pY29uLWNpcmNsZS10cmlhbmdsZS0iICsgKCBpc1JUTCA/ICJ3IiA6ICJlIiApICsgIic+IiArIG5leHRUZXh0ICsgIjwvc3Bhbj48L2E+IiApICk7CgoJCWN1cnJlbnRUZXh0ID0gdGhpcy5fZ2V0KCBpbnN0LCAiY3VycmVudFRleHQiICk7CgkJZ290b0RhdGUgPSAoIHRoaXMuX2dldCggaW5zdCwgImdvdG9DdXJyZW50IiApICYmIGluc3QuY3VycmVudERheSA/IGN1cnJlbnREYXRlIDogdG9kYXkgKTsKCQljdXJyZW50VGV4dCA9ICggIW5hdmlnYXRpb25Bc0RhdGVGb3JtYXQgPyBjdXJyZW50VGV4dCA6CgkJCXRoaXMuZm9ybWF0RGF0ZSggY3VycmVudFRleHQsIGdvdG9EYXRlLCB0aGlzLl9nZXRGb3JtYXRDb25maWcoIGluc3QgKSApICk7CgoJCWNvbnRyb2xzID0gKCAhaW5zdC5pbmxpbmUgPyAiPGJ1dHRvbiB0eXBlPSdidXR0b24nIGNsYXNzPSd1aS1kYXRlcGlja2VyLWNsb3NlIHVpLXN0YXRlLWRlZmF1bHQgdWktcHJpb3JpdHktcHJpbWFyeSB1aS1jb3JuZXItYWxsJyBkYXRhLWhhbmRsZXI9J2hpZGUnIGRhdGEtZXZlbnQ9J2NsaWNrJz4iICsKCQkJdGhpcy5fZ2V0KCBpbnN0LCAiY2xvc2VUZXh0IiApICsgIjwvYnV0dG9uPiIgOiAiIiApOwoKCQlidXR0b25QYW5lbCA9ICggc2hvd0J1dHRvblBhbmVsICkgPyAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1idXR0b25wYW5lIHVpLXdpZGdldC1jb250ZW50Jz4iICsgKCBpc1JUTCA/IGNvbnRyb2xzIDogIiIgKSArCgkJCSggdGhpcy5faXNJblJhbmdlKCBpbnN0LCBnb3RvRGF0ZSApID8gIjxidXR0b24gdHlwZT0nYnV0dG9uJyBjbGFzcz0ndWktZGF0ZXBpY2tlci1jdXJyZW50IHVpLXN0YXRlLWRlZmF1bHQgdWktcHJpb3JpdHktc2Vjb25kYXJ5IHVpLWNvcm5lci1hbGwnIGRhdGEtaGFuZGxlcj0ndG9kYXknIGRhdGEtZXZlbnQ9J2NsaWNrJyIgKwoJCQkiPiIgKyBjdXJyZW50VGV4dCArICI8L2J1dHRvbj4iIDogIiIgKSArICggaXNSVEwgPyAiIiA6IGNvbnRyb2xzICkgKyAiPC9kaXY+IiA6ICIiOwoKCQlmaXJzdERheSA9IHBhcnNlSW50KCB0aGlzLl9nZXQoIGluc3QsICJmaXJzdERheSIgKSwgMTAgKTsKCQlmaXJzdERheSA9ICggaXNOYU4oIGZpcnN0RGF5ICkgPyAwIDogZmlyc3REYXkgKTsKCgkJc2hvd1dlZWsgPSB0aGlzLl9nZXQoIGluc3QsICJzaG93V2VlayIgKTsKCQlkYXlOYW1lcyA9IHRoaXMuX2dldCggaW5zdCwgImRheU5hbWVzIiApOwoJCWRheU5hbWVzTWluID0gdGhpcy5fZ2V0KCBpbnN0LCAiZGF5TmFtZXNNaW4iICk7CgkJbW9udGhOYW1lcyA9IHRoaXMuX2dldCggaW5zdCwgIm1vbnRoTmFtZXMiICk7CgkJbW9udGhOYW1lc1Nob3J0ID0gdGhpcy5fZ2V0KCBpbnN0LCAibW9udGhOYW1lc1Nob3J0IiApOwoJCWJlZm9yZVNob3dEYXkgPSB0aGlzLl9nZXQoIGluc3QsICJiZWZvcmVTaG93RGF5IiApOwoJCXNob3dPdGhlck1vbnRocyA9IHRoaXMuX2dldCggaW5zdCwgInNob3dPdGhlck1vbnRocyIgKTsKCQlzZWxlY3RPdGhlck1vbnRocyA9IHRoaXMuX2dldCggaW5zdCwgInNlbGVjdE90aGVyTW9udGhzIiApOwoJCWRlZmF1bHREYXRlID0gdGhpcy5fZ2V0RGVmYXVsdERhdGUoIGluc3QgKTsKCQlodG1sID0gIiI7CgoJCWZvciAoIHJvdyA9IDA7IHJvdyA8IG51bU1vbnRoc1sgMCBdOyByb3crKyApIHsKCQkJZ3JvdXAgPSAiIjsKCQkJdGhpcy5tYXhSb3dzID0gNDsKCQkJZm9yICggY29sID0gMDsgY29sIDwgbnVtTW9udGhzWyAxIF07IGNvbCsrICkgewoJCQkJc2VsZWN0ZWREYXRlID0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBkcmF3WWVhciwgZHJhd01vbnRoLCBpbnN0LnNlbGVjdGVkRGF5ICkgKTsKCQkJCWNvcm5lckNsYXNzID0gIiB1aS1jb3JuZXItYWxsIjsKCQkJCWNhbGVuZGVyID0gIiI7CgkJCQlpZiAoIGlzTXVsdGlNb250aCApIHsKCQkJCQljYWxlbmRlciArPSAiPGRpdiBjbGFzcz0ndWktZGF0ZXBpY2tlci1ncm91cCI7CgkJCQkJaWYgKCBudW1Nb250aHNbIDEgXSA+IDEgKSB7CgkJCQkJCXN3aXRjaCAoIGNvbCApIHsKCQkJCQkJCWNhc2UgMDogY2FsZW5kZXIgKz0gIiB1aS1kYXRlcGlja2VyLWdyb3VwLWZpcnN0IjsKCQkJCQkJCQljb3JuZXJDbGFzcyA9ICIgdWktY29ybmVyLSIgKyAoIGlzUlRMID8gInJpZ2h0IiA6ICJsZWZ0IiApOyBicmVhazsKCQkJCQkJCWNhc2UgbnVtTW9udGhzWyAxIF0gLSAxOiBjYWxlbmRlciArPSAiIHVpLWRhdGVwaWNrZXItZ3JvdXAtbGFzdCI7CgkJCQkJCQkJY29ybmVyQ2xhc3MgPSAiIHVpLWNvcm5lci0iICsgKCBpc1JUTCA/ICJsZWZ0IiA6ICJyaWdodCIgKTsgYnJlYWs7CgkJCQkJCQlkZWZhdWx0OiBjYWxlbmRlciArPSAiIHVpLWRhdGVwaWNrZXItZ3JvdXAtbWlkZGxlIjsgY29ybmVyQ2xhc3MgPSAiIjsgYnJlYWs7CgkJCQkJCX0KCQkJCQl9CgkJCQkJY2FsZW5kZXIgKz0gIic+IjsKCQkJCX0KCQkJCWNhbGVuZGVyICs9ICI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLWhlYWRlciB1aS13aWRnZXQtaGVhZGVyIHVpLWhlbHBlci1jbGVhcmZpeCIgKyBjb3JuZXJDbGFzcyArICInPiIgKwoJCQkJCSggL2FsbHxsZWZ0Ly50ZXN0KCBjb3JuZXJDbGFzcyApICYmIHJvdyA9PT0gMCA/ICggaXNSVEwgPyBuZXh0IDogcHJldiApIDogIiIgKSArCgkJCQkJKCAvYWxsfHJpZ2h0Ly50ZXN0KCBjb3JuZXJDbGFzcyApICYmIHJvdyA9PT0gMCA/ICggaXNSVEwgPyBwcmV2IDogbmV4dCApIDogIiIgKSArCgkJCQkJdGhpcy5fZ2VuZXJhdGVNb250aFllYXJIZWFkZXIoIGluc3QsIGRyYXdNb250aCwgZHJhd1llYXIsIG1pbkRhdGUsIG1heERhdGUsCgkJCQkJcm93ID4gMCB8fCBjb2wgPiAwLCBtb250aE5hbWVzLCBtb250aE5hbWVzU2hvcnQgKSArIC8vIGRyYXcgbW9udGggaGVhZGVycwoJCQkJCSI8L2Rpdj48dGFibGUgY2xhc3M9J3VpLWRhdGVwaWNrZXItY2FsZW5kYXInPjx0aGVhZD4iICsKCQkJCQkiPHRyPiI7CgkJCQl0aGVhZCA9ICggc2hvd1dlZWsgPyAiPHRoIGNsYXNzPSd1aS1kYXRlcGlja2VyLXdlZWstY29sJz4iICsgdGhpcy5fZ2V0KCBpbnN0LCAid2Vla0hlYWRlciIgKSArICI8L3RoPiIgOiAiIiApOwoJCQkJZm9yICggZG93ID0gMDsgZG93IDwgNzsgZG93KysgKSB7IC8vIGRheXMgb2YgdGhlIHdlZWsKCQkJCQlkYXkgPSAoIGRvdyArIGZpcnN0RGF5ICkgJSA3OwoJCQkJCXRoZWFkICs9ICI8dGggc2NvcGU9J2NvbCciICsgKCAoIGRvdyArIGZpcnN0RGF5ICsgNiApICUgNyA+PSA1ID8gIiBjbGFzcz0ndWktZGF0ZXBpY2tlci13ZWVrLWVuZCciIDogIiIgKSArICI+IiArCgkJCQkJCSI8c3BhbiB0aXRsZT0nIiArIGRheU5hbWVzWyBkYXkgXSArICInPiIgKyBkYXlOYW1lc01pblsgZGF5IF0gKyAiPC9zcGFuPjwvdGg+IjsKCQkJCX0KCQkJCWNhbGVuZGVyICs9IHRoZWFkICsgIjwvdHI+PC90aGVhZD48dGJvZHk+IjsKCQkJCWRheXNJbk1vbnRoID0gdGhpcy5fZ2V0RGF5c0luTW9udGgoIGRyYXdZZWFyLCBkcmF3TW9udGggKTsKCQkJCWlmICggZHJhd1llYXIgPT09IGluc3Quc2VsZWN0ZWRZZWFyICYmIGRyYXdNb250aCA9PT0gaW5zdC5zZWxlY3RlZE1vbnRoICkgewoJCQkJCWluc3Quc2VsZWN0ZWREYXkgPSBNYXRoLm1pbiggaW5zdC5zZWxlY3RlZERheSwgZGF5c0luTW9udGggKTsKCQkJCX0KCQkJCWxlYWREYXlzID0gKCB0aGlzLl9nZXRGaXJzdERheU9mTW9udGgoIGRyYXdZZWFyLCBkcmF3TW9udGggKSAtIGZpcnN0RGF5ICsgNyApICUgNzsKCQkJCWN1clJvd3MgPSBNYXRoLmNlaWwoICggbGVhZERheXMgKyBkYXlzSW5Nb250aCApIC8gNyApOyAvLyBjYWxjdWxhdGUgdGhlIG51bWJlciBvZiByb3dzIHRvIGdlbmVyYXRlCgkJCQludW1Sb3dzID0gKCBpc011bHRpTW9udGggPyB0aGlzLm1heFJvd3MgPiBjdXJSb3dzID8gdGhpcy5tYXhSb3dzIDogY3VyUm93cyA6IGN1clJvd3MgKTsgLy9JZiBtdWx0aXBsZSBtb250aHMsIHVzZSB0aGUgaGlnaGVyIG51bWJlciBvZiByb3dzIChzZWUgIzcwNDMpCgkJCQl0aGlzLm1heFJvd3MgPSBudW1Sb3dzOwoJCQkJcHJpbnREYXRlID0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBkcmF3WWVhciwgZHJhd01vbnRoLCAxIC0gbGVhZERheXMgKSApOwoJCQkJZm9yICggZFJvdyA9IDA7IGRSb3cgPCBudW1Sb3dzOyBkUm93KysgKSB7IC8vIGNyZWF0ZSBkYXRlIHBpY2tlciByb3dzCgkJCQkJY2FsZW5kZXIgKz0gIjx0cj4iOwoJCQkJCXRib2R5ID0gKCAhc2hvd1dlZWsgPyAiIiA6ICI8dGQgY2xhc3M9J3VpLWRhdGVwaWNrZXItd2Vlay1jb2wnPiIgKwoJCQkJCQl0aGlzLl9nZXQoIGluc3QsICJjYWxjdWxhdGVXZWVrIiApKCBwcmludERhdGUgKSArICI8L3RkPiIgKTsKCQkJCQlmb3IgKCBkb3cgPSAwOyBkb3cgPCA3OyBkb3crKyApIHsgLy8gY3JlYXRlIGRhdGUgcGlja2VyIGRheXMKCQkJCQkJZGF5U2V0dGluZ3MgPSAoIGJlZm9yZVNob3dEYXkgPwoJCQkJCQkJYmVmb3JlU2hvd0RheS5hcHBseSggKCBpbnN0LmlucHV0ID8gaW5zdC5pbnB1dFsgMCBdIDogbnVsbCApLCBbIHByaW50RGF0ZSBdICkgOiBbIHRydWUsICIiIF0gKTsKCQkJCQkJb3RoZXJNb250aCA9ICggcHJpbnREYXRlLmdldE1vbnRoKCkgIT09IGRyYXdNb250aCApOwoJCQkJCQl1bnNlbGVjdGFibGUgPSAoIG90aGVyTW9udGggJiYgIXNlbGVjdE90aGVyTW9udGhzICkgfHwgIWRheVNldHRpbmdzWyAwIF0gfHwKCQkJCQkJCSggbWluRGF0ZSAmJiBwcmludERhdGUgPCBtaW5EYXRlICkgfHwgKCBtYXhEYXRlICYmIHByaW50RGF0ZSA+IG1heERhdGUgKTsKCQkJCQkJdGJvZHkgKz0gIjx0ZCBjbGFzcz0nIiArCgkJCQkJCQkoICggZG93ICsgZmlyc3REYXkgKyA2ICkgJSA3ID49IDUgPyAiIHVpLWRhdGVwaWNrZXItd2Vlay1lbmQiIDogIiIgKSArIC8vIGhpZ2hsaWdodCB3ZWVrZW5kcwoJCQkJCQkJKCBvdGhlck1vbnRoID8gIiB1aS1kYXRlcGlja2VyLW90aGVyLW1vbnRoIiA6ICIiICkgKyAvLyBoaWdobGlnaHQgZGF5cyBmcm9tIG90aGVyIG1vbnRocwoJCQkJCQkJKCAoIHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IHNlbGVjdGVkRGF0ZS5nZXRUaW1lKCkgJiYgZHJhd01vbnRoID09PSBpbnN0LnNlbGVjdGVkTW9udGggJiYgaW5zdC5fa2V5RXZlbnQgKSB8fCAvLyB1c2VyIHByZXNzZWQga2V5CgkJCQkJCQkoIGRlZmF1bHREYXRlLmdldFRpbWUoKSA9PT0gcHJpbnREYXRlLmdldFRpbWUoKSAmJiBkZWZhdWx0RGF0ZS5nZXRUaW1lKCkgPT09IHNlbGVjdGVkRGF0ZS5nZXRUaW1lKCkgKSA/CgoJCQkJCQkJLy8gb3IgZGVmYXVsdERhdGUgaXMgY3VycmVudCBwcmludGVkRGF0ZSBhbmQgZGVmYXVsdERhdGUgaXMgc2VsZWN0ZWREYXRlCgkJCQkJCQkiICIgKyB0aGlzLl9kYXlPdmVyQ2xhc3MgOiAiIiApICsgLy8gaGlnaGxpZ2h0IHNlbGVjdGVkIGRheQoJCQkJCQkJKCB1bnNlbGVjdGFibGUgPyAiICIgKyB0aGlzLl91bnNlbGVjdGFibGVDbGFzcyArICIgdWktc3RhdGUtZGlzYWJsZWQiIDogIiIgKSArICAvLyBoaWdobGlnaHQgdW5zZWxlY3RhYmxlIGRheXMKCQkJCQkJCSggb3RoZXJNb250aCAmJiAhc2hvd090aGVyTW9udGhzID8gIiIgOiAiICIgKyBkYXlTZXR0aW5nc1sgMSBdICsgLy8gaGlnaGxpZ2h0IGN1c3RvbSBkYXRlcwoJCQkJCQkJKCBwcmludERhdGUuZ2V0VGltZSgpID09PSBjdXJyZW50RGF0ZS5nZXRUaW1lKCkgPyAiICIgKyB0aGlzLl9jdXJyZW50Q2xhc3MgOiAiIiApICsgLy8gaGlnaGxpZ2h0IHNlbGVjdGVkIGRheQoJCQkJCQkJKCBwcmludERhdGUuZ2V0VGltZSgpID09PSB0b2RheS5nZXRUaW1lKCkgPyAiIHVpLWRhdGVwaWNrZXItdG9kYXkiIDogIiIgKSApICsgIiciICsgLy8gaGlnaGxpZ2h0IHRvZGF5IChpZiBkaWZmZXJlbnQpCgkJCQkJCQkoICggIW90aGVyTW9udGggfHwgc2hvd090aGVyTW9udGhzICkgJiYgZGF5U2V0dGluZ3NbIDIgXSA/ICIgdGl0bGU9JyIgKyBkYXlTZXR0aW5nc1sgMiBdLnJlcGxhY2UoIC8nL2csICImIzM5OyIgKSArICInIiA6ICIiICkgKyAvLyBjZWxsIHRpdGxlCgkJCQkJCQkoIHVuc2VsZWN0YWJsZSA/ICIiIDogIiBkYXRhLWhhbmRsZXI9J3NlbGVjdERheScgZGF0YS1ldmVudD0nY2xpY2snIGRhdGEtbW9udGg9JyIgKyBwcmludERhdGUuZ2V0TW9udGgoKSArICInIGRhdGEteWVhcj0nIiArIHByaW50RGF0ZS5nZXRGdWxsWWVhcigpICsgIiciICkgKyAiPiIgKyAvLyBhY3Rpb25zCgkJCQkJCQkoIG90aGVyTW9udGggJiYgIXNob3dPdGhlck1vbnRocyA/ICImI3hhMDsiIDogLy8gZGlzcGxheSBmb3Igb3RoZXIgbW9udGhzCgkJCQkJCQkoIHVuc2VsZWN0YWJsZSA/ICI8c3BhbiBjbGFzcz0ndWktc3RhdGUtZGVmYXVsdCc+IiArIHByaW50RGF0ZS5nZXREYXRlKCkgKyAiPC9zcGFuPiIgOiAiPGEgY2xhc3M9J3VpLXN0YXRlLWRlZmF1bHQiICsKCQkJCQkJCSggcHJpbnREYXRlLmdldFRpbWUoKSA9PT0gdG9kYXkuZ2V0VGltZSgpID8gIiB1aS1zdGF0ZS1oaWdobGlnaHQiIDogIiIgKSArCgkJCQkJCQkoIHByaW50RGF0ZS5nZXRUaW1lKCkgPT09IGN1cnJlbnREYXRlLmdldFRpbWUoKSA/ICIgdWktc3RhdGUtYWN0aXZlIiA6ICIiICkgKyAvLyBoaWdobGlnaHQgc2VsZWN0ZWQgZGF5CgkJCQkJCQkoIG90aGVyTW9udGggPyAiIHVpLXByaW9yaXR5LXNlY29uZGFyeSIgOiAiIiApICsgLy8gZGlzdGluZ3Vpc2ggZGF0ZXMgZnJvbSBvdGhlciBtb250aHMKCQkJCQkJCSInIGhyZWY9JyMnPiIgKyBwcmludERhdGUuZ2V0RGF0ZSgpICsgIjwvYT4iICkgKSArICI8L3RkPiI7IC8vIGRpc3BsYXkgc2VsZWN0YWJsZSBkYXRlCgkJCQkJCXByaW50RGF0ZS5zZXREYXRlKCBwcmludERhdGUuZ2V0RGF0ZSgpICsgMSApOwoJCQkJCQlwcmludERhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggcHJpbnREYXRlICk7CgkJCQkJfQoJCQkJCWNhbGVuZGVyICs9IHRib2R5ICsgIjwvdHI+IjsKCQkJCX0KCQkJCWRyYXdNb250aCsrOwoJCQkJaWYgKCBkcmF3TW9udGggPiAxMSApIHsKCQkJCQlkcmF3TW9udGggPSAwOwoJCQkJCWRyYXdZZWFyKys7CgkJCQl9CgkJCQljYWxlbmRlciArPSAiPC90Ym9keT48L3RhYmxlPiIgKyAoIGlzTXVsdGlNb250aCA/ICI8L2Rpdj4iICsKCQkJCQkJCSggKCBudW1Nb250aHNbIDAgXSA+IDAgJiYgY29sID09PSBudW1Nb250aHNbIDEgXSAtIDEgKSA/ICI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLXJvdy1icmVhayc+PC9kaXY+IiA6ICIiICkgOiAiIiApOwoJCQkJZ3JvdXAgKz0gY2FsZW5kZXI7CgkJCX0KCQkJaHRtbCArPSBncm91cDsKCQl9CgkJaHRtbCArPSBidXR0b25QYW5lbDsKCQlpbnN0Ll9rZXlFdmVudCA9IGZhbHNlOwoJCXJldHVybiBodG1sOwoJfSwKCgkvKiBHZW5lcmF0ZSB0aGUgbW9udGggYW5kIHllYXIgaGVhZGVyLiAqLwoJX2dlbmVyYXRlTW9udGhZZWFySGVhZGVyOiBmdW5jdGlvbiggaW5zdCwgZHJhd01vbnRoLCBkcmF3WWVhciwgbWluRGF0ZSwgbWF4RGF0ZSwKCQkJc2Vjb25kYXJ5LCBtb250aE5hbWVzLCBtb250aE5hbWVzU2hvcnQgKSB7CgoJCXZhciBpbk1pblllYXIsIGluTWF4WWVhciwgbW9udGgsIHllYXJzLCB0aGlzWWVhciwgZGV0ZXJtaW5lWWVhciwgeWVhciwgZW5kWWVhciwKCQkJY2hhbmdlTW9udGggPSB0aGlzLl9nZXQoIGluc3QsICJjaGFuZ2VNb250aCIgKSwKCQkJY2hhbmdlWWVhciA9IHRoaXMuX2dldCggaW5zdCwgImNoYW5nZVllYXIiICksCgkJCXNob3dNb250aEFmdGVyWWVhciA9IHRoaXMuX2dldCggaW5zdCwgInNob3dNb250aEFmdGVyWWVhciIgKSwKCQkJaHRtbCA9ICI8ZGl2IGNsYXNzPSd1aS1kYXRlcGlja2VyLXRpdGxlJz4iLAoJCQltb250aEh0bWwgPSAiIjsKCgkJLy8gTW9udGggc2VsZWN0aW9uCgkJaWYgKCBzZWNvbmRhcnkgfHwgIWNoYW5nZU1vbnRoICkgewoJCQltb250aEh0bWwgKz0gIjxzcGFuIGNsYXNzPSd1aS1kYXRlcGlja2VyLW1vbnRoJz4iICsgbW9udGhOYW1lc1sgZHJhd01vbnRoIF0gKyAiPC9zcGFuPiI7CgkJfSBlbHNlIHsKCQkJaW5NaW5ZZWFyID0gKCBtaW5EYXRlICYmIG1pbkRhdGUuZ2V0RnVsbFllYXIoKSA9PT0gZHJhd1llYXIgKTsKCQkJaW5NYXhZZWFyID0gKCBtYXhEYXRlICYmIG1heERhdGUuZ2V0RnVsbFllYXIoKSA9PT0gZHJhd1llYXIgKTsKCQkJbW9udGhIdG1sICs9ICI8c2VsZWN0IGNsYXNzPSd1aS1kYXRlcGlja2VyLW1vbnRoJyBkYXRhLWhhbmRsZXI9J3NlbGVjdE1vbnRoJyBkYXRhLWV2ZW50PSdjaGFuZ2UnPiI7CgkJCWZvciAoIG1vbnRoID0gMDsgbW9udGggPCAxMjsgbW9udGgrKyApIHsKCQkJCWlmICggKCAhaW5NaW5ZZWFyIHx8IG1vbnRoID49IG1pbkRhdGUuZ2V0TW9udGgoKSApICYmICggIWluTWF4WWVhciB8fCBtb250aCA8PSBtYXhEYXRlLmdldE1vbnRoKCkgKSApIHsKCQkJCQltb250aEh0bWwgKz0gIjxvcHRpb24gdmFsdWU9JyIgKyBtb250aCArICInIiArCgkJCQkJCSggbW9udGggPT09IGRyYXdNb250aCA/ICIgc2VsZWN0ZWQ9J3NlbGVjdGVkJyIgOiAiIiApICsKCQkJCQkJIj4iICsgbW9udGhOYW1lc1Nob3J0WyBtb250aCBdICsgIjwvb3B0aW9uPiI7CgkJCQl9CgkJCX0KCQkJbW9udGhIdG1sICs9ICI8L3NlbGVjdD4iOwoJCX0KCgkJaWYgKCAhc2hvd01vbnRoQWZ0ZXJZZWFyICkgewoJCQlodG1sICs9IG1vbnRoSHRtbCArICggc2Vjb25kYXJ5IHx8ICEoIGNoYW5nZU1vbnRoICYmIGNoYW5nZVllYXIgKSA/ICImI3hhMDsiIDogIiIgKTsKCQl9CgoJCS8vIFllYXIgc2VsZWN0aW9uCgkJaWYgKCAhaW5zdC55ZWFyc2h0bWwgKSB7CgkJCWluc3QueWVhcnNodG1sID0gIiI7CgkJCWlmICggc2Vjb25kYXJ5IHx8ICFjaGFuZ2VZZWFyICkgewoJCQkJaHRtbCArPSAiPHNwYW4gY2xhc3M9J3VpLWRhdGVwaWNrZXIteWVhcic+IiArIGRyYXdZZWFyICsgIjwvc3Bhbj4iOwoJCQl9IGVsc2UgewoKCQkJCS8vIGRldGVybWluZSByYW5nZSBvZiB5ZWFycyB0byBkaXNwbGF5CgkJCQl5ZWFycyA9IHRoaXMuX2dldCggaW5zdCwgInllYXJSYW5nZSIgKS5zcGxpdCggIjoiICk7CgkJCQl0aGlzWWVhciA9IG5ldyBEYXRlKCkuZ2V0RnVsbFllYXIoKTsKCQkJCWRldGVybWluZVllYXIgPSBmdW5jdGlvbiggdmFsdWUgKSB7CgkJCQkJdmFyIHllYXIgPSAoIHZhbHVlLm1hdGNoKCAvY1srXC1dLiovICkgPyBkcmF3WWVhciArIHBhcnNlSW50KCB2YWx1ZS5zdWJzdHJpbmcoIDEgKSwgMTAgKSA6CgkJCQkJCSggdmFsdWUubWF0Y2goIC9bK1wtXS4qLyApID8gdGhpc1llYXIgKyBwYXJzZUludCggdmFsdWUsIDEwICkgOgoJCQkJCQlwYXJzZUludCggdmFsdWUsIDEwICkgKSApOwoJCQkJCXJldHVybiAoIGlzTmFOKCB5ZWFyICkgPyB0aGlzWWVhciA6IHllYXIgKTsKCQkJCX07CgkJCQl5ZWFyID0gZGV0ZXJtaW5lWWVhciggeWVhcnNbIDAgXSApOwoJCQkJZW5kWWVhciA9IE1hdGgubWF4KCB5ZWFyLCBkZXRlcm1pbmVZZWFyKCB5ZWFyc1sgMSBdIHx8ICIiICkgKTsKCQkJCXllYXIgPSAoIG1pbkRhdGUgPyBNYXRoLm1heCggeWVhciwgbWluRGF0ZS5nZXRGdWxsWWVhcigpICkgOiB5ZWFyICk7CgkJCQllbmRZZWFyID0gKCBtYXhEYXRlID8gTWF0aC5taW4oIGVuZFllYXIsIG1heERhdGUuZ2V0RnVsbFllYXIoKSApIDogZW5kWWVhciApOwoJCQkJaW5zdC55ZWFyc2h0bWwgKz0gIjxzZWxlY3QgY2xhc3M9J3VpLWRhdGVwaWNrZXIteWVhcicgZGF0YS1oYW5kbGVyPSdzZWxlY3RZZWFyJyBkYXRhLWV2ZW50PSdjaGFuZ2UnPiI7CgkJCQlmb3IgKCA7IHllYXIgPD0gZW5kWWVhcjsgeWVhcisrICkgewoJCQkJCWluc3QueWVhcnNodG1sICs9ICI8b3B0aW9uIHZhbHVlPSciICsgeWVhciArICInIiArCgkJCQkJCSggeWVhciA9PT0gZHJhd1llYXIgPyAiIHNlbGVjdGVkPSdzZWxlY3RlZCciIDogIiIgKSArCgkJCQkJCSI+IiArIHllYXIgKyAiPC9vcHRpb24+IjsKCQkJCX0KCQkJCWluc3QueWVhcnNodG1sICs9ICI8L3NlbGVjdD4iOwoKCQkJCWh0bWwgKz0gaW5zdC55ZWFyc2h0bWw7CgkJCQlpbnN0LnllYXJzaHRtbCA9IG51bGw7CgkJCX0KCQl9CgoJCWh0bWwgKz0gdGhpcy5fZ2V0KCBpbnN0LCAieWVhclN1ZmZpeCIgKTsKCQlpZiAoIHNob3dNb250aEFmdGVyWWVhciApIHsKCQkJaHRtbCArPSAoIHNlY29uZGFyeSB8fCAhKCBjaGFuZ2VNb250aCAmJiBjaGFuZ2VZZWFyICkgPyAiJiN4YTA7IiA6ICIiICkgKyBtb250aEh0bWw7CgkJfQoJCWh0bWwgKz0gIjwvZGl2PiI7IC8vIENsb3NlIGRhdGVwaWNrZXJfaGVhZGVyCgkJcmV0dXJuIGh0bWw7Cgl9LAoKCS8qIEFkanVzdCBvbmUgb2YgdGhlIGRhdGUgc3ViLWZpZWxkcy4gKi8KCV9hZGp1c3RJbnN0RGF0ZTogZnVuY3Rpb24oIGluc3QsIG9mZnNldCwgcGVyaW9kICkgewoJCXZhciB5ZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgKyAoIHBlcmlvZCA9PT0gIlkiID8gb2Zmc2V0IDogMCApLAoJCQltb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCArICggcGVyaW9kID09PSAiTSIgPyBvZmZzZXQgOiAwICksCgkJCWRheSA9IE1hdGgubWluKCBpbnN0LnNlbGVjdGVkRGF5LCB0aGlzLl9nZXREYXlzSW5Nb250aCggeWVhciwgbW9udGggKSApICsgKCBwZXJpb2QgPT09ICJEIiA/IG9mZnNldCA6IDAgKSwKCQkJZGF0ZSA9IHRoaXMuX3Jlc3RyaWN0TWluTWF4KCBpbnN0LCB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIHllYXIsIG1vbnRoLCBkYXkgKSApICk7CgoJCWluc3Quc2VsZWN0ZWREYXkgPSBkYXRlLmdldERhdGUoKTsKCQlpbnN0LmRyYXdNb250aCA9IGluc3Quc2VsZWN0ZWRNb250aCA9IGRhdGUuZ2V0TW9udGgoKTsKCQlpbnN0LmRyYXdZZWFyID0gaW5zdC5zZWxlY3RlZFllYXIgPSBkYXRlLmdldEZ1bGxZZWFyKCk7CgkJaWYgKCBwZXJpb2QgPT09ICJNIiB8fCBwZXJpb2QgPT09ICJZIiApIHsKCQkJdGhpcy5fbm90aWZ5Q2hhbmdlKCBpbnN0ICk7CgkJfQoJfSwKCgkvKiBFbnN1cmUgYSBkYXRlIGlzIHdpdGhpbiBhbnkgbWluL21heCBib3VuZHMuICovCglfcmVzdHJpY3RNaW5NYXg6IGZ1bmN0aW9uKCBpbnN0LCBkYXRlICkgewoJCXZhciBtaW5EYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSggaW5zdCwgIm1pbiIgKSwKCQkJbWF4RGF0ZSA9IHRoaXMuX2dldE1pbk1heERhdGUoIGluc3QsICJtYXgiICksCgkJCW5ld0RhdGUgPSAoIG1pbkRhdGUgJiYgZGF0ZSA8IG1pbkRhdGUgPyBtaW5EYXRlIDogZGF0ZSApOwoJCXJldHVybiAoIG1heERhdGUgJiYgbmV3RGF0ZSA+IG1heERhdGUgPyBtYXhEYXRlIDogbmV3RGF0ZSApOwoJfSwKCgkvKiBOb3RpZnkgY2hhbmdlIG9mIG1vbnRoL3llYXIuICovCglfbm90aWZ5Q2hhbmdlOiBmdW5jdGlvbiggaW5zdCApIHsKCQl2YXIgb25DaGFuZ2UgPSB0aGlzLl9nZXQoIGluc3QsICJvbkNoYW5nZU1vbnRoWWVhciIgKTsKCQlpZiAoIG9uQ2hhbmdlICkgewoJCQlvbkNoYW5nZS5hcHBseSggKCBpbnN0LmlucHV0ID8gaW5zdC5pbnB1dFsgMCBdIDogbnVsbCApLAoJCQkJWyBpbnN0LnNlbGVjdGVkWWVhciwgaW5zdC5zZWxlY3RlZE1vbnRoICsgMSwgaW5zdCBdICk7CgkJfQoJfSwKCgkvKiBEZXRlcm1pbmUgdGhlIG51bWJlciBvZiBtb250aHMgdG8gc2hvdy4gKi8KCV9nZXROdW1iZXJPZk1vbnRoczogZnVuY3Rpb24oIGluc3QgKSB7CgkJdmFyIG51bU1vbnRocyA9IHRoaXMuX2dldCggaW5zdCwgIm51bWJlck9mTW9udGhzIiApOwoJCXJldHVybiAoIG51bU1vbnRocyA9PSBudWxsID8gWyAxLCAxIF0gOiAoIHR5cGVvZiBudW1Nb250aHMgPT09ICJudW1iZXIiID8gWyAxLCBudW1Nb250aHMgXSA6IG51bU1vbnRocyApICk7Cgl9LAoKCS8qIERldGVybWluZSB0aGUgY3VycmVudCBtYXhpbXVtIGRhdGUgLSBlbnN1cmUgbm8gdGltZSBjb21wb25lbnRzIGFyZSBzZXQuICovCglfZ2V0TWluTWF4RGF0ZTogZnVuY3Rpb24oIGluc3QsIG1pbk1heCApIHsKCQlyZXR1cm4gdGhpcy5fZGV0ZXJtaW5lRGF0ZSggaW5zdCwgdGhpcy5fZ2V0KCBpbnN0LCBtaW5NYXggKyAiRGF0ZSIgKSwgbnVsbCApOwoJfSwKCgkvKiBGaW5kIHRoZSBudW1iZXIgb2YgZGF5cyBpbiBhIGdpdmVuIG1vbnRoLiAqLwoJX2dldERheXNJbk1vbnRoOiBmdW5jdGlvbiggeWVhciwgbW9udGggKSB7CgkJcmV0dXJuIDMyIC0gdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCB5ZWFyLCBtb250aCwgMzIgKSApLmdldERhdGUoKTsKCX0sCgoJLyogRmluZCB0aGUgZGF5IG9mIHRoZSB3ZWVrIG9mIHRoZSBmaXJzdCBvZiBhIG1vbnRoLiAqLwoJX2dldEZpcnN0RGF5T2ZNb250aDogZnVuY3Rpb24oIHllYXIsIG1vbnRoICkgewoJCXJldHVybiBuZXcgRGF0ZSggeWVhciwgbW9udGgsIDEgKS5nZXREYXkoKTsKCX0sCgoJLyogRGV0ZXJtaW5lcyBpZiB3ZSBzaG91bGQgYWxsb3cgYSAibmV4dC9wcmV2IiBtb250aCBkaXNwbGF5IGNoYW5nZS4gKi8KCV9jYW5BZGp1c3RNb250aDogZnVuY3Rpb24oIGluc3QsIG9mZnNldCwgY3VyWWVhciwgY3VyTW9udGggKSB7CgkJdmFyIG51bU1vbnRocyA9IHRoaXMuX2dldE51bWJlck9mTW9udGhzKCBpbnN0ICksCgkJCWRhdGUgPSB0aGlzLl9kYXlsaWdodFNhdmluZ0FkanVzdCggbmV3IERhdGUoIGN1clllYXIsCgkJCWN1ck1vbnRoICsgKCBvZmZzZXQgPCAwID8gb2Zmc2V0IDogbnVtTW9udGhzWyAwIF0gKiBudW1Nb250aHNbIDEgXSApLCAxICkgKTsKCgkJaWYgKCBvZmZzZXQgPCAwICkgewoJCQlkYXRlLnNldERhdGUoIHRoaXMuX2dldERheXNJbk1vbnRoKCBkYXRlLmdldEZ1bGxZZWFyKCksIGRhdGUuZ2V0TW9udGgoKSApICk7CgkJfQoJCXJldHVybiB0aGlzLl9pc0luUmFuZ2UoIGluc3QsIGRhdGUgKTsKCX0sCgoJLyogSXMgdGhlIGdpdmVuIGRhdGUgaW4gdGhlIGFjY2VwdGVkIHJhbmdlPyAqLwoJX2lzSW5SYW5nZTogZnVuY3Rpb24oIGluc3QsIGRhdGUgKSB7CgkJdmFyIHllYXJTcGxpdCwgY3VycmVudFllYXIsCgkJCW1pbkRhdGUgPSB0aGlzLl9nZXRNaW5NYXhEYXRlKCBpbnN0LCAibWluIiApLAoJCQltYXhEYXRlID0gdGhpcy5fZ2V0TWluTWF4RGF0ZSggaW5zdCwgIm1heCIgKSwKCQkJbWluWWVhciA9IG51bGwsCgkJCW1heFllYXIgPSBudWxsLAoJCQl5ZWFycyA9IHRoaXMuX2dldCggaW5zdCwgInllYXJSYW5nZSIgKTsKCQkJaWYgKCB5ZWFycyApIHsKCQkJCXllYXJTcGxpdCA9IHllYXJzLnNwbGl0KCAiOiIgKTsKCQkJCWN1cnJlbnRZZWFyID0gbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpOwoJCQkJbWluWWVhciA9IHBhcnNlSW50KCB5ZWFyU3BsaXRbIDAgXSwgMTAgKTsKCQkJCW1heFllYXIgPSBwYXJzZUludCggeWVhclNwbGl0WyAxIF0sIDEwICk7CgkJCQlpZiAoIHllYXJTcGxpdFsgMCBdLm1hdGNoKCAvWytcLV0uKi8gKSApIHsKCQkJCQltaW5ZZWFyICs9IGN1cnJlbnRZZWFyOwoJCQkJfQoJCQkJaWYgKCB5ZWFyU3BsaXRbIDEgXS5tYXRjaCggL1srXC1dLiovICkgKSB7CgkJCQkJbWF4WWVhciArPSBjdXJyZW50WWVhcjsKCQkJCX0KCQkJfQoKCQlyZXR1cm4gKCAoICFtaW5EYXRlIHx8IGRhdGUuZ2V0VGltZSgpID49IG1pbkRhdGUuZ2V0VGltZSgpICkgJiYKCQkJKCAhbWF4RGF0ZSB8fCBkYXRlLmdldFRpbWUoKSA8PSBtYXhEYXRlLmdldFRpbWUoKSApICYmCgkJCSggIW1pblllYXIgfHwgZGF0ZS5nZXRGdWxsWWVhcigpID49IG1pblllYXIgKSAmJgoJCQkoICFtYXhZZWFyIHx8IGRhdGUuZ2V0RnVsbFllYXIoKSA8PSBtYXhZZWFyICkgKTsKCX0sCgoJLyogUHJvdmlkZSB0aGUgY29uZmlndXJhdGlvbiBzZXR0aW5ncyBmb3IgZm9ybWF0dGluZy9wYXJzaW5nLiAqLwoJX2dldEZvcm1hdENvbmZpZzogZnVuY3Rpb24oIGluc3QgKSB7CgkJdmFyIHNob3J0WWVhckN1dG9mZiA9IHRoaXMuX2dldCggaW5zdCwgInNob3J0WWVhckN1dG9mZiIgKTsKCQlzaG9ydFllYXJDdXRvZmYgPSAoIHR5cGVvZiBzaG9ydFllYXJDdXRvZmYgIT09ICJzdHJpbmciID8gc2hvcnRZZWFyQ3V0b2ZmIDoKCQkJbmV3IERhdGUoKS5nZXRGdWxsWWVhcigpICUgMTAwICsgcGFyc2VJbnQoIHNob3J0WWVhckN1dG9mZiwgMTAgKSApOwoJCXJldHVybiB7IHNob3J0WWVhckN1dG9mZjogc2hvcnRZZWFyQ3V0b2ZmLAoJCQlkYXlOYW1lc1Nob3J0OiB0aGlzLl9nZXQoIGluc3QsICJkYXlOYW1lc1Nob3J0IiApLCBkYXlOYW1lczogdGhpcy5fZ2V0KCBpbnN0LCAiZGF5TmFtZXMiICksCgkJCW1vbnRoTmFtZXNTaG9ydDogdGhpcy5fZ2V0KCBpbnN0LCAibW9udGhOYW1lc1Nob3J0IiApLCBtb250aE5hbWVzOiB0aGlzLl9nZXQoIGluc3QsICJtb250aE5hbWVzIiApIH07Cgl9LAoKCS8qIEZvcm1hdCB0aGUgZ2l2ZW4gZGF0ZSBmb3IgZGlzcGxheS4gKi8KCV9mb3JtYXREYXRlOiBmdW5jdGlvbiggaW5zdCwgZGF5LCBtb250aCwgeWVhciApIHsKCQlpZiAoICFkYXkgKSB7CgkJCWluc3QuY3VycmVudERheSA9IGluc3Quc2VsZWN0ZWREYXk7CgkJCWluc3QuY3VycmVudE1vbnRoID0gaW5zdC5zZWxlY3RlZE1vbnRoOwoJCQlpbnN0LmN1cnJlbnRZZWFyID0gaW5zdC5zZWxlY3RlZFllYXI7CgkJfQoJCXZhciBkYXRlID0gKCBkYXkgPyAoIHR5cGVvZiBkYXkgPT09ICJvYmplY3QiID8gZGF5IDoKCQkJdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCB5ZWFyLCBtb250aCwgZGF5ICkgKSApIDoKCQkJdGhpcy5fZGF5bGlnaHRTYXZpbmdBZGp1c3QoIG5ldyBEYXRlKCBpbnN0LmN1cnJlbnRZZWFyLCBpbnN0LmN1cnJlbnRNb250aCwgaW5zdC5jdXJyZW50RGF5ICkgKSApOwoJCXJldHVybiB0aGlzLmZvcm1hdERhdGUoIHRoaXMuX2dldCggaW5zdCwgImRhdGVGb3JtYXQiICksIGRhdGUsIHRoaXMuX2dldEZvcm1hdENvbmZpZyggaW5zdCApICk7Cgl9Cn0gKTsKCi8qCiAqIEJpbmQgaG92ZXIgZXZlbnRzIGZvciBkYXRlcGlja2VyIGVsZW1lbnRzLgogKiBEb25lIHZpYSBkZWxlZ2F0ZSBzbyB0aGUgYmluZGluZyBvbmx5IG9jY3VycyBvbmNlIGluIHRoZSBsaWZldGltZSBvZiB0aGUgcGFyZW50IGRpdi4KICogR2xvYmFsIGRhdGVwaWNrZXJfaW5zdEFjdGl2ZSwgc2V0IGJ5IF91cGRhdGVEYXRlcGlja2VyIGFsbG93cyB0aGUgaGFuZGxlcnMgdG8gZmluZCB0aGVpciB3YXkgYmFjayB0byB0aGUgYWN0aXZlIHBpY2tlci4KICovCmZ1bmN0aW9uIGRhdGVwaWNrZXJfYmluZEhvdmVyKCBkcERpdiApIHsKCXZhciBzZWxlY3RvciA9ICJidXR0b24sIC51aS1kYXRlcGlja2VyLXByZXYsIC51aS1kYXRlcGlja2VyLW5leHQsIC51aS1kYXRlcGlja2VyLWNhbGVuZGFyIHRkIGEiOwoJcmV0dXJuIGRwRGl2Lm9uKCAibW91c2VvdXQiLCBzZWxlY3RvciwgZnVuY3Rpb24oKSB7CgkJCSQoIHRoaXMgKS5yZW1vdmVDbGFzcyggInVpLXN0YXRlLWhvdmVyIiApOwoJCQlpZiAoIHRoaXMuY2xhc3NOYW1lLmluZGV4T2YoICJ1aS1kYXRlcGlja2VyLXByZXYiICkgIT09IC0xICkgewoJCQkJJCggdGhpcyApLnJlbW92ZUNsYXNzKCAidWktZGF0ZXBpY2tlci1wcmV2LWhvdmVyIiApOwoJCQl9CgkJCWlmICggdGhpcy5jbGFzc05hbWUuaW5kZXhPZiggInVpLWRhdGVwaWNrZXItbmV4dCIgKSAhPT0gLTEgKSB7CgkJCQkkKCB0aGlzICkucmVtb3ZlQ2xhc3MoICJ1aS1kYXRlcGlja2VyLW5leHQtaG92ZXIiICk7CgkJCX0KCQl9ICkKCQkub24oICJtb3VzZW92ZXIiLCBzZWxlY3RvciwgZGF0ZXBpY2tlcl9oYW5kbGVNb3VzZW92ZXIgKTsKfQoKZnVuY3Rpb24gZGF0ZXBpY2tlcl9oYW5kbGVNb3VzZW92ZXIoKSB7CglpZiAoICEkLmRhdGVwaWNrZXIuX2lzRGlzYWJsZWREYXRlcGlja2VyKCBkYXRlcGlja2VyX2luc3RBY3RpdmUuaW5saW5lID8gZGF0ZXBpY2tlcl9pbnN0QWN0aXZlLmRwRGl2LnBhcmVudCgpWyAwIF0gOiBkYXRlcGlja2VyX2luc3RBY3RpdmUuaW5wdXRbIDAgXSApICkgewoJCSQoIHRoaXMgKS5wYXJlbnRzKCAiLnVpLWRhdGVwaWNrZXItY2FsZW5kYXIiICkuZmluZCggImEiICkucmVtb3ZlQ2xhc3MoICJ1aS1zdGF0ZS1ob3ZlciIgKTsKCQkkKCB0aGlzICkuYWRkQ2xhc3MoICJ1aS1zdGF0ZS1ob3ZlciIgKTsKCQlpZiAoIHRoaXMuY2xhc3NOYW1lLmluZGV4T2YoICJ1aS1kYXRlcGlja2VyLXByZXYiICkgIT09IC0xICkgewoJCQkkKCB0aGlzICkuYWRkQ2xhc3MoICJ1aS1kYXRlcGlja2VyLXByZXYtaG92ZXIiICk7CgkJfQoJCWlmICggdGhpcy5jbGFzc05hbWUuaW5kZXhPZiggInVpLWRhdGVwaWNrZXItbmV4dCIgKSAhPT0gLTEgKSB7CgkJCSQoIHRoaXMgKS5hZGRDbGFzcyggInVpLWRhdGVwaWNrZXItbmV4dC1ob3ZlciIgKTsKCQl9Cgl9Cn0KCi8qIGpRdWVyeSBleHRlbmQgbm93IGlnbm9yZXMgbnVsbHMhICovCmZ1bmN0aW9uIGRhdGVwaWNrZXJfZXh0ZW5kUmVtb3ZlKCB0YXJnZXQsIHByb3BzICkgewoJJC5leHRlbmQoIHRhcmdldCwgcHJvcHMgKTsKCWZvciAoIHZhciBuYW1lIGluIHByb3BzICkgewoJCWlmICggcHJvcHNbIG5hbWUgXSA9PSBudWxsICkgewoJCQl0YXJnZXRbIG5hbWUgXSA9IHByb3BzWyBuYW1lIF07CgkJfQoJfQoJcmV0dXJuIHRhcmdldDsKfQoKLyogSW52b2tlIHRoZSBkYXRlcGlja2VyIGZ1bmN0aW9uYWxpdHkuCiAgIEBwYXJhbSAgb3B0aW9ucyAgc3RyaW5nIC0gYSBjb21tYW5kLCBvcHRpb25hbGx5IGZvbGxvd2VkIGJ5IGFkZGl0aW9uYWwgcGFyYW1ldGVycyBvcgoJCQkJCU9iamVjdCAtIHNldHRpbmdzIGZvciBhdHRhY2hpbmcgbmV3IGRhdGVwaWNrZXIgZnVuY3Rpb25hbGl0eQogICBAcmV0dXJuICBqUXVlcnkgb2JqZWN0ICovCiQuZm4uZGF0ZXBpY2tlciA9IGZ1bmN0aW9uKCBvcHRpb25zICkgewoKCS8qIFZlcmlmeSBhbiBlbXB0eSBjb2xsZWN0aW9uIHdhc24ndCBwYXNzZWQgLSBGaXhlcyAjNjk3NiAqLwoJaWYgKCAhdGhpcy5sZW5ndGggKSB7CgkJcmV0dXJuIHRoaXM7Cgl9CgoJLyogSW5pdGlhbGlzZSB0aGUgZGF0ZSBwaWNrZXIuICovCglpZiAoICEkLmRhdGVwaWNrZXIuaW5pdGlhbGl6ZWQgKSB7CgkJJCggZG9jdW1lbnQgKS5vbiggIm1vdXNlZG93biIsICQuZGF0ZXBpY2tlci5fY2hlY2tFeHRlcm5hbENsaWNrICk7CgkJJC5kYXRlcGlja2VyLmluaXRpYWxpemVkID0gdHJ1ZTsKCX0KCgkvKiBBcHBlbmQgZGF0ZXBpY2tlciBtYWluIGNvbnRhaW5lciB0byBib2R5IGlmIG5vdCBleGlzdC4gKi8KCWlmICggJCggIiMiICsgJC5kYXRlcGlja2VyLl9tYWluRGl2SWQgKS5sZW5ndGggPT09IDAgKSB7CgkJJCggImJvZHkiICkuYXBwZW5kKCAkLmRhdGVwaWNrZXIuZHBEaXYgKTsKCX0KCgl2YXIgb3RoZXJBcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoIGFyZ3VtZW50cywgMSApOwoJaWYgKCB0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgJiYgKCBvcHRpb25zID09PSAiaXNEaXNhYmxlZCIgfHwgb3B0aW9ucyA9PT0gImdldERhdGUiIHx8IG9wdGlvbnMgPT09ICJ3aWRnZXQiICkgKSB7CgkJcmV0dXJuICQuZGF0ZXBpY2tlclsgIl8iICsgb3B0aW9ucyArICJEYXRlcGlja2VyIiBdLgoJCQlhcHBseSggJC5kYXRlcGlja2VyLCBbIHRoaXNbIDAgXSBdLmNvbmNhdCggb3RoZXJBcmdzICkgKTsKCX0KCWlmICggb3B0aW9ucyA9PT0gIm9wdGlvbiIgJiYgYXJndW1lbnRzLmxlbmd0aCA9PT0gMiAmJiB0eXBlb2YgYXJndW1lbnRzWyAxIF0gPT09ICJzdHJpbmciICkgewoJCXJldHVybiAkLmRhdGVwaWNrZXJbICJfIiArIG9wdGlvbnMgKyAiRGF0ZXBpY2tlciIgXS4KCQkJYXBwbHkoICQuZGF0ZXBpY2tlciwgWyB0aGlzWyAwIF0gXS5jb25jYXQoIG90aGVyQXJncyApICk7Cgl9CglyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHsKCQl0eXBlb2Ygb3B0aW9ucyA9PT0gInN0cmluZyIgPwoJCQkkLmRhdGVwaWNrZXJbICJfIiArIG9wdGlvbnMgKyAiRGF0ZXBpY2tlciIgXS4KCQkJCWFwcGx5KCAkLmRhdGVwaWNrZXIsIFsgdGhpcyBdLmNvbmNhdCggb3RoZXJBcmdzICkgKSA6CgkJCSQuZGF0ZXBpY2tlci5fYXR0YWNoRGF0ZXBpY2tlciggdGhpcywgb3B0aW9ucyApOwoJfSApOwp9OwoKJC5kYXRlcGlja2VyID0gbmV3IERhdGVwaWNrZXIoKTsgLy8gc2luZ2xldG9uIGluc3RhbmNlCiQuZGF0ZXBpY2tlci5pbml0aWFsaXplZCA9IGZhbHNlOwokLmRhdGVwaWNrZXIudXVpZCA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwokLmRhdGVwaWNrZXIudmVyc2lvbiA9ICIxLjEyLjEiOwoKdmFyIHdpZGdldHNEYXRlcGlja2VyID0gJC5kYXRlcGlja2VyOwoKCgoKLy8gVGhpcyBmaWxlIGlzIGRlcHJlY2F0ZWQKdmFyIGllID0gJC51aS5pZSA9ICEhL21zaWUgW1x3Ll0rLy5leGVjKCBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkgKTsKCi8qIQogKiBqUXVlcnkgVUkgTW91c2UgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBNb3VzZQovLz4+Z3JvdXA6IFdpZGdldHMKLy8+PmRlc2NyaXB0aW9uOiBBYnN0cmFjdHMgbW91c2UtYmFzZWQgaW50ZXJhY3Rpb25zIHRvIGFzc2lzdCBpbiBjcmVhdGluZyBjZXJ0YWluIHdpZGdldHMuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9tb3VzZS8KCgoKdmFyIG1vdXNlSGFuZGxlZCA9IGZhbHNlOwokKCBkb2N1bWVudCApLm9uKCAibW91c2V1cCIsIGZ1bmN0aW9uKCkgewoJbW91c2VIYW5kbGVkID0gZmFsc2U7Cn0gKTsKCnZhciB3aWRnZXRzTW91c2UgPSAkLndpZGdldCggInVpLm1vdXNlIiwgewoJdmVyc2lvbjogIjEuMTIuMSIsCglvcHRpb25zOiB7CgkJY2FuY2VsOiAiaW5wdXQsIHRleHRhcmVhLCBidXR0b24sIHNlbGVjdCwgb3B0aW9uIiwKCQlkaXN0YW5jZTogMSwKCQlkZWxheTogMAoJfSwKCV9tb3VzZUluaXQ6IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpczsKCgkJdGhpcy5lbGVtZW50CgkJCS5vbiggIm1vdXNlZG93bi4iICsgdGhpcy53aWRnZXROYW1lLCBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQlyZXR1cm4gdGhhdC5fbW91c2VEb3duKCBldmVudCApOwoJCQl9ICkKCQkJLm9uKCAiY2xpY2suIiArIHRoaXMud2lkZ2V0TmFtZSwgZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCB0cnVlID09PSAkLmRhdGEoIGV2ZW50LnRhcmdldCwgdGhhdC53aWRnZXROYW1lICsgIi5wcmV2ZW50Q2xpY2tFdmVudCIgKSApIHsKCQkJCQkkLnJlbW92ZURhdGEoIGV2ZW50LnRhcmdldCwgdGhhdC53aWRnZXROYW1lICsgIi5wcmV2ZW50Q2xpY2tFdmVudCIgKTsKCQkJCQlldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24oKTsKCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQl9CgkJCX0gKTsKCgkJdGhpcy5zdGFydGVkID0gZmFsc2U7Cgl9LAoKCS8vIFRPRE86IG1ha2Ugc3VyZSBkZXN0cm95aW5nIG9uZSBpbnN0YW5jZSBvZiBtb3VzZSBkb2Vzbid0IG1lc3Mgd2l0aAoJLy8gb3RoZXIgaW5zdGFuY2VzIG9mIG1vdXNlCglfbW91c2VEZXN0cm95OiBmdW5jdGlvbigpIHsKCQl0aGlzLmVsZW1lbnQub2ZmKCAiLiIgKyB0aGlzLndpZGdldE5hbWUgKTsKCQlpZiAoIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlICkgewoJCQl0aGlzLmRvY3VtZW50CgkJCQkub2ZmKCAibW91c2Vtb3ZlLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlICkKCQkJCS5vZmYoICJtb3VzZXVwLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlVXBEZWxlZ2F0ZSApOwoJCX0KCX0sCgoJX21vdXNlRG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkvLyBkb24ndCBsZXQgbW9yZSB0aGFuIG9uZSB3aWRnZXQgaGFuZGxlIG1vdXNlU3RhcnQKCQlpZiAoIG1vdXNlSGFuZGxlZCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5fbW91c2VNb3ZlZCA9IGZhbHNlOwoKCQkvLyBXZSBtYXkgaGF2ZSBtaXNzZWQgbW91c2V1cCAob3V0IG9mIHdpbmRvdykKCQkoIHRoaXMuX21vdXNlU3RhcnRlZCAmJiB0aGlzLl9tb3VzZVVwKCBldmVudCApICk7CgoJCXRoaXMuX21vdXNlRG93bkV2ZW50ID0gZXZlbnQ7CgoJCXZhciB0aGF0ID0gdGhpcywKCQkJYnRuSXNMZWZ0ID0gKCBldmVudC53aGljaCA9PT0gMSApLAoKCQkJLy8gZXZlbnQudGFyZ2V0Lm5vZGVOYW1lIHdvcmtzIGFyb3VuZCBhIGJ1ZyBpbiBJRSA4IHdpdGgKCQkJLy8gZGlzYWJsZWQgaW5wdXRzICgjNzYyMCkKCQkJZWxJc0NhbmNlbCA9ICggdHlwZW9mIHRoaXMub3B0aW9ucy5jYW5jZWwgPT09ICJzdHJpbmciICYmIGV2ZW50LnRhcmdldC5ub2RlTmFtZSA/CgkJCQkkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCB0aGlzLm9wdGlvbnMuY2FuY2VsICkubGVuZ3RoIDogZmFsc2UgKTsKCQlpZiAoICFidG5Jc0xlZnQgfHwgZWxJc0NhbmNlbCB8fCAhdGhpcy5fbW91c2VDYXB0dXJlKCBldmVudCApICkgewoJCQlyZXR1cm4gdHJ1ZTsKCQl9CgoJCXRoaXMubW91c2VEZWxheU1ldCA9ICF0aGlzLm9wdGlvbnMuZGVsYXk7CgkJaWYgKCAhdGhpcy5tb3VzZURlbGF5TWV0ICkgewoJCQl0aGlzLl9tb3VzZURlbGF5VGltZXIgPSBzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsKCQkJCXRoYXQubW91c2VEZWxheU1ldCA9IHRydWU7CgkJCX0sIHRoaXMub3B0aW9ucy5kZWxheSApOwoJCX0KCgkJaWYgKCB0aGlzLl9tb3VzZURpc3RhbmNlTWV0KCBldmVudCApICYmIHRoaXMuX21vdXNlRGVsYXlNZXQoIGV2ZW50ICkgKSB7CgkJCXRoaXMuX21vdXNlU3RhcnRlZCA9ICggdGhpcy5fbW91c2VTdGFydCggZXZlbnQgKSAhPT0gZmFsc2UgKTsKCQkJaWYgKCAhdGhpcy5fbW91c2VTdGFydGVkICkgewoJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCXJldHVybiB0cnVlOwoJCQl9CgkJfQoKCQkvLyBDbGljayBldmVudCBtYXkgbmV2ZXIgaGF2ZSBmaXJlZCAoR2Vja28gJiBPcGVyYSkKCQlpZiAoIHRydWUgPT09ICQuZGF0YSggZXZlbnQudGFyZ2V0LCB0aGlzLndpZGdldE5hbWUgKyAiLnByZXZlbnRDbGlja0V2ZW50IiApICkgewoJCQkkLnJlbW92ZURhdGEoIGV2ZW50LnRhcmdldCwgdGhpcy53aWRnZXROYW1lICsgIi5wcmV2ZW50Q2xpY2tFdmVudCIgKTsKCQl9CgoJCS8vIFRoZXNlIGRlbGVnYXRlcyBhcmUgcmVxdWlyZWQgdG8ga2VlcCBjb250ZXh0CgkJdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgPSBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXJldHVybiB0aGF0Ll9tb3VzZU1vdmUoIGV2ZW50ICk7CgkJfTsKCQl0aGlzLl9tb3VzZVVwRGVsZWdhdGUgPSBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXJldHVybiB0aGF0Ll9tb3VzZVVwKCBldmVudCApOwoJCX07CgoJCXRoaXMuZG9jdW1lbnQKCQkJLm9uKCAibW91c2Vtb3ZlLiIgKyB0aGlzLndpZGdldE5hbWUsIHRoaXMuX21vdXNlTW92ZURlbGVnYXRlICkKCQkJLm9uKCAibW91c2V1cC4iICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZVVwRGVsZWdhdGUgKTsKCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCgkJbW91c2VIYW5kbGVkID0gdHJ1ZTsKCQlyZXR1cm4gdHJ1ZTsKCX0sCgoJX21vdXNlTW92ZTogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkvLyBPbmx5IGNoZWNrIGZvciBtb3VzZXVwcyBvdXRzaWRlIHRoZSBkb2N1bWVudCBpZiB5b3UndmUgbW92ZWQgaW5zaWRlIHRoZSBkb2N1bWVudAoJCS8vIGF0IGxlYXN0IG9uY2UuIFRoaXMgcHJldmVudHMgdGhlIGZpcmluZyBvZiBtb3VzZXVwIGluIHRoZSBjYXNlIG9mIElFPDksIHdoaWNoIHdpbGwKCQkvLyBmaXJlIGEgbW91c2Vtb3ZlIGV2ZW50IGlmIGNvbnRlbnQgaXMgcGxhY2VkIHVuZGVyIHRoZSBjdXJzb3IuIFNlZSAjNzc3OAoJCS8vIFN1cHBvcnQ6IElFIDw5CgkJaWYgKCB0aGlzLl9tb3VzZU1vdmVkICkgewoKCQkJLy8gSUUgbW91c2V1cCBjaGVjayAtIG1vdXNldXAgaGFwcGVuZWQgd2hlbiBtb3VzZSB3YXMgb3V0IG9mIHdpbmRvdwoJCQlpZiAoICQudWkuaWUgJiYgKCAhZG9jdW1lbnQuZG9jdW1lbnRNb2RlIHx8IGRvY3VtZW50LmRvY3VtZW50TW9kZSA8IDkgKSAmJgoJCQkJCSFldmVudC5idXR0b24gKSB7CgkJCQlyZXR1cm4gdGhpcy5fbW91c2VVcCggZXZlbnQgKTsKCgkJCS8vIElmcmFtZSBtb3VzZXVwIGNoZWNrIC0gbW91c2V1cCBvY2N1cnJlZCBpbiBhbm90aGVyIGRvY3VtZW50CgkJCX0gZWxzZSBpZiAoICFldmVudC53aGljaCApIHsKCgkJCQkvLyBTdXBwb3J0OiBTYWZhcmkgPD04IC0gOQoJCQkJLy8gU2FmYXJpIHNldHMgd2hpY2ggdG8gMCBpZiB5b3UgcHJlc3MgYW55IG9mIHRoZSBmb2xsb3dpbmcga2V5cwoJCQkJLy8gZHVyaW5nIGEgZHJhZyAoIzE0NDYxKQoJCQkJaWYgKCBldmVudC5vcmlnaW5hbEV2ZW50LmFsdEtleSB8fCBldmVudC5vcmlnaW5hbEV2ZW50LmN0cmxLZXkgfHwKCQkJCQkJZXZlbnQub3JpZ2luYWxFdmVudC5tZXRhS2V5IHx8IGV2ZW50Lm9yaWdpbmFsRXZlbnQuc2hpZnRLZXkgKSB7CgkJCQkJdGhpcy5pZ25vcmVNaXNzaW5nV2hpY2ggPSB0cnVlOwoJCQkJfSBlbHNlIGlmICggIXRoaXMuaWdub3JlTWlzc2luZ1doaWNoICkgewoJCQkJCXJldHVybiB0aGlzLl9tb3VzZVVwKCBldmVudCApOwoJCQkJfQoJCQl9CgkJfQoKCQlpZiAoIGV2ZW50LndoaWNoIHx8IGV2ZW50LmJ1dHRvbiApIHsKCQkJdGhpcy5fbW91c2VNb3ZlZCA9IHRydWU7CgkJfQoKCQlpZiAoIHRoaXMuX21vdXNlU3RhcnRlZCApIHsKCQkJdGhpcy5fbW91c2VEcmFnKCBldmVudCApOwoJCQlyZXR1cm4gZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQl9CgoJCWlmICggdGhpcy5fbW91c2VEaXN0YW5jZU1ldCggZXZlbnQgKSAmJiB0aGlzLl9tb3VzZURlbGF5TWV0KCBldmVudCApICkgewoJCQl0aGlzLl9tb3VzZVN0YXJ0ZWQgPQoJCQkJKCB0aGlzLl9tb3VzZVN0YXJ0KCB0aGlzLl9tb3VzZURvd25FdmVudCwgZXZlbnQgKSAhPT0gZmFsc2UgKTsKCQkJKCB0aGlzLl9tb3VzZVN0YXJ0ZWQgPyB0aGlzLl9tb3VzZURyYWcoIGV2ZW50ICkgOiB0aGlzLl9tb3VzZVVwKCBldmVudCApICk7CgkJfQoKCQlyZXR1cm4gIXRoaXMuX21vdXNlU3RhcnRlZDsKCX0sCgoJX21vdXNlVXA6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl0aGlzLmRvY3VtZW50CgkJCS5vZmYoICJtb3VzZW1vdmUuIiArIHRoaXMud2lkZ2V0TmFtZSwgdGhpcy5fbW91c2VNb3ZlRGVsZWdhdGUgKQoJCQkub2ZmKCAibW91c2V1cC4iICsgdGhpcy53aWRnZXROYW1lLCB0aGlzLl9tb3VzZVVwRGVsZWdhdGUgKTsKCgkJaWYgKCB0aGlzLl9tb3VzZVN0YXJ0ZWQgKSB7CgkJCXRoaXMuX21vdXNlU3RhcnRlZCA9IGZhbHNlOwoKCQkJaWYgKCBldmVudC50YXJnZXQgPT09IHRoaXMuX21vdXNlRG93bkV2ZW50LnRhcmdldCApIHsKCQkJCSQuZGF0YSggZXZlbnQudGFyZ2V0LCB0aGlzLndpZGdldE5hbWUgKyAiLnByZXZlbnRDbGlja0V2ZW50IiwgdHJ1ZSApOwoJCQl9CgoJCQl0aGlzLl9tb3VzZVN0b3AoIGV2ZW50ICk7CgkJfQoKCQlpZiAoIHRoaXMuX21vdXNlRGVsYXlUaW1lciApIHsKCQkJY2xlYXJUaW1lb3V0KCB0aGlzLl9tb3VzZURlbGF5VGltZXIgKTsKCQkJZGVsZXRlIHRoaXMuX21vdXNlRGVsYXlUaW1lcjsKCQl9CgoJCXRoaXMuaWdub3JlTWlzc2luZ1doaWNoID0gZmFsc2U7CgkJbW91c2VIYW5kbGVkID0gZmFsc2U7CgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCX0sCgoJX21vdXNlRGlzdGFuY2VNZXQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlyZXR1cm4gKCBNYXRoLm1heCgKCQkJCU1hdGguYWJzKCB0aGlzLl9tb3VzZURvd25FdmVudC5wYWdlWCAtIGV2ZW50LnBhZ2VYICksCgkJCQlNYXRoLmFicyggdGhpcy5fbW91c2VEb3duRXZlbnQucGFnZVkgLSBldmVudC5wYWdlWSApCgkJCSkgPj0gdGhpcy5vcHRpb25zLmRpc3RhbmNlCgkJKTsKCX0sCgoJX21vdXNlRGVsYXlNZXQ6IGZ1bmN0aW9uKCAvKiBldmVudCAqLyApIHsKCQlyZXR1cm4gdGhpcy5tb3VzZURlbGF5TWV0OwoJfSwKCgkvLyBUaGVzZSBhcmUgcGxhY2Vob2xkZXIgbWV0aG9kcywgdG8gYmUgb3ZlcnJpZGVuIGJ5IGV4dGVuZGluZyBwbHVnaW4KCV9tb3VzZVN0YXJ0OiBmdW5jdGlvbiggLyogZXZlbnQgKi8gKSB7fSwKCV9tb3VzZURyYWc6IGZ1bmN0aW9uKCAvKiBldmVudCAqLyApIHt9LAoJX21vdXNlU3RvcDogZnVuY3Rpb24oIC8qIGV2ZW50ICovICkge30sCglfbW91c2VDYXB0dXJlOiBmdW5jdGlvbiggLyogZXZlbnQgKi8gKSB7IHJldHVybiB0cnVlOyB9Cn0gKTsKCgoKCi8vICQudWkucGx1Z2luIGlzIGRlcHJlY2F0ZWQuIFVzZSAkLndpZGdldCgpIGV4dGVuc2lvbnMgaW5zdGVhZC4KdmFyIHBsdWdpbiA9ICQudWkucGx1Z2luID0gewoJYWRkOiBmdW5jdGlvbiggbW9kdWxlLCBvcHRpb24sIHNldCApIHsKCQl2YXIgaSwKCQkJcHJvdG8gPSAkLnVpWyBtb2R1bGUgXS5wcm90b3R5cGU7CgkJZm9yICggaSBpbiBzZXQgKSB7CgkJCXByb3RvLnBsdWdpbnNbIGkgXSA9IHByb3RvLnBsdWdpbnNbIGkgXSB8fCBbXTsKCQkJcHJvdG8ucGx1Z2luc1sgaSBdLnB1c2goIFsgb3B0aW9uLCBzZXRbIGkgXSBdICk7CgkJfQoJfSwKCWNhbGw6IGZ1bmN0aW9uKCBpbnN0YW5jZSwgbmFtZSwgYXJncywgYWxsb3dEaXNjb25uZWN0ZWQgKSB7CgkJdmFyIGksCgkJCXNldCA9IGluc3RhbmNlLnBsdWdpbnNbIG5hbWUgXTsKCgkJaWYgKCAhc2V0ICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoICFhbGxvd0Rpc2Nvbm5lY3RlZCAmJiAoICFpbnN0YW5jZS5lbGVtZW50WyAwIF0ucGFyZW50Tm9kZSB8fAoJCQkJaW5zdGFuY2UuZWxlbWVudFsgMCBdLnBhcmVudE5vZGUubm9kZVR5cGUgPT09IDExICkgKSB7CgkJCXJldHVybjsKCQl9CgoJCWZvciAoIGkgPSAwOyBpIDwgc2V0Lmxlbmd0aDsgaSsrICkgewoJCQlpZiAoIGluc3RhbmNlLm9wdGlvbnNbIHNldFsgaSBdWyAwIF0gXSApIHsKCQkJCXNldFsgaSBdWyAxIF0uYXBwbHkoIGluc3RhbmNlLmVsZW1lbnQsIGFyZ3MgKTsKCQkJfQoJCX0KCX0KfTsKCgoKdmFyIHNhZmVCbHVyID0gJC51aS5zYWZlQmx1ciA9IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoKCS8vIFN1cHBvcnQ6IElFOSAtIDEwIG9ubHkKCS8vIElmIHRoZSA8Ym9keT4gaXMgYmx1cnJlZCwgSUUgd2lsbCBzd2l0Y2ggd2luZG93cywgc2VlICM5NDIwCglpZiAoIGVsZW1lbnQgJiYgZWxlbWVudC5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpICE9PSAiYm9keSIgKSB7CgkJJCggZWxlbWVudCApLnRyaWdnZXIoICJibHVyIiApOwoJfQp9OwoKCi8qIQogKiBqUXVlcnkgVUkgRHJhZ2dhYmxlIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogRHJhZ2dhYmxlCi8vPj5ncm91cDogSW50ZXJhY3Rpb25zCi8vPj5kZXNjcmlwdGlvbjogRW5hYmxlcyBkcmFnZ2luZyBmdW5jdGlvbmFsaXR5IGZvciBhbnkgZWxlbWVudC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL2RyYWdnYWJsZS8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL2RyYWdnYWJsZS8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2RyYWdnYWJsZS5jc3MKCgoKJC53aWRnZXQoICJ1aS5kcmFnZ2FibGUiLCAkLnVpLm1vdXNlLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCXdpZGdldEV2ZW50UHJlZml4OiAiZHJhZyIsCglvcHRpb25zOiB7CgkJYWRkQ2xhc3NlczogdHJ1ZSwKCQlhcHBlbmRUbzogInBhcmVudCIsCgkJYXhpczogZmFsc2UsCgkJY29ubmVjdFRvU29ydGFibGU6IGZhbHNlLAoJCWNvbnRhaW5tZW50OiBmYWxzZSwKCQljdXJzb3I6ICJhdXRvIiwKCQljdXJzb3JBdDogZmFsc2UsCgkJZ3JpZDogZmFsc2UsCgkJaGFuZGxlOiBmYWxzZSwKCQloZWxwZXI6ICJvcmlnaW5hbCIsCgkJaWZyYW1lRml4OiBmYWxzZSwKCQlvcGFjaXR5OiBmYWxzZSwKCQlyZWZyZXNoUG9zaXRpb25zOiBmYWxzZSwKCQlyZXZlcnQ6IGZhbHNlLAoJCXJldmVydER1cmF0aW9uOiA1MDAsCgkJc2NvcGU6ICJkZWZhdWx0IiwKCQlzY3JvbGw6IHRydWUsCgkJc2Nyb2xsU2Vuc2l0aXZpdHk6IDIwLAoJCXNjcm9sbFNwZWVkOiAyMCwKCQlzbmFwOiBmYWxzZSwKCQlzbmFwTW9kZTogImJvdGgiLAoJCXNuYXBUb2xlcmFuY2U6IDIwLAoJCXN0YWNrOiBmYWxzZSwKCQl6SW5kZXg6IGZhbHNlLAoKCQkvLyBDYWxsYmFja3MKCQlkcmFnOiBudWxsLAoJCXN0YXJ0OiBudWxsLAoJCXN0b3A6IG51bGwKCX0sCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuaGVscGVyID09PSAib3JpZ2luYWwiICkgewoJCQl0aGlzLl9zZXRQb3NpdGlvblJlbGF0aXZlKCk7CgkJfQoJCWlmICggdGhpcy5vcHRpb25zLmFkZENsYXNzZXMgKSB7CgkJCXRoaXMuX2FkZENsYXNzKCAidWktZHJhZ2dhYmxlIiApOwoJCX0KCQl0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKTsKCgkJdGhpcy5fbW91c2VJbml0KCk7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgkJaWYgKCBrZXkgPT09ICJoYW5kbGUiICkgewoJCQl0aGlzLl9yZW1vdmVIYW5kbGVDbGFzc05hbWUoKTsKCQkJdGhpcy5fc2V0SGFuZGxlQ2xhc3NOYW1lKCk7CgkJfQoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJaWYgKCAoIHRoaXMuaGVscGVyIHx8IHRoaXMuZWxlbWVudCApLmlzKCAiLnVpLWRyYWdnYWJsZS1kcmFnZ2luZyIgKSApIHsKCQkJdGhpcy5kZXN0cm95T25DbGVhciA9IHRydWU7CgkJCXJldHVybjsKCQl9CgkJdGhpcy5fcmVtb3ZlSGFuZGxlQ2xhc3NOYW1lKCk7CgkJdGhpcy5fbW91c2VEZXN0cm95KCk7Cgl9LAoKCV9tb3VzZUNhcHR1cmU6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgbyA9IHRoaXMub3B0aW9uczsKCgkJLy8gQW1vbmcgb3RoZXJzLCBwcmV2ZW50IGEgZHJhZyBvbiBhIHJlc2l6YWJsZS1oYW5kbGUKCQlpZiAoIHRoaXMuaGVscGVyIHx8IG8uZGlzYWJsZWQgfHwKCQkJCSQoIGV2ZW50LnRhcmdldCApLmNsb3Nlc3QoICIudWktcmVzaXphYmxlLWhhbmRsZSIgKS5sZW5ndGggPiAwICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQkvL1F1aXQgaWYgd2UncmUgbm90IG9uIGEgdmFsaWQgaGFuZGxlCgkJdGhpcy5oYW5kbGUgPSB0aGlzLl9nZXRIYW5kbGUoIGV2ZW50ICk7CgkJaWYgKCAhdGhpcy5oYW5kbGUgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXRoaXMuX2JsdXJBY3RpdmVFbGVtZW50KCBldmVudCApOwoKCQl0aGlzLl9ibG9ja0ZyYW1lcyggby5pZnJhbWVGaXggPT09IHRydWUgPyAiaWZyYW1lIiA6IG8uaWZyYW1lRml4ICk7CgoJCXJldHVybiB0cnVlOwoKCX0sCgoJX2Jsb2NrRnJhbWVzOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7CgkJdGhpcy5pZnJhbWVCbG9ja3MgPSB0aGlzLmRvY3VtZW50LmZpbmQoIHNlbGVjdG9yICkubWFwKCBmdW5jdGlvbigpIHsKCQkJdmFyIGlmcmFtZSA9ICQoIHRoaXMgKTsKCgkJCXJldHVybiAkKCAiPGRpdj4iICkKCQkJCS5jc3MoICJwb3NpdGlvbiIsICJhYnNvbHV0ZSIgKQoJCQkJLmFwcGVuZFRvKCBpZnJhbWUucGFyZW50KCkgKQoJCQkJLm91dGVyV2lkdGgoIGlmcmFtZS5vdXRlcldpZHRoKCkgKQoJCQkJLm91dGVySGVpZ2h0KCBpZnJhbWUub3V0ZXJIZWlnaHQoKSApCgkJCQkub2Zmc2V0KCBpZnJhbWUub2Zmc2V0KCkgKVsgMCBdOwoJCX0gKTsKCX0sCgoJX3VuYmxvY2tGcmFtZXM6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy5pZnJhbWVCbG9ja3MgKSB7CgkJCXRoaXMuaWZyYW1lQmxvY2tzLnJlbW92ZSgpOwoJCQlkZWxldGUgdGhpcy5pZnJhbWVCbG9ja3M7CgkJfQoJfSwKCglfYmx1ckFjdGl2ZUVsZW1lbnQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgYWN0aXZlRWxlbWVudCA9ICQudWkuc2FmZUFjdGl2ZUVsZW1lbnQoIHRoaXMuZG9jdW1lbnRbIDAgXSApLAoJCQl0YXJnZXQgPSAkKCBldmVudC50YXJnZXQgKTsKCgkJLy8gRG9uJ3QgYmx1ciBpZiB0aGUgZXZlbnQgb2NjdXJyZWQgb24gYW4gZWxlbWVudCB0aGF0IGlzIHdpdGhpbgoJCS8vIHRoZSBjdXJyZW50bHkgZm9jdXNlZCBlbGVtZW50CgkJLy8gU2VlICMxMDUyNywgIzEyNDcyCgkJaWYgKCB0YXJnZXQuY2xvc2VzdCggYWN0aXZlRWxlbWVudCApLmxlbmd0aCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gQmx1ciBhbnkgZWxlbWVudCB0aGF0IGN1cnJlbnRseSBoYXMgZm9jdXMsIHNlZSAjNDI2MQoJCSQudWkuc2FmZUJsdXIoIGFjdGl2ZUVsZW1lbnQgKTsKCX0sCgoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCgkJdmFyIG8gPSB0aGlzLm9wdGlvbnM7CgoJCS8vQ3JlYXRlIGFuZCBhcHBlbmQgdGhlIHZpc2libGUgaGVscGVyCgkJdGhpcy5oZWxwZXIgPSB0aGlzLl9jcmVhdGVIZWxwZXIoIGV2ZW50ICk7CgoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmhlbHBlciwgInVpLWRyYWdnYWJsZS1kcmFnZ2luZyIgKTsKCgkJLy9DYWNoZSB0aGUgaGVscGVyIHNpemUKCQl0aGlzLl9jYWNoZUhlbHBlclByb3BvcnRpb25zKCk7CgoJCS8vSWYgZGRtYW5hZ2VyIGlzIHVzZWQgZm9yIGRyb3BwYWJsZXMsIHNldCB0aGUgZ2xvYmFsIGRyYWdnYWJsZQoJCWlmICggJC51aS5kZG1hbmFnZXIgKSB7CgkJCSQudWkuZGRtYW5hZ2VyLmN1cnJlbnQgPSB0aGlzOwoJCX0KCgkJLyoKCQkgKiAtIFBvc2l0aW9uIGdlbmVyYXRpb24gLQoJCSAqIFRoaXMgYmxvY2sgZ2VuZXJhdGVzIGV2ZXJ5dGhpbmcgcG9zaXRpb24gcmVsYXRlZCAtIGl0J3MgdGhlIGNvcmUgb2YgZHJhZ2dhYmxlcy4KCQkgKi8KCgkJLy9DYWNoZSB0aGUgbWFyZ2lucyBvZiB0aGUgb3JpZ2luYWwgZWxlbWVudAoJCXRoaXMuX2NhY2hlTWFyZ2lucygpOwoKCQkvL1N0b3JlIHRoZSBoZWxwZXIncyBjc3MgcG9zaXRpb24KCQl0aGlzLmNzc1Bvc2l0aW9uID0gdGhpcy5oZWxwZXIuY3NzKCAicG9zaXRpb24iICk7CgkJdGhpcy5zY3JvbGxQYXJlbnQgPSB0aGlzLmhlbHBlci5zY3JvbGxQYXJlbnQoIHRydWUgKTsKCQl0aGlzLm9mZnNldFBhcmVudCA9IHRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpOwoJCXRoaXMuaGFzRml4ZWRBbmNlc3RvciA9IHRoaXMuaGVscGVyLnBhcmVudHMoKS5maWx0ZXIoIGZ1bmN0aW9uKCkgewoJCQkJcmV0dXJuICQoIHRoaXMgKS5jc3MoICJwb3NpdGlvbiIgKSA9PT0gImZpeGVkIjsKCQkJfSApLmxlbmd0aCA+IDA7CgoJCS8vVGhlIGVsZW1lbnQncyBhYnNvbHV0ZSBwb3NpdGlvbiBvbiB0aGUgcGFnZSBtaW51cyBtYXJnaW5zCgkJdGhpcy5wb3NpdGlvbkFicyA9IHRoaXMuZWxlbWVudC5vZmZzZXQoKTsKCQl0aGlzLl9yZWZyZXNoT2Zmc2V0cyggZXZlbnQgKTsKCgkJLy9HZW5lcmF0ZSB0aGUgb3JpZ2luYWwgcG9zaXRpb24KCQl0aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB0aGlzLnBvc2l0aW9uID0gdGhpcy5fZ2VuZXJhdGVQb3NpdGlvbiggZXZlbnQsIGZhbHNlICk7CgkJdGhpcy5vcmlnaW5hbFBhZ2VYID0gZXZlbnQucGFnZVg7CgkJdGhpcy5vcmlnaW5hbFBhZ2VZID0gZXZlbnQucGFnZVk7CgoJCS8vQWRqdXN0IHRoZSBtb3VzZSBvZmZzZXQgcmVsYXRpdmUgdG8gdGhlIGhlbHBlciBpZiAiY3Vyc29yQXQiIGlzIHN1cHBsaWVkCgkJKCBvLmN1cnNvckF0ICYmIHRoaXMuX2FkanVzdE9mZnNldEZyb21IZWxwZXIoIG8uY3Vyc29yQXQgKSApOwoKCQkvL1NldCBhIGNvbnRhaW5tZW50IGlmIGdpdmVuIGluIHRoZSBvcHRpb25zCgkJdGhpcy5fc2V0Q29udGFpbm1lbnQoKTsKCgkJLy9UcmlnZ2VyIGV2ZW50ICsgY2FsbGJhY2tzCgkJaWYgKCB0aGlzLl90cmlnZ2VyKCAic3RhcnQiLCBldmVudCApID09PSBmYWxzZSApIHsKCQkJdGhpcy5fY2xlYXIoKTsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJLy9SZWNhY2hlIHRoZSBoZWxwZXIgc2l6ZQoJCXRoaXMuX2NhY2hlSGVscGVyUHJvcG9ydGlvbnMoKTsKCgkJLy9QcmVwYXJlIHRoZSBkcm9wcGFibGUgb2Zmc2V0cwoJCWlmICggJC51aS5kZG1hbmFnZXIgJiYgIW8uZHJvcEJlaGF2aW91ciApIHsKCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoIHRoaXMsIGV2ZW50ICk7CgkJfQoKCQkvLyBFeGVjdXRlIHRoZSBkcmFnIG9uY2UgLSB0aGlzIGNhdXNlcyB0aGUgaGVscGVyIG5vdCB0byBiZSB2aXNpYmxlIGJlZm9yZSBnZXR0aW5nIGl0cwoJCS8vIGNvcnJlY3QgcG9zaXRpb24KCQl0aGlzLl9tb3VzZURyYWcoIGV2ZW50LCB0cnVlICk7CgoJCS8vIElmIHRoZSBkZG1hbmFnZXIgaXMgdXNlZCBmb3IgZHJvcHBhYmxlcywgaW5mb3JtIHRoZSBtYW5hZ2VyIHRoYXQgZHJhZ2dpbmcgaGFzIHN0YXJ0ZWQKCQkvLyAoc2VlICM1MDAzKQoJCWlmICggJC51aS5kZG1hbmFnZXIgKSB7CgkJCSQudWkuZGRtYW5hZ2VyLmRyYWdTdGFydCggdGhpcywgZXZlbnQgKTsKCQl9CgoJCXJldHVybiB0cnVlOwoJfSwKCglfcmVmcmVzaE9mZnNldHM6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl0aGlzLm9mZnNldCA9IHsKCQkJdG9wOiB0aGlzLnBvc2l0aW9uQWJzLnRvcCAtIHRoaXMubWFyZ2lucy50b3AsCgkJCWxlZnQ6IHRoaXMucG9zaXRpb25BYnMubGVmdCAtIHRoaXMubWFyZ2lucy5sZWZ0LAoJCQlzY3JvbGw6IGZhbHNlLAoJCQlwYXJlbnQ6IHRoaXMuX2dldFBhcmVudE9mZnNldCgpLAoJCQlyZWxhdGl2ZTogdGhpcy5fZ2V0UmVsYXRpdmVPZmZzZXQoKQoJCX07CgoJCXRoaXMub2Zmc2V0LmNsaWNrID0gewoJCQlsZWZ0OiBldmVudC5wYWdlWCAtIHRoaXMub2Zmc2V0LmxlZnQsCgkJCXRvcDogZXZlbnQucGFnZVkgLSB0aGlzLm9mZnNldC50b3AKCQl9OwoJfSwKCglfbW91c2VEcmFnOiBmdW5jdGlvbiggZXZlbnQsIG5vUHJvcGFnYXRpb24gKSB7CgoJCS8vIHJlc2V0IGFueSBuZWNlc3NhcnkgY2FjaGVkIHByb3BlcnRpZXMgKHNlZSAjNTAwOSkKCQlpZiAoIHRoaXMuaGFzRml4ZWRBbmNlc3RvciApIHsKCQkJdGhpcy5vZmZzZXQucGFyZW50ID0gdGhpcy5fZ2V0UGFyZW50T2Zmc2V0KCk7CgkJfQoKCQkvL0NvbXB1dGUgdGhlIGhlbHBlcnMgcG9zaXRpb24KCQl0aGlzLnBvc2l0aW9uID0gdGhpcy5fZ2VuZXJhdGVQb3NpdGlvbiggZXZlbnQsIHRydWUgKTsKCQl0aGlzLnBvc2l0aW9uQWJzID0gdGhpcy5fY29udmVydFBvc2l0aW9uVG8oICJhYnNvbHV0ZSIgKTsKCgkJLy9DYWxsIHBsdWdpbnMgYW5kIGNhbGxiYWNrcyBhbmQgdXNlIHRoZSByZXN1bHRpbmcgcG9zaXRpb24gaWYgc29tZXRoaW5nIGlzIHJldHVybmVkCgkJaWYgKCAhbm9Qcm9wYWdhdGlvbiApIHsKCQkJdmFyIHVpID0gdGhpcy5fdWlIYXNoKCk7CgkJCWlmICggdGhpcy5fdHJpZ2dlciggImRyYWciLCBldmVudCwgdWkgKSA9PT0gZmFsc2UgKSB7CgkJCQl0aGlzLl9tb3VzZVVwKCBuZXcgJC5FdmVudCggIm1vdXNldXAiLCBldmVudCApICk7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQkJdGhpcy5wb3NpdGlvbiA9IHVpLnBvc2l0aW9uOwoJCX0KCgkJdGhpcy5oZWxwZXJbIDAgXS5zdHlsZS5sZWZ0ID0gdGhpcy5wb3NpdGlvbi5sZWZ0ICsgInB4IjsKCQl0aGlzLmhlbHBlclsgMCBdLnN0eWxlLnRvcCA9IHRoaXMucG9zaXRpb24udG9wICsgInB4IjsKCgkJaWYgKCAkLnVpLmRkbWFuYWdlciApIHsKCQkJJC51aS5kZG1hbmFnZXIuZHJhZyggdGhpcywgZXZlbnQgKTsKCQl9CgoJCXJldHVybiBmYWxzZTsKCX0sCgoJX21vdXNlU3RvcDogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkvL0lmIHdlIGFyZSB1c2luZyBkcm9wcGFibGVzLCBpbmZvcm0gdGhlIG1hbmFnZXIgYWJvdXQgdGhlIGRyb3AKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCWRyb3BwZWQgPSBmYWxzZTsKCQlpZiAoICQudWkuZGRtYW5hZ2VyICYmICF0aGlzLm9wdGlvbnMuZHJvcEJlaGF2aW91ciApIHsKCQkJZHJvcHBlZCA9ICQudWkuZGRtYW5hZ2VyLmRyb3AoIHRoaXMsIGV2ZW50ICk7CgkJfQoKCQkvL2lmIGEgZHJvcCBjb21lcyBmcm9tIG91dHNpZGUgKGEgc29ydGFibGUpCgkJaWYgKCB0aGlzLmRyb3BwZWQgKSB7CgkJCWRyb3BwZWQgPSB0aGlzLmRyb3BwZWQ7CgkJCXRoaXMuZHJvcHBlZCA9IGZhbHNlOwoJCX0KCgkJaWYgKCAoIHRoaXMub3B0aW9ucy5yZXZlcnQgPT09ICJpbnZhbGlkIiAmJiAhZHJvcHBlZCApIHx8CgkJCQkoIHRoaXMub3B0aW9ucy5yZXZlcnQgPT09ICJ2YWxpZCIgJiYgZHJvcHBlZCApIHx8CgkJCQl0aGlzLm9wdGlvbnMucmV2ZXJ0ID09PSB0cnVlIHx8ICggJC5pc0Z1bmN0aW9uKCB0aGlzLm9wdGlvbnMucmV2ZXJ0ICkgJiYKCQkJCXRoaXMub3B0aW9ucy5yZXZlcnQuY2FsbCggdGhpcy5lbGVtZW50LCBkcm9wcGVkICkgKQoJCSkgewoJCQkkKCB0aGlzLmhlbHBlciApLmFuaW1hdGUoCgkJCQl0aGlzLm9yaWdpbmFsUG9zaXRpb24sCgkJCQlwYXJzZUludCggdGhpcy5vcHRpb25zLnJldmVydER1cmF0aW9uLCAxMCApLAoJCQkJZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCB0aGF0Ll90cmlnZ2VyKCAic3RvcCIsIGV2ZW50ICkgIT09IGZhbHNlICkgewoJCQkJCQl0aGF0Ll9jbGVhcigpOwoJCQkJCX0KCQkJCX0KCQkJKTsKCQl9IGVsc2UgewoJCQlpZiAoIHRoaXMuX3RyaWdnZXIoICJzdG9wIiwgZXZlbnQgKSAhPT0gZmFsc2UgKSB7CgkJCQl0aGlzLl9jbGVhcigpOwoJCQl9CgkJfQoKCQlyZXR1cm4gZmFsc2U7Cgl9LAoKCV9tb3VzZVVwOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdGhpcy5fdW5ibG9ja0ZyYW1lcygpOwoKCQkvLyBJZiB0aGUgZGRtYW5hZ2VyIGlzIHVzZWQgZm9yIGRyb3BwYWJsZXMsIGluZm9ybSB0aGUgbWFuYWdlciB0aGF0IGRyYWdnaW5nIGhhcyBzdG9wcGVkCgkJLy8gKHNlZSAjNTAwMykKCQlpZiAoICQudWkuZGRtYW5hZ2VyICkgewoJCQkkLnVpLmRkbWFuYWdlci5kcmFnU3RvcCggdGhpcywgZXZlbnQgKTsKCQl9CgoJCS8vIE9ubHkgbmVlZCB0byBmb2N1cyBpZiB0aGUgZXZlbnQgb2NjdXJyZWQgb24gdGhlIGRyYWdnYWJsZSBpdHNlbGYsIHNlZSAjMTA1MjcKCQlpZiAoIHRoaXMuaGFuZGxlRWxlbWVudC5pcyggZXZlbnQudGFyZ2V0ICkgKSB7CgoJCQkvLyBUaGUgaW50ZXJhY3Rpb24gaXMgb3Zlcjsgd2hldGhlciBvciBub3QgdGhlIGNsaWNrIHJlc3VsdGVkIGluIGEgZHJhZywKCQkJLy8gZm9jdXMgdGhlIGVsZW1lbnQKCQkJdGhpcy5lbGVtZW50LnRyaWdnZXIoICJmb2N1cyIgKTsKCQl9CgoJCXJldHVybiAkLnVpLm1vdXNlLnByb3RvdHlwZS5fbW91c2VVcC5jYWxsKCB0aGlzLCBldmVudCApOwoJfSwKCgljYW5jZWw6IGZ1bmN0aW9uKCkgewoKCQlpZiAoIHRoaXMuaGVscGVyLmlzKCAiLnVpLWRyYWdnYWJsZS1kcmFnZ2luZyIgKSApIHsKCQkJdGhpcy5fbW91c2VVcCggbmV3ICQuRXZlbnQoICJtb3VzZXVwIiwgeyB0YXJnZXQ6IHRoaXMuZWxlbWVudFsgMCBdIH0gKSApOwoJCX0gZWxzZSB7CgkJCXRoaXMuX2NsZWFyKCk7CgkJfQoKCQlyZXR1cm4gdGhpczsKCgl9LAoKCV9nZXRIYW5kbGU6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlyZXR1cm4gdGhpcy5vcHRpb25zLmhhbmRsZSA/CgkJCSEhJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5oYW5kbGUgKSApLmxlbmd0aCA6CgkJCXRydWU7Cgl9LAoKCV9zZXRIYW5kbGVDbGFzc05hbWU6IGZ1bmN0aW9uKCkgewoJCXRoaXMuaGFuZGxlRWxlbWVudCA9IHRoaXMub3B0aW9ucy5oYW5kbGUgPwoJCQl0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5vcHRpb25zLmhhbmRsZSApIDogdGhpcy5lbGVtZW50OwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmhhbmRsZUVsZW1lbnQsICJ1aS1kcmFnZ2FibGUtaGFuZGxlIiApOwoJfSwKCglfcmVtb3ZlSGFuZGxlQ2xhc3NOYW1lOiBmdW5jdGlvbigpIHsKCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5oYW5kbGVFbGVtZW50LCAidWktZHJhZ2dhYmxlLWhhbmRsZSIgKTsKCX0sCgoJX2NyZWF0ZUhlbHBlcjogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQl2YXIgbyA9IHRoaXMub3B0aW9ucywKCQkJaGVscGVySXNGdW5jdGlvbiA9ICQuaXNGdW5jdGlvbiggby5oZWxwZXIgKSwKCQkJaGVscGVyID0gaGVscGVySXNGdW5jdGlvbiA/CgkJCQkkKCBvLmhlbHBlci5hcHBseSggdGhpcy5lbGVtZW50WyAwIF0sIFsgZXZlbnQgXSApICkgOgoJCQkJKCBvLmhlbHBlciA9PT0gImNsb25lIiA/CgkJCQkJdGhpcy5lbGVtZW50LmNsb25lKCkucmVtb3ZlQXR0ciggImlkIiApIDoKCQkJCQl0aGlzLmVsZW1lbnQgKTsKCgkJaWYgKCAhaGVscGVyLnBhcmVudHMoICJib2R5IiApLmxlbmd0aCApIHsKCQkJaGVscGVyLmFwcGVuZFRvKCAoIG8uYXBwZW5kVG8gPT09ICJwYXJlbnQiID8KCQkJCXRoaXMuZWxlbWVudFsgMCBdLnBhcmVudE5vZGUgOgoJCQkJby5hcHBlbmRUbyApICk7CgkJfQoKCQkvLyBIdHRwOi8vYnVncy5qcXVlcnl1aS5jb20vdGlja2V0Lzk0NDYKCQkvLyBhIGhlbHBlciBmdW5jdGlvbiBjYW4gcmV0dXJuIHRoZSBvcmlnaW5hbCBlbGVtZW50CgkJLy8gd2hpY2ggd291bGRuJ3QgaGF2ZSBiZWVuIHNldCB0byByZWxhdGl2ZSBpbiBfY3JlYXRlCgkJaWYgKCBoZWxwZXJJc0Z1bmN0aW9uICYmIGhlbHBlclsgMCBdID09PSB0aGlzLmVsZW1lbnRbIDAgXSApIHsKCQkJdGhpcy5fc2V0UG9zaXRpb25SZWxhdGl2ZSgpOwoJCX0KCgkJaWYgKCBoZWxwZXJbIDAgXSAhPT0gdGhpcy5lbGVtZW50WyAwIF0gJiYKCQkJCSEoIC8oZml4ZWR8YWJzb2x1dGUpLyApLnRlc3QoIGhlbHBlci5jc3MoICJwb3NpdGlvbiIgKSApICkgewoJCQloZWxwZXIuY3NzKCAicG9zaXRpb24iLCAiYWJzb2x1dGUiICk7CgkJfQoKCQlyZXR1cm4gaGVscGVyOwoKCX0sCgoJX3NldFBvc2l0aW9uUmVsYXRpdmU6IGZ1bmN0aW9uKCkgewoJCWlmICggISggL14oPzpyfGF8ZikvICkudGVzdCggdGhpcy5lbGVtZW50LmNzcyggInBvc2l0aW9uIiApICkgKSB7CgkJCXRoaXMuZWxlbWVudFsgMCBdLnN0eWxlLnBvc2l0aW9uID0gInJlbGF0aXZlIjsKCQl9Cgl9LAoKCV9hZGp1c3RPZmZzZXRGcm9tSGVscGVyOiBmdW5jdGlvbiggb2JqICkgewoJCWlmICggdHlwZW9mIG9iaiA9PT0gInN0cmluZyIgKSB7CgkJCW9iaiA9IG9iai5zcGxpdCggIiAiICk7CgkJfQoJCWlmICggJC5pc0FycmF5KCBvYmogKSApIHsKCQkJb2JqID0geyBsZWZ0OiArb2JqWyAwIF0sIHRvcDogK29ialsgMSBdIHx8IDAgfTsKCQl9CgkJaWYgKCAibGVmdCIgaW4gb2JqICkgewoJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0ID0gb2JqLmxlZnQgKyB0aGlzLm1hcmdpbnMubGVmdDsKCQl9CgkJaWYgKCAicmlnaHQiIGluIG9iaiApIHsKCQkJdGhpcy5vZmZzZXQuY2xpY2subGVmdCA9IHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLSBvYmoucmlnaHQgKyB0aGlzLm1hcmdpbnMubGVmdDsKCQl9CgkJaWYgKCAidG9wIiBpbiBvYmogKSB7CgkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCA9IG9iai50b3AgKyB0aGlzLm1hcmdpbnMudG9wOwoJCX0KCQlpZiAoICJib3R0b20iIGluIG9iaiApIHsKCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wID0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSBvYmouYm90dG9tICsgdGhpcy5tYXJnaW5zLnRvcDsKCQl9Cgl9LAoKCV9pc1Jvb3ROb2RlOiBmdW5jdGlvbiggZWxlbWVudCApIHsKCQlyZXR1cm4gKCAvKGh0bWx8Ym9keSkvaSApLnRlc3QoIGVsZW1lbnQudGFnTmFtZSApIHx8IGVsZW1lbnQgPT09IHRoaXMuZG9jdW1lbnRbIDAgXTsKCX0sCgoJX2dldFBhcmVudE9mZnNldDogZnVuY3Rpb24oKSB7CgoJCS8vR2V0IHRoZSBvZmZzZXRQYXJlbnQgYW5kIGNhY2hlIGl0cyBwb3NpdGlvbgoJCXZhciBwbyA9IHRoaXMub2Zmc2V0UGFyZW50Lm9mZnNldCgpLAoJCQlkb2N1bWVudCA9IHRoaXMuZG9jdW1lbnRbIDAgXTsKCgkJLy8gVGhpcyBpcyBhIHNwZWNpYWwgY2FzZSB3aGVyZSB3ZSBuZWVkIHRvIG1vZGlmeSBhIG9mZnNldCBjYWxjdWxhdGVkIG9uIHN0YXJ0LCBzaW5jZSB0aGUKCQkvLyBmb2xsb3dpbmcgaGFwcGVuZWQ6CgkJLy8gMS4gVGhlIHBvc2l0aW9uIG9mIHRoZSBoZWxwZXIgaXMgYWJzb2x1dGUsIHNvIGl0J3MgcG9zaXRpb24gaXMgY2FsY3VsYXRlZCBiYXNlZCBvbiB0aGUKCQkvLyBuZXh0IHBvc2l0aW9uZWQgcGFyZW50CgkJLy8gMi4gVGhlIGFjdHVhbCBvZmZzZXQgcGFyZW50IGlzIGEgY2hpbGQgb2YgdGhlIHNjcm9sbCBwYXJlbnQsIGFuZCB0aGUgc2Nyb2xsIHBhcmVudCBpc24ndAoJCS8vIHRoZSBkb2N1bWVudCwgd2hpY2ggbWVhbnMgdGhhdCB0aGUgc2Nyb2xsIGlzIGluY2x1ZGVkIGluIHRoZSBpbml0aWFsIGNhbGN1bGF0aW9uIG9mIHRoZQoJCS8vIG9mZnNldCBvZiB0aGUgcGFyZW50LCBhbmQgbmV2ZXIgcmVjYWxjdWxhdGVkIHVwb24gZHJhZwoJCWlmICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImFic29sdXRlIiAmJiB0aGlzLnNjcm9sbFBhcmVudFsgMCBdICE9PSBkb2N1bWVudCAmJgoJCQkJJC5jb250YWlucyggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSwgdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgewoJCQlwby5sZWZ0ICs9IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKTsKCQkJcG8udG9wICs9IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpOwoJCX0KCgkJaWYgKCB0aGlzLl9pc1Jvb3ROb2RlKCB0aGlzLm9mZnNldFBhcmVudFsgMCBdICkgKSB7CgkJCXBvID0geyB0b3A6IDAsIGxlZnQ6IDAgfTsKCQl9CgoJCXJldHVybiB7CgkJCXRvcDogcG8udG9wICsgKCBwYXJzZUludCggdGhpcy5vZmZzZXRQYXJlbnQuY3NzKCAiYm9yZGVyVG9wV2lkdGgiICksIDEwICkgfHwgMCApLAoJCQlsZWZ0OiBwby5sZWZ0ICsgKCBwYXJzZUludCggdGhpcy5vZmZzZXRQYXJlbnQuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKQoJCX07CgoJfSwKCglfZ2V0UmVsYXRpdmVPZmZzZXQ6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy5jc3NQb3NpdGlvbiAhPT0gInJlbGF0aXZlIiApIHsKCQkJcmV0dXJuIHsgdG9wOiAwLCBsZWZ0OiAwIH07CgkJfQoKCQl2YXIgcCA9IHRoaXMuZWxlbWVudC5wb3NpdGlvbigpLAoJCQlzY3JvbGxJc1Jvb3ROb2RlID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApOwoKCQlyZXR1cm4gewoJCQl0b3A6IHAudG9wIC0gKCBwYXJzZUludCggdGhpcy5oZWxwZXIuY3NzKCAidG9wIiApLCAxMCApIHx8IDAgKSArCgkJCQkoICFzY3JvbGxJc1Jvb3ROb2RlID8gdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsVG9wKCkgOiAwICksCgkJCWxlZnQ6IHAubGVmdCAtICggcGFyc2VJbnQoIHRoaXMuaGVscGVyLmNzcyggImxlZnQiICksIDEwICkgfHwgMCApICsKCQkJCSggIXNjcm9sbElzUm9vdE5vZGUgPyB0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkgOiAwICkKCQl9OwoKCX0sCgoJX2NhY2hlTWFyZ2luczogZnVuY3Rpb24oKSB7CgkJdGhpcy5tYXJnaW5zID0gewoJCQlsZWZ0OiAoIHBhcnNlSW50KCB0aGlzLmVsZW1lbnQuY3NzKCAibWFyZ2luTGVmdCIgKSwgMTAgKSB8fCAwICksCgkJCXRvcDogKCBwYXJzZUludCggdGhpcy5lbGVtZW50LmNzcyggIm1hcmdpblRvcCIgKSwgMTAgKSB8fCAwICksCgkJCXJpZ2h0OiAoIHBhcnNlSW50KCB0aGlzLmVsZW1lbnQuY3NzKCAibWFyZ2luUmlnaHQiICksIDEwICkgfHwgMCApLAoJCQlib3R0b206ICggcGFyc2VJbnQoIHRoaXMuZWxlbWVudC5jc3MoICJtYXJnaW5Cb3R0b20iICksIDEwICkgfHwgMCApCgkJfTsKCX0sCgoJX2NhY2hlSGVscGVyUHJvcG9ydGlvbnM6IGZ1bmN0aW9uKCkgewoJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMgPSB7CgkJCXdpZHRoOiB0aGlzLmhlbHBlci5vdXRlcldpZHRoKCksCgkJCWhlaWdodDogdGhpcy5oZWxwZXIub3V0ZXJIZWlnaHQoKQoJCX07Cgl9LAoKCV9zZXRDb250YWlubWVudDogZnVuY3Rpb24oKSB7CgoJCXZhciBpc1VzZXJTY3JvbGxhYmxlLCBjLCBjZSwKCQkJbyA9IHRoaXMub3B0aW9ucywKCQkJZG9jdW1lbnQgPSB0aGlzLmRvY3VtZW50WyAwIF07CgoJCXRoaXMucmVsYXRpdmVDb250YWluZXIgPSBudWxsOwoKCQlpZiAoICFvLmNvbnRhaW5tZW50ICkgewoJCQl0aGlzLmNvbnRhaW5tZW50ID0gbnVsbDsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCBvLmNvbnRhaW5tZW50ID09PSAid2luZG93IiApIHsKCQkJdGhpcy5jb250YWlubWVudCA9IFsKCQkJCSQoIHdpbmRvdyApLnNjcm9sbExlZnQoKSAtIHRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQgLSB0aGlzLm9mZnNldC5wYXJlbnQubGVmdCwKCQkJCSQoIHdpbmRvdyApLnNjcm9sbFRvcCgpIC0gdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wIC0gdGhpcy5vZmZzZXQucGFyZW50LnRvcCwKCQkJCSQoIHdpbmRvdyApLnNjcm9sbExlZnQoKSArICQoIHdpbmRvdyApLndpZHRoKCkgLQoJCQkJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLSB0aGlzLm1hcmdpbnMubGVmdCwKCQkJCSQoIHdpbmRvdyApLnNjcm9sbFRvcCgpICsKCQkJCQkoICQoIHdpbmRvdyApLmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQgKSAtCgkJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSB0aGlzLm1hcmdpbnMudG9wCgkJCV07CgkJCXJldHVybjsKCQl9CgoJCWlmICggby5jb250YWlubWVudCA9PT0gImRvY3VtZW50IiApIHsKCQkJdGhpcy5jb250YWlubWVudCA9IFsKCQkJCTAsCgkJCQkwLAoJCQkJJCggZG9jdW1lbnQgKS53aWR0aCgpIC0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtIHRoaXMubWFyZ2lucy5sZWZ0LAoJCQkJKCAkKCBkb2N1bWVudCApLmhlaWdodCgpIHx8IGRvY3VtZW50LmJvZHkucGFyZW50Tm9kZS5zY3JvbGxIZWlnaHQgKSAtCgkJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSB0aGlzLm1hcmdpbnMudG9wCgkJCV07CgkJCXJldHVybjsKCQl9CgoJCWlmICggby5jb250YWlubWVudC5jb25zdHJ1Y3RvciA9PT0gQXJyYXkgKSB7CgkJCXRoaXMuY29udGFpbm1lbnQgPSBvLmNvbnRhaW5tZW50OwoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIG8uY29udGFpbm1lbnQgPT09ICJwYXJlbnQiICkgewoJCQlvLmNvbnRhaW5tZW50ID0gdGhpcy5oZWxwZXJbIDAgXS5wYXJlbnROb2RlOwoJCX0KCgkJYyA9ICQoIG8uY29udGFpbm1lbnQgKTsKCQljZSA9IGNbIDAgXTsKCgkJaWYgKCAhY2UgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlzVXNlclNjcm9sbGFibGUgPSAvKHNjcm9sbHxhdXRvKS8udGVzdCggYy5jc3MoICJvdmVyZmxvdyIgKSApOwoKCQl0aGlzLmNvbnRhaW5tZW50ID0gWwoJCQkoIHBhcnNlSW50KCBjLmNzcyggImJvcmRlckxlZnRXaWR0aCIgKSwgMTAgKSB8fCAwICkgKwoJCQkJKCBwYXJzZUludCggYy5jc3MoICJwYWRkaW5nTGVmdCIgKSwgMTAgKSB8fCAwICksCgkJCSggcGFyc2VJbnQoIGMuY3NzKCAiYm9yZGVyVG9wV2lkdGgiICksIDEwICkgfHwgMCApICsKCQkJCSggcGFyc2VJbnQoIGMuY3NzKCAicGFkZGluZ1RvcCIgKSwgMTAgKSB8fCAwICksCgkJCSggaXNVc2VyU2Nyb2xsYWJsZSA/IE1hdGgubWF4KCBjZS5zY3JvbGxXaWR0aCwgY2Uub2Zmc2V0V2lkdGggKSA6IGNlLm9mZnNldFdpZHRoICkgLQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJib3JkZXJSaWdodFdpZHRoIiApLCAxMCApIHx8IDAgKSAtCgkJCQkoIHBhcnNlSW50KCBjLmNzcyggInBhZGRpbmdSaWdodCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtCgkJCQl0aGlzLm1hcmdpbnMubGVmdCAtCgkJCQl0aGlzLm1hcmdpbnMucmlnaHQsCgkJCSggaXNVc2VyU2Nyb2xsYWJsZSA/IE1hdGgubWF4KCBjZS5zY3JvbGxIZWlnaHQsIGNlLm9mZnNldEhlaWdodCApIDogY2Uub2Zmc2V0SGVpZ2h0ICkgLQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJib3JkZXJCb3R0b21XaWR0aCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJKCBwYXJzZUludCggYy5jc3MoICJwYWRkaW5nQm90dG9tIiApLCAxMCApIHx8IDAgKSAtCgkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAtCgkJCQl0aGlzLm1hcmdpbnMudG9wIC0KCQkJCXRoaXMubWFyZ2lucy5ib3R0b20KCQldOwoJCXRoaXMucmVsYXRpdmVDb250YWluZXIgPSBjOwoJfSwKCglfY29udmVydFBvc2l0aW9uVG86IGZ1bmN0aW9uKCBkLCBwb3MgKSB7CgoJCWlmICggIXBvcyApIHsKCQkJcG9zID0gdGhpcy5wb3NpdGlvbjsKCQl9CgoJCXZhciBtb2QgPSBkID09PSAiYWJzb2x1dGUiID8gMSA6IC0xLAoJCQlzY3JvbGxJc1Jvb3ROb2RlID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApOwoKCQlyZXR1cm4gewoJCQl0b3A6ICgKCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24KCQkJCXBvcy50b3AJKwoKCQkJCS8vIE9ubHkgZm9yIHJlbGF0aXZlIHBvc2l0aW9uZWQgbm9kZXM6IFJlbGF0aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8gb2Zmc2V0IHBhcmVudAoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wICogbW9kICsKCgkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LnRvcCAqIG1vZCAtCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMub2Zmc2V0LnNjcm9sbC50b3AgOgoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA/IDAgOiB0aGlzLm9mZnNldC5zY3JvbGwudG9wICkgKSAqIG1vZCApCgkJCSksCgkJCWxlZnQ6ICgKCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24KCQkJCXBvcy5sZWZ0ICsKCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQKCQkJCXRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQgKiBtb2QgKwoKCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQubGVmdCAqIG1vZAktCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0IDoKCQkJCQkoIHNjcm9sbElzUm9vdE5vZGUgPyAwIDogdGhpcy5vZmZzZXQuc2Nyb2xsLmxlZnQgKSApICogbW9kICkKCQkJKQoJCX07CgoJfSwKCglfZ2VuZXJhdGVQb3NpdGlvbjogZnVuY3Rpb24oIGV2ZW50LCBjb25zdHJhaW5Qb3NpdGlvbiApIHsKCgkJdmFyIGNvbnRhaW5tZW50LCBjbywgdG9wLCBsZWZ0LAoJCQlvID0gdGhpcy5vcHRpb25zLAoJCQlzY3JvbGxJc1Jvb3ROb2RlID0gdGhpcy5faXNSb290Tm9kZSggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSApLAoJCQlwYWdlWCA9IGV2ZW50LnBhZ2VYLAoJCQlwYWdlWSA9IGV2ZW50LnBhZ2VZOwoKCQkvLyBDYWNoZSB0aGUgc2Nyb2xsCgkJaWYgKCAhc2Nyb2xsSXNSb290Tm9kZSB8fCAhdGhpcy5vZmZzZXQuc2Nyb2xsICkgewoJCQl0aGlzLm9mZnNldC5zY3JvbGwgPSB7CgkJCQl0b3A6IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpLAoJCQkJbGVmdDogdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpCgkJCX07CgkJfQoKCQkvKgoJCSAqIC0gUG9zaXRpb24gY29uc3RyYWluaW5nIC0KCQkgKiBDb25zdHJhaW4gdGhlIHBvc2l0aW9uIHRvIGEgbWl4IG9mIGdyaWQsIGNvbnRhaW5tZW50LgoJCSAqLwoKCQkvLyBJZiB3ZSBhcmUgbm90IGRyYWdnaW5nIHlldCwgd2Ugd29uJ3QgY2hlY2sgZm9yIG9wdGlvbnMKCQlpZiAoIGNvbnN0cmFpblBvc2l0aW9uICkgewoJCQlpZiAoIHRoaXMuY29udGFpbm1lbnQgKSB7CgkJCQlpZiAoIHRoaXMucmVsYXRpdmVDb250YWluZXIgKSB7CgkJCQkJY28gPSB0aGlzLnJlbGF0aXZlQ29udGFpbmVyLm9mZnNldCgpOwoJCQkJCWNvbnRhaW5tZW50ID0gWwoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAwIF0gKyBjby5sZWZ0LAoJCQkJCQl0aGlzLmNvbnRhaW5tZW50WyAxIF0gKyBjby50b3AsCgkJCQkJCXRoaXMuY29udGFpbm1lbnRbIDIgXSArIGNvLmxlZnQsCgkJCQkJCXRoaXMuY29udGFpbm1lbnRbIDMgXSArIGNvLnRvcAoJCQkJCV07CgkJCQl9IGVsc2UgewoJCQkJCWNvbnRhaW5tZW50ID0gdGhpcy5jb250YWlubWVudDsKCQkJCX0KCgkJCQlpZiAoIGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA8IGNvbnRhaW5tZW50WyAwIF0gKSB7CgkJCQkJcGFnZVggPSBjb250YWlubWVudFsgMCBdICsgdGhpcy5vZmZzZXQuY2xpY2subGVmdDsKCQkJCX0KCQkJCWlmICggZXZlbnQucGFnZVkgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPCBjb250YWlubWVudFsgMSBdICkgewoJCQkJCXBhZ2VZID0gY29udGFpbm1lbnRbIDEgXSArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcDsKCQkJCX0KCQkJCWlmICggZXZlbnQucGFnZVggLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0ID4gY29udGFpbm1lbnRbIDIgXSApIHsKCQkJCQlwYWdlWCA9IGNvbnRhaW5tZW50WyAyIF0gKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0OwoJCQkJfQoJCQkJaWYgKCBldmVudC5wYWdlWSAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+IGNvbnRhaW5tZW50WyAzIF0gKSB7CgkJCQkJcGFnZVkgPSBjb250YWlubWVudFsgMyBdICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wOwoJCQkJfQoJCQl9CgoJCQlpZiAoIG8uZ3JpZCApIHsKCgkJCQkvL0NoZWNrIGZvciBncmlkIGVsZW1lbnRzIHNldCB0byAwIHRvIHByZXZlbnQgZGl2aWRlIGJ5IDAgZXJyb3IgY2F1c2luZyBpbnZhbGlkCgkJCQkvLyBhcmd1bWVudCBlcnJvcnMgaW4gSUUgKHNlZSB0aWNrZXQgIzY5NTApCgkJCQl0b3AgPSBvLmdyaWRbIDEgXSA/IHRoaXMub3JpZ2luYWxQYWdlWSArIE1hdGgucm91bmQoICggcGFnZVkgLQoJCQkJCXRoaXMub3JpZ2luYWxQYWdlWSApIC8gby5ncmlkWyAxIF0gKSAqIG8uZ3JpZFsgMSBdIDogdGhpcy5vcmlnaW5hbFBhZ2VZOwoJCQkJcGFnZVkgPSBjb250YWlubWVudCA/ICggKCB0b3AgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPj0gY29udGFpbm1lbnRbIDEgXSB8fAoJCQkJCXRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+IGNvbnRhaW5tZW50WyAzIF0gKSA/CgkJCQkJCXRvcCA6CgkJCQkJCSggKCB0b3AgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPj0gY29udGFpbm1lbnRbIDEgXSApID8KCQkJCQkJCXRvcCAtIG8uZ3JpZFsgMSBdIDogdG9wICsgby5ncmlkWyAxIF0gKSApIDogdG9wOwoKCQkJCWxlZnQgPSBvLmdyaWRbIDAgXSA/IHRoaXMub3JpZ2luYWxQYWdlWCArCgkJCQkJTWF0aC5yb3VuZCggKCBwYWdlWCAtIHRoaXMub3JpZ2luYWxQYWdlWCApIC8gby5ncmlkWyAwIF0gKSAqIG8uZ3JpZFsgMCBdIDoKCQkJCQl0aGlzLm9yaWdpbmFsUGFnZVg7CgkJCQlwYWdlWCA9IGNvbnRhaW5tZW50ID8gKCAoIGxlZnQgLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0ID49IGNvbnRhaW5tZW50WyAwIF0gfHwKCQkJCQlsZWZ0IC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+IGNvbnRhaW5tZW50WyAyIF0gKSA/CgkJCQkJCWxlZnQgOgoJCQkJCQkoICggbGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPj0gY29udGFpbm1lbnRbIDAgXSApID8KCQkJCQkJCWxlZnQgLSBvLmdyaWRbIDAgXSA6IGxlZnQgKyBvLmdyaWRbIDAgXSApICkgOiBsZWZ0OwoJCQl9CgoJCQlpZiAoIG8uYXhpcyA9PT0gInkiICkgewoJCQkJcGFnZVggPSB0aGlzLm9yaWdpbmFsUGFnZVg7CgkJCX0KCgkJCWlmICggby5heGlzID09PSAieCIgKSB7CgkJCQlwYWdlWSA9IHRoaXMub3JpZ2luYWxQYWdlWTsKCQkJfQoJCX0KCgkJcmV0dXJuIHsKCQkJdG9wOiAoCgoJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uCgkJCQlwYWdlWSAtCgoJCQkJLy8gQ2xpY2sgb2Zmc2V0IChyZWxhdGl2ZSB0byB0aGUgZWxlbWVudCkKCQkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCAtCgoJCQkJLy8gT25seSBmb3IgcmVsYXRpdmUgcG9zaXRpb25lZCBub2RlczogUmVsYXRpdmUgb2Zmc2V0IGZyb20gZWxlbWVudCB0byBvZmZzZXQgcGFyZW50CgkJCQl0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AgLQoKCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQudG9wICsKCQkJCSggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMub2Zmc2V0LnNjcm9sbC50b3AgOgoJCQkJCSggc2Nyb2xsSXNSb290Tm9kZSA/IDAgOiB0aGlzLm9mZnNldC5zY3JvbGwudG9wICkgKQoJCQkpLAoJCQlsZWZ0OiAoCgoJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uCgkJCQlwYWdlWCAtCgoJCQkJLy8gQ2xpY2sgb2Zmc2V0IChyZWxhdGl2ZSB0byB0aGUgZWxlbWVudCkKCQkJCXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgLQoKCQkJCS8vIE9ubHkgZm9yIHJlbGF0aXZlIHBvc2l0aW9uZWQgbm9kZXM6IFJlbGF0aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8gb2Zmc2V0IHBhcmVudAoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCAtCgoJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikKCQkJCXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0ICsKCQkJCSggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMub2Zmc2V0LnNjcm9sbC5sZWZ0IDoKCQkJCQkoIHNjcm9sbElzUm9vdE5vZGUgPyAwIDogdGhpcy5vZmZzZXQuc2Nyb2xsLmxlZnQgKSApCgkJCSkKCQl9OwoKCX0sCgoJX2NsZWFyOiBmdW5jdGlvbigpIHsKCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5oZWxwZXIsICJ1aS1kcmFnZ2FibGUtZHJhZ2dpbmciICk7CgkJaWYgKCB0aGlzLmhlbHBlclsgMCBdICE9PSB0aGlzLmVsZW1lbnRbIDAgXSAmJiAhdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsICkgewoJCQl0aGlzLmhlbHBlci5yZW1vdmUoKTsKCQl9CgkJdGhpcy5oZWxwZXIgPSBudWxsOwoJCXRoaXMuY2FuY2VsSGVscGVyUmVtb3ZhbCA9IGZhbHNlOwoJCWlmICggdGhpcy5kZXN0cm95T25DbGVhciApIHsKCQkJdGhpcy5kZXN0cm95KCk7CgkJfQoJfSwKCgkvLyBGcm9tIG5vdyBvbiBidWxrIHN0dWZmIC0gbWFpbmx5IGhlbHBlcnMKCglfdHJpZ2dlcjogZnVuY3Rpb24oIHR5cGUsIGV2ZW50LCB1aSApIHsKCQl1aSA9IHVpIHx8IHRoaXMuX3VpSGFzaCgpOwoJCSQudWkucGx1Z2luLmNhbGwoIHRoaXMsIHR5cGUsIFsgZXZlbnQsIHVpLCB0aGlzIF0sIHRydWUgKTsKCgkJLy8gQWJzb2x1dGUgcG9zaXRpb24gYW5kIG9mZnNldCAoc2VlICM2ODg0ICkgaGF2ZSB0byBiZSByZWNhbGN1bGF0ZWQgYWZ0ZXIgcGx1Z2lucwoJCWlmICggL14oZHJhZ3xzdGFydHxzdG9wKS8udGVzdCggdHlwZSApICkgewoJCQl0aGlzLnBvc2l0aW9uQWJzID0gdGhpcy5fY29udmVydFBvc2l0aW9uVG8oICJhYnNvbHV0ZSIgKTsKCQkJdWkub2Zmc2V0ID0gdGhpcy5wb3NpdGlvbkFiczsKCQl9CgkJcmV0dXJuICQuV2lkZ2V0LnByb3RvdHlwZS5fdHJpZ2dlci5jYWxsKCB0aGlzLCB0eXBlLCBldmVudCwgdWkgKTsKCX0sCgoJcGx1Z2luczoge30sCgoJX3VpSGFzaDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHsKCQkJaGVscGVyOiB0aGlzLmhlbHBlciwKCQkJcG9zaXRpb246IHRoaXMucG9zaXRpb24sCgkJCW9yaWdpbmFsUG9zaXRpb246IHRoaXMub3JpZ2luYWxQb3NpdGlvbiwKCQkJb2Zmc2V0OiB0aGlzLnBvc2l0aW9uQWJzCgkJfTsKCX0KCn0gKTsKCiQudWkucGx1Z2luLmFkZCggImRyYWdnYWJsZSIsICJjb25uZWN0VG9Tb3J0YWJsZSIsIHsKCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7CgkJdmFyIHVpU29ydGFibGUgPSAkLmV4dGVuZCgge30sIHVpLCB7CgkJCWl0ZW06IGRyYWdnYWJsZS5lbGVtZW50CgkJfSApOwoKCQlkcmFnZ2FibGUuc29ydGFibGVzID0gW107CgkJJCggZHJhZ2dhYmxlLm9wdGlvbnMuY29ubmVjdFRvU29ydGFibGUgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIHNvcnRhYmxlID0gJCggdGhpcyApLnNvcnRhYmxlKCAiaW5zdGFuY2UiICk7CgoJCQlpZiAoIHNvcnRhYmxlICYmICFzb3J0YWJsZS5vcHRpb25zLmRpc2FibGVkICkgewoJCQkJZHJhZ2dhYmxlLnNvcnRhYmxlcy5wdXNoKCBzb3J0YWJsZSApOwoKCQkJCS8vIFJlZnJlc2hQb3NpdGlvbnMgaXMgY2FsbGVkIGF0IGRyYWcgc3RhcnQgdG8gcmVmcmVzaCB0aGUgY29udGFpbmVyQ2FjaGUKCQkJCS8vIHdoaWNoIGlzIHVzZWQgaW4gZHJhZy4gVGhpcyBlbnN1cmVzIGl0J3MgaW5pdGlhbGl6ZWQgYW5kIHN5bmNocm9uaXplZAoJCQkJLy8gd2l0aCBhbnkgY2hhbmdlcyB0aGF0IG1pZ2h0IGhhdmUgaGFwcGVuZWQgb24gdGhlIHBhZ2Ugc2luY2UgaW5pdGlhbGl6YXRpb24uCgkJCQlzb3J0YWJsZS5yZWZyZXNoUG9zaXRpb25zKCk7CgkJCQlzb3J0YWJsZS5fdHJpZ2dlciggImFjdGl2YXRlIiwgZXZlbnQsIHVpU29ydGFibGUgKTsKCQkJfQoJCX0gKTsKCX0sCglzdG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7CgkJdmFyIHVpU29ydGFibGUgPSAkLmV4dGVuZCgge30sIHVpLCB7CgkJCWl0ZW06IGRyYWdnYWJsZS5lbGVtZW50CgkJfSApOwoKCQlkcmFnZ2FibGUuY2FuY2VsSGVscGVyUmVtb3ZhbCA9IGZhbHNlOwoKCQkkLmVhY2goIGRyYWdnYWJsZS5zb3J0YWJsZXMsIGZ1bmN0aW9uKCkgewoJCQl2YXIgc29ydGFibGUgPSB0aGlzOwoKCQkJaWYgKCBzb3J0YWJsZS5pc092ZXIgKSB7CgkJCQlzb3J0YWJsZS5pc092ZXIgPSAwOwoKCQkJCS8vIEFsbG93IHRoaXMgc29ydGFibGUgdG8gaGFuZGxlIHJlbW92aW5nIHRoZSBoZWxwZXIKCQkJCWRyYWdnYWJsZS5jYW5jZWxIZWxwZXJSZW1vdmFsID0gdHJ1ZTsKCQkJCXNvcnRhYmxlLmNhbmNlbEhlbHBlclJlbW92YWwgPSBmYWxzZTsKCgkJCQkvLyBVc2UgX3N0b3JlZENTUyBUbyByZXN0b3JlIHByb3BlcnRpZXMgaW4gdGhlIHNvcnRhYmxlLAoJCQkJLy8gYXMgdGhpcyBhbHNvIGhhbmRsZXMgcmV2ZXJ0ICgjOTY3NSkgc2luY2UgdGhlIGRyYWdnYWJsZQoJCQkJLy8gbWF5IGhhdmUgbW9kaWZpZWQgdGhlbSBpbiB1bmV4cGVjdGVkIHdheXMgKCM4ODA5KQoJCQkJc29ydGFibGUuX3N0b3JlZENTUyA9IHsKCQkJCQlwb3NpdGlvbjogc29ydGFibGUucGxhY2Vob2xkZXIuY3NzKCAicG9zaXRpb24iICksCgkJCQkJdG9wOiBzb3J0YWJsZS5wbGFjZWhvbGRlci5jc3MoICJ0b3AiICksCgkJCQkJbGVmdDogc29ydGFibGUucGxhY2Vob2xkZXIuY3NzKCAibGVmdCIgKQoJCQkJfTsKCgkJCQlzb3J0YWJsZS5fbW91c2VTdG9wKCBldmVudCApOwoKCQkJCS8vIE9uY2UgZHJhZyBoYXMgZW5kZWQsIHRoZSBzb3J0YWJsZSBzaG91bGQgcmV0dXJuIHRvIHVzaW5nCgkJCQkvLyBpdHMgb3JpZ2luYWwgaGVscGVyLCBub3QgdGhlIHNoYXJlZCBoZWxwZXIgZnJvbSBkcmFnZ2FibGUKCQkJCXNvcnRhYmxlLm9wdGlvbnMuaGVscGVyID0gc29ydGFibGUub3B0aW9ucy5faGVscGVyOwoJCQl9IGVsc2UgewoKCQkJCS8vIFByZXZlbnQgdGhpcyBTb3J0YWJsZSBmcm9tIHJlbW92aW5nIHRoZSBoZWxwZXIuCgkJCQkvLyBIb3dldmVyLCBkb24ndCBzZXQgdGhlIGRyYWdnYWJsZSB0byByZW1vdmUgdGhlIGhlbHBlcgoJCQkJLy8gZWl0aGVyIGFzIGFub3RoZXIgY29ubmVjdGVkIFNvcnRhYmxlIG1heSB5ZXQgaGFuZGxlIHRoZSByZW1vdmFsLgoJCQkJc29ydGFibGUuY2FuY2VsSGVscGVyUmVtb3ZhbCA9IHRydWU7CgoJCQkJc29ydGFibGUuX3RyaWdnZXIoICJkZWFjdGl2YXRlIiwgZXZlbnQsIHVpU29ydGFibGUgKTsKCQkJfQoJCX0gKTsKCX0sCglkcmFnOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBkcmFnZ2FibGUgKSB7CgkJJC5lYWNoKCBkcmFnZ2FibGUuc29ydGFibGVzLCBmdW5jdGlvbigpIHsKCQkJdmFyIGlubmVybW9zdEludGVyc2VjdGluZyA9IGZhbHNlLAoJCQkJc29ydGFibGUgPSB0aGlzOwoKCQkJLy8gQ29weSBvdmVyIHZhcmlhYmxlcyB0aGF0IHNvcnRhYmxlJ3MgX2ludGVyc2VjdHNXaXRoIHVzZXMKCQkJc29ydGFibGUucG9zaXRpb25BYnMgPSBkcmFnZ2FibGUucG9zaXRpb25BYnM7CgkJCXNvcnRhYmxlLmhlbHBlclByb3BvcnRpb25zID0gZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zOwoJCQlzb3J0YWJsZS5vZmZzZXQuY2xpY2sgPSBkcmFnZ2FibGUub2Zmc2V0LmNsaWNrOwoKCQkJaWYgKCBzb3J0YWJsZS5faW50ZXJzZWN0c1dpdGgoIHNvcnRhYmxlLmNvbnRhaW5lckNhY2hlICkgKSB7CgkJCQlpbm5lcm1vc3RJbnRlcnNlY3RpbmcgPSB0cnVlOwoKCQkJCSQuZWFjaCggZHJhZ2dhYmxlLnNvcnRhYmxlcywgZnVuY3Rpb24oKSB7CgoJCQkJCS8vIENvcHkgb3ZlciB2YXJpYWJsZXMgdGhhdCBzb3J0YWJsZSdzIF9pbnRlcnNlY3RzV2l0aCB1c2VzCgkJCQkJdGhpcy5wb3NpdGlvbkFicyA9IGRyYWdnYWJsZS5wb3NpdGlvbkFiczsKCQkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zID0gZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zOwoJCQkJCXRoaXMub2Zmc2V0LmNsaWNrID0gZHJhZ2dhYmxlLm9mZnNldC5jbGljazsKCgkJCQkJaWYgKCB0aGlzICE9PSBzb3J0YWJsZSAmJgoJCQkJCQkJdGhpcy5faW50ZXJzZWN0c1dpdGgoIHRoaXMuY29udGFpbmVyQ2FjaGUgKSAmJgoJCQkJCQkJJC5jb250YWlucyggc29ydGFibGUuZWxlbWVudFsgMCBdLCB0aGlzLmVsZW1lbnRbIDAgXSApICkgewoJCQkJCQlpbm5lcm1vc3RJbnRlcnNlY3RpbmcgPSBmYWxzZTsKCQkJCQl9CgoJCQkJCXJldHVybiBpbm5lcm1vc3RJbnRlcnNlY3Rpbmc7CgkJCQl9ICk7CgkJCX0KCgkJCWlmICggaW5uZXJtb3N0SW50ZXJzZWN0aW5nICkgewoKCQkJCS8vIElmIGl0IGludGVyc2VjdHMsIHdlIHVzZSBhIGxpdHRsZSBpc092ZXIgdmFyaWFibGUgYW5kIHNldCBpdCBvbmNlLAoJCQkJLy8gc28gdGhhdCB0aGUgbW92ZS1pbiBzdHVmZiBnZXRzIGZpcmVkIG9ubHkgb25jZS4KCQkJCWlmICggIXNvcnRhYmxlLmlzT3ZlciApIHsKCQkJCQlzb3J0YWJsZS5pc092ZXIgPSAxOwoKCQkJCQkvLyBTdG9yZSBkcmFnZ2FibGUncyBwYXJlbnQgaW4gY2FzZSB3ZSBuZWVkIHRvIHJlYXBwZW5kIHRvIGl0IGxhdGVyLgoJCQkJCWRyYWdnYWJsZS5fcGFyZW50ID0gdWkuaGVscGVyLnBhcmVudCgpOwoKCQkJCQlzb3J0YWJsZS5jdXJyZW50SXRlbSA9IHVpLmhlbHBlcgoJCQkJCQkuYXBwZW5kVG8oIHNvcnRhYmxlLmVsZW1lbnQgKQoJCQkJCQkuZGF0YSggInVpLXNvcnRhYmxlLWl0ZW0iLCB0cnVlICk7CgoJCQkJCS8vIFN0b3JlIGhlbHBlciBvcHRpb24gdG8gbGF0ZXIgcmVzdG9yZSBpdAoJCQkJCXNvcnRhYmxlLm9wdGlvbnMuX2hlbHBlciA9IHNvcnRhYmxlLm9wdGlvbnMuaGVscGVyOwoKCQkJCQlzb3J0YWJsZS5vcHRpb25zLmhlbHBlciA9IGZ1bmN0aW9uKCkgewoJCQkJCQlyZXR1cm4gdWkuaGVscGVyWyAwIF07CgkJCQkJfTsKCgkJCQkJLy8gRmlyZSB0aGUgc3RhcnQgZXZlbnRzIG9mIHRoZSBzb3J0YWJsZSB3aXRoIG91ciBwYXNzZWQgYnJvd3NlciBldmVudCwKCQkJCQkvLyBhbmQgb3VyIG93biBoZWxwZXIgKHNvIGl0IGRvZXNuJ3QgY3JlYXRlIGEgbmV3IG9uZSkKCQkJCQlldmVudC50YXJnZXQgPSBzb3J0YWJsZS5jdXJyZW50SXRlbVsgMCBdOwoJCQkJCXNvcnRhYmxlLl9tb3VzZUNhcHR1cmUoIGV2ZW50LCB0cnVlICk7CgkJCQkJc29ydGFibGUuX21vdXNlU3RhcnQoIGV2ZW50LCB0cnVlLCB0cnVlICk7CgoJCQkJCS8vIEJlY2F1c2UgdGhlIGJyb3dzZXIgZXZlbnQgaXMgd2F5IG9mZiB0aGUgbmV3IGFwcGVuZGVkIHBvcnRsZXQsCgkJCQkJLy8gbW9kaWZ5IG5lY2Vzc2FyeSB2YXJpYWJsZXMgdG8gcmVmbGVjdCB0aGUgY2hhbmdlcwoJCQkJCXNvcnRhYmxlLm9mZnNldC5jbGljay50b3AgPSBkcmFnZ2FibGUub2Zmc2V0LmNsaWNrLnRvcDsKCQkJCQlzb3J0YWJsZS5vZmZzZXQuY2xpY2subGVmdCA9IGRyYWdnYWJsZS5vZmZzZXQuY2xpY2subGVmdDsKCQkJCQlzb3J0YWJsZS5vZmZzZXQucGFyZW50LmxlZnQgLT0gZHJhZ2dhYmxlLm9mZnNldC5wYXJlbnQubGVmdCAtCgkJCQkJCXNvcnRhYmxlLm9mZnNldC5wYXJlbnQubGVmdDsKCQkJCQlzb3J0YWJsZS5vZmZzZXQucGFyZW50LnRvcCAtPSBkcmFnZ2FibGUub2Zmc2V0LnBhcmVudC50b3AgLQoJCQkJCQlzb3J0YWJsZS5vZmZzZXQucGFyZW50LnRvcDsKCgkJCQkJZHJhZ2dhYmxlLl90cmlnZ2VyKCAidG9Tb3J0YWJsZSIsIGV2ZW50ICk7CgoJCQkJCS8vIEluZm9ybSBkcmFnZ2FibGUgdGhhdCB0aGUgaGVscGVyIGlzIGluIGEgdmFsaWQgZHJvcCB6b25lLAoJCQkJCS8vIHVzZWQgc29sZWx5IGluIHRoZSByZXZlcnQgb3B0aW9uIHRvIGhhbmRsZSAidmFsaWQvaW52YWxpZCIuCgkJCQkJZHJhZ2dhYmxlLmRyb3BwZWQgPSBzb3J0YWJsZS5lbGVtZW50OwoKCQkJCQkvLyBOZWVkIHRvIHJlZnJlc2hQb3NpdGlvbnMgb2YgYWxsIHNvcnRhYmxlcyBpbiB0aGUgY2FzZSB0aGF0CgkJCQkJLy8gYWRkaW5nIHRvIG9uZSBzb3J0YWJsZSBjaGFuZ2VzIHRoZSBsb2NhdGlvbiBvZiB0aGUgb3RoZXIgc29ydGFibGVzICgjOTY3NSkKCQkJCQkkLmVhY2goIGRyYWdnYWJsZS5zb3J0YWJsZXMsIGZ1bmN0aW9uKCkgewoJCQkJCQl0aGlzLnJlZnJlc2hQb3NpdGlvbnMoKTsKCQkJCQl9ICk7CgoJCQkJCS8vIEhhY2sgc28gcmVjZWl2ZS91cGRhdGUgY2FsbGJhY2tzIHdvcmsgKG1vc3RseSkKCQkJCQlkcmFnZ2FibGUuY3VycmVudEl0ZW0gPSBkcmFnZ2FibGUuZWxlbWVudDsKCQkJCQlzb3J0YWJsZS5mcm9tT3V0c2lkZSA9IGRyYWdnYWJsZTsKCQkJCX0KCgkJCQlpZiAoIHNvcnRhYmxlLmN1cnJlbnRJdGVtICkgewoJCQkJCXNvcnRhYmxlLl9tb3VzZURyYWcoIGV2ZW50ICk7CgoJCQkJCS8vIENvcHkgdGhlIHNvcnRhYmxlJ3MgcG9zaXRpb24gYmVjYXVzZSB0aGUgZHJhZ2dhYmxlJ3MgY2FuIHBvdGVudGlhbGx5IHJlZmxlY3QKCQkJCQkvLyBhIHJlbGF0aXZlIHBvc2l0aW9uLCB3aGlsZSBzb3J0YWJsZSBpcyBhbHdheXMgYWJzb2x1dGUsIHdoaWNoIHRoZSBkcmFnZ2VkCgkJCQkJLy8gZWxlbWVudCBoYXMgbm93IGJlY29tZS4gKCM4ODA5KQoJCQkJCXVpLnBvc2l0aW9uID0gc29ydGFibGUucG9zaXRpb247CgkJCQl9CgkJCX0gZWxzZSB7CgoJCQkJLy8gSWYgaXQgZG9lc24ndCBpbnRlcnNlY3Qgd2l0aCB0aGUgc29ydGFibGUsIGFuZCBpdCBpbnRlcnNlY3RlZCBiZWZvcmUsCgkJCQkvLyB3ZSBmYWtlIHRoZSBkcmFnIHN0b3Agb2YgdGhlIHNvcnRhYmxlLCBidXQgbWFrZSBzdXJlIGl0IGRvZXNuJ3QgcmVtb3ZlCgkJCQkvLyB0aGUgaGVscGVyIGJ5IHVzaW5nIGNhbmNlbEhlbHBlclJlbW92YWwuCgkJCQlpZiAoIHNvcnRhYmxlLmlzT3ZlciApIHsKCgkJCQkJc29ydGFibGUuaXNPdmVyID0gMDsKCQkJCQlzb3J0YWJsZS5jYW5jZWxIZWxwZXJSZW1vdmFsID0gdHJ1ZTsKCgkJCQkJLy8gQ2FsbGluZyBzb3J0YWJsZSdzIG1vdXNlU3RvcCB3b3VsZCB0cmlnZ2VyIGEgcmV2ZXJ0LAoJCQkJCS8vIHNvIHJldmVydCBtdXN0IGJlIHRlbXBvcmFyaWx5IGZhbHNlIHVudGlsIGFmdGVyIG1vdXNlU3RvcCBpcyBjYWxsZWQuCgkJCQkJc29ydGFibGUub3B0aW9ucy5fcmV2ZXJ0ID0gc29ydGFibGUub3B0aW9ucy5yZXZlcnQ7CgkJCQkJc29ydGFibGUub3B0aW9ucy5yZXZlcnQgPSBmYWxzZTsKCgkJCQkJc29ydGFibGUuX3RyaWdnZXIoICJvdXQiLCBldmVudCwgc29ydGFibGUuX3VpSGFzaCggc29ydGFibGUgKSApOwoJCQkJCXNvcnRhYmxlLl9tb3VzZVN0b3AoIGV2ZW50LCB0cnVlICk7CgoJCQkJCS8vIFJlc3RvcmUgc29ydGFibGUgYmVoYXZpb3JzIHRoYXQgd2VyZSBtb2RmaWVkCgkJCQkJLy8gd2hlbiB0aGUgZHJhZ2dhYmxlIGVudGVyZWQgdGhlIHNvcnRhYmxlIGFyZWEgKCM5NDgxKQoJCQkJCXNvcnRhYmxlLm9wdGlvbnMucmV2ZXJ0ID0gc29ydGFibGUub3B0aW9ucy5fcmV2ZXJ0OwoJCQkJCXNvcnRhYmxlLm9wdGlvbnMuaGVscGVyID0gc29ydGFibGUub3B0aW9ucy5faGVscGVyOwoKCQkJCQlpZiAoIHNvcnRhYmxlLnBsYWNlaG9sZGVyICkgewoJCQkJCQlzb3J0YWJsZS5wbGFjZWhvbGRlci5yZW1vdmUoKTsKCQkJCQl9CgoJCQkJCS8vIFJlc3RvcmUgYW5kIHJlY2FsY3VsYXRlIHRoZSBkcmFnZ2FibGUncyBvZmZzZXQgY29uc2lkZXJpbmcgdGhlIHNvcnRhYmxlCgkJCQkJLy8gbWF5IGhhdmUgbW9kaWZpZWQgdGhlbSBpbiB1bmV4cGVjdGVkIHdheXMuICgjODgwOSwgIzEwNjY5KQoJCQkJCXVpLmhlbHBlci5hcHBlbmRUbyggZHJhZ2dhYmxlLl9wYXJlbnQgKTsKCQkJCQlkcmFnZ2FibGUuX3JlZnJlc2hPZmZzZXRzKCBldmVudCApOwoJCQkJCXVpLnBvc2l0aW9uID0gZHJhZ2dhYmxlLl9nZW5lcmF0ZVBvc2l0aW9uKCBldmVudCwgdHJ1ZSApOwoKCQkJCQlkcmFnZ2FibGUuX3RyaWdnZXIoICJmcm9tU29ydGFibGUiLCBldmVudCApOwoKCQkJCQkvLyBJbmZvcm0gZHJhZ2dhYmxlIHRoYXQgdGhlIGhlbHBlciBpcyBubyBsb25nZXIgaW4gYSB2YWxpZCBkcm9wIHpvbmUKCQkJCQlkcmFnZ2FibGUuZHJvcHBlZCA9IGZhbHNlOwoKCQkJCQkvLyBOZWVkIHRvIHJlZnJlc2hQb3NpdGlvbnMgb2YgYWxsIHNvcnRhYmxlcyBqdXN0IGluIGNhc2UgcmVtb3ZpbmcKCQkJCQkvLyBmcm9tIG9uZSBzb3J0YWJsZSBjaGFuZ2VzIHRoZSBsb2NhdGlvbiBvZiBvdGhlciBzb3J0YWJsZXMgKCM5Njc1KQoJCQkJCSQuZWFjaCggZHJhZ2dhYmxlLnNvcnRhYmxlcywgZnVuY3Rpb24oKSB7CgkJCQkJCXRoaXMucmVmcmVzaFBvc2l0aW9ucygpOwoJCQkJCX0gKTsKCQkJCX0KCQkJfQoJCX0gKTsKCX0KfSApOwoKJC51aS5wbHVnaW4uYWRkKCAiZHJhZ2dhYmxlIiwgImN1cnNvciIsIHsKCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsKCQl2YXIgdCA9ICQoICJib2R5IiApLAoJCQlvID0gaW5zdGFuY2Uub3B0aW9uczsKCgkJaWYgKCB0LmNzcyggImN1cnNvciIgKSApIHsKCQkJby5fY3Vyc29yID0gdC5jc3MoICJjdXJzb3IiICk7CgkJfQoJCXQuY3NzKCAiY3Vyc29yIiwgby5jdXJzb3IgKTsKCX0sCglzdG9wOiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsKCQl2YXIgbyA9IGluc3RhbmNlLm9wdGlvbnM7CgkJaWYgKCBvLl9jdXJzb3IgKSB7CgkJCSQoICJib2R5IiApLmNzcyggImN1cnNvciIsIG8uX2N1cnNvciApOwoJCX0KCX0KfSApOwoKJC51aS5wbHVnaW4uYWRkKCAiZHJhZ2dhYmxlIiwgIm9wYWNpdHkiLCB7CglzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaW5zdGFuY2UgKSB7CgkJdmFyIHQgPSAkKCB1aS5oZWxwZXIgKSwKCQkJbyA9IGluc3RhbmNlLm9wdGlvbnM7CgkJaWYgKCB0LmNzcyggIm9wYWNpdHkiICkgKSB7CgkJCW8uX29wYWNpdHkgPSB0LmNzcyggIm9wYWNpdHkiICk7CgkJfQoJCXQuY3NzKCAib3BhY2l0eSIsIG8ub3BhY2l0eSApOwoJfSwKCXN0b3A6IGZ1bmN0aW9uKCBldmVudCwgdWksIGluc3RhbmNlICkgewoJCXZhciBvID0gaW5zdGFuY2Uub3B0aW9uczsKCQlpZiAoIG8uX29wYWNpdHkgKSB7CgkJCSQoIHVpLmhlbHBlciApLmNzcyggIm9wYWNpdHkiLCBvLl9vcGFjaXR5ICk7CgkJfQoJfQp9ICk7CgokLnVpLnBsdWdpbi5hZGQoICJkcmFnZ2FibGUiLCAic2Nyb2xsIiwgewoJc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgdWksIGkgKSB7CgkJaWYgKCAhaS5zY3JvbGxQYXJlbnROb3RIaWRkZW4gKSB7CgkJCWkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuID0gaS5oZWxwZXIuc2Nyb2xsUGFyZW50KCBmYWxzZSApOwoJCX0KCgkJaWYgKCBpLnNjcm9sbFBhcmVudE5vdEhpZGRlblsgMCBdICE9PSBpLmRvY3VtZW50WyAwIF0gJiYKCQkJCWkuc2Nyb2xsUGFyZW50Tm90SGlkZGVuWyAwIF0udGFnTmFtZSAhPT0gIkhUTUwiICkgewoJCQlpLm92ZXJmbG93T2Zmc2V0ID0gaS5zY3JvbGxQYXJlbnROb3RIaWRkZW4ub2Zmc2V0KCk7CgkJfQoJfSwKCWRyYWc6IGZ1bmN0aW9uKCBldmVudCwgdWksIGkgICkgewoKCQl2YXIgbyA9IGkub3B0aW9ucywKCQkJc2Nyb2xsZWQgPSBmYWxzZSwKCQkJc2Nyb2xsUGFyZW50ID0gaS5zY3JvbGxQYXJlbnROb3RIaWRkZW5bIDAgXSwKCQkJZG9jdW1lbnQgPSBpLmRvY3VtZW50WyAwIF07CgoJCWlmICggc2Nyb2xsUGFyZW50ICE9PSBkb2N1bWVudCAmJiBzY3JvbGxQYXJlbnQudGFnTmFtZSAhPT0gIkhUTUwiICkgewoJCQlpZiAoICFvLmF4aXMgfHwgby5heGlzICE9PSAieCIgKSB7CgkJCQlpZiAoICggaS5vdmVyZmxvd09mZnNldC50b3AgKyBzY3JvbGxQYXJlbnQub2Zmc2V0SGVpZ2h0ICkgLSBldmVudC5wYWdlWSA8CgkJCQkJCW8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7CgkJCQkJc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCA9IHNjcm9sbGVkID0gc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCArIG8uc2Nyb2xsU3BlZWQ7CgkJCQl9IGVsc2UgaWYgKCBldmVudC5wYWdlWSAtIGkub3ZlcmZsb3dPZmZzZXQudG9wIDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsKCQkJCQlzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wID0gc2Nyb2xsZWQgPSBzY3JvbGxQYXJlbnQuc2Nyb2xsVG9wIC0gby5zY3JvbGxTcGVlZDsKCQkJCX0KCQkJfQoKCQkJaWYgKCAhby5heGlzIHx8IG8uYXhpcyAhPT0gInkiICkgewoJCQkJaWYgKCAoIGkub3ZlcmZsb3dPZmZzZXQubGVmdCArIHNjcm9sbFBhcmVudC5vZmZzZXRXaWR0aCApIC0gZXZlbnQucGFnZVggPAoJCQkJCQlvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0ID0gc2Nyb2xsZWQgPSBzY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCArIG8uc2Nyb2xsU3BlZWQ7CgkJCQl9IGVsc2UgaWYgKCBldmVudC5wYWdlWCAtIGkub3ZlcmZsb3dPZmZzZXQubGVmdCA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7CgkJCQkJc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQgPSBzY3JvbGxlZCA9IHNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0IC0gby5zY3JvbGxTcGVlZDsKCQkJCX0KCQkJfQoKCQl9IGVsc2UgewoKCQkJaWYgKCAhby5heGlzIHx8IG8uYXhpcyAhPT0gIngiICkgewoJCQkJaWYgKCBldmVudC5wYWdlWSAtICQoIGRvY3VtZW50ICkuc2Nyb2xsVG9wKCkgPCBvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNjcm9sbGVkID0gJCggZG9jdW1lbnQgKS5zY3JvbGxUb3AoICQoIGRvY3VtZW50ICkuc2Nyb2xsVG9wKCkgLSBvLnNjcm9sbFNwZWVkICk7CgkJCQl9IGVsc2UgaWYgKCAkKCB3aW5kb3cgKS5oZWlnaHQoKSAtICggZXZlbnQucGFnZVkgLSAkKCBkb2N1bWVudCApLnNjcm9sbFRvcCgpICkgPAoJCQkJCQlvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNjcm9sbGVkID0gJCggZG9jdW1lbnQgKS5zY3JvbGxUb3AoICQoIGRvY3VtZW50ICkuc2Nyb2xsVG9wKCkgKyBvLnNjcm9sbFNwZWVkICk7CgkJCQl9CgkJCX0KCgkJCWlmICggIW8uYXhpcyB8fCBvLmF4aXMgIT09ICJ5IiApIHsKCQkJCWlmICggZXZlbnQucGFnZVggLSAkKCBkb2N1bWVudCApLnNjcm9sbExlZnQoKSA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7CgkJCQkJc2Nyb2xsZWQgPSAkKCBkb2N1bWVudCApLnNjcm9sbExlZnQoCgkJCQkJCSQoIGRvY3VtZW50ICkuc2Nyb2xsTGVmdCgpIC0gby5zY3JvbGxTcGVlZAoJCQkJCSk7CgkJCQl9IGVsc2UgaWYgKCAkKCB3aW5kb3cgKS53aWR0aCgpIC0gKCBldmVudC5wYWdlWCAtICQoIGRvY3VtZW50ICkuc2Nyb2xsTGVmdCgpICkgPAoJCQkJCQlvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNjcm9sbGVkID0gJCggZG9jdW1lbnQgKS5zY3JvbGxMZWZ0KAoJCQkJCQkkKCBkb2N1bWVudCApLnNjcm9sbExlZnQoKSArIG8uc2Nyb2xsU3BlZWQKCQkJCQkpOwoJCQkJfQoJCQl9CgoJCX0KCgkJaWYgKCBzY3JvbGxlZCAhPT0gZmFsc2UgJiYgJC51aS5kZG1hbmFnZXIgJiYgIW8uZHJvcEJlaGF2aW91ciApIHsKCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoIGksIGV2ZW50ICk7CgkJfQoKCX0KfSApOwoKJC51aS5wbHVnaW4uYWRkKCAiZHJhZ2dhYmxlIiwgInNuYXAiLCB7CglzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaSApIHsKCgkJdmFyIG8gPSBpLm9wdGlvbnM7CgoJCWkuc25hcEVsZW1lbnRzID0gW107CgoJCSQoIG8uc25hcC5jb25zdHJ1Y3RvciAhPT0gU3RyaW5nID8gKCBvLnNuYXAuaXRlbXMgfHwgIjpkYXRhKHVpLWRyYWdnYWJsZSkiICkgOiBvLnNuYXAgKQoJCQkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQl2YXIgJHQgPSAkKCB0aGlzICksCgkJCQkJJG8gPSAkdC5vZmZzZXQoKTsKCQkJCWlmICggdGhpcyAhPT0gaS5lbGVtZW50WyAwIF0gKSB7CgkJCQkJaS5zbmFwRWxlbWVudHMucHVzaCggewoJCQkJCQlpdGVtOiB0aGlzLAoJCQkJCQl3aWR0aDogJHQub3V0ZXJXaWR0aCgpLCBoZWlnaHQ6ICR0Lm91dGVySGVpZ2h0KCksCgkJCQkJCXRvcDogJG8udG9wLCBsZWZ0OiAkby5sZWZ0CgkJCQkJfSApOwoJCQkJfQoJCQl9ICk7CgoJfSwKCWRyYWc6IGZ1bmN0aW9uKCBldmVudCwgdWksIGluc3QgKSB7CgoJCXZhciB0cywgYnMsIGxzLCBycywgbCwgciwgdCwgYiwgaSwgZmlyc3QsCgkJCW8gPSBpbnN0Lm9wdGlvbnMsCgkJCWQgPSBvLnNuYXBUb2xlcmFuY2UsCgkJCXgxID0gdWkub2Zmc2V0LmxlZnQsIHgyID0geDEgKyBpbnN0LmhlbHBlclByb3BvcnRpb25zLndpZHRoLAoJCQl5MSA9IHVpLm9mZnNldC50b3AsIHkyID0geTEgKyBpbnN0LmhlbHBlclByb3BvcnRpb25zLmhlaWdodDsKCgkJZm9yICggaSA9IGluc3Quc25hcEVsZW1lbnRzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgewoKCQkJbCA9IGluc3Quc25hcEVsZW1lbnRzWyBpIF0ubGVmdCAtIGluc3QubWFyZ2lucy5sZWZ0OwoJCQlyID0gbCArIGluc3Quc25hcEVsZW1lbnRzWyBpIF0ud2lkdGg7CgkJCXQgPSBpbnN0LnNuYXBFbGVtZW50c1sgaSBdLnRvcCAtIGluc3QubWFyZ2lucy50b3A7CgkJCWIgPSB0ICsgaW5zdC5zbmFwRWxlbWVudHNbIGkgXS5oZWlnaHQ7CgoJCQlpZiAoIHgyIDwgbCAtIGQgfHwgeDEgPiByICsgZCB8fCB5MiA8IHQgLSBkIHx8IHkxID4gYiArIGQgfHwKCQkJCQkhJC5jb250YWlucyggaW5zdC5zbmFwRWxlbWVudHNbIGkgXS5pdGVtLm93bmVyRG9jdW1lbnQsCgkJCQkJaW5zdC5zbmFwRWxlbWVudHNbIGkgXS5pdGVtICkgKSB7CgkJCQlpZiAoIGluc3Quc25hcEVsZW1lbnRzWyBpIF0uc25hcHBpbmcgKSB7CgkJCQkJKCBpbnN0Lm9wdGlvbnMuc25hcC5yZWxlYXNlICYmCgkJCQkJCWluc3Qub3B0aW9ucy5zbmFwLnJlbGVhc2UuY2FsbCgKCQkJCQkJCWluc3QuZWxlbWVudCwKCQkJCQkJCWV2ZW50LAoJCQkJCQkJJC5leHRlbmQoIGluc3QuX3VpSGFzaCgpLCB7IHNuYXBJdGVtOiBpbnN0LnNuYXBFbGVtZW50c1sgaSBdLml0ZW0gfSApCgkJCQkJCSkgKTsKCQkJCX0KCQkJCWluc3Quc25hcEVsZW1lbnRzWyBpIF0uc25hcHBpbmcgPSBmYWxzZTsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQlpZiAoIG8uc25hcE1vZGUgIT09ICJpbm5lciIgKSB7CgkJCQl0cyA9IE1hdGguYWJzKCB0IC0geTIgKSA8PSBkOwoJCQkJYnMgPSBNYXRoLmFicyggYiAtIHkxICkgPD0gZDsKCQkJCWxzID0gTWF0aC5hYnMoIGwgLSB4MiApIDw9IGQ7CgkJCQlycyA9IE1hdGguYWJzKCByIC0geDEgKSA8PSBkOwoJCQkJaWYgKCB0cyApIHsKCQkJCQl1aS5wb3NpdGlvbi50b3AgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IHQgLSBpbnN0LmhlbHBlclByb3BvcnRpb25zLmhlaWdodCwKCQkJCQkJbGVmdDogMAoJCQkJCX0gKS50b3A7CgkJCQl9CgkJCQlpZiAoIGJzICkgewoJCQkJCXVpLnBvc2l0aW9uLnRvcCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCAicmVsYXRpdmUiLCB7CgkJCQkJCXRvcDogYiwKCQkJCQkJbGVmdDogMAoJCQkJCX0gKS50b3A7CgkJCQl9CgkJCQlpZiAoIGxzICkgewoJCQkJCXVpLnBvc2l0aW9uLmxlZnQgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IDAsCgkJCQkJCWxlZnQ6IGwgLSBpbnN0LmhlbHBlclByb3BvcnRpb25zLndpZHRoCgkJCQkJfSApLmxlZnQ7CgkJCQl9CgkJCQlpZiAoIHJzICkgewoJCQkJCXVpLnBvc2l0aW9uLmxlZnQgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IDAsCgkJCQkJCWxlZnQ6IHIKCQkJCQl9ICkubGVmdDsKCQkJCX0KCQkJfQoKCQkJZmlyc3QgPSAoIHRzIHx8IGJzIHx8IGxzIHx8IHJzICk7CgoJCQlpZiAoIG8uc25hcE1vZGUgIT09ICJvdXRlciIgKSB7CgkJCQl0cyA9IE1hdGguYWJzKCB0IC0geTEgKSA8PSBkOwoJCQkJYnMgPSBNYXRoLmFicyggYiAtIHkyICkgPD0gZDsKCQkJCWxzID0gTWF0aC5hYnMoIGwgLSB4MSApIDw9IGQ7CgkJCQlycyA9IE1hdGguYWJzKCByIC0geDIgKSA8PSBkOwoJCQkJaWYgKCB0cyApIHsKCQkJCQl1aS5wb3NpdGlvbi50b3AgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IHQsCgkJCQkJCWxlZnQ6IDAKCQkJCQl9ICkudG9wOwoJCQkJfQoJCQkJaWYgKCBicyApIHsKCQkJCQl1aS5wb3NpdGlvbi50b3AgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IGIgLSBpbnN0LmhlbHBlclByb3BvcnRpb25zLmhlaWdodCwKCQkJCQkJbGVmdDogMAoJCQkJCX0gKS50b3A7CgkJCQl9CgkJCQlpZiAoIGxzICkgewoJCQkJCXVpLnBvc2l0aW9uLmxlZnQgPSBpbnN0Ll9jb252ZXJ0UG9zaXRpb25UbyggInJlbGF0aXZlIiwgewoJCQkJCQl0b3A6IDAsCgkJCQkJCWxlZnQ6IGwKCQkJCQl9ICkubGVmdDsKCQkJCX0KCQkJCWlmICggcnMgKSB7CgkJCQkJdWkucG9zaXRpb24ubGVmdCA9IGluc3QuX2NvbnZlcnRQb3NpdGlvblRvKCAicmVsYXRpdmUiLCB7CgkJCQkJCXRvcDogMCwKCQkJCQkJbGVmdDogciAtIGluc3QuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgKCQkJCQl9ICkubGVmdDsKCQkJCX0KCQkJfQoKCQkJaWYgKCAhaW5zdC5zbmFwRWxlbWVudHNbIGkgXS5zbmFwcGluZyAmJiAoIHRzIHx8IGJzIHx8IGxzIHx8IHJzIHx8IGZpcnN0ICkgKSB7CgkJCQkoIGluc3Qub3B0aW9ucy5zbmFwLnNuYXAgJiYKCQkJCQlpbnN0Lm9wdGlvbnMuc25hcC5zbmFwLmNhbGwoCgkJCQkJCWluc3QuZWxlbWVudCwKCQkJCQkJZXZlbnQsCgkJCQkJCSQuZXh0ZW5kKCBpbnN0Ll91aUhhc2goKSwgewoJCQkJCQkJc25hcEl0ZW06IGluc3Quc25hcEVsZW1lbnRzWyBpIF0uaXRlbQoJCQkJCQl9ICkgKSApOwoJCQl9CgkJCWluc3Quc25hcEVsZW1lbnRzWyBpIF0uc25hcHBpbmcgPSAoIHRzIHx8IGJzIHx8IGxzIHx8IHJzIHx8IGZpcnN0ICk7CgoJCX0KCgl9Cn0gKTsKCiQudWkucGx1Z2luLmFkZCggImRyYWdnYWJsZSIsICJzdGFjayIsIHsKCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpLCBpbnN0YW5jZSApIHsKCQl2YXIgbWluLAoJCQlvID0gaW5zdGFuY2Uub3B0aW9ucywKCQkJZ3JvdXAgPSAkLm1ha2VBcnJheSggJCggby5zdGFjayApICkuc29ydCggZnVuY3Rpb24oIGEsIGIgKSB7CgkJCQlyZXR1cm4gKCBwYXJzZUludCggJCggYSApLmNzcyggInpJbmRleCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJCSggcGFyc2VJbnQoICQoIGIgKS5jc3MoICJ6SW5kZXgiICksIDEwICkgfHwgMCApOwoJCQl9ICk7CgoJCWlmICggIWdyb3VwLmxlbmd0aCApIHsgcmV0dXJuOyB9CgoJCW1pbiA9IHBhcnNlSW50KCAkKCBncm91cFsgMCBdICkuY3NzKCAiekluZGV4IiApLCAxMCApIHx8IDA7CgkJJCggZ3JvdXAgKS5lYWNoKCBmdW5jdGlvbiggaSApIHsKCQkJJCggdGhpcyApLmNzcyggInpJbmRleCIsIG1pbiArIGkgKTsKCQl9ICk7CgkJdGhpcy5jc3MoICJ6SW5kZXgiLCAoIG1pbiArIGdyb3VwLmxlbmd0aCApICk7Cgl9Cn0gKTsKCiQudWkucGx1Z2luLmFkZCggImRyYWdnYWJsZSIsICJ6SW5kZXgiLCB7CglzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaW5zdGFuY2UgKSB7CgkJdmFyIHQgPSAkKCB1aS5oZWxwZXIgKSwKCQkJbyA9IGluc3RhbmNlLm9wdGlvbnM7CgoJCWlmICggdC5jc3MoICJ6SW5kZXgiICkgKSB7CgkJCW8uX3pJbmRleCA9IHQuY3NzKCAiekluZGV4IiApOwoJCX0KCQl0LmNzcyggInpJbmRleCIsIG8uekluZGV4ICk7Cgl9LAoJc3RvcDogZnVuY3Rpb24oIGV2ZW50LCB1aSwgaW5zdGFuY2UgKSB7CgkJdmFyIG8gPSBpbnN0YW5jZS5vcHRpb25zOwoKCQlpZiAoIG8uX3pJbmRleCApIHsKCQkJJCggdWkuaGVscGVyICkuY3NzKCAiekluZGV4Iiwgby5fekluZGV4ICk7CgkJfQoJfQp9ICk7Cgp2YXIgd2lkZ2V0c0RyYWdnYWJsZSA9ICQudWkuZHJhZ2dhYmxlOwoKCi8qIQogKiBqUXVlcnkgVUkgUmVzaXphYmxlIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogUmVzaXphYmxlCi8vPj5ncm91cDogSW50ZXJhY3Rpb25zCi8vPj5kZXNjcmlwdGlvbjogRW5hYmxlcyByZXNpemUgZnVuY3Rpb25hbGl0eSBmb3IgYW55IGVsZW1lbnQuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9yZXNpemFibGUvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9yZXNpemFibGUvCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvcmVzaXphYmxlLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKJC53aWRnZXQoICJ1aS5yZXNpemFibGUiLCAkLnVpLm1vdXNlLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCXdpZGdldEV2ZW50UHJlZml4OiAicmVzaXplIiwKCW9wdGlvbnM6IHsKCQlhbHNvUmVzaXplOiBmYWxzZSwKCQlhbmltYXRlOiBmYWxzZSwKCQlhbmltYXRlRHVyYXRpb246ICJzbG93IiwKCQlhbmltYXRlRWFzaW5nOiAic3dpbmciLAoJCWFzcGVjdFJhdGlvOiBmYWxzZSwKCQlhdXRvSGlkZTogZmFsc2UsCgkJY2xhc3NlczogewoJCQkidWktcmVzaXphYmxlLXNlIjogInVpLWljb24gdWktaWNvbi1ncmlwc21hbGwtZGlhZ29uYWwtc2UiCgkJfSwKCQljb250YWlubWVudDogZmFsc2UsCgkJZ2hvc3Q6IGZhbHNlLAoJCWdyaWQ6IGZhbHNlLAoJCWhhbmRsZXM6ICJlLHMsc2UiLAoJCWhlbHBlcjogZmFsc2UsCgkJbWF4SGVpZ2h0OiBudWxsLAoJCW1heFdpZHRoOiBudWxsLAoJCW1pbkhlaWdodDogMTAsCgkJbWluV2lkdGg6IDEwLAoKCQkvLyBTZWUgIzc5NjAKCQl6SW5kZXg6IDkwLAoKCQkvLyBDYWxsYmFja3MKCQlyZXNpemU6IG51bGwsCgkJc3RhcnQ6IG51bGwsCgkJc3RvcDogbnVsbAoJfSwKCglfbnVtOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJcmV0dXJuIHBhcnNlRmxvYXQoIHZhbHVlICkgfHwgMDsKCX0sCgoJX2lzTnVtYmVyOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJcmV0dXJuICFpc05hTiggcGFyc2VGbG9hdCggdmFsdWUgKSApOwoJfSwKCglfaGFzU2Nyb2xsOiBmdW5jdGlvbiggZWwsIGEgKSB7CgoJCWlmICggJCggZWwgKS5jc3MoICJvdmVyZmxvdyIgKSA9PT0gImhpZGRlbiIgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXZhciBzY3JvbGwgPSAoIGEgJiYgYSA9PT0gImxlZnQiICkgPyAic2Nyb2xsTGVmdCIgOiAic2Nyb2xsVG9wIiwKCQkJaGFzID0gZmFsc2U7CgoJCWlmICggZWxbIHNjcm9sbCBdID4gMCApIHsKCQkJcmV0dXJuIHRydWU7CgkJfQoKCQkvLyBUT0RPOiBkZXRlcm1pbmUgd2hpY2ggY2FzZXMgYWN0dWFsbHkgY2F1c2UgdGhpcyB0byBoYXBwZW4KCQkvLyBpZiB0aGUgZWxlbWVudCBkb2Vzbid0IGhhdmUgdGhlIHNjcm9sbCBzZXQsIHNlZSBpZiBpdCdzIHBvc3NpYmxlIHRvCgkJLy8gc2V0IHRoZSBzY3JvbGwKCQllbFsgc2Nyb2xsIF0gPSAxOwoJCWhhcyA9ICggZWxbIHNjcm9sbCBdID4gMCApOwoJCWVsWyBzY3JvbGwgXSA9IDA7CgkJcmV0dXJuIGhhczsKCX0sCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgoJCXZhciBtYXJnaW5zLAoJCQlvID0gdGhpcy5vcHRpb25zLAoJCQl0aGF0ID0gdGhpczsKCQl0aGlzLl9hZGRDbGFzcyggInVpLXJlc2l6YWJsZSIgKTsKCgkJJC5leHRlbmQoIHRoaXMsIHsKCQkJX2FzcGVjdFJhdGlvOiAhISggby5hc3BlY3RSYXRpbyApLAoJCQlhc3BlY3RSYXRpbzogby5hc3BlY3RSYXRpbywKCQkJb3JpZ2luYWxFbGVtZW50OiB0aGlzLmVsZW1lbnQsCgkJCV9wcm9wb3J0aW9uYWxseVJlc2l6ZUVsZW1lbnRzOiBbXSwKCQkJX2hlbHBlcjogby5oZWxwZXIgfHwgby5naG9zdCB8fCBvLmFuaW1hdGUgPyBvLmhlbHBlciB8fCAidWktcmVzaXphYmxlLWhlbHBlciIgOiBudWxsCgkJfSApOwoKCQkvLyBXcmFwIHRoZSBlbGVtZW50IGlmIGl0IGNhbm5vdCBob2xkIGNoaWxkIG5vZGVzCgkJaWYgKCB0aGlzLmVsZW1lbnRbIDAgXS5ub2RlTmFtZS5tYXRjaCggL14oY2FudmFzfHRleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b258aW1nKSQvaSApICkgewoKCQkJdGhpcy5lbGVtZW50LndyYXAoCgkJCQkkKCAiPGRpdiBjbGFzcz0ndWktd3JhcHBlcicgc3R5bGU9J292ZXJmbG93OiBoaWRkZW47Jz48L2Rpdj4iICkuY3NzKCB7CgkJCQkJcG9zaXRpb246IHRoaXMuZWxlbWVudC5jc3MoICJwb3NpdGlvbiIgKSwKCQkJCQl3aWR0aDogdGhpcy5lbGVtZW50Lm91dGVyV2lkdGgoKSwKCQkJCQloZWlnaHQ6IHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpLAoJCQkJCXRvcDogdGhpcy5lbGVtZW50LmNzcyggInRvcCIgKSwKCQkJCQlsZWZ0OiB0aGlzLmVsZW1lbnQuY3NzKCAibGVmdCIgKQoJCQkJfSApCgkJCSk7CgoJCQl0aGlzLmVsZW1lbnQgPSB0aGlzLmVsZW1lbnQucGFyZW50KCkuZGF0YSgKCQkJCSJ1aS1yZXNpemFibGUiLCB0aGlzLmVsZW1lbnQucmVzaXphYmxlKCAiaW5zdGFuY2UiICkKCQkJKTsKCgkJCXRoaXMuZWxlbWVudElzV3JhcHBlciA9IHRydWU7CgoJCQltYXJnaW5zID0gewoJCQkJbWFyZ2luVG9wOiB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoICJtYXJnaW5Ub3AiICksCgkJCQltYXJnaW5SaWdodDogdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAibWFyZ2luUmlnaHQiICksCgkJCQltYXJnaW5Cb3R0b206IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggIm1hcmdpbkJvdHRvbSIgKSwKCQkJCW1hcmdpbkxlZnQ6IHRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggIm1hcmdpbkxlZnQiICkKCQkJfTsKCgkJCXRoaXMuZWxlbWVudC5jc3MoIG1hcmdpbnMgKTsKCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnQuY3NzKCAibWFyZ2luIiwgMCApOwoKCQkJLy8gc3VwcG9ydDogU2FmYXJpCgkJCS8vIFByZXZlbnQgU2FmYXJpIHRleHRhcmVhIHJlc2l6ZQoJCQl0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGUgPSB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoICJyZXNpemUiICk7CgkJCXRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggInJlc2l6ZSIsICJub25lIiApOwoKCQkJdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cy5wdXNoKCB0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoIHsKCQkJCXBvc2l0aW9uOiAic3RhdGljIiwKCQkJCXpvb206IDEsCgkJCQlkaXNwbGF5OiAiYmxvY2siCgkJCX0gKSApOwoKCQkJLy8gU3VwcG9ydDogSUU5CgkJCS8vIGF2b2lkIElFIGp1bXAgKGhhcmQgc2V0IHRoZSBtYXJnaW4pCgkJCXRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggbWFyZ2lucyApOwoKCQkJdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemUoKTsKCQl9CgoJCXRoaXMuX3NldHVwSGFuZGxlcygpOwoKCQlpZiAoIG8uYXV0b0hpZGUgKSB7CgkJCSQoIHRoaXMuZWxlbWVudCApCgkJCQkub24oICJtb3VzZWVudGVyIiwgZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCBvLmRpc2FibGVkICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCXRoYXQuX3JlbW92ZUNsYXNzKCAidWktcmVzaXphYmxlLWF1dG9oaWRlIiApOwoJCQkJCXRoYXQuX2hhbmRsZXMuc2hvdygpOwoJCQkJfSApCgkJCQkub24oICJtb3VzZWxlYXZlIiwgZnVuY3Rpb24oKSB7CgkJCQkJaWYgKCBvLmRpc2FibGVkICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCWlmICggIXRoYXQucmVzaXppbmcgKSB7CgkJCQkJCXRoYXQuX2FkZENsYXNzKCAidWktcmVzaXphYmxlLWF1dG9oaWRlIiApOwoJCQkJCQl0aGF0Ll9oYW5kbGVzLmhpZGUoKTsKCQkJCQl9CgkJCQl9ICk7CgkJfQoKCQl0aGlzLl9tb3VzZUluaXQoKTsKCX0sCgoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgewoKCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsKCgkJdmFyIHdyYXBwZXIsCgkJCV9kZXN0cm95ID0gZnVuY3Rpb24oIGV4cCApIHsKCQkJCSQoIGV4cCApCgkJCQkJLnJlbW92ZURhdGEoICJyZXNpemFibGUiICkKCQkJCQkucmVtb3ZlRGF0YSggInVpLXJlc2l6YWJsZSIgKQoJCQkJCS5vZmYoICIucmVzaXphYmxlIiApCgkJCQkJLmZpbmQoICIudWktcmVzaXphYmxlLWhhbmRsZSIgKQoJCQkJCQkucmVtb3ZlKCk7CgkJCX07CgoJCS8vIFRPRE86IFVud3JhcCBhdCBzYW1lIERPTSBwb3NpdGlvbgoJCWlmICggdGhpcy5lbGVtZW50SXNXcmFwcGVyICkgewoJCQlfZGVzdHJveSggdGhpcy5lbGVtZW50ICk7CgkJCXdyYXBwZXIgPSB0aGlzLmVsZW1lbnQ7CgkJCXRoaXMub3JpZ2luYWxFbGVtZW50LmNzcyggewoJCQkJcG9zaXRpb246IHdyYXBwZXIuY3NzKCAicG9zaXRpb24iICksCgkJCQl3aWR0aDogd3JhcHBlci5vdXRlcldpZHRoKCksCgkJCQloZWlnaHQ6IHdyYXBwZXIub3V0ZXJIZWlnaHQoKSwKCQkJCXRvcDogd3JhcHBlci5jc3MoICJ0b3AiICksCgkJCQlsZWZ0OiB3cmFwcGVyLmNzcyggImxlZnQiICkKCQkJfSApLmluc2VydEFmdGVyKCB3cmFwcGVyICk7CgkJCXdyYXBwZXIucmVtb3ZlKCk7CgkJfQoKCQl0aGlzLm9yaWdpbmFsRWxlbWVudC5jc3MoICJyZXNpemUiLCB0aGlzLm9yaWdpbmFsUmVzaXplU3R5bGUgKTsKCQlfZGVzdHJveSggdGhpcy5vcmlnaW5hbEVsZW1lbnQgKTsKCgkJcmV0dXJuIHRoaXM7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCXN3aXRjaCAoIGtleSApIHsKCQljYXNlICJoYW5kbGVzIjoKCQkJdGhpcy5fcmVtb3ZlSGFuZGxlcygpOwoJCQl0aGlzLl9zZXR1cEhhbmRsZXMoKTsKCQkJYnJlYWs7CgkJZGVmYXVsdDoKCQkJYnJlYWs7CgkJfQoJfSwKCglfc2V0dXBIYW5kbGVzOiBmdW5jdGlvbigpIHsKCQl2YXIgbyA9IHRoaXMub3B0aW9ucywgaGFuZGxlLCBpLCBuLCBobmFtZSwgYXhpcywgdGhhdCA9IHRoaXM7CgkJdGhpcy5oYW5kbGVzID0gby5oYW5kbGVzIHx8CgkJCSggISQoICIudWktcmVzaXphYmxlLWhhbmRsZSIsIHRoaXMuZWxlbWVudCApLmxlbmd0aCA/CgkJCQkiZSxzLHNlIiA6IHsKCQkJCQluOiAiLnVpLXJlc2l6YWJsZS1uIiwKCQkJCQllOiAiLnVpLXJlc2l6YWJsZS1lIiwKCQkJCQlzOiAiLnVpLXJlc2l6YWJsZS1zIiwKCQkJCQl3OiAiLnVpLXJlc2l6YWJsZS13IiwKCQkJCQlzZTogIi51aS1yZXNpemFibGUtc2UiLAoJCQkJCXN3OiAiLnVpLXJlc2l6YWJsZS1zdyIsCgkJCQkJbmU6ICIudWktcmVzaXphYmxlLW5lIiwKCQkJCQludzogIi51aS1yZXNpemFibGUtbnciCgkJCQl9ICk7CgoJCXRoaXMuX2hhbmRsZXMgPSAkKCk7CgkJaWYgKCB0aGlzLmhhbmRsZXMuY29uc3RydWN0b3IgPT09IFN0cmluZyApIHsKCgkJCWlmICggdGhpcy5oYW5kbGVzID09PSAiYWxsIiApIHsKCQkJCXRoaXMuaGFuZGxlcyA9ICJuLGUscyx3LHNlLHN3LG5lLG53IjsKCQkJfQoKCQkJbiA9IHRoaXMuaGFuZGxlcy5zcGxpdCggIiwiICk7CgkJCXRoaXMuaGFuZGxlcyA9IHt9OwoKCQkJZm9yICggaSA9IDA7IGkgPCBuLmxlbmd0aDsgaSsrICkgewoKCQkJCWhhbmRsZSA9ICQudHJpbSggblsgaSBdICk7CgkJCQlobmFtZSA9ICJ1aS1yZXNpemFibGUtIiArIGhhbmRsZTsKCQkJCWF4aXMgPSAkKCAiPGRpdj4iICk7CgkJCQl0aGlzLl9hZGRDbGFzcyggYXhpcywgInVpLXJlc2l6YWJsZS1oYW5kbGUgIiArIGhuYW1lICk7CgoJCQkJYXhpcy5jc3MoIHsgekluZGV4OiBvLnpJbmRleCB9ICk7CgoJCQkJdGhpcy5oYW5kbGVzWyBoYW5kbGUgXSA9ICIudWktcmVzaXphYmxlLSIgKyBoYW5kbGU7CgkJCQl0aGlzLmVsZW1lbnQuYXBwZW5kKCBheGlzICk7CgkJCX0KCgkJfQoKCQl0aGlzLl9yZW5kZXJBeGlzID0gZnVuY3Rpb24oIHRhcmdldCApIHsKCgkJCXZhciBpLCBheGlzLCBwYWRQb3MsIHBhZFdyYXBwZXI7CgoJCQl0YXJnZXQgPSB0YXJnZXQgfHwgdGhpcy5lbGVtZW50OwoKCQkJZm9yICggaSBpbiB0aGlzLmhhbmRsZXMgKSB7CgoJCQkJaWYgKCB0aGlzLmhhbmRsZXNbIGkgXS5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nICkgewoJCQkJCXRoaXMuaGFuZGxlc1sgaSBdID0gdGhpcy5lbGVtZW50LmNoaWxkcmVuKCB0aGlzLmhhbmRsZXNbIGkgXSApLmZpcnN0KCkuc2hvdygpOwoJCQkJfSBlbHNlIGlmICggdGhpcy5oYW5kbGVzWyBpIF0uanF1ZXJ5IHx8IHRoaXMuaGFuZGxlc1sgaSBdLm5vZGVUeXBlICkgewoJCQkJCXRoaXMuaGFuZGxlc1sgaSBdID0gJCggdGhpcy5oYW5kbGVzWyBpIF0gKTsKCQkJCQl0aGlzLl9vbiggdGhpcy5oYW5kbGVzWyBpIF0sIHsgIm1vdXNlZG93biI6IHRoYXQuX21vdXNlRG93biB9ICk7CgkJCQl9CgoJCQkJaWYgKCB0aGlzLmVsZW1lbnRJc1dyYXBwZXIgJiYKCQkJCQkJdGhpcy5vcmlnaW5hbEVsZW1lbnRbIDAgXQoJCQkJCQkJLm5vZGVOYW1lCgkJCQkJCQkubWF0Y2goIC9eKHRleHRhcmVhfGlucHV0fHNlbGVjdHxidXR0b24pJC9pICkgKSB7CgkJCQkJYXhpcyA9ICQoIHRoaXMuaGFuZGxlc1sgaSBdLCB0aGlzLmVsZW1lbnQgKTsKCgkJCQkJcGFkV3JhcHBlciA9IC9zd3xuZXxud3xzZXxufHMvLnRlc3QoIGkgKSA/CgkJCQkJCWF4aXMub3V0ZXJIZWlnaHQoKSA6CgkJCQkJCWF4aXMub3V0ZXJXaWR0aCgpOwoKCQkJCQlwYWRQb3MgPSBbICJwYWRkaW5nIiwKCQkJCQkJL25lfG53fG4vLnRlc3QoIGkgKSA/ICJUb3AiIDoKCQkJCQkJL3NlfHN3fHMvLnRlc3QoIGkgKSA/ICJCb3R0b20iIDoKCQkJCQkJL15lJC8udGVzdCggaSApID8gIlJpZ2h0IiA6ICJMZWZ0IiBdLmpvaW4oICIiICk7CgoJCQkJCXRhcmdldC5jc3MoIHBhZFBvcywgcGFkV3JhcHBlciApOwoKCQkJCQl0aGlzLl9wcm9wb3J0aW9uYWxseVJlc2l6ZSgpOwoJCQkJfQoKCQkJCXRoaXMuX2hhbmRsZXMgPSB0aGlzLl9oYW5kbGVzLmFkZCggdGhpcy5oYW5kbGVzWyBpIF0gKTsKCQkJfQoJCX07CgoJCS8vIFRPRE86IG1ha2UgcmVuZGVyQXhpcyBhIHByb3RvdHlwZSBmdW5jdGlvbgoJCXRoaXMuX3JlbmRlckF4aXMoIHRoaXMuZWxlbWVudCApOwoKCQl0aGlzLl9oYW5kbGVzID0gdGhpcy5faGFuZGxlcy5hZGQoIHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLXJlc2l6YWJsZS1oYW5kbGUiICkgKTsKCQl0aGlzLl9oYW5kbGVzLmRpc2FibGVTZWxlY3Rpb24oKTsKCgkJdGhpcy5faGFuZGxlcy5vbiggIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewoJCQlpZiAoICF0aGF0LnJlc2l6aW5nICkgewoJCQkJaWYgKCB0aGlzLmNsYXNzTmFtZSApIHsKCQkJCQlheGlzID0gdGhpcy5jbGFzc05hbWUubWF0Y2goIC91aS1yZXNpemFibGUtKHNlfHN3fG5lfG53fG58ZXxzfHcpL2kgKTsKCQkJCX0KCQkJCXRoYXQuYXhpcyA9IGF4aXMgJiYgYXhpc1sgMSBdID8gYXhpc1sgMSBdIDogInNlIjsKCQkJfQoJCX0gKTsKCgkJaWYgKCBvLmF1dG9IaWRlICkgewoJCQl0aGlzLl9oYW5kbGVzLmhpZGUoKTsKCQkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1yZXNpemFibGUtYXV0b2hpZGUiICk7CgkJfQoJfSwKCglfcmVtb3ZlSGFuZGxlczogZnVuY3Rpb24oKSB7CgkJdGhpcy5faGFuZGxlcy5yZW1vdmUoKTsKCX0sCgoJX21vdXNlQ2FwdHVyZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBpLCBoYW5kbGUsCgkJCWNhcHR1cmUgPSBmYWxzZTsKCgkJZm9yICggaSBpbiB0aGlzLmhhbmRsZXMgKSB7CgkJCWhhbmRsZSA9ICQoIHRoaXMuaGFuZGxlc1sgaSBdIClbIDAgXTsKCQkJaWYgKCBoYW5kbGUgPT09IGV2ZW50LnRhcmdldCB8fCAkLmNvbnRhaW5zKCBoYW5kbGUsIGV2ZW50LnRhcmdldCApICkgewoJCQkJY2FwdHVyZSA9IHRydWU7CgkJCX0KCQl9CgoJCXJldHVybiAhdGhpcy5vcHRpb25zLmRpc2FibGVkICYmIGNhcHR1cmU7Cgl9LAoKCV9tb3VzZVN0YXJ0OiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciBjdXJsZWZ0LCBjdXJ0b3AsIGN1cnNvciwKCQkJbyA9IHRoaXMub3B0aW9ucywKCQkJZWwgPSB0aGlzLmVsZW1lbnQ7CgoJCXRoaXMucmVzaXppbmcgPSB0cnVlOwoKCQl0aGlzLl9yZW5kZXJQcm94eSgpOwoKCQljdXJsZWZ0ID0gdGhpcy5fbnVtKCB0aGlzLmhlbHBlci5jc3MoICJsZWZ0IiApICk7CgkJY3VydG9wID0gdGhpcy5fbnVtKCB0aGlzLmhlbHBlci5jc3MoICJ0b3AiICkgKTsKCgkJaWYgKCBvLmNvbnRhaW5tZW50ICkgewoJCQljdXJsZWZ0ICs9ICQoIG8uY29udGFpbm1lbnQgKS5zY3JvbGxMZWZ0KCkgfHwgMDsKCQkJY3VydG9wICs9ICQoIG8uY29udGFpbm1lbnQgKS5zY3JvbGxUb3AoKSB8fCAwOwoJCX0KCgkJdGhpcy5vZmZzZXQgPSB0aGlzLmhlbHBlci5vZmZzZXQoKTsKCQl0aGlzLnBvc2l0aW9uID0geyBsZWZ0OiBjdXJsZWZ0LCB0b3A6IGN1cnRvcCB9OwoKCQl0aGlzLnNpemUgPSB0aGlzLl9oZWxwZXIgPyB7CgkJCQl3aWR0aDogdGhpcy5oZWxwZXIud2lkdGgoKSwKCQkJCWhlaWdodDogdGhpcy5oZWxwZXIuaGVpZ2h0KCkKCQkJfSA6IHsKCQkJCXdpZHRoOiBlbC53aWR0aCgpLAoJCQkJaGVpZ2h0OiBlbC5oZWlnaHQoKQoJCQl9OwoKCQl0aGlzLm9yaWdpbmFsU2l6ZSA9IHRoaXMuX2hlbHBlciA/IHsKCQkJCXdpZHRoOiBlbC5vdXRlcldpZHRoKCksCgkJCQloZWlnaHQ6IGVsLm91dGVySGVpZ2h0KCkKCQkJfSA6IHsKCQkJCXdpZHRoOiBlbC53aWR0aCgpLAoJCQkJaGVpZ2h0OiBlbC5oZWlnaHQoKQoJCQl9OwoKCQl0aGlzLnNpemVEaWZmID0gewoJCQl3aWR0aDogZWwub3V0ZXJXaWR0aCgpIC0gZWwud2lkdGgoKSwKCQkJaGVpZ2h0OiBlbC5vdXRlckhlaWdodCgpIC0gZWwuaGVpZ2h0KCkKCQl9OwoKCQl0aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB7IGxlZnQ6IGN1cmxlZnQsIHRvcDogY3VydG9wIH07CgkJdGhpcy5vcmlnaW5hbE1vdXNlUG9zaXRpb24gPSB7IGxlZnQ6IGV2ZW50LnBhZ2VYLCB0b3A6IGV2ZW50LnBhZ2VZIH07CgoJCXRoaXMuYXNwZWN0UmF0aW8gPSAoIHR5cGVvZiBvLmFzcGVjdFJhdGlvID09PSAibnVtYmVyIiApID8KCQkJby5hc3BlY3RSYXRpbyA6CgkJCSggKCB0aGlzLm9yaWdpbmFsU2l6ZS53aWR0aCAvIHRoaXMub3JpZ2luYWxTaXplLmhlaWdodCApIHx8IDEgKTsKCgkJY3Vyc29yID0gJCggIi51aS1yZXNpemFibGUtIiArIHRoaXMuYXhpcyApLmNzcyggImN1cnNvciIgKTsKCQkkKCAiYm9keSIgKS5jc3MoICJjdXJzb3IiLCBjdXJzb3IgPT09ICJhdXRvIiA/IHRoaXMuYXhpcyArICItcmVzaXplIiA6IGN1cnNvciApOwoKCQl0aGlzLl9hZGRDbGFzcyggInVpLXJlc2l6YWJsZS1yZXNpemluZyIgKTsKCQl0aGlzLl9wcm9wYWdhdGUoICJzdGFydCIsIGV2ZW50ICk7CgkJcmV0dXJuIHRydWU7Cgl9LAoKCV9tb3VzZURyYWc6IGZ1bmN0aW9uKCBldmVudCApIHsKCgkJdmFyIGRhdGEsIHByb3BzLAoJCQlzbXAgPSB0aGlzLm9yaWdpbmFsTW91c2VQb3NpdGlvbiwKCQkJYSA9IHRoaXMuYXhpcywKCQkJZHggPSAoIGV2ZW50LnBhZ2VYIC0gc21wLmxlZnQgKSB8fCAwLAoJCQlkeSA9ICggZXZlbnQucGFnZVkgLSBzbXAudG9wICkgfHwgMCwKCQkJdHJpZ2dlciA9IHRoaXMuX2NoYW5nZVsgYSBdOwoKCQl0aGlzLl91cGRhdGVQcmV2UHJvcGVydGllcygpOwoKCQlpZiAoICF0cmlnZ2VyICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQlkYXRhID0gdHJpZ2dlci5hcHBseSggdGhpcywgWyBldmVudCwgZHgsIGR5IF0gKTsKCgkJdGhpcy5fdXBkYXRlVmlydHVhbEJvdW5kYXJpZXMoIGV2ZW50LnNoaWZ0S2V5ICk7CgkJaWYgKCB0aGlzLl9hc3BlY3RSYXRpbyB8fCBldmVudC5zaGlmdEtleSApIHsKCQkJZGF0YSA9IHRoaXMuX3VwZGF0ZVJhdGlvKCBkYXRhLCBldmVudCApOwoJCX0KCgkJZGF0YSA9IHRoaXMuX3Jlc3BlY3RTaXplKCBkYXRhLCBldmVudCApOwoKCQl0aGlzLl91cGRhdGVDYWNoZSggZGF0YSApOwoKCQl0aGlzLl9wcm9wYWdhdGUoICJyZXNpemUiLCBldmVudCApOwoKCQlwcm9wcyA9IHRoaXMuX2FwcGx5Q2hhbmdlcygpOwoKCQlpZiAoICF0aGlzLl9oZWxwZXIgJiYgdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cy5sZW5ndGggKSB7CgkJCXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplKCk7CgkJfQoKCQlpZiAoICEkLmlzRW1wdHlPYmplY3QoIHByb3BzICkgKSB7CgkJCXRoaXMuX3VwZGF0ZVByZXZQcm9wZXJ0aWVzKCk7CgkJCXRoaXMuX3RyaWdnZXIoICJyZXNpemUiLCBldmVudCwgdGhpcy51aSgpICk7CgkJCXRoaXMuX2FwcGx5Q2hhbmdlcygpOwoJCX0KCgkJcmV0dXJuIGZhbHNlOwoJfSwKCglfbW91c2VTdG9wOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXRoaXMucmVzaXppbmcgPSBmYWxzZTsKCQl2YXIgcHIsIGlzdGEsIHNvZmZzZXRoLCBzb2Zmc2V0dywgcywgbGVmdCwgdG9wLAoJCQlvID0gdGhpcy5vcHRpb25zLCB0aGF0ID0gdGhpczsKCgkJaWYgKCB0aGlzLl9oZWxwZXIgKSB7CgoJCQlwciA9IHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHM7CgkJCWlzdGEgPSBwci5sZW5ndGggJiYgKCAvdGV4dGFyZWEvaSApLnRlc3QoIHByWyAwIF0ubm9kZU5hbWUgKTsKCQkJc29mZnNldGggPSBpc3RhICYmIHRoaXMuX2hhc1Njcm9sbCggcHJbIDAgXSwgImxlZnQiICkgPyAwIDogdGhhdC5zaXplRGlmZi5oZWlnaHQ7CgkJCXNvZmZzZXR3ID0gaXN0YSA/IDAgOiB0aGF0LnNpemVEaWZmLndpZHRoOwoKCQkJcyA9IHsKCQkJCXdpZHRoOiAoIHRoYXQuaGVscGVyLndpZHRoKCkgIC0gc29mZnNldHcgKSwKCQkJCWhlaWdodDogKCB0aGF0LmhlbHBlci5oZWlnaHQoKSAtIHNvZmZzZXRoICkKCQkJfTsKCQkJbGVmdCA9ICggcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggImxlZnQiICkgKSArCgkJCQkoIHRoYXQucG9zaXRpb24ubGVmdCAtIHRoYXQub3JpZ2luYWxQb3NpdGlvbi5sZWZ0ICkgKSB8fCBudWxsOwoJCQl0b3AgPSAoIHBhcnNlRmxvYXQoIHRoYXQuZWxlbWVudC5jc3MoICJ0b3AiICkgKSArCgkJCQkoIHRoYXQucG9zaXRpb24udG9wIC0gdGhhdC5vcmlnaW5hbFBvc2l0aW9uLnRvcCApICkgfHwgbnVsbDsKCgkJCWlmICggIW8uYW5pbWF0ZSApIHsKCQkJCXRoaXMuZWxlbWVudC5jc3MoICQuZXh0ZW5kKCBzLCB7IHRvcDogdG9wLCBsZWZ0OiBsZWZ0IH0gKSApOwoJCQl9CgoJCQl0aGF0LmhlbHBlci5oZWlnaHQoIHRoYXQuc2l6ZS5oZWlnaHQgKTsKCQkJdGhhdC5oZWxwZXIud2lkdGgoIHRoYXQuc2l6ZS53aWR0aCApOwoKCQkJaWYgKCB0aGlzLl9oZWxwZXIgJiYgIW8uYW5pbWF0ZSApIHsKCQkJCXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplKCk7CgkJCX0KCQl9CgoJCSQoICJib2R5IiApLmNzcyggImN1cnNvciIsICJhdXRvIiApOwoKCQl0aGlzLl9yZW1vdmVDbGFzcyggInVpLXJlc2l6YWJsZS1yZXNpemluZyIgKTsKCgkJdGhpcy5fcHJvcGFnYXRlKCAic3RvcCIsIGV2ZW50ICk7CgoJCWlmICggdGhpcy5faGVscGVyICkgewoJCQl0aGlzLmhlbHBlci5yZW1vdmUoKTsKCQl9CgoJCXJldHVybiBmYWxzZTsKCgl9LAoKCV91cGRhdGVQcmV2UHJvcGVydGllczogZnVuY3Rpb24oKSB7CgkJdGhpcy5wcmV2UG9zaXRpb24gPSB7CgkJCXRvcDogdGhpcy5wb3NpdGlvbi50b3AsCgkJCWxlZnQ6IHRoaXMucG9zaXRpb24ubGVmdAoJCX07CgkJdGhpcy5wcmV2U2l6ZSA9IHsKCQkJd2lkdGg6IHRoaXMuc2l6ZS53aWR0aCwKCQkJaGVpZ2h0OiB0aGlzLnNpemUuaGVpZ2h0CgkJfTsKCX0sCgoJX2FwcGx5Q2hhbmdlczogZnVuY3Rpb24oKSB7CgkJdmFyIHByb3BzID0ge307CgoJCWlmICggdGhpcy5wb3NpdGlvbi50b3AgIT09IHRoaXMucHJldlBvc2l0aW9uLnRvcCApIHsKCQkJcHJvcHMudG9wID0gdGhpcy5wb3NpdGlvbi50b3AgKyAicHgiOwoJCX0KCQlpZiAoIHRoaXMucG9zaXRpb24ubGVmdCAhPT0gdGhpcy5wcmV2UG9zaXRpb24ubGVmdCApIHsKCQkJcHJvcHMubGVmdCA9IHRoaXMucG9zaXRpb24ubGVmdCArICJweCI7CgkJfQoJCWlmICggdGhpcy5zaXplLndpZHRoICE9PSB0aGlzLnByZXZTaXplLndpZHRoICkgewoJCQlwcm9wcy53aWR0aCA9IHRoaXMuc2l6ZS53aWR0aCArICJweCI7CgkJfQoJCWlmICggdGhpcy5zaXplLmhlaWdodCAhPT0gdGhpcy5wcmV2U2l6ZS5oZWlnaHQgKSB7CgkJCXByb3BzLmhlaWdodCA9IHRoaXMuc2l6ZS5oZWlnaHQgKyAicHgiOwoJCX0KCgkJdGhpcy5oZWxwZXIuY3NzKCBwcm9wcyApOwoKCQlyZXR1cm4gcHJvcHM7Cgl9LAoKCV91cGRhdGVWaXJ0dWFsQm91bmRhcmllczogZnVuY3Rpb24oIGZvcmNlQXNwZWN0UmF0aW8gKSB7CgkJdmFyIHBNaW5XaWR0aCwgcE1heFdpZHRoLCBwTWluSGVpZ2h0LCBwTWF4SGVpZ2h0LCBiLAoJCQlvID0gdGhpcy5vcHRpb25zOwoKCQliID0gewoJCQltaW5XaWR0aDogdGhpcy5faXNOdW1iZXIoIG8ubWluV2lkdGggKSA/IG8ubWluV2lkdGggOiAwLAoJCQltYXhXaWR0aDogdGhpcy5faXNOdW1iZXIoIG8ubWF4V2lkdGggKSA/IG8ubWF4V2lkdGggOiBJbmZpbml0eSwKCQkJbWluSGVpZ2h0OiB0aGlzLl9pc051bWJlciggby5taW5IZWlnaHQgKSA/IG8ubWluSGVpZ2h0IDogMCwKCQkJbWF4SGVpZ2h0OiB0aGlzLl9pc051bWJlciggby5tYXhIZWlnaHQgKSA/IG8ubWF4SGVpZ2h0IDogSW5maW5pdHkKCQl9OwoKCQlpZiAoIHRoaXMuX2FzcGVjdFJhdGlvIHx8IGZvcmNlQXNwZWN0UmF0aW8gKSB7CgkJCXBNaW5XaWR0aCA9IGIubWluSGVpZ2h0ICogdGhpcy5hc3BlY3RSYXRpbzsKCQkJcE1pbkhlaWdodCA9IGIubWluV2lkdGggLyB0aGlzLmFzcGVjdFJhdGlvOwoJCQlwTWF4V2lkdGggPSBiLm1heEhlaWdodCAqIHRoaXMuYXNwZWN0UmF0aW87CgkJCXBNYXhIZWlnaHQgPSBiLm1heFdpZHRoIC8gdGhpcy5hc3BlY3RSYXRpbzsKCgkJCWlmICggcE1pbldpZHRoID4gYi5taW5XaWR0aCApIHsKCQkJCWIubWluV2lkdGggPSBwTWluV2lkdGg7CgkJCX0KCQkJaWYgKCBwTWluSGVpZ2h0ID4gYi5taW5IZWlnaHQgKSB7CgkJCQliLm1pbkhlaWdodCA9IHBNaW5IZWlnaHQ7CgkJCX0KCQkJaWYgKCBwTWF4V2lkdGggPCBiLm1heFdpZHRoICkgewoJCQkJYi5tYXhXaWR0aCA9IHBNYXhXaWR0aDsKCQkJfQoJCQlpZiAoIHBNYXhIZWlnaHQgPCBiLm1heEhlaWdodCApIHsKCQkJCWIubWF4SGVpZ2h0ID0gcE1heEhlaWdodDsKCQkJfQoJCX0KCQl0aGlzLl92Qm91bmRhcmllcyA9IGI7Cgl9LAoKCV91cGRhdGVDYWNoZTogZnVuY3Rpb24oIGRhdGEgKSB7CgkJdGhpcy5vZmZzZXQgPSB0aGlzLmhlbHBlci5vZmZzZXQoKTsKCQlpZiAoIHRoaXMuX2lzTnVtYmVyKCBkYXRhLmxlZnQgKSApIHsKCQkJdGhpcy5wb3NpdGlvbi5sZWZ0ID0gZGF0YS5sZWZ0OwoJCX0KCQlpZiAoIHRoaXMuX2lzTnVtYmVyKCBkYXRhLnRvcCApICkgewoJCQl0aGlzLnBvc2l0aW9uLnRvcCA9IGRhdGEudG9wOwoJCX0KCQlpZiAoIHRoaXMuX2lzTnVtYmVyKCBkYXRhLmhlaWdodCApICkgewoJCQl0aGlzLnNpemUuaGVpZ2h0ID0gZGF0YS5oZWlnaHQ7CgkJfQoJCWlmICggdGhpcy5faXNOdW1iZXIoIGRhdGEud2lkdGggKSApIHsKCQkJdGhpcy5zaXplLndpZHRoID0gZGF0YS53aWR0aDsKCQl9Cgl9LAoKCV91cGRhdGVSYXRpbzogZnVuY3Rpb24oIGRhdGEgKSB7CgoJCXZhciBjcG9zID0gdGhpcy5wb3NpdGlvbiwKCQkJY3NpemUgPSB0aGlzLnNpemUsCgkJCWEgPSB0aGlzLmF4aXM7CgoJCWlmICggdGhpcy5faXNOdW1iZXIoIGRhdGEuaGVpZ2h0ICkgKSB7CgkJCWRhdGEud2lkdGggPSAoIGRhdGEuaGVpZ2h0ICogdGhpcy5hc3BlY3RSYXRpbyApOwoJCX0gZWxzZSBpZiAoIHRoaXMuX2lzTnVtYmVyKCBkYXRhLndpZHRoICkgKSB7CgkJCWRhdGEuaGVpZ2h0ID0gKCBkYXRhLndpZHRoIC8gdGhpcy5hc3BlY3RSYXRpbyApOwoJCX0KCgkJaWYgKCBhID09PSAic3ciICkgewoJCQlkYXRhLmxlZnQgPSBjcG9zLmxlZnQgKyAoIGNzaXplLndpZHRoIC0gZGF0YS53aWR0aCApOwoJCQlkYXRhLnRvcCA9IG51bGw7CgkJfQoJCWlmICggYSA9PT0gIm53IiApIHsKCQkJZGF0YS50b3AgPSBjcG9zLnRvcCArICggY3NpemUuaGVpZ2h0IC0gZGF0YS5oZWlnaHQgKTsKCQkJZGF0YS5sZWZ0ID0gY3Bvcy5sZWZ0ICsgKCBjc2l6ZS53aWR0aCAtIGRhdGEud2lkdGggKTsKCQl9CgoJCXJldHVybiBkYXRhOwoJfSwKCglfcmVzcGVjdFNpemU6IGZ1bmN0aW9uKCBkYXRhICkgewoKCQl2YXIgbyA9IHRoaXMuX3ZCb3VuZGFyaWVzLAoJCQlhID0gdGhpcy5heGlzLAoJCQlpc21heHcgPSB0aGlzLl9pc051bWJlciggZGF0YS53aWR0aCApICYmIG8ubWF4V2lkdGggJiYgKCBvLm1heFdpZHRoIDwgZGF0YS53aWR0aCApLAoJCQlpc21heGggPSB0aGlzLl9pc051bWJlciggZGF0YS5oZWlnaHQgKSAmJiBvLm1heEhlaWdodCAmJiAoIG8ubWF4SGVpZ2h0IDwgZGF0YS5oZWlnaHQgKSwKCQkJaXNtaW53ID0gdGhpcy5faXNOdW1iZXIoIGRhdGEud2lkdGggKSAmJiBvLm1pbldpZHRoICYmICggby5taW5XaWR0aCA+IGRhdGEud2lkdGggKSwKCQkJaXNtaW5oID0gdGhpcy5faXNOdW1iZXIoIGRhdGEuaGVpZ2h0ICkgJiYgby5taW5IZWlnaHQgJiYgKCBvLm1pbkhlaWdodCA+IGRhdGEuaGVpZ2h0ICksCgkJCWR3ID0gdGhpcy5vcmlnaW5hbFBvc2l0aW9uLmxlZnQgKyB0aGlzLm9yaWdpbmFsU2l6ZS53aWR0aCwKCQkJZGggPSB0aGlzLm9yaWdpbmFsUG9zaXRpb24udG9wICsgdGhpcy5vcmlnaW5hbFNpemUuaGVpZ2h0LAoJCQljdyA9IC9zd3xud3x3Ly50ZXN0KCBhICksIGNoID0gL253fG5lfG4vLnRlc3QoIGEgKTsKCQlpZiAoIGlzbWludyApIHsKCQkJZGF0YS53aWR0aCA9IG8ubWluV2lkdGg7CgkJfQoJCWlmICggaXNtaW5oICkgewoJCQlkYXRhLmhlaWdodCA9IG8ubWluSGVpZ2h0OwoJCX0KCQlpZiAoIGlzbWF4dyApIHsKCQkJZGF0YS53aWR0aCA9IG8ubWF4V2lkdGg7CgkJfQoJCWlmICggaXNtYXhoICkgewoJCQlkYXRhLmhlaWdodCA9IG8ubWF4SGVpZ2h0OwoJCX0KCgkJaWYgKCBpc21pbncgJiYgY3cgKSB7CgkJCWRhdGEubGVmdCA9IGR3IC0gby5taW5XaWR0aDsKCQl9CgkJaWYgKCBpc21heHcgJiYgY3cgKSB7CgkJCWRhdGEubGVmdCA9IGR3IC0gby5tYXhXaWR0aDsKCQl9CgkJaWYgKCBpc21pbmggJiYgY2ggKSB7CgkJCWRhdGEudG9wID0gZGggLSBvLm1pbkhlaWdodDsKCQl9CgkJaWYgKCBpc21heGggJiYgY2ggKSB7CgkJCWRhdGEudG9wID0gZGggLSBvLm1heEhlaWdodDsKCQl9CgoJCS8vIEZpeGluZyBqdW1wIGVycm9yIG9uIHRvcC9sZWZ0IC0gYnVnICMyMzMwCgkJaWYgKCAhZGF0YS53aWR0aCAmJiAhZGF0YS5oZWlnaHQgJiYgIWRhdGEubGVmdCAmJiBkYXRhLnRvcCApIHsKCQkJZGF0YS50b3AgPSBudWxsOwoJCX0gZWxzZSBpZiAoICFkYXRhLndpZHRoICYmICFkYXRhLmhlaWdodCAmJiAhZGF0YS50b3AgJiYgZGF0YS5sZWZ0ICkgewoJCQlkYXRhLmxlZnQgPSBudWxsOwoJCX0KCgkJcmV0dXJuIGRhdGE7Cgl9LAoKCV9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnM6IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCXZhciBpID0gMCwKCQkJd2lkdGhzID0gW10sCgkJCWJvcmRlcnMgPSBbCgkJCQllbGVtZW50LmNzcyggImJvcmRlclRvcFdpZHRoIiApLAoJCQkJZWxlbWVudC5jc3MoICJib3JkZXJSaWdodFdpZHRoIiApLAoJCQkJZWxlbWVudC5jc3MoICJib3JkZXJCb3R0b21XaWR0aCIgKSwKCQkJCWVsZW1lbnQuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApCgkJCV0sCgkJCXBhZGRpbmdzID0gWwoJCQkJZWxlbWVudC5jc3MoICJwYWRkaW5nVG9wIiApLAoJCQkJZWxlbWVudC5jc3MoICJwYWRkaW5nUmlnaHQiICksCgkJCQllbGVtZW50LmNzcyggInBhZGRpbmdCb3R0b20iICksCgkJCQllbGVtZW50LmNzcyggInBhZGRpbmdMZWZ0IiApCgkJCV07CgoJCWZvciAoIDsgaSA8IDQ7IGkrKyApIHsKCQkJd2lkdGhzWyBpIF0gPSAoIHBhcnNlRmxvYXQoIGJvcmRlcnNbIGkgXSApIHx8IDAgKTsKCQkJd2lkdGhzWyBpIF0gKz0gKCBwYXJzZUZsb2F0KCBwYWRkaW5nc1sgaSBdICkgfHwgMCApOwoJCX0KCgkJcmV0dXJuIHsKCQkJaGVpZ2h0OiB3aWR0aHNbIDAgXSArIHdpZHRoc1sgMiBdLAoJCQl3aWR0aDogd2lkdGhzWyAxIF0gKyB3aWR0aHNbIDMgXQoJCX07Cgl9LAoKCV9wcm9wb3J0aW9uYWxseVJlc2l6ZTogZnVuY3Rpb24oKSB7CgoJCWlmICggIXRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoICkgewoJCQlyZXR1cm47CgkJfQoKCQl2YXIgcHJlbCwKCQkJaSA9IDAsCgkJCWVsZW1lbnQgPSB0aGlzLmhlbHBlciB8fCB0aGlzLmVsZW1lbnQ7CgoJCWZvciAoIDsgaSA8IHRoaXMuX3Byb3BvcnRpb25hbGx5UmVzaXplRWxlbWVudHMubGVuZ3RoOyBpKysgKSB7CgoJCQlwcmVsID0gdGhpcy5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50c1sgaSBdOwoKCQkJLy8gVE9ETzogU2VlbXMgbGlrZSBhIGJ1ZyB0byBjYWNoZSB0aGlzLm91dGVyRGltZW5zaW9ucwoJCQkvLyBjb25zaWRlcmluZyB0aGF0IHdlIGFyZSBpbiBhIGxvb3AuCgkJCWlmICggIXRoaXMub3V0ZXJEaW1lbnNpb25zICkgewoJCQkJdGhpcy5vdXRlckRpbWVuc2lvbnMgPSB0aGlzLl9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnMoIHByZWwgKTsKCQkJfQoKCQkJcHJlbC5jc3MoIHsKCQkJCWhlaWdodDogKCBlbGVtZW50LmhlaWdodCgpIC0gdGhpcy5vdXRlckRpbWVuc2lvbnMuaGVpZ2h0ICkgfHwgMCwKCQkJCXdpZHRoOiAoIGVsZW1lbnQud2lkdGgoKSAtIHRoaXMub3V0ZXJEaW1lbnNpb25zLndpZHRoICkgfHwgMAoJCQl9ICk7CgoJCX0KCgl9LAoKCV9yZW5kZXJQcm94eTogZnVuY3Rpb24oKSB7CgoJCXZhciBlbCA9IHRoaXMuZWxlbWVudCwgbyA9IHRoaXMub3B0aW9uczsKCQl0aGlzLmVsZW1lbnRPZmZzZXQgPSBlbC5vZmZzZXQoKTsKCgkJaWYgKCB0aGlzLl9oZWxwZXIgKSB7CgoJCQl0aGlzLmhlbHBlciA9IHRoaXMuaGVscGVyIHx8ICQoICI8ZGl2IHN0eWxlPSdvdmVyZmxvdzpoaWRkZW47Jz48L2Rpdj4iICk7CgoJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5oZWxwZXIsIHRoaXMuX2hlbHBlciApOwoJCQl0aGlzLmhlbHBlci5jc3MoIHsKCQkJCXdpZHRoOiB0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpLAoJCQkJaGVpZ2h0OiB0aGlzLmVsZW1lbnQub3V0ZXJIZWlnaHQoKSwKCQkJCXBvc2l0aW9uOiAiYWJzb2x1dGUiLAoJCQkJbGVmdDogdGhpcy5lbGVtZW50T2Zmc2V0LmxlZnQgKyAicHgiLAoJCQkJdG9wOiB0aGlzLmVsZW1lbnRPZmZzZXQudG9wICsgInB4IiwKCQkJCXpJbmRleDogKytvLnpJbmRleCAvL1RPRE86IERvbid0IG1vZGlmeSBvcHRpb24KCQkJfSApOwoKCQkJdGhpcy5oZWxwZXIKCQkJCS5hcHBlbmRUbyggImJvZHkiICkKCQkJCS5kaXNhYmxlU2VsZWN0aW9uKCk7CgoJCX0gZWxzZSB7CgkJCXRoaXMuaGVscGVyID0gdGhpcy5lbGVtZW50OwoJCX0KCgl9LAoKCV9jaGFuZ2U6IHsKCQllOiBmdW5jdGlvbiggZXZlbnQsIGR4ICkgewoJCQlyZXR1cm4geyB3aWR0aDogdGhpcy5vcmlnaW5hbFNpemUud2lkdGggKyBkeCB9OwoJCX0sCgkJdzogZnVuY3Rpb24oIGV2ZW50LCBkeCApIHsKCQkJdmFyIGNzID0gdGhpcy5vcmlnaW5hbFNpemUsIHNwID0gdGhpcy5vcmlnaW5hbFBvc2l0aW9uOwoJCQlyZXR1cm4geyBsZWZ0OiBzcC5sZWZ0ICsgZHgsIHdpZHRoOiBjcy53aWR0aCAtIGR4IH07CgkJfSwKCQluOiBmdW5jdGlvbiggZXZlbnQsIGR4LCBkeSApIHsKCQkJdmFyIGNzID0gdGhpcy5vcmlnaW5hbFNpemUsIHNwID0gdGhpcy5vcmlnaW5hbFBvc2l0aW9uOwoJCQlyZXR1cm4geyB0b3A6IHNwLnRvcCArIGR5LCBoZWlnaHQ6IGNzLmhlaWdodCAtIGR5IH07CgkJfSwKCQlzOiBmdW5jdGlvbiggZXZlbnQsIGR4LCBkeSApIHsKCQkJcmV0dXJuIHsgaGVpZ2h0OiB0aGlzLm9yaWdpbmFsU2l6ZS5oZWlnaHQgKyBkeSB9OwoJCX0sCgkJc2U6IGZ1bmN0aW9uKCBldmVudCwgZHgsIGR5ICkgewoJCQlyZXR1cm4gJC5leHRlbmQoIHRoaXMuX2NoYW5nZS5zLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSwKCQkJCXRoaXMuX2NoYW5nZS5lLmFwcGx5KCB0aGlzLCBbIGV2ZW50LCBkeCwgZHkgXSApICk7CgkJfSwKCQlzdzogZnVuY3Rpb24oIGV2ZW50LCBkeCwgZHkgKSB7CgkJCXJldHVybiAkLmV4dGVuZCggdGhpcy5fY2hhbmdlLnMuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApLAoJCQkJdGhpcy5fY2hhbmdlLncuYXBwbHkoIHRoaXMsIFsgZXZlbnQsIGR4LCBkeSBdICkgKTsKCQl9LAoJCW5lOiBmdW5jdGlvbiggZXZlbnQsIGR4LCBkeSApIHsKCQkJcmV0dXJuICQuZXh0ZW5kKCB0aGlzLl9jaGFuZ2Uubi5hcHBseSggdGhpcywgYXJndW1lbnRzICksCgkJCQl0aGlzLl9jaGFuZ2UuZS5hcHBseSggdGhpcywgWyBldmVudCwgZHgsIGR5IF0gKSApOwoJCX0sCgkJbnc6IGZ1bmN0aW9uKCBldmVudCwgZHgsIGR5ICkgewoJCQlyZXR1cm4gJC5leHRlbmQoIHRoaXMuX2NoYW5nZS5uLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSwKCQkJCXRoaXMuX2NoYW5nZS53LmFwcGx5KCB0aGlzLCBbIGV2ZW50LCBkeCwgZHkgXSApICk7CgkJfQoJfSwKCglfcHJvcGFnYXRlOiBmdW5jdGlvbiggbiwgZXZlbnQgKSB7CgkJJC51aS5wbHVnaW4uY2FsbCggdGhpcywgbiwgWyBldmVudCwgdGhpcy51aSgpIF0gKTsKCQkoIG4gIT09ICJyZXNpemUiICYmIHRoaXMuX3RyaWdnZXIoIG4sIGV2ZW50LCB0aGlzLnVpKCkgKSApOwoJfSwKCglwbHVnaW5zOiB7fSwKCgl1aTogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHsKCQkJb3JpZ2luYWxFbGVtZW50OiB0aGlzLm9yaWdpbmFsRWxlbWVudCwKCQkJZWxlbWVudDogdGhpcy5lbGVtZW50LAoJCQloZWxwZXI6IHRoaXMuaGVscGVyLAoJCQlwb3NpdGlvbjogdGhpcy5wb3NpdGlvbiwKCQkJc2l6ZTogdGhpcy5zaXplLAoJCQlvcmlnaW5hbFNpemU6IHRoaXMub3JpZ2luYWxTaXplLAoJCQlvcmlnaW5hbFBvc2l0aW9uOiB0aGlzLm9yaWdpbmFsUG9zaXRpb24KCQl9OwoJfQoKfSApOwoKLyoKICogUmVzaXphYmxlIEV4dGVuc2lvbnMKICovCgokLnVpLnBsdWdpbi5hZGQoICJyZXNpemFibGUiLCAiYW5pbWF0ZSIsIHsKCglzdG9wOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIHRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksCgkJCW8gPSB0aGF0Lm9wdGlvbnMsCgkJCXByID0gdGhhdC5fcHJvcG9ydGlvbmFsbHlSZXNpemVFbGVtZW50cywKCQkJaXN0YSA9IHByLmxlbmd0aCAmJiAoIC90ZXh0YXJlYS9pICkudGVzdCggcHJbIDAgXS5ub2RlTmFtZSApLAoJCQlzb2Zmc2V0aCA9IGlzdGEgJiYgdGhhdC5faGFzU2Nyb2xsKCBwclsgMCBdLCAibGVmdCIgKSA/IDAgOiB0aGF0LnNpemVEaWZmLmhlaWdodCwKCQkJc29mZnNldHcgPSBpc3RhID8gMCA6IHRoYXQuc2l6ZURpZmYud2lkdGgsCgkJCXN0eWxlID0gewoJCQkJd2lkdGg6ICggdGhhdC5zaXplLndpZHRoIC0gc29mZnNldHcgKSwKCQkJCWhlaWdodDogKCB0aGF0LnNpemUuaGVpZ2h0IC0gc29mZnNldGggKQoJCQl9LAoJCQlsZWZ0ID0gKCBwYXJzZUZsb2F0KCB0aGF0LmVsZW1lbnQuY3NzKCAibGVmdCIgKSApICsKCQkJCSggdGhhdC5wb3NpdGlvbi5sZWZ0IC0gdGhhdC5vcmlnaW5hbFBvc2l0aW9uLmxlZnQgKSApIHx8IG51bGwsCgkJCXRvcCA9ICggcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggInRvcCIgKSApICsKCQkJCSggdGhhdC5wb3NpdGlvbi50b3AgLSB0aGF0Lm9yaWdpbmFsUG9zaXRpb24udG9wICkgKSB8fCBudWxsOwoKCQl0aGF0LmVsZW1lbnQuYW5pbWF0ZSgKCQkJJC5leHRlbmQoIHN0eWxlLCB0b3AgJiYgbGVmdCA/IHsgdG9wOiB0b3AsIGxlZnQ6IGxlZnQgfSA6IHt9ICksIHsKCQkJCWR1cmF0aW9uOiBvLmFuaW1hdGVEdXJhdGlvbiwKCQkJCWVhc2luZzogby5hbmltYXRlRWFzaW5nLAoJCQkJc3RlcDogZnVuY3Rpb24oKSB7CgoJCQkJCXZhciBkYXRhID0gewoJCQkJCQl3aWR0aDogcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggIndpZHRoIiApICksCgkJCQkJCWhlaWdodDogcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggImhlaWdodCIgKSApLAoJCQkJCQl0b3A6IHBhcnNlRmxvYXQoIHRoYXQuZWxlbWVudC5jc3MoICJ0b3AiICkgKSwKCQkJCQkJbGVmdDogcGFyc2VGbG9hdCggdGhhdC5lbGVtZW50LmNzcyggImxlZnQiICkgKQoJCQkJCX07CgoJCQkJCWlmICggcHIgJiYgcHIubGVuZ3RoICkgewoJCQkJCQkkKCBwclsgMCBdICkuY3NzKCB7IHdpZHRoOiBkYXRhLndpZHRoLCBoZWlnaHQ6IGRhdGEuaGVpZ2h0IH0gKTsKCQkJCQl9CgoJCQkJCS8vIFByb3BhZ2F0aW5nIHJlc2l6ZSwgYW5kIHVwZGF0aW5nIHZhbHVlcyBmb3IgZWFjaCBhbmltYXRpb24gc3RlcAoJCQkJCXRoYXQuX3VwZGF0ZUNhY2hlKCBkYXRhICk7CgkJCQkJdGhhdC5fcHJvcGFnYXRlKCAicmVzaXplIiwgZXZlbnQgKTsKCgkJCQl9CgkJCX0KCQkpOwoJfQoKfSApOwoKJC51aS5wbHVnaW4uYWRkKCAicmVzaXphYmxlIiwgImNvbnRhaW5tZW50IiwgewoKCXN0YXJ0OiBmdW5jdGlvbigpIHsKCQl2YXIgZWxlbWVudCwgcCwgY28sIGNoLCBjdywgd2lkdGgsIGhlaWdodCwKCQkJdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKSwKCQkJbyA9IHRoYXQub3B0aW9ucywKCQkJZWwgPSB0aGF0LmVsZW1lbnQsCgkJCW9jID0gby5jb250YWlubWVudCwKCQkJY2UgPSAoIG9jIGluc3RhbmNlb2YgJCApID8KCQkJCW9jLmdldCggMCApIDoKCQkJCSggL3BhcmVudC8udGVzdCggb2MgKSApID8gZWwucGFyZW50KCkuZ2V0KCAwICkgOiBvYzsKCgkJaWYgKCAhY2UgKSB7CgkJCXJldHVybjsKCQl9CgoJCXRoYXQuY29udGFpbmVyRWxlbWVudCA9ICQoIGNlICk7CgoJCWlmICggL2RvY3VtZW50Ly50ZXN0KCBvYyApIHx8IG9jID09PSBkb2N1bWVudCApIHsKCQkJdGhhdC5jb250YWluZXJPZmZzZXQgPSB7CgkJCQlsZWZ0OiAwLAoJCQkJdG9wOiAwCgkJCX07CgkJCXRoYXQuY29udGFpbmVyUG9zaXRpb24gPSB7CgkJCQlsZWZ0OiAwLAoJCQkJdG9wOiAwCgkJCX07CgoJCQl0aGF0LnBhcmVudERhdGEgPSB7CgkJCQllbGVtZW50OiAkKCBkb2N1bWVudCApLAoJCQkJbGVmdDogMCwKCQkJCXRvcDogMCwKCQkJCXdpZHRoOiAkKCBkb2N1bWVudCApLndpZHRoKCksCgkJCQloZWlnaHQ6ICQoIGRvY3VtZW50ICkuaGVpZ2h0KCkgfHwgZG9jdW1lbnQuYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodAoJCQl9OwoJCX0gZWxzZSB7CgkJCWVsZW1lbnQgPSAkKCBjZSApOwoJCQlwID0gW107CgkJCSQoIFsgIlRvcCIsICJSaWdodCIsICJMZWZ0IiwgIkJvdHRvbSIgXSApLmVhY2goIGZ1bmN0aW9uKCBpLCBuYW1lICkgewoJCQkJcFsgaSBdID0gdGhhdC5fbnVtKCBlbGVtZW50LmNzcyggInBhZGRpbmciICsgbmFtZSApICk7CgkJCX0gKTsKCgkJCXRoYXQuY29udGFpbmVyT2Zmc2V0ID0gZWxlbWVudC5vZmZzZXQoKTsKCQkJdGhhdC5jb250YWluZXJQb3NpdGlvbiA9IGVsZW1lbnQucG9zaXRpb24oKTsKCQkJdGhhdC5jb250YWluZXJTaXplID0gewoJCQkJaGVpZ2h0OiAoIGVsZW1lbnQuaW5uZXJIZWlnaHQoKSAtIHBbIDMgXSApLAoJCQkJd2lkdGg6ICggZWxlbWVudC5pbm5lcldpZHRoKCkgLSBwWyAxIF0gKQoJCQl9OwoKCQkJY28gPSB0aGF0LmNvbnRhaW5lck9mZnNldDsKCQkJY2ggPSB0aGF0LmNvbnRhaW5lclNpemUuaGVpZ2h0OwoJCQljdyA9IHRoYXQuY29udGFpbmVyU2l6ZS53aWR0aDsKCQkJd2lkdGggPSAoIHRoYXQuX2hhc1Njcm9sbCAoIGNlLCAibGVmdCIgKSA/IGNlLnNjcm9sbFdpZHRoIDogY3cgKTsKCQkJaGVpZ2h0ID0gKCB0aGF0Ll9oYXNTY3JvbGwgKCBjZSApID8gY2Uuc2Nyb2xsSGVpZ2h0IDogY2ggKSA7CgoJCQl0aGF0LnBhcmVudERhdGEgPSB7CgkJCQllbGVtZW50OiBjZSwKCQkJCWxlZnQ6IGNvLmxlZnQsCgkJCQl0b3A6IGNvLnRvcCwKCQkJCXdpZHRoOiB3aWR0aCwKCQkJCWhlaWdodDogaGVpZ2h0CgkJCX07CgkJfQoJfSwKCglyZXNpemU6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgd29zZXQsIGhvc2V0LCBpc1BhcmVudCwgaXNPZmZzZXRSZWxhdGl2ZSwKCQkJdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKSwKCQkJbyA9IHRoYXQub3B0aW9ucywKCQkJY28gPSB0aGF0LmNvbnRhaW5lck9mZnNldCwKCQkJY3AgPSB0aGF0LnBvc2l0aW9uLAoJCQlwUmF0aW8gPSB0aGF0Ll9hc3BlY3RSYXRpbyB8fCBldmVudC5zaGlmdEtleSwKCQkJY29wID0gewoJCQkJdG9wOiAwLAoJCQkJbGVmdDogMAoJCQl9LAoJCQljZSA9IHRoYXQuY29udGFpbmVyRWxlbWVudCwKCQkJY29udGludWVSZXNpemUgPSB0cnVlOwoKCQlpZiAoIGNlWyAwIF0gIT09IGRvY3VtZW50ICYmICggL3N0YXRpYy8gKS50ZXN0KCBjZS5jc3MoICJwb3NpdGlvbiIgKSApICkgewoJCQljb3AgPSBjbzsKCQl9CgoJCWlmICggY3AubGVmdCA8ICggdGhhdC5faGVscGVyID8gY28ubGVmdCA6IDAgKSApIHsKCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5zaXplLndpZHRoICsKCQkJCSggdGhhdC5faGVscGVyID8KCQkJCQkoIHRoYXQucG9zaXRpb24ubGVmdCAtIGNvLmxlZnQgKSA6CgkJCQkJKCB0aGF0LnBvc2l0aW9uLmxlZnQgLSBjb3AubGVmdCApICk7CgoJCQlpZiAoIHBSYXRpbyApIHsKCQkJCXRoYXQuc2l6ZS5oZWlnaHQgPSB0aGF0LnNpemUud2lkdGggLyB0aGF0LmFzcGVjdFJhdGlvOwoJCQkJY29udGludWVSZXNpemUgPSBmYWxzZTsKCQkJfQoJCQl0aGF0LnBvc2l0aW9uLmxlZnQgPSBvLmhlbHBlciA/IGNvLmxlZnQgOiAwOwoJCX0KCgkJaWYgKCBjcC50b3AgPCAoIHRoYXQuX2hlbHBlciA/IGNvLnRvcCA6IDAgKSApIHsKCQkJdGhhdC5zaXplLmhlaWdodCA9IHRoYXQuc2l6ZS5oZWlnaHQgKwoJCQkJKCB0aGF0Ll9oZWxwZXIgPwoJCQkJCSggdGhhdC5wb3NpdGlvbi50b3AgLSBjby50b3AgKSA6CgkJCQkJdGhhdC5wb3NpdGlvbi50b3AgKTsKCgkJCWlmICggcFJhdGlvICkgewoJCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5zaXplLmhlaWdodCAqIHRoYXQuYXNwZWN0UmF0aW87CgkJCQljb250aW51ZVJlc2l6ZSA9IGZhbHNlOwoJCQl9CgkJCXRoYXQucG9zaXRpb24udG9wID0gdGhhdC5faGVscGVyID8gY28udG9wIDogMDsKCQl9CgoJCWlzUGFyZW50ID0gdGhhdC5jb250YWluZXJFbGVtZW50LmdldCggMCApID09PSB0aGF0LmVsZW1lbnQucGFyZW50KCkuZ2V0KCAwICk7CgkJaXNPZmZzZXRSZWxhdGl2ZSA9IC9yZWxhdGl2ZXxhYnNvbHV0ZS8udGVzdCggdGhhdC5jb250YWluZXJFbGVtZW50LmNzcyggInBvc2l0aW9uIiApICk7CgoJCWlmICggaXNQYXJlbnQgJiYgaXNPZmZzZXRSZWxhdGl2ZSApIHsKCQkJdGhhdC5vZmZzZXQubGVmdCA9IHRoYXQucGFyZW50RGF0YS5sZWZ0ICsgdGhhdC5wb3NpdGlvbi5sZWZ0OwoJCQl0aGF0Lm9mZnNldC50b3AgPSB0aGF0LnBhcmVudERhdGEudG9wICsgdGhhdC5wb3NpdGlvbi50b3A7CgkJfSBlbHNlIHsKCQkJdGhhdC5vZmZzZXQubGVmdCA9IHRoYXQuZWxlbWVudC5vZmZzZXQoKS5sZWZ0OwoJCQl0aGF0Lm9mZnNldC50b3AgPSB0aGF0LmVsZW1lbnQub2Zmc2V0KCkudG9wOwoJCX0KCgkJd29zZXQgPSBNYXRoLmFicyggdGhhdC5zaXplRGlmZi53aWR0aCArCgkJCSggdGhhdC5faGVscGVyID8KCQkJCXRoYXQub2Zmc2V0LmxlZnQgLSBjb3AubGVmdCA6CgkJCQkoIHRoYXQub2Zmc2V0LmxlZnQgLSBjby5sZWZ0ICkgKSApOwoKCQlob3NldCA9IE1hdGguYWJzKCB0aGF0LnNpemVEaWZmLmhlaWdodCArCgkJCSggdGhhdC5faGVscGVyID8KCQkJCXRoYXQub2Zmc2V0LnRvcCAtIGNvcC50b3AgOgoJCQkJKCB0aGF0Lm9mZnNldC50b3AgLSBjby50b3AgKSApICk7CgoJCWlmICggd29zZXQgKyB0aGF0LnNpemUud2lkdGggPj0gdGhhdC5wYXJlbnREYXRhLndpZHRoICkgewoJCQl0aGF0LnNpemUud2lkdGggPSB0aGF0LnBhcmVudERhdGEud2lkdGggLSB3b3NldDsKCQkJaWYgKCBwUmF0aW8gKSB7CgkJCQl0aGF0LnNpemUuaGVpZ2h0ID0gdGhhdC5zaXplLndpZHRoIC8gdGhhdC5hc3BlY3RSYXRpbzsKCQkJCWNvbnRpbnVlUmVzaXplID0gZmFsc2U7CgkJCX0KCQl9CgoJCWlmICggaG9zZXQgKyB0aGF0LnNpemUuaGVpZ2h0ID49IHRoYXQucGFyZW50RGF0YS5oZWlnaHQgKSB7CgkJCXRoYXQuc2l6ZS5oZWlnaHQgPSB0aGF0LnBhcmVudERhdGEuaGVpZ2h0IC0gaG9zZXQ7CgkJCWlmICggcFJhdGlvICkgewoJCQkJdGhhdC5zaXplLndpZHRoID0gdGhhdC5zaXplLmhlaWdodCAqIHRoYXQuYXNwZWN0UmF0aW87CgkJCQljb250aW51ZVJlc2l6ZSA9IGZhbHNlOwoJCQl9CgkJfQoKCQlpZiAoICFjb250aW51ZVJlc2l6ZSApIHsKCQkJdGhhdC5wb3NpdGlvbi5sZWZ0ID0gdGhhdC5wcmV2UG9zaXRpb24ubGVmdDsKCQkJdGhhdC5wb3NpdGlvbi50b3AgPSB0aGF0LnByZXZQb3NpdGlvbi50b3A7CgkJCXRoYXQuc2l6ZS53aWR0aCA9IHRoYXQucHJldlNpemUud2lkdGg7CgkJCXRoYXQuc2l6ZS5oZWlnaHQgPSB0aGF0LnByZXZTaXplLmhlaWdodDsKCQl9Cgl9LAoKCXN0b3A6IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApLAoJCQlvID0gdGhhdC5vcHRpb25zLAoJCQljbyA9IHRoYXQuY29udGFpbmVyT2Zmc2V0LAoJCQljb3AgPSB0aGF0LmNvbnRhaW5lclBvc2l0aW9uLAoJCQljZSA9IHRoYXQuY29udGFpbmVyRWxlbWVudCwKCQkJaGVscGVyID0gJCggdGhhdC5oZWxwZXIgKSwKCQkJaG8gPSBoZWxwZXIub2Zmc2V0KCksCgkJCXcgPSBoZWxwZXIub3V0ZXJXaWR0aCgpIC0gdGhhdC5zaXplRGlmZi53aWR0aCwKCQkJaCA9IGhlbHBlci5vdXRlckhlaWdodCgpIC0gdGhhdC5zaXplRGlmZi5oZWlnaHQ7CgoJCWlmICggdGhhdC5faGVscGVyICYmICFvLmFuaW1hdGUgJiYgKCAvcmVsYXRpdmUvICkudGVzdCggY2UuY3NzKCAicG9zaXRpb24iICkgKSApIHsKCQkJJCggdGhpcyApLmNzcyggewoJCQkJbGVmdDogaG8ubGVmdCAtIGNvcC5sZWZ0IC0gY28ubGVmdCwKCQkJCXdpZHRoOiB3LAoJCQkJaGVpZ2h0OiBoCgkJCX0gKTsKCQl9CgoJCWlmICggdGhhdC5faGVscGVyICYmICFvLmFuaW1hdGUgJiYgKCAvc3RhdGljLyApLnRlc3QoIGNlLmNzcyggInBvc2l0aW9uIiApICkgKSB7CgkJCSQoIHRoaXMgKS5jc3MoIHsKCQkJCWxlZnQ6IGhvLmxlZnQgLSBjb3AubGVmdCAtIGNvLmxlZnQsCgkJCQl3aWR0aDogdywKCQkJCWhlaWdodDogaAoJCQl9ICk7CgkJfQoJfQp9ICk7CgokLnVpLnBsdWdpbi5hZGQoICJyZXNpemFibGUiLCAiYWxzb1Jlc2l6ZSIsIHsKCglzdGFydDogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksCgkJCW8gPSB0aGF0Lm9wdGlvbnM7CgoJCSQoIG8uYWxzb1Jlc2l6ZSApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgZWwgPSAkKCB0aGlzICk7CgkJCWVsLmRhdGEoICJ1aS1yZXNpemFibGUtYWxzb3Jlc2l6ZSIsIHsKCQkJCXdpZHRoOiBwYXJzZUZsb2F0KCBlbC53aWR0aCgpICksIGhlaWdodDogcGFyc2VGbG9hdCggZWwuaGVpZ2h0KCkgKSwKCQkJCWxlZnQ6IHBhcnNlRmxvYXQoIGVsLmNzcyggImxlZnQiICkgKSwgdG9wOiBwYXJzZUZsb2F0KCBlbC5jc3MoICJ0b3AiICkgKQoJCQl9ICk7CgkJfSApOwoJfSwKCglyZXNpemU6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7CgkJdmFyIHRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksCgkJCW8gPSB0aGF0Lm9wdGlvbnMsCgkJCW9zID0gdGhhdC5vcmlnaW5hbFNpemUsCgkJCW9wID0gdGhhdC5vcmlnaW5hbFBvc2l0aW9uLAoJCQlkZWx0YSA9IHsKCQkJCWhlaWdodDogKCB0aGF0LnNpemUuaGVpZ2h0IC0gb3MuaGVpZ2h0ICkgfHwgMCwKCQkJCXdpZHRoOiAoIHRoYXQuc2l6ZS53aWR0aCAtIG9zLndpZHRoICkgfHwgMCwKCQkJCXRvcDogKCB0aGF0LnBvc2l0aW9uLnRvcCAtIG9wLnRvcCApIHx8IDAsCgkJCQlsZWZ0OiAoIHRoYXQucG9zaXRpb24ubGVmdCAtIG9wLmxlZnQgKSB8fCAwCgkJCX07CgoJCQkkKCBvLmFsc29SZXNpemUgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCXZhciBlbCA9ICQoIHRoaXMgKSwgc3RhcnQgPSAkKCB0aGlzICkuZGF0YSggInVpLXJlc2l6YWJsZS1hbHNvcmVzaXplIiApLCBzdHlsZSA9IHt9LAoJCQkJCWNzcyA9IGVsLnBhcmVudHMoIHVpLm9yaWdpbmFsRWxlbWVudFsgMCBdICkubGVuZ3RoID8KCQkJCQkJCVsgIndpZHRoIiwgImhlaWdodCIgXSA6CgkJCQkJCQlbICJ3aWR0aCIsICJoZWlnaHQiLCAidG9wIiwgImxlZnQiIF07CgoJCQkJJC5lYWNoKCBjc3MsIGZ1bmN0aW9uKCBpLCBwcm9wICkgewoJCQkJCXZhciBzdW0gPSAoIHN0YXJ0WyBwcm9wIF0gfHwgMCApICsgKCBkZWx0YVsgcHJvcCBdIHx8IDAgKTsKCQkJCQlpZiAoIHN1bSAmJiBzdW0gPj0gMCApIHsKCQkJCQkJc3R5bGVbIHByb3AgXSA9IHN1bSB8fCBudWxsOwoJCQkJCX0KCQkJCX0gKTsKCgkJCQllbC5jc3MoIHN0eWxlICk7CgkJCX0gKTsKCX0sCgoJc3RvcDogZnVuY3Rpb24oKSB7CgkJJCggdGhpcyApLnJlbW92ZURhdGEoICJ1aS1yZXNpemFibGUtYWxzb3Jlc2l6ZSIgKTsKCX0KfSApOwoKJC51aS5wbHVnaW4uYWRkKCAicmVzaXphYmxlIiwgImdob3N0IiwgewoKCXN0YXJ0OiBmdW5jdGlvbigpIHsKCgkJdmFyIHRoYXQgPSAkKCB0aGlzICkucmVzaXphYmxlKCAiaW5zdGFuY2UiICksIGNzID0gdGhhdC5zaXplOwoKCQl0aGF0Lmdob3N0ID0gdGhhdC5vcmlnaW5hbEVsZW1lbnQuY2xvbmUoKTsKCQl0aGF0Lmdob3N0LmNzcyggewoJCQlvcGFjaXR5OiAwLjI1LAoJCQlkaXNwbGF5OiAiYmxvY2siLAoJCQlwb3NpdGlvbjogInJlbGF0aXZlIiwKCQkJaGVpZ2h0OiBjcy5oZWlnaHQsCgkJCXdpZHRoOiBjcy53aWR0aCwKCQkJbWFyZ2luOiAwLAoJCQlsZWZ0OiAwLAoJCQl0b3A6IDAKCQl9ICk7CgoJCXRoYXQuX2FkZENsYXNzKCB0aGF0Lmdob3N0LCAidWktcmVzaXphYmxlLWdob3N0IiApOwoKCQkvLyBERVBSRUNBVEVECgkJLy8gVE9ETzogcmVtb3ZlIGFmdGVyIDEuMTIKCQlpZiAoICQudWlCYWNrQ29tcGF0ICE9PSBmYWxzZSAmJiB0eXBlb2YgdGhhdC5vcHRpb25zLmdob3N0ID09PSAic3RyaW5nIiApIHsKCgkJCS8vIEdob3N0IG9wdGlvbgoJCQl0aGF0Lmdob3N0LmFkZENsYXNzKCB0aGlzLm9wdGlvbnMuZ2hvc3QgKTsKCQl9CgoJCXRoYXQuZ2hvc3QuYXBwZW5kVG8oIHRoYXQuaGVscGVyICk7CgoJfSwKCglyZXNpemU6IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApOwoJCWlmICggdGhhdC5naG9zdCApIHsKCQkJdGhhdC5naG9zdC5jc3MoIHsKCQkJCXBvc2l0aW9uOiAicmVsYXRpdmUiLAoJCQkJaGVpZ2h0OiB0aGF0LnNpemUuaGVpZ2h0LAoJCQkJd2lkdGg6IHRoYXQuc2l6ZS53aWR0aAoJCQl9ICk7CgkJfQoJfSwKCglzdG9wOiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9ICQoIHRoaXMgKS5yZXNpemFibGUoICJpbnN0YW5jZSIgKTsKCQlpZiAoIHRoYXQuZ2hvc3QgJiYgdGhhdC5oZWxwZXIgKSB7CgkJCXRoYXQuaGVscGVyLmdldCggMCApLnJlbW92ZUNoaWxkKCB0aGF0Lmdob3N0LmdldCggMCApICk7CgkJfQoJfQoKfSApOwoKJC51aS5wbHVnaW4uYWRkKCAicmVzaXphYmxlIiwgImdyaWQiLCB7CgoJcmVzaXplOiBmdW5jdGlvbigpIHsKCQl2YXIgb3V0ZXJEaW1lbnNpb25zLAoJCQl0aGF0ID0gJCggdGhpcyApLnJlc2l6YWJsZSggImluc3RhbmNlIiApLAoJCQlvID0gdGhhdC5vcHRpb25zLAoJCQljcyA9IHRoYXQuc2l6ZSwKCQkJb3MgPSB0aGF0Lm9yaWdpbmFsU2l6ZSwKCQkJb3AgPSB0aGF0Lm9yaWdpbmFsUG9zaXRpb24sCgkJCWEgPSB0aGF0LmF4aXMsCgkJCWdyaWQgPSB0eXBlb2Ygby5ncmlkID09PSAibnVtYmVyIiA/IFsgby5ncmlkLCBvLmdyaWQgXSA6IG8uZ3JpZCwKCQkJZ3JpZFggPSAoIGdyaWRbIDAgXSB8fCAxICksCgkJCWdyaWRZID0gKCBncmlkWyAxIF0gfHwgMSApLAoJCQlveCA9IE1hdGgucm91bmQoICggY3Mud2lkdGggLSBvcy53aWR0aCApIC8gZ3JpZFggKSAqIGdyaWRYLAoJCQlveSA9IE1hdGgucm91bmQoICggY3MuaGVpZ2h0IC0gb3MuaGVpZ2h0ICkgLyBncmlkWSApICogZ3JpZFksCgkJCW5ld1dpZHRoID0gb3Mud2lkdGggKyBveCwKCQkJbmV3SGVpZ2h0ID0gb3MuaGVpZ2h0ICsgb3ksCgkJCWlzTWF4V2lkdGggPSBvLm1heFdpZHRoICYmICggby5tYXhXaWR0aCA8IG5ld1dpZHRoICksCgkJCWlzTWF4SGVpZ2h0ID0gby5tYXhIZWlnaHQgJiYgKCBvLm1heEhlaWdodCA8IG5ld0hlaWdodCApLAoJCQlpc01pbldpZHRoID0gby5taW5XaWR0aCAmJiAoIG8ubWluV2lkdGggPiBuZXdXaWR0aCApLAoJCQlpc01pbkhlaWdodCA9IG8ubWluSGVpZ2h0ICYmICggby5taW5IZWlnaHQgPiBuZXdIZWlnaHQgKTsKCgkJby5ncmlkID0gZ3JpZDsKCgkJaWYgKCBpc01pbldpZHRoICkgewoJCQluZXdXaWR0aCArPSBncmlkWDsKCQl9CgkJaWYgKCBpc01pbkhlaWdodCApIHsKCQkJbmV3SGVpZ2h0ICs9IGdyaWRZOwoJCX0KCQlpZiAoIGlzTWF4V2lkdGggKSB7CgkJCW5ld1dpZHRoIC09IGdyaWRYOwoJCX0KCQlpZiAoIGlzTWF4SGVpZ2h0ICkgewoJCQluZXdIZWlnaHQgLT0gZ3JpZFk7CgkJfQoKCQlpZiAoIC9eKHNlfHN8ZSkkLy50ZXN0KCBhICkgKSB7CgkJCXRoYXQuc2l6ZS53aWR0aCA9IG5ld1dpZHRoOwoJCQl0aGF0LnNpemUuaGVpZ2h0ID0gbmV3SGVpZ2h0OwoJCX0gZWxzZSBpZiAoIC9eKG5lKSQvLnRlc3QoIGEgKSApIHsKCQkJdGhhdC5zaXplLndpZHRoID0gbmV3V2lkdGg7CgkJCXRoYXQuc2l6ZS5oZWlnaHQgPSBuZXdIZWlnaHQ7CgkJCXRoYXQucG9zaXRpb24udG9wID0gb3AudG9wIC0gb3k7CgkJfSBlbHNlIGlmICggL14oc3cpJC8udGVzdCggYSApICkgewoJCQl0aGF0LnNpemUud2lkdGggPSBuZXdXaWR0aDsKCQkJdGhhdC5zaXplLmhlaWdodCA9IG5ld0hlaWdodDsKCQkJdGhhdC5wb3NpdGlvbi5sZWZ0ID0gb3AubGVmdCAtIG94OwoJCX0gZWxzZSB7CgkJCWlmICggbmV3SGVpZ2h0IC0gZ3JpZFkgPD0gMCB8fCBuZXdXaWR0aCAtIGdyaWRYIDw9IDAgKSB7CgkJCQlvdXRlckRpbWVuc2lvbnMgPSB0aGF0Ll9nZXRQYWRkaW5nUGx1c0JvcmRlckRpbWVuc2lvbnMoIHRoaXMgKTsKCQkJfQoKCQkJaWYgKCBuZXdIZWlnaHQgLSBncmlkWSA+IDAgKSB7CgkJCQl0aGF0LnNpemUuaGVpZ2h0ID0gbmV3SGVpZ2h0OwoJCQkJdGhhdC5wb3NpdGlvbi50b3AgPSBvcC50b3AgLSBveTsKCQkJfSBlbHNlIHsKCQkJCW5ld0hlaWdodCA9IGdyaWRZIC0gb3V0ZXJEaW1lbnNpb25zLmhlaWdodDsKCQkJCXRoYXQuc2l6ZS5oZWlnaHQgPSBuZXdIZWlnaHQ7CgkJCQl0aGF0LnBvc2l0aW9uLnRvcCA9IG9wLnRvcCArIG9zLmhlaWdodCAtIG5ld0hlaWdodDsKCQkJfQoJCQlpZiAoIG5ld1dpZHRoIC0gZ3JpZFggPiAwICkgewoJCQkJdGhhdC5zaXplLndpZHRoID0gbmV3V2lkdGg7CgkJCQl0aGF0LnBvc2l0aW9uLmxlZnQgPSBvcC5sZWZ0IC0gb3g7CgkJCX0gZWxzZSB7CgkJCQluZXdXaWR0aCA9IGdyaWRYIC0gb3V0ZXJEaW1lbnNpb25zLndpZHRoOwoJCQkJdGhhdC5zaXplLndpZHRoID0gbmV3V2lkdGg7CgkJCQl0aGF0LnBvc2l0aW9uLmxlZnQgPSBvcC5sZWZ0ICsgb3Mud2lkdGggLSBuZXdXaWR0aDsKCQkJfQoJCX0KCX0KCn0gKTsKCnZhciB3aWRnZXRzUmVzaXphYmxlID0gJC51aS5yZXNpemFibGU7CgoKLyohCiAqIGpRdWVyeSBVSSBEaWFsb2cgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBEaWFsb2cKLy8+Pmdyb3VwOiBXaWRnZXRzCi8vPj5kZXNjcmlwdGlvbjogRGlzcGxheXMgY3VzdG9taXphYmxlIGRpYWxvZyB3aW5kb3dzLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZGlhbG9nLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZGlhbG9nLwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvY29yZS5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2RpYWxvZy5jc3MKLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzCgoKCiQud2lkZ2V0KCAidWkuZGlhbG9nIiwgewoJdmVyc2lvbjogIjEuMTIuMSIsCglvcHRpb25zOiB7CgkJYXBwZW5kVG86ICJib2R5IiwKCQlhdXRvT3BlbjogdHJ1ZSwKCQlidXR0b25zOiBbXSwKCQljbGFzc2VzOiB7CgkJCSJ1aS1kaWFsb2ciOiAidWktY29ybmVyLWFsbCIsCgkJCSJ1aS1kaWFsb2ctdGl0bGViYXIiOiAidWktY29ybmVyLWFsbCIKCQl9LAoJCWNsb3NlT25Fc2NhcGU6IHRydWUsCgkJY2xvc2VUZXh0OiAiQ2xvc2UiLAoJCWRyYWdnYWJsZTogdHJ1ZSwKCQloaWRlOiBudWxsLAoJCWhlaWdodDogImF1dG8iLAoJCW1heEhlaWdodDogbnVsbCwKCQltYXhXaWR0aDogbnVsbCwKCQltaW5IZWlnaHQ6IDE1MCwKCQltaW5XaWR0aDogMTUwLAoJCW1vZGFsOiBmYWxzZSwKCQlwb3NpdGlvbjogewoJCQlteTogImNlbnRlciIsCgkJCWF0OiAiY2VudGVyIiwKCQkJb2Y6IHdpbmRvdywKCQkJY29sbGlzaW9uOiAiZml0IiwKCgkJCS8vIEVuc3VyZSB0aGUgdGl0bGViYXIgaXMgYWx3YXlzIHZpc2libGUKCQkJdXNpbmc6IGZ1bmN0aW9uKCBwb3MgKSB7CgkJCQl2YXIgdG9wT2Zmc2V0ID0gJCggdGhpcyApLmNzcyggcG9zICkub2Zmc2V0KCkudG9wOwoJCQkJaWYgKCB0b3BPZmZzZXQgPCAwICkgewoJCQkJCSQoIHRoaXMgKS5jc3MoICJ0b3AiLCBwb3MudG9wIC0gdG9wT2Zmc2V0ICk7CgkJCQl9CgkJCX0KCQl9LAoJCXJlc2l6YWJsZTogdHJ1ZSwKCQlzaG93OiBudWxsLAoJCXRpdGxlOiBudWxsLAoJCXdpZHRoOiAzMDAsCgoJCS8vIENhbGxiYWNrcwoJCWJlZm9yZUNsb3NlOiBudWxsLAoJCWNsb3NlOiBudWxsLAoJCWRyYWc6IG51bGwsCgkJZHJhZ1N0YXJ0OiBudWxsLAoJCWRyYWdTdG9wOiBudWxsLAoJCWZvY3VzOiBudWxsLAoJCW9wZW46IG51bGwsCgkJcmVzaXplOiBudWxsLAoJCXJlc2l6ZVN0YXJ0OiBudWxsLAoJCXJlc2l6ZVN0b3A6IG51bGwKCX0sCgoJc2l6ZVJlbGF0ZWRPcHRpb25zOiB7CgkJYnV0dG9uczogdHJ1ZSwKCQloZWlnaHQ6IHRydWUsCgkJbWF4SGVpZ2h0OiB0cnVlLAoJCW1heFdpZHRoOiB0cnVlLAoJCW1pbkhlaWdodDogdHJ1ZSwKCQltaW5XaWR0aDogdHJ1ZSwKCQl3aWR0aDogdHJ1ZQoJfSwKCglyZXNpemFibGVSZWxhdGVkT3B0aW9uczogewoJCW1heEhlaWdodDogdHJ1ZSwKCQltYXhXaWR0aDogdHJ1ZSwKCQltaW5IZWlnaHQ6IHRydWUsCgkJbWluV2lkdGg6IHRydWUKCX0sCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJdGhpcy5vcmlnaW5hbENzcyA9IHsKCQkJZGlzcGxheTogdGhpcy5lbGVtZW50WyAwIF0uc3R5bGUuZGlzcGxheSwKCQkJd2lkdGg6IHRoaXMuZWxlbWVudFsgMCBdLnN0eWxlLndpZHRoLAoJCQltaW5IZWlnaHQ6IHRoaXMuZWxlbWVudFsgMCBdLnN0eWxlLm1pbkhlaWdodCwKCQkJbWF4SGVpZ2h0OiB0aGlzLmVsZW1lbnRbIDAgXS5zdHlsZS5tYXhIZWlnaHQsCgkJCWhlaWdodDogdGhpcy5lbGVtZW50WyAwIF0uc3R5bGUuaGVpZ2h0CgkJfTsKCQl0aGlzLm9yaWdpbmFsUG9zaXRpb24gPSB7CgkJCXBhcmVudDogdGhpcy5lbGVtZW50LnBhcmVudCgpLAoJCQlpbmRleDogdGhpcy5lbGVtZW50LnBhcmVudCgpLmNoaWxkcmVuKCkuaW5kZXgoIHRoaXMuZWxlbWVudCApCgkJfTsKCQl0aGlzLm9yaWdpbmFsVGl0bGUgPSB0aGlzLmVsZW1lbnQuYXR0ciggInRpdGxlIiApOwoJCWlmICggdGhpcy5vcHRpb25zLnRpdGxlID09IG51bGwgJiYgdGhpcy5vcmlnaW5hbFRpdGxlICE9IG51bGwgKSB7CgkJCXRoaXMub3B0aW9ucy50aXRsZSA9IHRoaXMub3JpZ2luYWxUaXRsZTsKCQl9CgoJCS8vIERpYWxvZ3MgY2FuJ3QgYmUgZGlzYWJsZWQKCQlpZiAoIHRoaXMub3B0aW9ucy5kaXNhYmxlZCApIHsKCQkJdGhpcy5vcHRpb25zLmRpc2FibGVkID0gZmFsc2U7CgkJfQoKCQl0aGlzLl9jcmVhdGVXcmFwcGVyKCk7CgoJCXRoaXMuZWxlbWVudAoJCQkuc2hvdygpCgkJCS5yZW1vdmVBdHRyKCAidGl0bGUiICkKCQkJLmFwcGVuZFRvKCB0aGlzLnVpRGlhbG9nICk7CgoJCXRoaXMuX2FkZENsYXNzKCAidWktZGlhbG9nLWNvbnRlbnQiLCAidWktd2lkZ2V0LWNvbnRlbnQiICk7CgoJCXRoaXMuX2NyZWF0ZVRpdGxlYmFyKCk7CgkJdGhpcy5fY3JlYXRlQnV0dG9uUGFuZSgpOwoKCQlpZiAoIHRoaXMub3B0aW9ucy5kcmFnZ2FibGUgJiYgJC5mbi5kcmFnZ2FibGUgKSB7CgkJCXRoaXMuX21ha2VEcmFnZ2FibGUoKTsKCQl9CgkJaWYgKCB0aGlzLm9wdGlvbnMucmVzaXphYmxlICYmICQuZm4ucmVzaXphYmxlICkgewoJCQl0aGlzLl9tYWtlUmVzaXphYmxlKCk7CgkJfQoKCQl0aGlzLl9pc09wZW4gPSBmYWxzZTsKCgkJdGhpcy5fdHJhY2tGb2N1cygpOwoJfSwKCglfaW5pdDogZnVuY3Rpb24oKSB7CgkJaWYgKCB0aGlzLm9wdGlvbnMuYXV0b09wZW4gKSB7CgkJCXRoaXMub3BlbigpOwoJCX0KCX0sCgoJX2FwcGVuZFRvOiBmdW5jdGlvbigpIHsKCQl2YXIgZWxlbWVudCA9IHRoaXMub3B0aW9ucy5hcHBlbmRUbzsKCQlpZiAoIGVsZW1lbnQgJiYgKCBlbGVtZW50LmpxdWVyeSB8fCBlbGVtZW50Lm5vZGVUeXBlICkgKSB7CgkJCXJldHVybiAkKCBlbGVtZW50ICk7CgkJfQoJCXJldHVybiB0aGlzLmRvY3VtZW50LmZpbmQoIGVsZW1lbnQgfHwgImJvZHkiICkuZXEoIDAgKTsKCX0sCgoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgewoJCXZhciBuZXh0LAoJCQlvcmlnaW5hbFBvc2l0aW9uID0gdGhpcy5vcmlnaW5hbFBvc2l0aW9uOwoKCQl0aGlzLl91bnRyYWNrSW5zdGFuY2UoKTsKCQl0aGlzLl9kZXN0cm95T3ZlcmxheSgpOwoKCQl0aGlzLmVsZW1lbnQKCQkJLnJlbW92ZVVuaXF1ZUlkKCkKCQkJLmNzcyggdGhpcy5vcmlnaW5hbENzcyApCgoJCQkvLyBXaXRob3V0IGRldGFjaGluZyBmaXJzdCwgdGhlIGZvbGxvd2luZyBiZWNvbWVzIHJlYWxseSBzbG93CgkJCS5kZXRhY2goKTsKCgkJdGhpcy51aURpYWxvZy5yZW1vdmUoKTsKCgkJaWYgKCB0aGlzLm9yaWdpbmFsVGl0bGUgKSB7CgkJCXRoaXMuZWxlbWVudC5hdHRyKCAidGl0bGUiLCB0aGlzLm9yaWdpbmFsVGl0bGUgKTsKCQl9CgoJCW5leHQgPSBvcmlnaW5hbFBvc2l0aW9uLnBhcmVudC5jaGlsZHJlbigpLmVxKCBvcmlnaW5hbFBvc2l0aW9uLmluZGV4ICk7CgoJCS8vIERvbid0IHRyeSB0byBwbGFjZSB0aGUgZGlhbG9nIG5leHQgdG8gaXRzZWxmICgjODYxMykKCQlpZiAoIG5leHQubGVuZ3RoICYmIG5leHRbIDAgXSAhPT0gdGhpcy5lbGVtZW50WyAwIF0gKSB7CgkJCW5leHQuYmVmb3JlKCB0aGlzLmVsZW1lbnQgKTsKCQl9IGVsc2UgewoJCQlvcmlnaW5hbFBvc2l0aW9uLnBhcmVudC5hcHBlbmQoIHRoaXMuZWxlbWVudCApOwoJCX0KCX0sCgoJd2lkZ2V0OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy51aURpYWxvZzsKCX0sCgoJZGlzYWJsZTogJC5ub29wLAoJZW5hYmxlOiAkLm5vb3AsCgoJY2xvc2U6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCWlmICggIXRoaXMuX2lzT3BlbiB8fCB0aGlzLl90cmlnZ2VyKCAiYmVmb3JlQ2xvc2UiLCBldmVudCApID09PSBmYWxzZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5faXNPcGVuID0gZmFsc2U7CgkJdGhpcy5fZm9jdXNlZEVsZW1lbnQgPSBudWxsOwoJCXRoaXMuX2Rlc3Ryb3lPdmVybGF5KCk7CgkJdGhpcy5fdW50cmFja0luc3RhbmNlKCk7CgoJCWlmICggIXRoaXMub3BlbmVyLmZpbHRlciggIjpmb2N1c2FibGUiICkudHJpZ2dlciggImZvY3VzIiApLmxlbmd0aCApIHsKCgkJCS8vIEhpZGluZyBhIGZvY3VzZWQgZWxlbWVudCBkb2Vzbid0IHRyaWdnZXIgYmx1ciBpbiBXZWJLaXQKCQkJLy8gc28gaW4gY2FzZSB3ZSBoYXZlIG5vdGhpbmcgdG8gZm9jdXMgb24sIGV4cGxpY2l0bHkgYmx1ciB0aGUgYWN0aXZlIGVsZW1lbnQKCQkJLy8gaHR0cHM6Ly9idWdzLndlYmtpdC5vcmcvc2hvd19idWcuY2dpP2lkPTQ3MTgyCgkJCSQudWkuc2FmZUJsdXIoICQudWkuc2FmZUFjdGl2ZUVsZW1lbnQoIHRoaXMuZG9jdW1lbnRbIDAgXSApICk7CgkJfQoKCQl0aGlzLl9oaWRlKCB0aGlzLnVpRGlhbG9nLCB0aGlzLm9wdGlvbnMuaGlkZSwgZnVuY3Rpb24oKSB7CgkJCXRoYXQuX3RyaWdnZXIoICJjbG9zZSIsIGV2ZW50ICk7CgkJfSApOwoJfSwKCglpc09wZW46IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLl9pc09wZW47Cgl9LAoKCW1vdmVUb1RvcDogZnVuY3Rpb24oKSB7CgkJdGhpcy5fbW92ZVRvVG9wKCk7Cgl9LAoKCV9tb3ZlVG9Ub3A6IGZ1bmN0aW9uKCBldmVudCwgc2lsZW50ICkgewoJCXZhciBtb3ZlZCA9IGZhbHNlLAoJCQl6SW5kaWNlcyA9IHRoaXMudWlEaWFsb2cuc2libGluZ3MoICIudWktZnJvbnQ6dmlzaWJsZSIgKS5tYXAoIGZ1bmN0aW9uKCkgewoJCQkJcmV0dXJuICskKCB0aGlzICkuY3NzKCAiei1pbmRleCIgKTsKCQkJfSApLmdldCgpLAoJCQl6SW5kZXhNYXggPSBNYXRoLm1heC5hcHBseSggbnVsbCwgekluZGljZXMgKTsKCgkJaWYgKCB6SW5kZXhNYXggPj0gK3RoaXMudWlEaWFsb2cuY3NzKCAiei1pbmRleCIgKSApIHsKCQkJdGhpcy51aURpYWxvZy5jc3MoICJ6LWluZGV4IiwgekluZGV4TWF4ICsgMSApOwoJCQltb3ZlZCA9IHRydWU7CgkJfQoKCQlpZiAoIG1vdmVkICYmICFzaWxlbnQgKSB7CgkJCXRoaXMuX3RyaWdnZXIoICJmb2N1cyIsIGV2ZW50ICk7CgkJfQoJCXJldHVybiBtb3ZlZDsKCX0sCgoJb3BlbjogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoJCWlmICggdGhpcy5faXNPcGVuICkgewoJCQlpZiAoIHRoaXMuX21vdmVUb1RvcCgpICkgewoJCQkJdGhpcy5fZm9jdXNUYWJiYWJsZSgpOwoJCQl9CgkJCXJldHVybjsKCQl9CgoJCXRoaXMuX2lzT3BlbiA9IHRydWU7CgkJdGhpcy5vcGVuZXIgPSAkKCAkLnVpLnNhZmVBY3RpdmVFbGVtZW50KCB0aGlzLmRvY3VtZW50WyAwIF0gKSApOwoKCQl0aGlzLl9zaXplKCk7CgkJdGhpcy5fcG9zaXRpb24oKTsKCQl0aGlzLl9jcmVhdGVPdmVybGF5KCk7CgkJdGhpcy5fbW92ZVRvVG9wKCBudWxsLCB0cnVlICk7CgoJCS8vIEVuc3VyZSB0aGUgb3ZlcmxheSBpcyBtb3ZlZCB0byB0aGUgdG9wIHdpdGggdGhlIGRpYWxvZywgYnV0IG9ubHkgd2hlbgoJCS8vIG9wZW5pbmcuIFRoZSBvdmVybGF5IHNob3VsZG4ndCBtb3ZlIGFmdGVyIHRoZSBkaWFsb2cgaXMgb3BlbiBzbyB0aGF0CgkJLy8gbW9kZWxlc3MgZGlhbG9ncyBvcGVuZWQgYWZ0ZXIgdGhlIG1vZGFsIGRpYWxvZyBzdGFjayBwcm9wZXJseS4KCQlpZiAoIHRoaXMub3ZlcmxheSApIHsKCQkJdGhpcy5vdmVybGF5LmNzcyggInotaW5kZXgiLCB0aGlzLnVpRGlhbG9nLmNzcyggInotaW5kZXgiICkgLSAxICk7CgkJfQoKCQl0aGlzLl9zaG93KCB0aGlzLnVpRGlhbG9nLCB0aGlzLm9wdGlvbnMuc2hvdywgZnVuY3Rpb24oKSB7CgkJCXRoYXQuX2ZvY3VzVGFiYmFibGUoKTsKCQkJdGhhdC5fdHJpZ2dlciggImZvY3VzIiApOwoJCX0gKTsKCgkJLy8gVHJhY2sgdGhlIGRpYWxvZyBpbW1lZGlhdGVseSB1cG9uIG9wZW5lbmluZyBpbiBjYXNlIGEgZm9jdXMgZXZlbnQKCQkvLyBzb21laG93IG9jY3VycyBvdXRzaWRlIG9mIHRoZSBkaWFsb2cgYmVmb3JlIGFuIGVsZW1lbnQgaW5zaWRlIHRoZQoJCS8vIGRpYWxvZyBpcyBmb2N1c2VkICgjMTAxNTIpCgkJdGhpcy5fbWFrZUZvY3VzVGFyZ2V0KCk7CgoJCXRoaXMuX3RyaWdnZXIoICJvcGVuIiApOwoJfSwKCglfZm9jdXNUYWJiYWJsZTogZnVuY3Rpb24oKSB7CgoJCS8vIFNldCBmb2N1cyB0byB0aGUgZmlyc3QgbWF0Y2g6CgkJLy8gMS4gQW4gZWxlbWVudCB0aGF0IHdhcyBmb2N1c2VkIHByZXZpb3VzbHkKCQkvLyAyLiBGaXJzdCBlbGVtZW50IGluc2lkZSB0aGUgZGlhbG9nIG1hdGNoaW5nIFthdXRvZm9jdXNdCgkJLy8gMy4gVGFiYmFibGUgZWxlbWVudCBpbnNpZGUgdGhlIGNvbnRlbnQgZWxlbWVudAoJCS8vIDQuIFRhYmJhYmxlIGVsZW1lbnQgaW5zaWRlIHRoZSBidXR0b25wYW5lCgkJLy8gNS4gVGhlIGNsb3NlIGJ1dHRvbgoJCS8vIDYuIFRoZSBkaWFsb2cgaXRzZWxmCgkJdmFyIGhhc0ZvY3VzID0gdGhpcy5fZm9jdXNlZEVsZW1lbnQ7CgkJaWYgKCAhaGFzRm9jdXMgKSB7CgkJCWhhc0ZvY3VzID0gdGhpcy5lbGVtZW50LmZpbmQoICJbYXV0b2ZvY3VzXSIgKTsKCQl9CgkJaWYgKCAhaGFzRm9jdXMubGVuZ3RoICkgewoJCQloYXNGb2N1cyA9IHRoaXMuZWxlbWVudC5maW5kKCAiOnRhYmJhYmxlIiApOwoJCX0KCQlpZiAoICFoYXNGb2N1cy5sZW5ndGggKSB7CgkJCWhhc0ZvY3VzID0gdGhpcy51aURpYWxvZ0J1dHRvblBhbmUuZmluZCggIjp0YWJiYWJsZSIgKTsKCQl9CgkJaWYgKCAhaGFzRm9jdXMubGVuZ3RoICkgewoJCQloYXNGb2N1cyA9IHRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLmZpbHRlciggIjp0YWJiYWJsZSIgKTsKCQl9CgkJaWYgKCAhaGFzRm9jdXMubGVuZ3RoICkgewoJCQloYXNGb2N1cyA9IHRoaXMudWlEaWFsb2c7CgkJfQoJCWhhc0ZvY3VzLmVxKCAwICkudHJpZ2dlciggImZvY3VzIiApOwoJfSwKCglfa2VlcEZvY3VzOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJZnVuY3Rpb24gY2hlY2tGb2N1cygpIHsKCQkJdmFyIGFjdGl2ZUVsZW1lbnQgPSAkLnVpLnNhZmVBY3RpdmVFbGVtZW50KCB0aGlzLmRvY3VtZW50WyAwIF0gKSwKCQkJCWlzQWN0aXZlID0gdGhpcy51aURpYWxvZ1sgMCBdID09PSBhY3RpdmVFbGVtZW50IHx8CgkJCQkJJC5jb250YWlucyggdGhpcy51aURpYWxvZ1sgMCBdLCBhY3RpdmVFbGVtZW50ICk7CgkJCWlmICggIWlzQWN0aXZlICkgewoJCQkJdGhpcy5fZm9jdXNUYWJiYWJsZSgpOwoJCQl9CgkJfQoJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJY2hlY2tGb2N1cy5jYWxsKCB0aGlzICk7CgoJCS8vIHN1cHBvcnQ6IElFCgkJLy8gSUUgPD0gOCBkb2Vzbid0IHByZXZlbnQgbW92aW5nIGZvY3VzIGV2ZW4gd2l0aCBldmVudC5wcmV2ZW50RGVmYXVsdCgpCgkJLy8gc28gd2UgY2hlY2sgYWdhaW4gbGF0ZXIKCQl0aGlzLl9kZWxheSggY2hlY2tGb2N1cyApOwoJfSwKCglfY3JlYXRlV3JhcHBlcjogZnVuY3Rpb24oKSB7CgkJdGhpcy51aURpYWxvZyA9ICQoICI8ZGl2PiIgKQoJCQkuaGlkZSgpCgkJCS5hdHRyKCB7CgoJCQkJLy8gU2V0dGluZyB0YWJJbmRleCBtYWtlcyB0aGUgZGl2IGZvY3VzYWJsZQoJCQkJdGFiSW5kZXg6IC0xLAoJCQkJcm9sZTogImRpYWxvZyIKCQkJfSApCgkJCS5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy51aURpYWxvZywgInVpLWRpYWxvZyIsICJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQgdWktZnJvbnQiICk7CgkJdGhpcy5fb24oIHRoaXMudWlEaWFsb2csIHsKCQkJa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCB0aGlzLm9wdGlvbnMuY2xvc2VPbkVzY2FwZSAmJiAhZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgJiYgZXZlbnQua2V5Q29kZSAmJgoJCQkJCQlldmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuRVNDQVBFICkgewoJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsKCQkJCQlyZXR1cm47CgkJCQl9CgoJCQkJLy8gUHJldmVudCB0YWJiaW5nIG91dCBvZiBkaWFsb2dzCgkJCQlpZiAoIGV2ZW50LmtleUNvZGUgIT09ICQudWkua2V5Q29kZS5UQUIgfHwgZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKSB7CgkJCQkJcmV0dXJuOwoJCQkJfQoJCQkJdmFyIHRhYmJhYmxlcyA9IHRoaXMudWlEaWFsb2cuZmluZCggIjp0YWJiYWJsZSIgKSwKCQkJCQlmaXJzdCA9IHRhYmJhYmxlcy5maWx0ZXIoICI6Zmlyc3QiICksCgkJCQkJbGFzdCA9IHRhYmJhYmxlcy5maWx0ZXIoICI6bGFzdCIgKTsKCgkJCQlpZiAoICggZXZlbnQudGFyZ2V0ID09PSBsYXN0WyAwIF0gfHwgZXZlbnQudGFyZ2V0ID09PSB0aGlzLnVpRGlhbG9nWyAwIF0gKSAmJgoJCQkJCQkhZXZlbnQuc2hpZnRLZXkgKSB7CgkJCQkJdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgewoJCQkJCQlmaXJzdC50cmlnZ2VyKCAiZm9jdXMiICk7CgkJCQkJfSApOwoJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQl9IGVsc2UgaWYgKCAoIGV2ZW50LnRhcmdldCA9PT0gZmlyc3RbIDAgXSB8fAoJCQkJCQlldmVudC50YXJnZXQgPT09IHRoaXMudWlEaWFsb2dbIDAgXSApICYmIGV2ZW50LnNoaWZ0S2V5ICkgewoJCQkJCXRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCQkJbGFzdC50cmlnZ2VyKCAiZm9jdXMiICk7CgkJCQkJfSApOwoJCQkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCQl9CgkJCX0sCgkJCW1vdXNlZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCB0aGlzLl9tb3ZlVG9Ub3AoIGV2ZW50ICkgKSB7CgkJCQkJdGhpcy5fZm9jdXNUYWJiYWJsZSgpOwoJCQkJfQoJCQl9CgkJfSApOwoKCQkvLyBXZSBhc3N1bWUgdGhhdCBhbnkgZXhpc3RpbmcgYXJpYS1kZXNjcmliZWRieSBhdHRyaWJ1dGUgbWVhbnMKCQkvLyB0aGF0IHRoZSBkaWFsb2cgY29udGVudCBpcyBtYXJrZWQgdXAgcHJvcGVybHkKCQkvLyBvdGhlcndpc2Ugd2UgYnJ1dGUgZm9yY2UgdGhlIGNvbnRlbnQgYXMgdGhlIGRlc2NyaXB0aW9uCgkJaWYgKCAhdGhpcy5lbGVtZW50LmZpbmQoICJbYXJpYS1kZXNjcmliZWRieV0iICkubGVuZ3RoICkgewoJCQl0aGlzLnVpRGlhbG9nLmF0dHIoIHsKCQkJCSJhcmlhLWRlc2NyaWJlZGJ5IjogdGhpcy5lbGVtZW50LnVuaXF1ZUlkKCkuYXR0ciggImlkIiApCgkJCX0gKTsKCQl9Cgl9LAoKCV9jcmVhdGVUaXRsZWJhcjogZnVuY3Rpb24oKSB7CgkJdmFyIHVpRGlhbG9nVGl0bGU7CgoJCXRoaXMudWlEaWFsb2dUaXRsZWJhciA9ICQoICI8ZGl2PiIgKTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy51aURpYWxvZ1RpdGxlYmFyLAoJCQkidWktZGlhbG9nLXRpdGxlYmFyIiwgInVpLXdpZGdldC1oZWFkZXIgdWktaGVscGVyLWNsZWFyZml4IiApOwoJCXRoaXMuX29uKCB0aGlzLnVpRGlhbG9nVGl0bGViYXIsIHsKCQkJbW91c2Vkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCQkJLy8gRG9uJ3QgcHJldmVudCBjbGljayBvbiBjbG9zZSBidXR0b24gKCM4ODM4KQoJCQkJLy8gRm9jdXNpbmcgYSBkaWFsb2cgdGhhdCBpcyBwYXJ0aWFsbHkgc2Nyb2xsZWQgb3V0IG9mIHZpZXcKCQkJCS8vIGNhdXNlcyB0aGUgYnJvd3NlciB0byBzY3JvbGwgaXQgaW50byB2aWV3LCBwcmV2ZW50aW5nIHRoZSBjbGljayBldmVudAoJCQkJaWYgKCAhJCggZXZlbnQudGFyZ2V0ICkuY2xvc2VzdCggIi51aS1kaWFsb2ctdGl0bGViYXItY2xvc2UiICkgKSB7CgoJCQkJCS8vIERpYWxvZyBpc24ndCBnZXR0aW5nIGZvY3VzIHdoZW4gZHJhZ2dpbmcgKCM4MDYzKQoJCQkJCXRoaXMudWlEaWFsb2cudHJpZ2dlciggImZvY3VzIiApOwoJCQkJfQoJCQl9CgkJfSApOwoKCQkvLyBTdXBwb3J0OiBJRQoJCS8vIFVzZSB0eXBlPSJidXR0b24iIHRvIHByZXZlbnQgZW50ZXIga2V5cHJlc3NlcyBpbiB0ZXh0Ym94ZXMgZnJvbSBjbG9zaW5nIHRoZQoJCS8vIGRpYWxvZyBpbiBJRSAoIzkzMTIpCgkJdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UgPSAkKCAiPGJ1dHRvbiB0eXBlPSdidXR0b24nPjwvYnV0dG9uPiIgKQoJCQkuYnV0dG9uKCB7CgkJCQlsYWJlbDogJCggIjxhPiIgKS50ZXh0KCB0aGlzLm9wdGlvbnMuY2xvc2VUZXh0ICkuaHRtbCgpLAoJCQkJaWNvbjogInVpLWljb24tY2xvc2V0aGljayIsCgkJCQlzaG93TGFiZWw6IGZhbHNlCgkJCX0gKQoJCQkuYXBwZW5kVG8oIHRoaXMudWlEaWFsb2dUaXRsZWJhciApOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy51aURpYWxvZ1RpdGxlYmFyQ2xvc2UsICJ1aS1kaWFsb2ctdGl0bGViYXItY2xvc2UiICk7CgkJdGhpcy5fb24oIHRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLCB7CgkJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsKCQkJfQoJCX0gKTsKCgkJdWlEaWFsb2dUaXRsZSA9ICQoICI8c3Bhbj4iICkudW5pcXVlSWQoKS5wcmVwZW5kVG8oIHRoaXMudWlEaWFsb2dUaXRsZWJhciApOwoJCXRoaXMuX2FkZENsYXNzKCB1aURpYWxvZ1RpdGxlLCAidWktZGlhbG9nLXRpdGxlIiApOwoJCXRoaXMuX3RpdGxlKCB1aURpYWxvZ1RpdGxlICk7CgoJCXRoaXMudWlEaWFsb2dUaXRsZWJhci5wcmVwZW5kVG8oIHRoaXMudWlEaWFsb2cgKTsKCgkJdGhpcy51aURpYWxvZy5hdHRyKCB7CgkJCSJhcmlhLWxhYmVsbGVkYnkiOiB1aURpYWxvZ1RpdGxlLmF0dHIoICJpZCIgKQoJCX0gKTsKCX0sCgoJX3RpdGxlOiBmdW5jdGlvbiggdGl0bGUgKSB7CgkJaWYgKCB0aGlzLm9wdGlvbnMudGl0bGUgKSB7CgkJCXRpdGxlLnRleHQoIHRoaXMub3B0aW9ucy50aXRsZSApOwoJCX0gZWxzZSB7CgkJCXRpdGxlLmh0bWwoICImIzE2MDsiICk7CgkJfQoJfSwKCglfY3JlYXRlQnV0dG9uUGFuZTogZnVuY3Rpb24oKSB7CgkJdGhpcy51aURpYWxvZ0J1dHRvblBhbmUgPSAkKCAiPGRpdj4iICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudWlEaWFsb2dCdXR0b25QYW5lLCAidWktZGlhbG9nLWJ1dHRvbnBhbmUiLAoJCQkidWktd2lkZ2V0LWNvbnRlbnQgdWktaGVscGVyLWNsZWFyZml4IiApOwoKCQl0aGlzLnVpQnV0dG9uU2V0ID0gJCggIjxkaXY+IiApCgkJCS5hcHBlbmRUbyggdGhpcy51aURpYWxvZ0J1dHRvblBhbmUgKTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy51aUJ1dHRvblNldCwgInVpLWRpYWxvZy1idXR0b25zZXQiICk7CgoJCXRoaXMuX2NyZWF0ZUJ1dHRvbnMoKTsKCX0sCgoJX2NyZWF0ZUJ1dHRvbnM6IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJYnV0dG9ucyA9IHRoaXMub3B0aW9ucy5idXR0b25zOwoKCQkvLyBJZiB3ZSBhbHJlYWR5IGhhdmUgYSBidXR0b24gcGFuZSwgcmVtb3ZlIGl0CgkJdGhpcy51aURpYWxvZ0J1dHRvblBhbmUucmVtb3ZlKCk7CgkJdGhpcy51aUJ1dHRvblNldC5lbXB0eSgpOwoKCQlpZiAoICQuaXNFbXB0eU9iamVjdCggYnV0dG9ucyApIHx8ICggJC5pc0FycmF5KCBidXR0b25zICkgJiYgIWJ1dHRvbnMubGVuZ3RoICkgKSB7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLnVpRGlhbG9nLCAidWktZGlhbG9nLWJ1dHRvbnMiICk7CgkJCXJldHVybjsKCQl9CgoJCSQuZWFjaCggYnV0dG9ucywgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkgewoJCQl2YXIgY2xpY2ssIGJ1dHRvbk9wdGlvbnM7CgkJCXByb3BzID0gJC5pc0Z1bmN0aW9uKCBwcm9wcyApID8KCQkJCXsgY2xpY2s6IHByb3BzLCB0ZXh0OiBuYW1lIH0gOgoJCQkJcHJvcHM7CgoJCQkvLyBEZWZhdWx0IHRvIGEgbm9uLXN1Ym1pdHRpbmcgYnV0dG9uCgkJCXByb3BzID0gJC5leHRlbmQoIHsgdHlwZTogImJ1dHRvbiIgfSwgcHJvcHMgKTsKCgkJCS8vIENoYW5nZSB0aGUgY29udGV4dCBmb3IgdGhlIGNsaWNrIGNhbGxiYWNrIHRvIGJlIHRoZSBtYWluIGVsZW1lbnQKCQkJY2xpY2sgPSBwcm9wcy5jbGljazsKCQkJYnV0dG9uT3B0aW9ucyA9IHsKCQkJCWljb246IHByb3BzLmljb24sCgkJCQlpY29uUG9zaXRpb246IHByb3BzLmljb25Qb3NpdGlvbiwKCQkJCXNob3dMYWJlbDogcHJvcHMuc2hvd0xhYmVsLAoKCQkJCS8vIERlcHJlY2F0ZWQgb3B0aW9ucwoJCQkJaWNvbnM6IHByb3BzLmljb25zLAoJCQkJdGV4dDogcHJvcHMudGV4dAoJCQl9OwoKCQkJZGVsZXRlIHByb3BzLmNsaWNrOwoJCQlkZWxldGUgcHJvcHMuaWNvbjsKCQkJZGVsZXRlIHByb3BzLmljb25Qb3NpdGlvbjsKCQkJZGVsZXRlIHByb3BzLnNob3dMYWJlbDsKCgkJCS8vIERlcHJlY2F0ZWQgb3B0aW9ucwoJCQlkZWxldGUgcHJvcHMuaWNvbnM7CgkJCWlmICggdHlwZW9mIHByb3BzLnRleHQgPT09ICJib29sZWFuIiApIHsKCQkJCWRlbGV0ZSBwcm9wcy50ZXh0OwoJCQl9CgoJCQkkKCAiPGJ1dHRvbj48L2J1dHRvbj4iLCBwcm9wcyApCgkJCQkuYnV0dG9uKCBidXR0b25PcHRpb25zICkKCQkJCS5hcHBlbmRUbyggdGhhdC51aUJ1dHRvblNldCApCgkJCQkub24oICJjbGljayIsIGZ1bmN0aW9uKCkgewoJCQkJCWNsaWNrLmFwcGx5KCB0aGF0LmVsZW1lbnRbIDAgXSwgYXJndW1lbnRzICk7CgkJCQl9ICk7CgkJfSApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLnVpRGlhbG9nLCAidWktZGlhbG9nLWJ1dHRvbnMiICk7CgkJdGhpcy51aURpYWxvZ0J1dHRvblBhbmUuYXBwZW5kVG8oIHRoaXMudWlEaWFsb2cgKTsKCX0sCgoJX21ha2VEcmFnZ2FibGU6IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9uczsKCgkJZnVuY3Rpb24gZmlsdGVyZWRVaSggdWkgKSB7CgkJCXJldHVybiB7CgkJCQlwb3NpdGlvbjogdWkucG9zaXRpb24sCgkJCQlvZmZzZXQ6IHVpLm9mZnNldAoJCQl9OwoJCX0KCgkJdGhpcy51aURpYWxvZy5kcmFnZ2FibGUoIHsKCQkJY2FuY2VsOiAiLnVpLWRpYWxvZy1jb250ZW50LCAudWktZGlhbG9nLXRpdGxlYmFyLWNsb3NlIiwKCQkJaGFuZGxlOiAiLnVpLWRpYWxvZy10aXRsZWJhciIsCgkJCWNvbnRhaW5tZW50OiAiZG9jdW1lbnQiLAoJCQlzdGFydDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsKCQkJCXRoYXQuX2FkZENsYXNzKCAkKCB0aGlzICksICJ1aS1kaWFsb2ctZHJhZ2dpbmciICk7CgkJCQl0aGF0Ll9ibG9ja0ZyYW1lcygpOwoJCQkJdGhhdC5fdHJpZ2dlciggImRyYWdTdGFydCIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7CgkJCX0sCgkJCWRyYWc6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7CgkJCQl0aGF0Ll90cmlnZ2VyKCAiZHJhZyIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7CgkJCX0sCgkJCXN0b3A6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7CgkJCQl2YXIgbGVmdCA9IHVpLm9mZnNldC5sZWZ0IC0gdGhhdC5kb2N1bWVudC5zY3JvbGxMZWZ0KCksCgkJCQkJdG9wID0gdWkub2Zmc2V0LnRvcCAtIHRoYXQuZG9jdW1lbnQuc2Nyb2xsVG9wKCk7CgoJCQkJb3B0aW9ucy5wb3NpdGlvbiA9IHsKCQkJCQlteTogImxlZnQgdG9wIiwKCQkJCQlhdDogImxlZnQiICsgKCBsZWZ0ID49IDAgPyAiKyIgOiAiIiApICsgbGVmdCArICIgIiArCgkJCQkJCSJ0b3AiICsgKCB0b3AgPj0gMCA/ICIrIiA6ICIiICkgKyB0b3AsCgkJCQkJb2Y6IHRoYXQud2luZG93CgkJCQl9OwoJCQkJdGhhdC5fcmVtb3ZlQ2xhc3MoICQoIHRoaXMgKSwgInVpLWRpYWxvZy1kcmFnZ2luZyIgKTsKCQkJCXRoYXQuX3VuYmxvY2tGcmFtZXMoKTsKCQkJCXRoYXQuX3RyaWdnZXIoICJkcmFnU3RvcCIsIGV2ZW50LCBmaWx0ZXJlZFVpKCB1aSApICk7CgkJCX0KCQl9ICk7Cgl9LAoKCV9tYWtlUmVzaXphYmxlOiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnMsCgkJCWhhbmRsZXMgPSBvcHRpb25zLnJlc2l6YWJsZSwKCgkJCS8vIC51aS1yZXNpemFibGUgaGFzIHBvc2l0aW9uOiByZWxhdGl2ZSBkZWZpbmVkIGluIHRoZSBzdHlsZXNoZWV0CgkJCS8vIGJ1dCBkaWFsb2dzIGhhdmUgdG8gdXNlIGFic29sdXRlIG9yIGZpeGVkIHBvc2l0aW9uaW5nCgkJCXBvc2l0aW9uID0gdGhpcy51aURpYWxvZy5jc3MoICJwb3NpdGlvbiIgKSwKCQkJcmVzaXplSGFuZGxlcyA9IHR5cGVvZiBoYW5kbGVzID09PSAic3RyaW5nIiA/CgkJCQloYW5kbGVzIDoKCQkJCSJuLGUscyx3LHNlLHN3LG5lLG53IjsKCgkJZnVuY3Rpb24gZmlsdGVyZWRVaSggdWkgKSB7CgkJCXJldHVybiB7CgkJCQlvcmlnaW5hbFBvc2l0aW9uOiB1aS5vcmlnaW5hbFBvc2l0aW9uLAoJCQkJb3JpZ2luYWxTaXplOiB1aS5vcmlnaW5hbFNpemUsCgkJCQlwb3NpdGlvbjogdWkucG9zaXRpb24sCgkJCQlzaXplOiB1aS5zaXplCgkJCX07CgkJfQoKCQl0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZSggewoJCQljYW5jZWw6ICIudWktZGlhbG9nLWNvbnRlbnQiLAoJCQljb250YWlubWVudDogImRvY3VtZW50IiwKCQkJYWxzb1Jlc2l6ZTogdGhpcy5lbGVtZW50LAoJCQltYXhXaWR0aDogb3B0aW9ucy5tYXhXaWR0aCwKCQkJbWF4SGVpZ2h0OiBvcHRpb25zLm1heEhlaWdodCwKCQkJbWluV2lkdGg6IG9wdGlvbnMubWluV2lkdGgsCgkJCW1pbkhlaWdodDogdGhpcy5fbWluSGVpZ2h0KCksCgkJCWhhbmRsZXM6IHJlc2l6ZUhhbmRsZXMsCgkJCXN0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIHVpICkgewoJCQkJdGhhdC5fYWRkQ2xhc3MoICQoIHRoaXMgKSwgInVpLWRpYWxvZy1yZXNpemluZyIgKTsKCQkJCXRoYXQuX2Jsb2NrRnJhbWVzKCk7CgkJCQl0aGF0Ll90cmlnZ2VyKCAicmVzaXplU3RhcnQiLCBldmVudCwgZmlsdGVyZWRVaSggdWkgKSApOwoJCQl9LAoJCQlyZXNpemU6IGZ1bmN0aW9uKCBldmVudCwgdWkgKSB7CgkJCQl0aGF0Ll90cmlnZ2VyKCAicmVzaXplIiwgZXZlbnQsIGZpbHRlcmVkVWkoIHVpICkgKTsKCQkJfSwKCQkJc3RvcDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsKCQkJCXZhciBvZmZzZXQgPSB0aGF0LnVpRGlhbG9nLm9mZnNldCgpLAoJCQkJCWxlZnQgPSBvZmZzZXQubGVmdCAtIHRoYXQuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpLAoJCQkJCXRvcCA9IG9mZnNldC50b3AgLSB0aGF0LmRvY3VtZW50LnNjcm9sbFRvcCgpOwoKCQkJCW9wdGlvbnMuaGVpZ2h0ID0gdGhhdC51aURpYWxvZy5oZWlnaHQoKTsKCQkJCW9wdGlvbnMud2lkdGggPSB0aGF0LnVpRGlhbG9nLndpZHRoKCk7CgkJCQlvcHRpb25zLnBvc2l0aW9uID0gewoJCQkJCW15OiAibGVmdCB0b3AiLAoJCQkJCWF0OiAibGVmdCIgKyAoIGxlZnQgPj0gMCA/ICIrIiA6ICIiICkgKyBsZWZ0ICsgIiAiICsKCQkJCQkJInRvcCIgKyAoIHRvcCA+PSAwID8gIisiIDogIiIgKSArIHRvcCwKCQkJCQlvZjogdGhhdC53aW5kb3cKCQkJCX07CgkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggJCggdGhpcyApLCAidWktZGlhbG9nLXJlc2l6aW5nIiApOwoJCQkJdGhhdC5fdW5ibG9ja0ZyYW1lcygpOwoJCQkJdGhhdC5fdHJpZ2dlciggInJlc2l6ZVN0b3AiLCBldmVudCwgZmlsdGVyZWRVaSggdWkgKSApOwoJCQl9CgkJfSApCgkJCS5jc3MoICJwb3NpdGlvbiIsIHBvc2l0aW9uICk7Cgl9LAoKCV90cmFja0ZvY3VzOiBmdW5jdGlvbigpIHsKCQl0aGlzLl9vbiggdGhpcy53aWRnZXQoKSwgewoJCQlmb2N1c2luOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQl0aGlzLl9tYWtlRm9jdXNUYXJnZXQoKTsKCQkJCXRoaXMuX2ZvY3VzZWRFbGVtZW50ID0gJCggZXZlbnQudGFyZ2V0ICk7CgkJCX0KCQl9ICk7Cgl9LAoKCV9tYWtlRm9jdXNUYXJnZXQ6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX3VudHJhY2tJbnN0YW5jZSgpOwoJCXRoaXMuX3RyYWNraW5nSW5zdGFuY2VzKCkudW5zaGlmdCggdGhpcyApOwoJfSwKCglfdW50cmFja0luc3RhbmNlOiBmdW5jdGlvbigpIHsKCQl2YXIgaW5zdGFuY2VzID0gdGhpcy5fdHJhY2tpbmdJbnN0YW5jZXMoKSwKCQkJZXhpc3RzID0gJC5pbkFycmF5KCB0aGlzLCBpbnN0YW5jZXMgKTsKCQlpZiAoIGV4aXN0cyAhPT0gLTEgKSB7CgkJCWluc3RhbmNlcy5zcGxpY2UoIGV4aXN0cywgMSApOwoJCX0KCX0sCgoJX3RyYWNraW5nSW5zdGFuY2VzOiBmdW5jdGlvbigpIHsKCQl2YXIgaW5zdGFuY2VzID0gdGhpcy5kb2N1bWVudC5kYXRhKCAidWktZGlhbG9nLWluc3RhbmNlcyIgKTsKCQlpZiAoICFpbnN0YW5jZXMgKSB7CgkJCWluc3RhbmNlcyA9IFtdOwoJCQl0aGlzLmRvY3VtZW50LmRhdGEoICJ1aS1kaWFsb2ctaW5zdGFuY2VzIiwgaW5zdGFuY2VzICk7CgkJfQoJCXJldHVybiBpbnN0YW5jZXM7Cgl9LAoKCV9taW5IZWlnaHQ6IGZ1bmN0aW9uKCkgewoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQlyZXR1cm4gb3B0aW9ucy5oZWlnaHQgPT09ICJhdXRvIiA/CgkJCW9wdGlvbnMubWluSGVpZ2h0IDoKCQkJTWF0aC5taW4oIG9wdGlvbnMubWluSGVpZ2h0LCBvcHRpb25zLmhlaWdodCApOwoJfSwKCglfcG9zaXRpb246IGZ1bmN0aW9uKCkgewoKCQkvLyBOZWVkIHRvIHNob3cgdGhlIGRpYWxvZyB0byBnZXQgdGhlIGFjdHVhbCBvZmZzZXQgaW4gdGhlIHBvc2l0aW9uIHBsdWdpbgoJCXZhciBpc1Zpc2libGUgPSB0aGlzLnVpRGlhbG9nLmlzKCAiOnZpc2libGUiICk7CgkJaWYgKCAhaXNWaXNpYmxlICkgewoJCQl0aGlzLnVpRGlhbG9nLnNob3coKTsKCQl9CgkJdGhpcy51aURpYWxvZy5wb3NpdGlvbiggdGhpcy5vcHRpb25zLnBvc2l0aW9uICk7CgkJaWYgKCAhaXNWaXNpYmxlICkgewoJCQl0aGlzLnVpRGlhbG9nLmhpZGUoKTsKCQl9Cgl9LAoKCV9zZXRPcHRpb25zOiBmdW5jdGlvbiggb3B0aW9ucyApIHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCXJlc2l6ZSA9IGZhbHNlLAoJCQlyZXNpemFibGVPcHRpb25zID0ge307CgoJCSQuZWFjaCggb3B0aW9ucywgZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJCXRoYXQuX3NldE9wdGlvbigga2V5LCB2YWx1ZSApOwoKCQkJaWYgKCBrZXkgaW4gdGhhdC5zaXplUmVsYXRlZE9wdGlvbnMgKSB7CgkJCQlyZXNpemUgPSB0cnVlOwoJCQl9CgkJCWlmICgga2V5IGluIHRoYXQucmVzaXphYmxlUmVsYXRlZE9wdGlvbnMgKSB7CgkJCQlyZXNpemFibGVPcHRpb25zWyBrZXkgXSA9IHZhbHVlOwoJCQl9CgkJfSApOwoKCQlpZiAoIHJlc2l6ZSApIHsKCQkJdGhpcy5fc2l6ZSgpOwoJCQl0aGlzLl9wb3NpdGlvbigpOwoJCX0KCQlpZiAoIHRoaXMudWlEaWFsb2cuaXMoICI6ZGF0YSh1aS1yZXNpemFibGUpIiApICkgewoJCQl0aGlzLnVpRGlhbG9nLnJlc2l6YWJsZSggIm9wdGlvbiIsIHJlc2l6YWJsZU9wdGlvbnMgKTsKCQl9Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCXZhciBpc0RyYWdnYWJsZSwgaXNSZXNpemFibGUsCgkJCXVpRGlhbG9nID0gdGhpcy51aURpYWxvZzsKCgkJaWYgKCBrZXkgPT09ICJkaXNhYmxlZCIgKSB7CgkJCXJldHVybjsKCQl9CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCWlmICgga2V5ID09PSAiYXBwZW5kVG8iICkgewoJCQl0aGlzLnVpRGlhbG9nLmFwcGVuZFRvKCB0aGlzLl9hcHBlbmRUbygpICk7CgkJfQoKCQlpZiAoIGtleSA9PT0gImJ1dHRvbnMiICkgewoJCQl0aGlzLl9jcmVhdGVCdXR0b25zKCk7CgkJfQoKCQlpZiAoIGtleSA9PT0gImNsb3NlVGV4dCIgKSB7CgkJCXRoaXMudWlEaWFsb2dUaXRsZWJhckNsb3NlLmJ1dHRvbiggewoKCQkJCS8vIEVuc3VyZSB0aGF0IHdlIGFsd2F5cyBwYXNzIGEgc3RyaW5nCgkJCQlsYWJlbDogJCggIjxhPiIgKS50ZXh0KCAiIiArIHRoaXMub3B0aW9ucy5jbG9zZVRleHQgKS5odG1sKCkKCQkJfSApOwoJCX0KCgkJaWYgKCBrZXkgPT09ICJkcmFnZ2FibGUiICkgewoJCQlpc0RyYWdnYWJsZSA9IHVpRGlhbG9nLmlzKCAiOmRhdGEodWktZHJhZ2dhYmxlKSIgKTsKCQkJaWYgKCBpc0RyYWdnYWJsZSAmJiAhdmFsdWUgKSB7CgkJCQl1aURpYWxvZy5kcmFnZ2FibGUoICJkZXN0cm95IiApOwoJCQl9CgoJCQlpZiAoICFpc0RyYWdnYWJsZSAmJiB2YWx1ZSApIHsKCQkJCXRoaXMuX21ha2VEcmFnZ2FibGUoKTsKCQkJfQoJCX0KCgkJaWYgKCBrZXkgPT09ICJwb3NpdGlvbiIgKSB7CgkJCXRoaXMuX3Bvc2l0aW9uKCk7CgkJfQoKCQlpZiAoIGtleSA9PT0gInJlc2l6YWJsZSIgKSB7CgoJCQkvLyBjdXJyZW50bHkgcmVzaXphYmxlLCBiZWNvbWluZyBub24tcmVzaXphYmxlCgkJCWlzUmVzaXphYmxlID0gdWlEaWFsb2cuaXMoICI6ZGF0YSh1aS1yZXNpemFibGUpIiApOwoJCQlpZiAoIGlzUmVzaXphYmxlICYmICF2YWx1ZSApIHsKCQkJCXVpRGlhbG9nLnJlc2l6YWJsZSggImRlc3Ryb3kiICk7CgkJCX0KCgkJCS8vIEN1cnJlbnRseSByZXNpemFibGUsIGNoYW5naW5nIGhhbmRsZXMKCQkJaWYgKCBpc1Jlc2l6YWJsZSAmJiB0eXBlb2YgdmFsdWUgPT09ICJzdHJpbmciICkgewoJCQkJdWlEaWFsb2cucmVzaXphYmxlKCAib3B0aW9uIiwgImhhbmRsZXMiLCB2YWx1ZSApOwoJCQl9CgoJCQkvLyBDdXJyZW50bHkgbm9uLXJlc2l6YWJsZSwgYmVjb21pbmcgcmVzaXphYmxlCgkJCWlmICggIWlzUmVzaXphYmxlICYmIHZhbHVlICE9PSBmYWxzZSApIHsKCQkJCXRoaXMuX21ha2VSZXNpemFibGUoKTsKCQkJfQoJCX0KCgkJaWYgKCBrZXkgPT09ICJ0aXRsZSIgKSB7CgkJCXRoaXMuX3RpdGxlKCB0aGlzLnVpRGlhbG9nVGl0bGViYXIuZmluZCggIi51aS1kaWFsb2ctdGl0bGUiICkgKTsKCQl9Cgl9LAoKCV9zaXplOiBmdW5jdGlvbigpIHsKCgkJLy8gSWYgdGhlIHVzZXIgaGFzIHJlc2l6ZWQgdGhlIGRpYWxvZywgdGhlIC51aS1kaWFsb2cgYW5kIC51aS1kaWFsb2ctY29udGVudAoJCS8vIGRpdnMgd2lsbCBib3RoIGhhdmUgd2lkdGggYW5kIGhlaWdodCBzZXQsIHNvIHdlIG5lZWQgdG8gcmVzZXQgdGhlbQoJCXZhciBub25Db250ZW50SGVpZ2h0LCBtaW5Db250ZW50SGVpZ2h0LCBtYXhDb250ZW50SGVpZ2h0LAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQkvLyBSZXNldCBjb250ZW50IHNpemluZwoJCXRoaXMuZWxlbWVudC5zaG93KCkuY3NzKCB7CgkJCXdpZHRoOiAiYXV0byIsCgkJCW1pbkhlaWdodDogMCwKCQkJbWF4SGVpZ2h0OiAibm9uZSIsCgkJCWhlaWdodDogMAoJCX0gKTsKCgkJaWYgKCBvcHRpb25zLm1pbldpZHRoID4gb3B0aW9ucy53aWR0aCApIHsKCQkJb3B0aW9ucy53aWR0aCA9IG9wdGlvbnMubWluV2lkdGg7CgkJfQoKCQkvLyBSZXNldCB3cmFwcGVyIHNpemluZwoJCS8vIGRldGVybWluZSB0aGUgaGVpZ2h0IG9mIGFsbCB0aGUgbm9uLWNvbnRlbnQgZWxlbWVudHMKCQlub25Db250ZW50SGVpZ2h0ID0gdGhpcy51aURpYWxvZy5jc3MoIHsKCQkJaGVpZ2h0OiAiYXV0byIsCgkJCXdpZHRoOiBvcHRpb25zLndpZHRoCgkJfSApCgkJCS5vdXRlckhlaWdodCgpOwoJCW1pbkNvbnRlbnRIZWlnaHQgPSBNYXRoLm1heCggMCwgb3B0aW9ucy5taW5IZWlnaHQgLSBub25Db250ZW50SGVpZ2h0ICk7CgkJbWF4Q29udGVudEhlaWdodCA9IHR5cGVvZiBvcHRpb25zLm1heEhlaWdodCA9PT0gIm51bWJlciIgPwoJCQlNYXRoLm1heCggMCwgb3B0aW9ucy5tYXhIZWlnaHQgLSBub25Db250ZW50SGVpZ2h0ICkgOgoJCQkibm9uZSI7CgoJCWlmICggb3B0aW9ucy5oZWlnaHQgPT09ICJhdXRvIiApIHsKCQkJdGhpcy5lbGVtZW50LmNzcyggewoJCQkJbWluSGVpZ2h0OiBtaW5Db250ZW50SGVpZ2h0LAoJCQkJbWF4SGVpZ2h0OiBtYXhDb250ZW50SGVpZ2h0LAoJCQkJaGVpZ2h0OiAiYXV0byIKCQkJfSApOwoJCX0gZWxzZSB7CgkJCXRoaXMuZWxlbWVudC5oZWlnaHQoIE1hdGgubWF4KCAwLCBvcHRpb25zLmhlaWdodCAtIG5vbkNvbnRlbnRIZWlnaHQgKSApOwoJCX0KCgkJaWYgKCB0aGlzLnVpRGlhbG9nLmlzKCAiOmRhdGEodWktcmVzaXphYmxlKSIgKSApIHsKCQkJdGhpcy51aURpYWxvZy5yZXNpemFibGUoICJvcHRpb24iLCAibWluSGVpZ2h0IiwgdGhpcy5fbWluSGVpZ2h0KCkgKTsKCQl9Cgl9LAoKCV9ibG9ja0ZyYW1lczogZnVuY3Rpb24oKSB7CgkJdGhpcy5pZnJhbWVCbG9ja3MgPSB0aGlzLmRvY3VtZW50LmZpbmQoICJpZnJhbWUiICkubWFwKCBmdW5jdGlvbigpIHsKCQkJdmFyIGlmcmFtZSA9ICQoIHRoaXMgKTsKCgkJCXJldHVybiAkKCAiPGRpdj4iICkKCQkJCS5jc3MoIHsKCQkJCQlwb3NpdGlvbjogImFic29sdXRlIiwKCQkJCQl3aWR0aDogaWZyYW1lLm91dGVyV2lkdGgoKSwKCQkJCQloZWlnaHQ6IGlmcmFtZS5vdXRlckhlaWdodCgpCgkJCQl9ICkKCQkJCS5hcHBlbmRUbyggaWZyYW1lLnBhcmVudCgpICkKCQkJCS5vZmZzZXQoIGlmcmFtZS5vZmZzZXQoKSApWyAwIF07CgkJfSApOwoJfSwKCglfdW5ibG9ja0ZyYW1lczogZnVuY3Rpb24oKSB7CgkJaWYgKCB0aGlzLmlmcmFtZUJsb2NrcyApIHsKCQkJdGhpcy5pZnJhbWVCbG9ja3MucmVtb3ZlKCk7CgkJCWRlbGV0ZSB0aGlzLmlmcmFtZUJsb2NrczsKCQl9Cgl9LAoKCV9hbGxvd0ludGVyYWN0aW9uOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCAkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLWRpYWxvZyIgKS5sZW5ndGggKSB7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJLy8gVE9ETzogUmVtb3ZlIGhhY2sgd2hlbiBkYXRlcGlja2VyIGltcGxlbWVudHMKCQkvLyB0aGUgLnVpLWZyb250IGxvZ2ljICgjODk4OSkKCQlyZXR1cm4gISEkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLWRhdGVwaWNrZXIiICkubGVuZ3RoOwoJfSwKCglfY3JlYXRlT3ZlcmxheTogZnVuY3Rpb24oKSB7CgkJaWYgKCAhdGhpcy5vcHRpb25zLm1vZGFsICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBXZSB1c2UgYSBkZWxheSBpbiBjYXNlIHRoZSBvdmVybGF5IGlzIGNyZWF0ZWQgZnJvbSBhbgoJCS8vIGV2ZW50IHRoYXQgd2UncmUgZ29pbmcgdG8gYmUgY2FuY2VsbGluZyAoIzI4MDQpCgkJdmFyIGlzT3BlbmluZyA9IHRydWU7CgkJdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgewoJCQlpc09wZW5pbmcgPSBmYWxzZTsKCQl9ICk7CgoJCWlmICggIXRoaXMuZG9jdW1lbnQuZGF0YSggInVpLWRpYWxvZy1vdmVybGF5cyIgKSApIHsKCgkJCS8vIFByZXZlbnQgdXNlIG9mIGFuY2hvcnMgYW5kIGlucHV0cwoJCQkvLyBVc2luZyBfb24oKSBmb3IgYW4gZXZlbnQgaGFuZGxlciBzaGFyZWQgYWNyb3NzIG1hbnkgaW5zdGFuY2VzIGlzCgkJCS8vIHNhZmUgYmVjYXVzZSB0aGUgZGlhbG9ncyBzdGFjayBhbmQgbXVzdCBiZSBjbG9zZWQgaW4gcmV2ZXJzZSBvcmRlcgoJCQl0aGlzLl9vbiggdGhpcy5kb2N1bWVudCwgewoJCQkJZm9jdXNpbjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJCWlmICggaXNPcGVuaW5nICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoKCQkJCQlpZiAoICF0aGlzLl9hbGxvd0ludGVyYWN0aW9uKCBldmVudCApICkgewoJCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCQl0aGlzLl90cmFja2luZ0luc3RhbmNlcygpWyAwIF0uX2ZvY3VzVGFiYmFibGUoKTsKCQkJCQl9CgkJCQl9CgkJCX0gKTsKCQl9CgoJCXRoaXMub3ZlcmxheSA9ICQoICI8ZGl2PiIgKQoJCQkuYXBwZW5kVG8oIHRoaXMuX2FwcGVuZFRvKCkgKTsKCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMub3ZlcmxheSwgbnVsbCwgInVpLXdpZGdldC1vdmVybGF5IHVpLWZyb250IiApOwoJCXRoaXMuX29uKCB0aGlzLm92ZXJsYXksIHsKCQkJbW91c2Vkb3duOiAiX2tlZXBGb2N1cyIKCQl9ICk7CgkJdGhpcy5kb2N1bWVudC5kYXRhKCAidWktZGlhbG9nLW92ZXJsYXlzIiwKCQkJKCB0aGlzLmRvY3VtZW50LmRhdGEoICJ1aS1kaWFsb2ctb3ZlcmxheXMiICkgfHwgMCApICsgMSApOwoJfSwKCglfZGVzdHJveU92ZXJsYXk6IGZ1bmN0aW9uKCkgewoJCWlmICggIXRoaXMub3B0aW9ucy5tb2RhbCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCB0aGlzLm92ZXJsYXkgKSB7CgkJCXZhciBvdmVybGF5cyA9IHRoaXMuZG9jdW1lbnQuZGF0YSggInVpLWRpYWxvZy1vdmVybGF5cyIgKSAtIDE7CgoJCQlpZiAoICFvdmVybGF5cyApIHsKCQkJCXRoaXMuX29mZiggdGhpcy5kb2N1bWVudCwgImZvY3VzaW4iICk7CgkJCQl0aGlzLmRvY3VtZW50LnJlbW92ZURhdGEoICJ1aS1kaWFsb2ctb3ZlcmxheXMiICk7CgkJCX0gZWxzZSB7CgkJCQl0aGlzLmRvY3VtZW50LmRhdGEoICJ1aS1kaWFsb2ctb3ZlcmxheXMiLCBvdmVybGF5cyApOwoJCQl9CgoJCQl0aGlzLm92ZXJsYXkucmVtb3ZlKCk7CgkJCXRoaXMub3ZlcmxheSA9IG51bGw7CgkJfQoJfQp9ICk7CgovLyBERVBSRUNBVEVECi8vIFRPRE86IHN3aXRjaCByZXR1cm4gYmFjayB0byB3aWRnZXQgZGVjbGFyYXRpb24gYXQgdG9wIG9mIGZpbGUgd2hlbiB0aGlzIGlzIHJlbW92ZWQKaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgKSB7CgoJLy8gQmFja2NvbXBhdCBmb3IgZGlhbG9nQ2xhc3Mgb3B0aW9uCgkkLndpZGdldCggInVpLmRpYWxvZyIsICQudWkuZGlhbG9nLCB7CgkJb3B0aW9uczogewoJCQlkaWFsb2dDbGFzczogIiIKCQl9LAoJCV9jcmVhdGVXcmFwcGVyOiBmdW5jdGlvbigpIHsKCQkJdGhpcy5fc3VwZXIoKTsKCQkJdGhpcy51aURpYWxvZy5hZGRDbGFzcyggdGhpcy5vcHRpb25zLmRpYWxvZ0NsYXNzICk7CgkJfSwKCQlfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQkJaWYgKCBrZXkgPT09ICJkaWFsb2dDbGFzcyIgKSB7CgkJCQl0aGlzLnVpRGlhbG9nCgkJCQkJLnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuZGlhbG9nQ2xhc3MgKQoJCQkJCS5hZGRDbGFzcyggdmFsdWUgKTsKCQkJfQoJCQl0aGlzLl9zdXBlckFwcGx5KCBhcmd1bWVudHMgKTsKCQl9Cgl9ICk7Cn0KCnZhciB3aWRnZXRzRGlhbG9nID0gJC51aS5kaWFsb2c7CgoKLyohCiAqIGpRdWVyeSBVSSBEcm9wcGFibGUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBEcm9wcGFibGUKLy8+Pmdyb3VwOiBJbnRlcmFjdGlvbnMKLy8+PmRlc2NyaXB0aW9uOiBFbmFibGVzIGRyb3AgdGFyZ2V0cyBmb3IgZHJhZ2dhYmxlIGVsZW1lbnRzLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vZHJvcHBhYmxlLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vZHJvcHBhYmxlLwoKCgokLndpZGdldCggInVpLmRyb3BwYWJsZSIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJd2lkZ2V0RXZlbnRQcmVmaXg6ICJkcm9wIiwKCW9wdGlvbnM6IHsKCQlhY2NlcHQ6ICIqIiwKCQlhZGRDbGFzc2VzOiB0cnVlLAoJCWdyZWVkeTogZmFsc2UsCgkJc2NvcGU6ICJkZWZhdWx0IiwKCQl0b2xlcmFuY2U6ICJpbnRlcnNlY3QiLAoKCQkvLyBDYWxsYmFja3MKCQlhY3RpdmF0ZTogbnVsbCwKCQlkZWFjdGl2YXRlOiBudWxsLAoJCWRyb3A6IG51bGwsCgkJb3V0OiBudWxsLAoJCW92ZXI6IG51bGwKCX0sCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCgkJdmFyIHByb3BvcnRpb25zLAoJCQlvID0gdGhpcy5vcHRpb25zLAoJCQlhY2NlcHQgPSBvLmFjY2VwdDsKCgkJdGhpcy5pc292ZXIgPSBmYWxzZTsKCQl0aGlzLmlzb3V0ID0gdHJ1ZTsKCgkJdGhpcy5hY2NlcHQgPSAkLmlzRnVuY3Rpb24oIGFjY2VwdCApID8gYWNjZXB0IDogZnVuY3Rpb24oIGQgKSB7CgkJCXJldHVybiBkLmlzKCBhY2NlcHQgKTsKCQl9OwoKCQl0aGlzLnByb3BvcnRpb25zID0gZnVuY3Rpb24oIC8qIHZhbHVlVG9Xcml0ZSAqLyApIHsKCQkJaWYgKCBhcmd1bWVudHMubGVuZ3RoICkgewoKCQkJCS8vIFN0b3JlIHRoZSBkcm9wcGFibGUncyBwcm9wb3J0aW9ucwoJCQkJcHJvcG9ydGlvbnMgPSBhcmd1bWVudHNbIDAgXTsKCQkJfSBlbHNlIHsKCgkJCQkvLyBSZXRyaWV2ZSBvciBkZXJpdmUgdGhlIGRyb3BwYWJsZSdzIHByb3BvcnRpb25zCgkJCQlyZXR1cm4gcHJvcG9ydGlvbnMgPwoJCQkJCXByb3BvcnRpb25zIDoKCQkJCQlwcm9wb3J0aW9ucyA9IHsKCQkJCQkJd2lkdGg6IHRoaXMuZWxlbWVudFsgMCBdLm9mZnNldFdpZHRoLAoJCQkJCQloZWlnaHQ6IHRoaXMuZWxlbWVudFsgMCBdLm9mZnNldEhlaWdodAoJCQkJCX07CgkJCX0KCQl9OwoKCQl0aGlzLl9hZGRUb01hbmFnZXIoIG8uc2NvcGUgKTsKCgkJby5hZGRDbGFzc2VzICYmIHRoaXMuX2FkZENsYXNzKCAidWktZHJvcHBhYmxlIiApOwoKCX0sCgoJX2FkZFRvTWFuYWdlcjogZnVuY3Rpb24oIHNjb3BlICkgewoKCQkvLyBBZGQgdGhlIHJlZmVyZW5jZSBhbmQgcG9zaXRpb25zIHRvIHRoZSBtYW5hZ2VyCgkJJC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1sgc2NvcGUgXSA9ICQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbIHNjb3BlIF0gfHwgW107CgkJJC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1sgc2NvcGUgXS5wdXNoKCB0aGlzICk7Cgl9LAoKCV9zcGxpY2U6IGZ1bmN0aW9uKCBkcm9wICkgewoJCXZhciBpID0gMDsKCQlmb3IgKCA7IGkgPCBkcm9wLmxlbmd0aDsgaSsrICkgewoJCQlpZiAoIGRyb3BbIGkgXSA9PT0gdGhpcyApIHsKCQkJCWRyb3Auc3BsaWNlKCBpLCAxICk7CgkJCX0KCQl9Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl2YXIgZHJvcCA9ICQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbIHRoaXMub3B0aW9ucy5zY29wZSBdOwoKCQl0aGlzLl9zcGxpY2UoIGRyb3AgKTsKCX0sCgoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgoJCWlmICgga2V5ID09PSAiYWNjZXB0IiApIHsKCQkJdGhpcy5hY2NlcHQgPSAkLmlzRnVuY3Rpb24oIHZhbHVlICkgPyB2YWx1ZSA6IGZ1bmN0aW9uKCBkICkgewoJCQkJcmV0dXJuIGQuaXMoIHZhbHVlICk7CgkJCX07CgkJfSBlbHNlIGlmICgga2V5ID09PSAic2NvcGUiICkgewoJCQl2YXIgZHJvcCA9ICQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbIHRoaXMub3B0aW9ucy5zY29wZSBdOwoKCQkJdGhpcy5fc3BsaWNlKCBkcm9wICk7CgkJCXRoaXMuX2FkZFRvTWFuYWdlciggdmFsdWUgKTsKCQl9CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7Cgl9LAoKCV9hY3RpdmF0ZTogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBkcmFnZ2FibGUgPSAkLnVpLmRkbWFuYWdlci5jdXJyZW50OwoKCQl0aGlzLl9hZGRBY3RpdmVDbGFzcygpOwoJCWlmICggZHJhZ2dhYmxlICkgewoJCQl0aGlzLl90cmlnZ2VyKCAiYWN0aXZhdGUiLCBldmVudCwgdGhpcy51aSggZHJhZ2dhYmxlICkgKTsKCQl9Cgl9LAoKCV9kZWFjdGl2YXRlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIGRyYWdnYWJsZSA9ICQudWkuZGRtYW5hZ2VyLmN1cnJlbnQ7CgoJCXRoaXMuX3JlbW92ZUFjdGl2ZUNsYXNzKCk7CgkJaWYgKCBkcmFnZ2FibGUgKSB7CgkJCXRoaXMuX3RyaWdnZXIoICJkZWFjdGl2YXRlIiwgZXZlbnQsIHRoaXMudWkoIGRyYWdnYWJsZSApICk7CgkJfQoJfSwKCglfb3ZlcjogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQl2YXIgZHJhZ2dhYmxlID0gJC51aS5kZG1hbmFnZXIuY3VycmVudDsKCgkJLy8gQmFpbCBpZiBkcmFnZ2FibGUgYW5kIGRyb3BwYWJsZSBhcmUgc2FtZSBlbGVtZW50CgkJaWYgKCAhZHJhZ2dhYmxlIHx8ICggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8CgkJCQlkcmFnZ2FibGUuZWxlbWVudCApWyAwIF0gPT09IHRoaXMuZWxlbWVudFsgMCBdICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIHRoaXMuYWNjZXB0LmNhbGwoIHRoaXMuZWxlbWVudFsgMCBdLCAoIGRyYWdnYWJsZS5jdXJyZW50SXRlbSB8fAoJCQkJZHJhZ2dhYmxlLmVsZW1lbnQgKSApICkgewoJCQl0aGlzLl9hZGRIb3ZlckNsYXNzKCk7CgkJCXRoaXMuX3RyaWdnZXIoICJvdmVyIiwgZXZlbnQsIHRoaXMudWkoIGRyYWdnYWJsZSApICk7CgkJfQoKCX0sCgoJX291dDogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQl2YXIgZHJhZ2dhYmxlID0gJC51aS5kZG1hbmFnZXIuY3VycmVudDsKCgkJLy8gQmFpbCBpZiBkcmFnZ2FibGUgYW5kIGRyb3BwYWJsZSBhcmUgc2FtZSBlbGVtZW50CgkJaWYgKCAhZHJhZ2dhYmxlIHx8ICggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8CgkJCQlkcmFnZ2FibGUuZWxlbWVudCApWyAwIF0gPT09IHRoaXMuZWxlbWVudFsgMCBdICkgewoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIHRoaXMuYWNjZXB0LmNhbGwoIHRoaXMuZWxlbWVudFsgMCBdLCAoIGRyYWdnYWJsZS5jdXJyZW50SXRlbSB8fAoJCQkJZHJhZ2dhYmxlLmVsZW1lbnQgKSApICkgewoJCQl0aGlzLl9yZW1vdmVIb3ZlckNsYXNzKCk7CgkJCXRoaXMuX3RyaWdnZXIoICJvdXQiLCBldmVudCwgdGhpcy51aSggZHJhZ2dhYmxlICkgKTsKCQl9CgoJfSwKCglfZHJvcDogZnVuY3Rpb24oIGV2ZW50LCBjdXN0b20gKSB7CgoJCXZhciBkcmFnZ2FibGUgPSBjdXN0b20gfHwgJC51aS5kZG1hbmFnZXIuY3VycmVudCwKCQkJY2hpbGRyZW5JbnRlcnNlY3Rpb24gPSBmYWxzZTsKCgkJLy8gQmFpbCBpZiBkcmFnZ2FibGUgYW5kIGRyb3BwYWJsZSBhcmUgc2FtZSBlbGVtZW50CgkJaWYgKCAhZHJhZ2dhYmxlIHx8ICggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8CgkJCQlkcmFnZ2FibGUuZWxlbWVudCApWyAwIF0gPT09IHRoaXMuZWxlbWVudFsgMCBdICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQl0aGlzLmVsZW1lbnQKCQkJLmZpbmQoICI6ZGF0YSh1aS1kcm9wcGFibGUpIiApCgkJCS5ub3QoICIudWktZHJhZ2dhYmxlLWRyYWdnaW5nIiApCgkJCS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCXZhciBpbnN0ID0gJCggdGhpcyApLmRyb3BwYWJsZSggImluc3RhbmNlIiApOwoJCQkJaWYgKAoJCQkJCWluc3Qub3B0aW9ucy5ncmVlZHkgJiYKCQkJCQkhaW5zdC5vcHRpb25zLmRpc2FibGVkICYmCgkJCQkJaW5zdC5vcHRpb25zLnNjb3BlID09PSBkcmFnZ2FibGUub3B0aW9ucy5zY29wZSAmJgoJCQkJCWluc3QuYWNjZXB0LmNhbGwoCgkJCQkJCWluc3QuZWxlbWVudFsgMCBdLCAoIGRyYWdnYWJsZS5jdXJyZW50SXRlbSB8fCBkcmFnZ2FibGUuZWxlbWVudCApCgkJCQkJKSAmJgoJCQkJCWludGVyc2VjdCgKCQkJCQkJZHJhZ2dhYmxlLAoJCQkJCQkkLmV4dGVuZCggaW5zdCwgeyBvZmZzZXQ6IGluc3QuZWxlbWVudC5vZmZzZXQoKSB9ICksCgkJCQkJCWluc3Qub3B0aW9ucy50b2xlcmFuY2UsIGV2ZW50CgkJCQkJKQoJCQkJKSB7CgkJCQkJY2hpbGRyZW5JbnRlcnNlY3Rpb24gPSB0cnVlOwoJCQkJCXJldHVybiBmYWxzZTsgfQoJCQl9ICk7CgkJaWYgKCBjaGlsZHJlbkludGVyc2VjdGlvbiApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJaWYgKCB0aGlzLmFjY2VwdC5jYWxsKCB0aGlzLmVsZW1lbnRbIDAgXSwKCQkJCSggZHJhZ2dhYmxlLmN1cnJlbnRJdGVtIHx8IGRyYWdnYWJsZS5lbGVtZW50ICkgKSApIHsKCQkJdGhpcy5fcmVtb3ZlQWN0aXZlQ2xhc3MoKTsKCQkJdGhpcy5fcmVtb3ZlSG92ZXJDbGFzcygpOwoKCQkJdGhpcy5fdHJpZ2dlciggImRyb3AiLCBldmVudCwgdGhpcy51aSggZHJhZ2dhYmxlICkgKTsKCQkJcmV0dXJuIHRoaXMuZWxlbWVudDsKCQl9CgoJCXJldHVybiBmYWxzZTsKCgl9LAoKCXVpOiBmdW5jdGlvbiggYyApIHsKCQlyZXR1cm4gewoJCQlkcmFnZ2FibGU6ICggYy5jdXJyZW50SXRlbSB8fCBjLmVsZW1lbnQgKSwKCQkJaGVscGVyOiBjLmhlbHBlciwKCQkJcG9zaXRpb246IGMucG9zaXRpb24sCgkJCW9mZnNldDogYy5wb3NpdGlvbkFicwoJCX07Cgl9LAoKCS8vIEV4dGVuc2lvbiBwb2ludHMganVzdCB0byBtYWtlIGJhY2tjb21wYXQgc2FuZSBhbmQgYXZvaWQgZHVwbGljYXRpbmcgbG9naWMKCS8vIFRPRE86IFJlbW92ZSBpbiAxLjEzIGFsb25nIHdpdGggY2FsbCB0byBpdCBiZWxvdwoJX2FkZEhvdmVyQ2xhc3M6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX2FkZENsYXNzKCAidWktZHJvcHBhYmxlLWhvdmVyIiApOwoJfSwKCglfcmVtb3ZlSG92ZXJDbGFzczogZnVuY3Rpb24oKSB7CgkJdGhpcy5fcmVtb3ZlQ2xhc3MoICJ1aS1kcm9wcGFibGUtaG92ZXIiICk7Cgl9LAoKCV9hZGRBY3RpdmVDbGFzczogZnVuY3Rpb24oKSB7CgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1kcm9wcGFibGUtYWN0aXZlIiApOwoJfSwKCglfcmVtb3ZlQWN0aXZlQ2xhc3M6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX3JlbW92ZUNsYXNzKCAidWktZHJvcHBhYmxlLWFjdGl2ZSIgKTsKCX0KfSApOwoKdmFyIGludGVyc2VjdCA9ICQudWkuaW50ZXJzZWN0ID0gKCBmdW5jdGlvbigpIHsKCWZ1bmN0aW9uIGlzT3ZlckF4aXMoIHgsIHJlZmVyZW5jZSwgc2l6ZSApIHsKCQlyZXR1cm4gKCB4ID49IHJlZmVyZW5jZSApICYmICggeCA8ICggcmVmZXJlbmNlICsgc2l6ZSApICk7Cgl9CgoJcmV0dXJuIGZ1bmN0aW9uKCBkcmFnZ2FibGUsIGRyb3BwYWJsZSwgdG9sZXJhbmNlTW9kZSwgZXZlbnQgKSB7CgoJCWlmICggIWRyb3BwYWJsZS5vZmZzZXQgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXZhciB4MSA9ICggZHJhZ2dhYmxlLnBvc2l0aW9uQWJzIHx8CgkJCQlkcmFnZ2FibGUucG9zaXRpb24uYWJzb2x1dGUgKS5sZWZ0ICsgZHJhZ2dhYmxlLm1hcmdpbnMubGVmdCwKCQkJeTEgPSAoIGRyYWdnYWJsZS5wb3NpdGlvbkFicyB8fAoJCQkJZHJhZ2dhYmxlLnBvc2l0aW9uLmFic29sdXRlICkudG9wICsgZHJhZ2dhYmxlLm1hcmdpbnMudG9wLAoJCQl4MiA9IHgxICsgZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLndpZHRoLAoJCQl5MiA9IHkxICsgZHJhZ2dhYmxlLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCwKCQkJbCA9IGRyb3BwYWJsZS5vZmZzZXQubGVmdCwKCQkJdCA9IGRyb3BwYWJsZS5vZmZzZXQudG9wLAoJCQlyID0gbCArIGRyb3BwYWJsZS5wcm9wb3J0aW9ucygpLndpZHRoLAoJCQliID0gdCArIGRyb3BwYWJsZS5wcm9wb3J0aW9ucygpLmhlaWdodDsKCgkJc3dpdGNoICggdG9sZXJhbmNlTW9kZSApIHsKCQljYXNlICJmaXQiOgoJCQlyZXR1cm4gKCBsIDw9IHgxICYmIHgyIDw9IHIgJiYgdCA8PSB5MSAmJiB5MiA8PSBiICk7CgkJY2FzZSAiaW50ZXJzZWN0IjoKCQkJcmV0dXJuICggbCA8IHgxICsgKCBkcmFnZ2FibGUuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLyAyICkgJiYgLy8gUmlnaHQgSGFsZgoJCQkJeDIgLSAoIGRyYWdnYWJsZS5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAvIDIgKSA8IHIgJiYgLy8gTGVmdCBIYWxmCgkJCQl0IDwgeTEgKyAoIGRyYWdnYWJsZS5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLyAyICkgJiYgLy8gQm90dG9tIEhhbGYKCQkJCXkyIC0gKCBkcmFnZ2FibGUuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC8gMiApIDwgYiApOyAvLyBUb3AgSGFsZgoJCWNhc2UgInBvaW50ZXIiOgoJCQlyZXR1cm4gaXNPdmVyQXhpcyggZXZlbnQucGFnZVksIHQsIGRyb3BwYWJsZS5wcm9wb3J0aW9ucygpLmhlaWdodCApICYmCgkJCQlpc092ZXJBeGlzKCBldmVudC5wYWdlWCwgbCwgZHJvcHBhYmxlLnByb3BvcnRpb25zKCkud2lkdGggKTsKCQljYXNlICJ0b3VjaCI6CgkJCXJldHVybiAoCgkJCQkoIHkxID49IHQgJiYgeTEgPD0gYiApIHx8IC8vIFRvcCBlZGdlIHRvdWNoaW5nCgkJCQkoIHkyID49IHQgJiYgeTIgPD0gYiApIHx8IC8vIEJvdHRvbSBlZGdlIHRvdWNoaW5nCgkJCQkoIHkxIDwgdCAmJiB5MiA+IGIgKSAvLyBTdXJyb3VuZGVkIHZlcnRpY2FsbHkKCQkJKSAmJiAoCgkJCQkoIHgxID49IGwgJiYgeDEgPD0gciApIHx8IC8vIExlZnQgZWRnZSB0b3VjaGluZwoJCQkJKCB4MiA+PSBsICYmIHgyIDw9IHIgKSB8fCAvLyBSaWdodCBlZGdlIHRvdWNoaW5nCgkJCQkoIHgxIDwgbCAmJiB4MiA+IHIgKSAvLyBTdXJyb3VuZGVkIGhvcml6b250YWxseQoJCQkpOwoJCWRlZmF1bHQ6CgkJCXJldHVybiBmYWxzZTsKCQl9Cgl9Owp9ICkoKTsKCi8qCglUaGlzIG1hbmFnZXIgdHJhY2tzIG9mZnNldHMgb2YgZHJhZ2dhYmxlcyBhbmQgZHJvcHBhYmxlcwoqLwokLnVpLmRkbWFuYWdlciA9IHsKCWN1cnJlbnQ6IG51bGwsCglkcm9wcGFibGVzOiB7ICJkZWZhdWx0IjogW10gfSwKCXByZXBhcmVPZmZzZXRzOiBmdW5jdGlvbiggdCwgZXZlbnQgKSB7CgoJCXZhciBpLCBqLAoJCQltID0gJC51aS5kZG1hbmFnZXIuZHJvcHBhYmxlc1sgdC5vcHRpb25zLnNjb3BlIF0gfHwgW10sCgkJCXR5cGUgPSBldmVudCA/IGV2ZW50LnR5cGUgOiBudWxsLCAvLyB3b3JrYXJvdW5kIGZvciAjMjMxNwoJCQlsaXN0ID0gKCB0LmN1cnJlbnRJdGVtIHx8IHQuZWxlbWVudCApLmZpbmQoICI6ZGF0YSh1aS1kcm9wcGFibGUpIiApLmFkZEJhY2soKTsKCgkJZHJvcHBhYmxlc0xvb3A6IGZvciAoIGkgPSAwOyBpIDwgbS5sZW5ndGg7IGkrKyApIHsKCgkJCS8vIE5vIGRpc2FibGVkIGFuZCBub24tYWNjZXB0ZWQKCQkJaWYgKCBtWyBpIF0ub3B0aW9ucy5kaXNhYmxlZCB8fCAoIHQgJiYgIW1bIGkgXS5hY2NlcHQuY2FsbCggbVsgaSBdLmVsZW1lbnRbIDAgXSwKCQkJCQkoIHQuY3VycmVudEl0ZW0gfHwgdC5lbGVtZW50ICkgKSApICkgewoJCQkJY29udGludWU7CgkJCX0KCgkJCS8vIEZpbHRlciBvdXQgZWxlbWVudHMgaW4gdGhlIGN1cnJlbnQgZHJhZ2dlZCBpdGVtCgkJCWZvciAoIGogPSAwOyBqIDwgbGlzdC5sZW5ndGg7IGorKyApIHsKCQkJCWlmICggbGlzdFsgaiBdID09PSBtWyBpIF0uZWxlbWVudFsgMCBdICkgewoJCQkJCW1bIGkgXS5wcm9wb3J0aW9ucygpLmhlaWdodCA9IDA7CgkJCQkJY29udGludWUgZHJvcHBhYmxlc0xvb3A7CgkJCQl9CgkJCX0KCgkJCW1bIGkgXS52aXNpYmxlID0gbVsgaSBdLmVsZW1lbnQuY3NzKCAiZGlzcGxheSIgKSAhPT0gIm5vbmUiOwoJCQlpZiAoICFtWyBpIF0udmlzaWJsZSApIHsKCQkJCWNvbnRpbnVlOwoJCQl9CgoJCQkvLyBBY3RpdmF0ZSB0aGUgZHJvcHBhYmxlIGlmIHVzZWQgZGlyZWN0bHkgZnJvbSBkcmFnZ2FibGVzCgkJCWlmICggdHlwZSA9PT0gIm1vdXNlZG93biIgKSB7CgkJCQltWyBpIF0uX2FjdGl2YXRlLmNhbGwoIG1bIGkgXSwgZXZlbnQgKTsKCQkJfQoKCQkJbVsgaSBdLm9mZnNldCA9IG1bIGkgXS5lbGVtZW50Lm9mZnNldCgpOwoJCQltWyBpIF0ucHJvcG9ydGlvbnMoIHsKCQkJCXdpZHRoOiBtWyBpIF0uZWxlbWVudFsgMCBdLm9mZnNldFdpZHRoLAoJCQkJaGVpZ2h0OiBtWyBpIF0uZWxlbWVudFsgMCBdLm9mZnNldEhlaWdodAoJCQl9ICk7CgoJCX0KCgl9LAoJZHJvcDogZnVuY3Rpb24oIGRyYWdnYWJsZSwgZXZlbnQgKSB7CgoJCXZhciBkcm9wcGVkID0gZmFsc2U7CgoJCS8vIENyZWF0ZSBhIGNvcHkgb2YgdGhlIGRyb3BwYWJsZXMgaW4gY2FzZSB0aGUgbGlzdCBjaGFuZ2VzIGR1cmluZyB0aGUgZHJvcCAoIzkxMTYpCgkJJC5lYWNoKCAoICQudWkuZGRtYW5hZ2VyLmRyb3BwYWJsZXNbIGRyYWdnYWJsZS5vcHRpb25zLnNjb3BlIF0gfHwgW10gKS5zbGljZSgpLCBmdW5jdGlvbigpIHsKCgkJCWlmICggIXRoaXMub3B0aW9ucyApIHsKCQkJCXJldHVybjsKCQkJfQoJCQlpZiAoICF0aGlzLm9wdGlvbnMuZGlzYWJsZWQgJiYgdGhpcy52aXNpYmxlICYmCgkJCQkJaW50ZXJzZWN0KCBkcmFnZ2FibGUsIHRoaXMsIHRoaXMub3B0aW9ucy50b2xlcmFuY2UsIGV2ZW50ICkgKSB7CgkJCQlkcm9wcGVkID0gdGhpcy5fZHJvcC5jYWxsKCB0aGlzLCBldmVudCApIHx8IGRyb3BwZWQ7CgkJCX0KCgkJCWlmICggIXRoaXMub3B0aW9ucy5kaXNhYmxlZCAmJiB0aGlzLnZpc2libGUgJiYgdGhpcy5hY2NlcHQuY2FsbCggdGhpcy5lbGVtZW50WyAwIF0sCgkJCQkJKCBkcmFnZ2FibGUuY3VycmVudEl0ZW0gfHwgZHJhZ2dhYmxlLmVsZW1lbnQgKSApICkgewoJCQkJdGhpcy5pc291dCA9IHRydWU7CgkJCQl0aGlzLmlzb3ZlciA9IGZhbHNlOwoJCQkJdGhpcy5fZGVhY3RpdmF0ZS5jYWxsKCB0aGlzLCBldmVudCApOwoJCQl9CgoJCX0gKTsKCQlyZXR1cm4gZHJvcHBlZDsKCgl9LAoJZHJhZ1N0YXJ0OiBmdW5jdGlvbiggZHJhZ2dhYmxlLCBldmVudCApIHsKCgkJLy8gTGlzdGVuIGZvciBzY3JvbGxpbmcgc28gdGhhdCBpZiB0aGUgZHJhZ2dpbmcgY2F1c2VzIHNjcm9sbGluZyB0aGUgcG9zaXRpb24gb2YgdGhlCgkJLy8gZHJvcHBhYmxlcyBjYW4gYmUgcmVjYWxjdWxhdGVkIChzZWUgIzUwMDMpCgkJZHJhZ2dhYmxlLmVsZW1lbnQucGFyZW50c1VudGlsKCAiYm9keSIgKS5vbiggInNjcm9sbC5kcm9wcGFibGUiLCBmdW5jdGlvbigpIHsKCQkJaWYgKCAhZHJhZ2dhYmxlLm9wdGlvbnMucmVmcmVzaFBvc2l0aW9ucyApIHsKCQkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKCBkcmFnZ2FibGUsIGV2ZW50ICk7CgkJCX0KCQl9ICk7Cgl9LAoJZHJhZzogZnVuY3Rpb24oIGRyYWdnYWJsZSwgZXZlbnQgKSB7CgoJCS8vIElmIHlvdSBoYXZlIGEgaGlnaGx5IGR5bmFtaWMgcGFnZSwgeW91IG1pZ2h0IHRyeSB0aGlzIG9wdGlvbi4gSXQgcmVuZGVycyBwb3NpdGlvbnMKCQkvLyBldmVyeSB0aW1lIHlvdSBtb3ZlIHRoZSBtb3VzZS4KCQlpZiAoIGRyYWdnYWJsZS5vcHRpb25zLnJlZnJlc2hQb3NpdGlvbnMgKSB7CgkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKCBkcmFnZ2FibGUsIGV2ZW50ICk7CgkJfQoKCQkvLyBSdW4gdGhyb3VnaCBhbGwgZHJvcHBhYmxlcyBhbmQgY2hlY2sgdGhlaXIgcG9zaXRpb25zIGJhc2VkIG9uIHNwZWNpZmljIHRvbGVyYW5jZSBvcHRpb25zCgkJJC5lYWNoKCAkLnVpLmRkbWFuYWdlci5kcm9wcGFibGVzWyBkcmFnZ2FibGUub3B0aW9ucy5zY29wZSBdIHx8IFtdLCBmdW5jdGlvbigpIHsKCgkJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkIHx8IHRoaXMuZ3JlZWR5Q2hpbGQgfHwgIXRoaXMudmlzaWJsZSApIHsKCQkJCXJldHVybjsKCQkJfQoKCQkJdmFyIHBhcmVudEluc3RhbmNlLCBzY29wZSwgcGFyZW50LAoJCQkJaW50ZXJzZWN0cyA9IGludGVyc2VjdCggZHJhZ2dhYmxlLCB0aGlzLCB0aGlzLm9wdGlvbnMudG9sZXJhbmNlLCBldmVudCApLAoJCQkJYyA9ICFpbnRlcnNlY3RzICYmIHRoaXMuaXNvdmVyID8KCQkJCQkiaXNvdXQiIDoKCQkJCQkoIGludGVyc2VjdHMgJiYgIXRoaXMuaXNvdmVyID8gImlzb3ZlciIgOiBudWxsICk7CgkJCWlmICggIWMgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCWlmICggdGhpcy5vcHRpb25zLmdyZWVkeSApIHsKCgkJCQkvLyBmaW5kIGRyb3BwYWJsZSBwYXJlbnRzIHdpdGggc2FtZSBzY29wZQoJCQkJc2NvcGUgPSB0aGlzLm9wdGlvbnMuc2NvcGU7CgkJCQlwYXJlbnQgPSB0aGlzLmVsZW1lbnQucGFyZW50cyggIjpkYXRhKHVpLWRyb3BwYWJsZSkiICkuZmlsdGVyKCBmdW5jdGlvbigpIHsKCQkJCQlyZXR1cm4gJCggdGhpcyApLmRyb3BwYWJsZSggImluc3RhbmNlIiApLm9wdGlvbnMuc2NvcGUgPT09IHNjb3BlOwoJCQkJfSApOwoKCQkJCWlmICggcGFyZW50Lmxlbmd0aCApIHsKCQkJCQlwYXJlbnRJbnN0YW5jZSA9ICQoIHBhcmVudFsgMCBdICkuZHJvcHBhYmxlKCAiaW5zdGFuY2UiICk7CgkJCQkJcGFyZW50SW5zdGFuY2UuZ3JlZWR5Q2hpbGQgPSAoIGMgPT09ICJpc292ZXIiICk7CgkJCQl9CgkJCX0KCgkJCS8vIFdlIGp1c3QgbW92ZWQgaW50byBhIGdyZWVkeSBjaGlsZAoJCQlpZiAoIHBhcmVudEluc3RhbmNlICYmIGMgPT09ICJpc292ZXIiICkgewoJCQkJcGFyZW50SW5zdGFuY2UuaXNvdmVyID0gZmFsc2U7CgkJCQlwYXJlbnRJbnN0YW5jZS5pc291dCA9IHRydWU7CgkJCQlwYXJlbnRJbnN0YW5jZS5fb3V0LmNhbGwoIHBhcmVudEluc3RhbmNlLCBldmVudCApOwoJCQl9CgoJCQl0aGlzWyBjIF0gPSB0cnVlOwoJCQl0aGlzWyBjID09PSAiaXNvdXQiID8gImlzb3ZlciIgOiAiaXNvdXQiIF0gPSBmYWxzZTsKCQkJdGhpc1sgYyA9PT0gImlzb3ZlciIgPyAiX292ZXIiIDogIl9vdXQiIF0uY2FsbCggdGhpcywgZXZlbnQgKTsKCgkJCS8vIFdlIGp1c3QgbW92ZWQgb3V0IG9mIGEgZ3JlZWR5IGNoaWxkCgkJCWlmICggcGFyZW50SW5zdGFuY2UgJiYgYyA9PT0gImlzb3V0IiApIHsKCQkJCXBhcmVudEluc3RhbmNlLmlzb3V0ID0gZmFsc2U7CgkJCQlwYXJlbnRJbnN0YW5jZS5pc292ZXIgPSB0cnVlOwoJCQkJcGFyZW50SW5zdGFuY2UuX292ZXIuY2FsbCggcGFyZW50SW5zdGFuY2UsIGV2ZW50ICk7CgkJCX0KCQl9ICk7CgoJfSwKCWRyYWdTdG9wOiBmdW5jdGlvbiggZHJhZ2dhYmxlLCBldmVudCApIHsKCQlkcmFnZ2FibGUuZWxlbWVudC5wYXJlbnRzVW50aWwoICJib2R5IiApLm9mZiggInNjcm9sbC5kcm9wcGFibGUiICk7CgoJCS8vIENhbGwgcHJlcGFyZU9mZnNldHMgb25lIGZpbmFsIHRpbWUgc2luY2UgSUUgZG9lcyBub3QgZmlyZSByZXR1cm4gc2Nyb2xsIGV2ZW50cyB3aGVuCgkJLy8gb3ZlcmZsb3cgd2FzIGNhdXNlZCBieSBkcmFnIChzZWUgIzUwMDMpCgkJaWYgKCAhZHJhZ2dhYmxlLm9wdGlvbnMucmVmcmVzaFBvc2l0aW9ucyApIHsKCQkJJC51aS5kZG1hbmFnZXIucHJlcGFyZU9mZnNldHMoIGRyYWdnYWJsZSwgZXZlbnQgKTsKCQl9Cgl9Cn07CgovLyBERVBSRUNBVEVECi8vIFRPRE86IHN3aXRjaCByZXR1cm4gYmFjayB0byB3aWRnZXQgZGVjbGFyYXRpb24gYXQgdG9wIG9mIGZpbGUgd2hlbiB0aGlzIGlzIHJlbW92ZWQKaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgKSB7CgoJLy8gQmFja2NvbXBhdCBmb3IgYWN0aXZlQ2xhc3MgYW5kIGhvdmVyQ2xhc3Mgb3B0aW9ucwoJJC53aWRnZXQoICJ1aS5kcm9wcGFibGUiLCAkLnVpLmRyb3BwYWJsZSwgewoJCW9wdGlvbnM6IHsKCQkJaG92ZXJDbGFzczogZmFsc2UsCgkJCWFjdGl2ZUNsYXNzOiBmYWxzZQoJCX0sCgkJX2FkZEFjdGl2ZUNsYXNzOiBmdW5jdGlvbigpIHsKCQkJdGhpcy5fc3VwZXIoKTsKCQkJaWYgKCB0aGlzLm9wdGlvbnMuYWN0aXZlQ2xhc3MgKSB7CgkJCQl0aGlzLmVsZW1lbnQuYWRkQ2xhc3MoIHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcyApOwoJCQl9CgkJfSwKCQlfcmVtb3ZlQWN0aXZlQ2xhc3M6IGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9zdXBlcigpOwoJCQlpZiAoIHRoaXMub3B0aW9ucy5hY3RpdmVDbGFzcyApIHsKCQkJCXRoaXMuZWxlbWVudC5yZW1vdmVDbGFzcyggdGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzICk7CgkJCX0KCQl9LAoJCV9hZGRIb3ZlckNsYXNzOiBmdW5jdGlvbigpIHsKCQkJdGhpcy5fc3VwZXIoKTsKCQkJaWYgKCB0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyApIHsKCQkJCXRoaXMuZWxlbWVudC5hZGRDbGFzcyggdGhpcy5vcHRpb25zLmhvdmVyQ2xhc3MgKTsKCQkJfQoJCX0sCgkJX3JlbW92ZUhvdmVyQ2xhc3M6IGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9zdXBlcigpOwoJCQlpZiAoIHRoaXMub3B0aW9ucy5ob3ZlckNsYXNzICkgewoJCQkJdGhpcy5lbGVtZW50LnJlbW92ZUNsYXNzKCB0aGlzLm9wdGlvbnMuaG92ZXJDbGFzcyApOwoJCQl9CgkJfQoJfSApOwp9Cgp2YXIgd2lkZ2V0c0Ryb3BwYWJsZSA9ICQudWkuZHJvcHBhYmxlOwoKCi8qIQogKiBqUXVlcnkgVUkgUHJvZ3Jlc3NiYXIgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBQcm9ncmVzc2JhcgovLz4+Z3JvdXA6IFdpZGdldHMKLy8ganNjczpkaXNhYmxlIG1heGltdW1MaW5lTGVuZ3RoCi8vPj5kZXNjcmlwdGlvbjogRGlzcGxheXMgYSBzdGF0dXMgaW5kaWNhdG9yIGZvciBsb2FkaW5nIHN0YXRlLCBzdGFuZGFyZCBwZXJjZW50YWdlLCBhbmQgb3RoZXIgcHJvZ3Jlc3MgaW5kaWNhdG9ycy4KLy8ganNjczplbmFibGUgbWF4aW11bUxpbmVMZW5ndGgKLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3Byb2dyZXNzYmFyLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vcHJvZ3Jlc3NiYXIvCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvcHJvZ3Jlc3NiYXIuY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgp2YXIgd2lkZ2V0c1Byb2dyZXNzYmFyID0gJC53aWRnZXQoICJ1aS5wcm9ncmVzc2JhciIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJb3B0aW9uczogewoJCWNsYXNzZXM6IHsKCQkJInVpLXByb2dyZXNzYmFyIjogInVpLWNvcm5lci1hbGwiLAoJCQkidWktcHJvZ3Jlc3NiYXItdmFsdWUiOiAidWktY29ybmVyLWxlZnQiLAoJCQkidWktcHJvZ3Jlc3NiYXItY29tcGxldGUiOiAidWktY29ybmVyLXJpZ2h0IgoJCX0sCgkJbWF4OiAxMDAsCgkJdmFsdWU6IDAsCgoJCWNoYW5nZTogbnVsbCwKCQljb21wbGV0ZTogbnVsbAoJfSwKCgltaW46IDAsCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgoJCS8vIENvbnN0cmFpbiBpbml0aWFsIHZhbHVlCgkJdGhpcy5vbGRWYWx1ZSA9IHRoaXMub3B0aW9ucy52YWx1ZSA9IHRoaXMuX2NvbnN0cmFpbmVkVmFsdWUoKTsKCgkJdGhpcy5lbGVtZW50LmF0dHIoIHsKCgkJCS8vIE9ubHkgc2V0IHN0YXRpYyB2YWx1ZXM7IGFyaWEtdmFsdWVub3cgYW5kIGFyaWEtdmFsdWVtYXggYXJlCgkJCS8vIHNldCBpbnNpZGUgX3JlZnJlc2hWYWx1ZSgpCgkJCXJvbGU6ICJwcm9ncmVzc2JhciIsCgkJCSJhcmlhLXZhbHVlbWluIjogdGhpcy5taW4KCQl9ICk7CgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1wcm9ncmVzc2JhciIsICJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQiICk7CgoJCXRoaXMudmFsdWVEaXYgPSAkKCAiPGRpdj4iICkuYXBwZW5kVG8oIHRoaXMuZWxlbWVudCApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLnZhbHVlRGl2LCAidWktcHJvZ3Jlc3NiYXItdmFsdWUiLCAidWktd2lkZ2V0LWhlYWRlciIgKTsKCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCX0sCgoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgewoJCXRoaXMuZWxlbWVudC5yZW1vdmVBdHRyKCAicm9sZSBhcmlhLXZhbHVlbWluIGFyaWEtdmFsdWVtYXggYXJpYS12YWx1ZW5vdyIgKTsKCgkJdGhpcy52YWx1ZURpdi5yZW1vdmUoKTsKCX0sCgoJdmFsdWU6IGZ1bmN0aW9uKCBuZXdWYWx1ZSApIHsKCQlpZiAoIG5ld1ZhbHVlID09PSB1bmRlZmluZWQgKSB7CgkJCXJldHVybiB0aGlzLm9wdGlvbnMudmFsdWU7CgkJfQoKCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlzLl9jb25zdHJhaW5lZFZhbHVlKCBuZXdWYWx1ZSApOwoJCXRoaXMuX3JlZnJlc2hWYWx1ZSgpOwoJfSwKCglfY29uc3RyYWluZWRWYWx1ZTogZnVuY3Rpb24oIG5ld1ZhbHVlICkgewoJCWlmICggbmV3VmFsdWUgPT09IHVuZGVmaW5lZCApIHsKCQkJbmV3VmFsdWUgPSB0aGlzLm9wdGlvbnMudmFsdWU7CgkJfQoKCQl0aGlzLmluZGV0ZXJtaW5hdGUgPSBuZXdWYWx1ZSA9PT0gZmFsc2U7CgoJCS8vIFNhbml0aXplIHZhbHVlCgkJaWYgKCB0eXBlb2YgbmV3VmFsdWUgIT09ICJudW1iZXIiICkgewoJCQluZXdWYWx1ZSA9IDA7CgkJfQoKCQlyZXR1cm4gdGhpcy5pbmRldGVybWluYXRlID8gZmFsc2UgOgoJCQlNYXRoLm1pbiggdGhpcy5vcHRpb25zLm1heCwgTWF0aC5tYXgoIHRoaXMubWluLCBuZXdWYWx1ZSApICk7Cgl9LAoKCV9zZXRPcHRpb25zOiBmdW5jdGlvbiggb3B0aW9ucyApIHsKCgkJLy8gRW5zdXJlICJ2YWx1ZSIgb3B0aW9uIGlzIHNldCBhZnRlciBvdGhlciB2YWx1ZXMgKGxpa2UgbWF4KQoJCXZhciB2YWx1ZSA9IG9wdGlvbnMudmFsdWU7CgkJZGVsZXRlIG9wdGlvbnMudmFsdWU7CgoJCXRoaXMuX3N1cGVyKCBvcHRpb25zICk7CgoJCXRoaXMub3B0aW9ucy52YWx1ZSA9IHRoaXMuX2NvbnN0cmFpbmVkVmFsdWUoIHZhbHVlICk7CgkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCWlmICgga2V5ID09PSAibWF4IiApIHsKCgkJCS8vIERvbid0IGFsbG93IGEgbWF4IGxlc3MgdGhhbiBtaW4KCQkJdmFsdWUgPSBNYXRoLm1heCggdGhpcy5taW4sIHZhbHVlICk7CgkJfQoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7Cgl9LAoKCV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIHZhbHVlICkgewoJCXRoaXMuX3N1cGVyKCB2YWx1ZSApOwoKCQl0aGlzLmVsZW1lbnQuYXR0ciggImFyaWEtZGlzYWJsZWQiLCB2YWx1ZSApOwoJCXRoaXMuX3RvZ2dsZUNsYXNzKCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7Cgl9LAoKCV9wZXJjZW50YWdlOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5pbmRldGVybWluYXRlID8KCQkJMTAwIDoKCQkJMTAwICogKCB0aGlzLm9wdGlvbnMudmFsdWUgLSB0aGlzLm1pbiApIC8gKCB0aGlzLm9wdGlvbnMubWF4IC0gdGhpcy5taW4gKTsKCX0sCgoJX3JlZnJlc2hWYWx1ZTogZnVuY3Rpb24oKSB7CgkJdmFyIHZhbHVlID0gdGhpcy5vcHRpb25zLnZhbHVlLAoJCQlwZXJjZW50YWdlID0gdGhpcy5fcGVyY2VudGFnZSgpOwoKCQl0aGlzLnZhbHVlRGl2CgkJCS50b2dnbGUoIHRoaXMuaW5kZXRlcm1pbmF0ZSB8fCB2YWx1ZSA+IHRoaXMubWluICkKCQkJLndpZHRoKCBwZXJjZW50YWdlLnRvRml4ZWQoIDAgKSArICIlIiApOwoKCQl0aGlzCgkJCS5fdG9nZ2xlQ2xhc3MoIHRoaXMudmFsdWVEaXYsICJ1aS1wcm9ncmVzc2Jhci1jb21wbGV0ZSIsIG51bGwsCgkJCQl2YWx1ZSA9PT0gdGhpcy5vcHRpb25zLm1heCApCgkJCS5fdG9nZ2xlQ2xhc3MoICJ1aS1wcm9ncmVzc2Jhci1pbmRldGVybWluYXRlIiwgbnVsbCwgdGhpcy5pbmRldGVybWluYXRlICk7CgoJCWlmICggdGhpcy5pbmRldGVybWluYXRlICkgewoJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggImFyaWEtdmFsdWVub3ciICk7CgkJCWlmICggIXRoaXMub3ZlcmxheURpdiApIHsKCQkJCXRoaXMub3ZlcmxheURpdiA9ICQoICI8ZGl2PiIgKS5hcHBlbmRUbyggdGhpcy52YWx1ZURpdiApOwoJCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMub3ZlcmxheURpdiwgInVpLXByb2dyZXNzYmFyLW92ZXJsYXkiICk7CgkJCX0KCQl9IGVsc2UgewoJCQl0aGlzLmVsZW1lbnQuYXR0ciggewoJCQkJImFyaWEtdmFsdWVtYXgiOiB0aGlzLm9wdGlvbnMubWF4LAoJCQkJImFyaWEtdmFsdWVub3ciOiB2YWx1ZQoJCQl9ICk7CgkJCWlmICggdGhpcy5vdmVybGF5RGl2ICkgewoJCQkJdGhpcy5vdmVybGF5RGl2LnJlbW92ZSgpOwoJCQkJdGhpcy5vdmVybGF5RGl2ID0gbnVsbDsKCQkJfQoJCX0KCgkJaWYgKCB0aGlzLm9sZFZhbHVlICE9PSB2YWx1ZSApIHsKCQkJdGhpcy5vbGRWYWx1ZSA9IHZhbHVlOwoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiApOwoJCX0KCQlpZiAoIHZhbHVlID09PSB0aGlzLm9wdGlvbnMubWF4ICkgewoJCQl0aGlzLl90cmlnZ2VyKCAiY29tcGxldGUiICk7CgkJfQoJfQp9ICk7CgoKLyohCiAqIGpRdWVyeSBVSSBTZWxlY3RhYmxlIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogU2VsZWN0YWJsZQovLz4+Z3JvdXA6IEludGVyYWN0aW9ucwovLz4+ZGVzY3JpcHRpb246IEFsbG93cyBncm91cHMgb2YgZWxlbWVudHMgdG8gYmUgc2VsZWN0ZWQgd2l0aCB0aGUgbW91c2UuCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zZWxlY3RhYmxlLwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vc2VsZWN0YWJsZS8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL3NlbGVjdGFibGUuY3NzCgoKCnZhciB3aWRnZXRzU2VsZWN0YWJsZSA9ICQud2lkZ2V0KCAidWkuc2VsZWN0YWJsZSIsICQudWkubW91c2UsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJb3B0aW9uczogewoJCWFwcGVuZFRvOiAiYm9keSIsCgkJYXV0b1JlZnJlc2g6IHRydWUsCgkJZGlzdGFuY2U6IDAsCgkJZmlsdGVyOiAiKiIsCgkJdG9sZXJhbmNlOiAidG91Y2giLAoKCQkvLyBDYWxsYmFja3MKCQlzZWxlY3RlZDogbnVsbCwKCQlzZWxlY3Rpbmc6IG51bGwsCgkJc3RhcnQ6IG51bGwsCgkJc3RvcDogbnVsbCwKCQl1bnNlbGVjdGVkOiBudWxsLAoJCXVuc2VsZWN0aW5nOiBudWxsCgl9LAoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoKCQl0aGlzLl9hZGRDbGFzcyggInVpLXNlbGVjdGFibGUiICk7CgoJCXRoaXMuZHJhZ2dlZCA9IGZhbHNlOwoKCQkvLyBDYWNoZSBzZWxlY3RlZSBjaGlsZHJlbiBiYXNlZCBvbiBmaWx0ZXIKCQl0aGlzLnJlZnJlc2ggPSBmdW5jdGlvbigpIHsKCQkJdGhhdC5lbGVtZW50UG9zID0gJCggdGhhdC5lbGVtZW50WyAwIF0gKS5vZmZzZXQoKTsKCQkJdGhhdC5zZWxlY3RlZXMgPSAkKCB0aGF0Lm9wdGlvbnMuZmlsdGVyLCB0aGF0LmVsZW1lbnRbIDAgXSApOwoJCQl0aGF0Ll9hZGRDbGFzcyggdGhhdC5zZWxlY3RlZXMsICJ1aS1zZWxlY3RlZSIgKTsKCQkJdGhhdC5zZWxlY3RlZXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQl2YXIgJHRoaXMgPSAkKCB0aGlzICksCgkJCQkJc2VsZWN0ZWVPZmZzZXQgPSAkdGhpcy5vZmZzZXQoKSwKCQkJCQlwb3MgPSB7CgkJCQkJCWxlZnQ6IHNlbGVjdGVlT2Zmc2V0LmxlZnQgLSB0aGF0LmVsZW1lbnRQb3MubGVmdCwKCQkJCQkJdG9wOiBzZWxlY3RlZU9mZnNldC50b3AgLSB0aGF0LmVsZW1lbnRQb3MudG9wCgkJCQkJfTsKCQkJCSQuZGF0YSggdGhpcywgInNlbGVjdGFibGUtaXRlbSIsIHsKCQkJCQllbGVtZW50OiB0aGlzLAoJCQkJCSRlbGVtZW50OiAkdGhpcywKCQkJCQlsZWZ0OiBwb3MubGVmdCwKCQkJCQl0b3A6IHBvcy50b3AsCgkJCQkJcmlnaHQ6IHBvcy5sZWZ0ICsgJHRoaXMub3V0ZXJXaWR0aCgpLAoJCQkJCWJvdHRvbTogcG9zLnRvcCArICR0aGlzLm91dGVySGVpZ2h0KCksCgkJCQkJc3RhcnRzZWxlY3RlZDogZmFsc2UsCgkJCQkJc2VsZWN0ZWQ6ICR0aGlzLmhhc0NsYXNzKCAidWktc2VsZWN0ZWQiICksCgkJCQkJc2VsZWN0aW5nOiAkdGhpcy5oYXNDbGFzcyggInVpLXNlbGVjdGluZyIgKSwKCQkJCQl1bnNlbGVjdGluZzogJHRoaXMuaGFzQ2xhc3MoICJ1aS11bnNlbGVjdGluZyIgKQoJCQkJfSApOwoJCQl9ICk7CgkJfTsKCQl0aGlzLnJlZnJlc2goKTsKCgkJdGhpcy5fbW91c2VJbml0KCk7CgoJCXRoaXMuaGVscGVyID0gJCggIjxkaXY+IiApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmhlbHBlciwgInVpLXNlbGVjdGFibGUtaGVscGVyIiApOwoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdGhpcy5zZWxlY3RlZXMucmVtb3ZlRGF0YSggInNlbGVjdGFibGUtaXRlbSIgKTsKCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsKCX0sCgoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnM7CgoJCXRoaXMub3BvcyA9IFsgZXZlbnQucGFnZVgsIGV2ZW50LnBhZ2VZIF07CgkJdGhpcy5lbGVtZW50UG9zID0gJCggdGhpcy5lbGVtZW50WyAwIF0gKS5vZmZzZXQoKTsKCgkJaWYgKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKSB7CgkJCXJldHVybjsKCQl9CgoJCXRoaXMuc2VsZWN0ZWVzID0gJCggb3B0aW9ucy5maWx0ZXIsIHRoaXMuZWxlbWVudFsgMCBdICk7CgoJCXRoaXMuX3RyaWdnZXIoICJzdGFydCIsIGV2ZW50ICk7CgoJCSQoIG9wdGlvbnMuYXBwZW5kVG8gKS5hcHBlbmQoIHRoaXMuaGVscGVyICk7CgoJCS8vIHBvc2l0aW9uIGhlbHBlciAobGFzc28pCgkJdGhpcy5oZWxwZXIuY3NzKCB7CgkJCSJsZWZ0IjogZXZlbnQucGFnZVgsCgkJCSJ0b3AiOiBldmVudC5wYWdlWSwKCQkJIndpZHRoIjogMCwKCQkJImhlaWdodCI6IDAKCQl9ICk7CgoJCWlmICggb3B0aW9ucy5hdXRvUmVmcmVzaCApIHsKCQkJdGhpcy5yZWZyZXNoKCk7CgkJfQoKCQl0aGlzLnNlbGVjdGVlcy5maWx0ZXIoICIudWktc2VsZWN0ZWQiICkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBzZWxlY3RlZSA9ICQuZGF0YSggdGhpcywgInNlbGVjdGFibGUtaXRlbSIgKTsKCQkJc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCA9IHRydWU7CgkJCWlmICggIWV2ZW50Lm1ldGFLZXkgJiYgIWV2ZW50LmN0cmxLZXkgKSB7CgkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsKCQkJCXNlbGVjdGVlLnNlbGVjdGVkID0gZmFsc2U7CgkJCQl0aGF0Ll9hZGRDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS11bnNlbGVjdGluZyIgKTsKCQkJCXNlbGVjdGVlLnVuc2VsZWN0aW5nID0gdHJ1ZTsKCgkJCQkvLyBzZWxlY3RhYmxlIFVOU0VMRUNUSU5HIGNhbGxiYWNrCgkJCQl0aGF0Ll90cmlnZ2VyKCAidW5zZWxlY3RpbmciLCBldmVudCwgewoJCQkJCXVuc2VsZWN0aW5nOiBzZWxlY3RlZS5lbGVtZW50CgkJCQl9ICk7CgkJCX0KCQl9ICk7CgoJCSQoIGV2ZW50LnRhcmdldCApLnBhcmVudHMoKS5hZGRCYWNrKCkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBkb1NlbGVjdCwKCQkJCXNlbGVjdGVlID0gJC5kYXRhKCB0aGlzLCAic2VsZWN0YWJsZS1pdGVtIiApOwoJCQlpZiAoIHNlbGVjdGVlICkgewoJCQkJZG9TZWxlY3QgPSAoICFldmVudC5tZXRhS2V5ICYmICFldmVudC5jdHJsS2V5ICkgfHwKCQkJCQkhc2VsZWN0ZWUuJGVsZW1lbnQuaGFzQ2xhc3MoICJ1aS1zZWxlY3RlZCIgKTsKCQkJCXRoYXQuX3JlbW92ZUNsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgZG9TZWxlY3QgPyAidWktdW5zZWxlY3RpbmciIDogInVpLXNlbGVjdGVkIiApCgkJCQkJLl9hZGRDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsIGRvU2VsZWN0ID8gInVpLXNlbGVjdGluZyIgOiAidWktdW5zZWxlY3RpbmciICk7CgkJCQlzZWxlY3RlZS51bnNlbGVjdGluZyA9ICFkb1NlbGVjdDsKCQkJCXNlbGVjdGVlLnNlbGVjdGluZyA9IGRvU2VsZWN0OwoJCQkJc2VsZWN0ZWUuc2VsZWN0ZWQgPSBkb1NlbGVjdDsKCgkJCQkvLyBzZWxlY3RhYmxlIChVTilTRUxFQ1RJTkcgY2FsbGJhY2sKCQkJCWlmICggZG9TZWxlY3QgKSB7CgkJCQkJdGhhdC5fdHJpZ2dlciggInNlbGVjdGluZyIsIGV2ZW50LCB7CgkJCQkJCXNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudAoJCQkJCX0gKTsKCQkJCX0gZWxzZSB7CgkJCQkJdGhhdC5fdHJpZ2dlciggInVuc2VsZWN0aW5nIiwgZXZlbnQsIHsKCQkJCQkJdW5zZWxlY3Rpbmc6IHNlbGVjdGVlLmVsZW1lbnQKCQkJCQl9ICk7CgkJCQl9CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQl9ICk7CgoJfSwKCglfbW91c2VEcmFnOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXRoaXMuZHJhZ2dlZCA9IHRydWU7CgoJCWlmICggdGhpcy5vcHRpb25zLmRpc2FibGVkICkgewoJCQlyZXR1cm47CgkJfQoKCQl2YXIgdG1wLAoJCQl0aGF0ID0gdGhpcywKCQkJb3B0aW9ucyA9IHRoaXMub3B0aW9ucywKCQkJeDEgPSB0aGlzLm9wb3NbIDAgXSwKCQkJeTEgPSB0aGlzLm9wb3NbIDEgXSwKCQkJeDIgPSBldmVudC5wYWdlWCwKCQkJeTIgPSBldmVudC5wYWdlWTsKCgkJaWYgKCB4MSA+IHgyICkgeyB0bXAgPSB4MjsgeDIgPSB4MTsgeDEgPSB0bXA7IH0KCQlpZiAoIHkxID4geTIgKSB7IHRtcCA9IHkyOyB5MiA9IHkxOyB5MSA9IHRtcDsgfQoJCXRoaXMuaGVscGVyLmNzcyggeyBsZWZ0OiB4MSwgdG9wOiB5MSwgd2lkdGg6IHgyIC0geDEsIGhlaWdodDogeTIgLSB5MSB9ICk7CgoJCXRoaXMuc2VsZWN0ZWVzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgc2VsZWN0ZWUgPSAkLmRhdGEoIHRoaXMsICJzZWxlY3RhYmxlLWl0ZW0iICksCgkJCQloaXQgPSBmYWxzZSwKCQkJCW9mZnNldCA9IHt9OwoKCQkJLy9wcmV2ZW50IGhlbHBlciBmcm9tIGJlaW5nIHNlbGVjdGVkIGlmIGFwcGVuZFRvOiBzZWxlY3RhYmxlCgkJCWlmICggIXNlbGVjdGVlIHx8IHNlbGVjdGVlLmVsZW1lbnQgPT09IHRoYXQuZWxlbWVudFsgMCBdICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQlvZmZzZXQubGVmdCAgID0gc2VsZWN0ZWUubGVmdCAgICsgdGhhdC5lbGVtZW50UG9zLmxlZnQ7CgkJCW9mZnNldC5yaWdodCAgPSBzZWxlY3RlZS5yaWdodCAgKyB0aGF0LmVsZW1lbnRQb3MubGVmdDsKCQkJb2Zmc2V0LnRvcCAgICA9IHNlbGVjdGVlLnRvcCAgICArIHRoYXQuZWxlbWVudFBvcy50b3A7CgkJCW9mZnNldC5ib3R0b20gPSBzZWxlY3RlZS5ib3R0b20gKyB0aGF0LmVsZW1lbnRQb3MudG9wOwoKCQkJaWYgKCBvcHRpb25zLnRvbGVyYW5jZSA9PT0gInRvdWNoIiApIHsKCQkJCWhpdCA9ICggISggb2Zmc2V0LmxlZnQgPiB4MiB8fCBvZmZzZXQucmlnaHQgPCB4MSB8fCBvZmZzZXQudG9wID4geTIgfHwKICAgICAgICAgICAgICAgICAgICBvZmZzZXQuYm90dG9tIDwgeTEgKSApOwoJCQl9IGVsc2UgaWYgKCBvcHRpb25zLnRvbGVyYW5jZSA9PT0gImZpdCIgKSB7CgkJCQloaXQgPSAoIG9mZnNldC5sZWZ0ID4geDEgJiYgb2Zmc2V0LnJpZ2h0IDwgeDIgJiYgb2Zmc2V0LnRvcCA+IHkxICYmCiAgICAgICAgICAgICAgICAgICAgb2Zmc2V0LmJvdHRvbSA8IHkyICk7CgkJCX0KCgkJCWlmICggaGl0ICkgewoKCQkJCS8vIFNFTEVDVAoJCQkJaWYgKCBzZWxlY3RlZS5zZWxlY3RlZCApIHsKCQkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsKCQkJCQlzZWxlY3RlZS5zZWxlY3RlZCA9IGZhbHNlOwoJCQkJfQoJCQkJaWYgKCBzZWxlY3RlZS51bnNlbGVjdGluZyApIHsKCQkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS11bnNlbGVjdGluZyIgKTsKCQkJCQlzZWxlY3RlZS51bnNlbGVjdGluZyA9IGZhbHNlOwoJCQkJfQoJCQkJaWYgKCAhc2VsZWN0ZWUuc2VsZWN0aW5nICkgewoJCQkJCXRoYXQuX2FkZENsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXNlbGVjdGluZyIgKTsKCQkJCQlzZWxlY3RlZS5zZWxlY3RpbmcgPSB0cnVlOwoKCQkJCQkvLyBzZWxlY3RhYmxlIFNFTEVDVElORyBjYWxsYmFjawoJCQkJCXRoYXQuX3RyaWdnZXIoICJzZWxlY3RpbmciLCBldmVudCwgewoJCQkJCQlzZWxlY3Rpbmc6IHNlbGVjdGVlLmVsZW1lbnQKCQkJCQl9ICk7CgkJCQl9CgkJCX0gZWxzZSB7CgoJCQkJLy8gVU5TRUxFQ1QKCQkJCWlmICggc2VsZWN0ZWUuc2VsZWN0aW5nICkgewoJCQkJCWlmICggKCBldmVudC5tZXRhS2V5IHx8IGV2ZW50LmN0cmxLZXkgKSAmJiBzZWxlY3RlZS5zdGFydHNlbGVjdGVkICkgewoJCQkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RpbmciICk7CgkJCQkJCXNlbGVjdGVlLnNlbGVjdGluZyA9IGZhbHNlOwoJCQkJCQl0aGF0Ll9hZGRDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsKCQkJCQkJc2VsZWN0ZWUuc2VsZWN0ZWQgPSB0cnVlOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXRoYXQuX3JlbW92ZUNsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXNlbGVjdGluZyIgKTsKCQkJCQkJc2VsZWN0ZWUuc2VsZWN0aW5nID0gZmFsc2U7CgkJCQkJCWlmICggc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCApIHsKCQkJCQkJCXRoYXQuX2FkZENsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXVuc2VsZWN0aW5nIiApOwoJCQkJCQkJc2VsZWN0ZWUudW5zZWxlY3RpbmcgPSB0cnVlOwoJCQkJCQl9CgoJCQkJCQkvLyBzZWxlY3RhYmxlIFVOU0VMRUNUSU5HIGNhbGxiYWNrCgkJCQkJCXRoYXQuX3RyaWdnZXIoICJ1bnNlbGVjdGluZyIsIGV2ZW50LCB7CgkJCQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudAoJCQkJCQl9ICk7CgkJCQkJfQoJCQkJfQoJCQkJaWYgKCBzZWxlY3RlZS5zZWxlY3RlZCApIHsKCQkJCQlpZiAoICFldmVudC5tZXRhS2V5ICYmICFldmVudC5jdHJsS2V5ICYmICFzZWxlY3RlZS5zdGFydHNlbGVjdGVkICkgewoJCQkJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsKCQkJCQkJc2VsZWN0ZWUuc2VsZWN0ZWQgPSBmYWxzZTsKCgkJCQkJCXRoYXQuX2FkZENsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXVuc2VsZWN0aW5nIiApOwoJCQkJCQlzZWxlY3RlZS51bnNlbGVjdGluZyA9IHRydWU7CgoJCQkJCQkvLyBzZWxlY3RhYmxlIFVOU0VMRUNUSU5HIGNhbGxiYWNrCgkJCQkJCXRoYXQuX3RyaWdnZXIoICJ1bnNlbGVjdGluZyIsIGV2ZW50LCB7CgkJCQkJCQl1bnNlbGVjdGluZzogc2VsZWN0ZWUuZWxlbWVudAoJCQkJCQl9ICk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfSApOwoKCQlyZXR1cm4gZmFsc2U7Cgl9LAoKCV9tb3VzZVN0b3A6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCXRoaXMuZHJhZ2dlZCA9IGZhbHNlOwoKCQkkKCAiLnVpLXVuc2VsZWN0aW5nIiwgdGhpcy5lbGVtZW50WyAwIF0gKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJdmFyIHNlbGVjdGVlID0gJC5kYXRhKCB0aGlzLCAic2VsZWN0YWJsZS1pdGVtIiApOwoJCQl0aGF0Ll9yZW1vdmVDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS11bnNlbGVjdGluZyIgKTsKCQkJc2VsZWN0ZWUudW5zZWxlY3RpbmcgPSBmYWxzZTsKCQkJc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCA9IGZhbHNlOwoJCQl0aGF0Ll90cmlnZ2VyKCAidW5zZWxlY3RlZCIsIGV2ZW50LCB7CgkJCQl1bnNlbGVjdGVkOiBzZWxlY3RlZS5lbGVtZW50CgkJCX0gKTsKCQl9ICk7CgkJJCggIi51aS1zZWxlY3RpbmciLCB0aGlzLmVsZW1lbnRbIDAgXSApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgc2VsZWN0ZWUgPSAkLmRhdGEoIHRoaXMsICJzZWxlY3RhYmxlLWl0ZW0iICk7CgkJCXRoYXQuX3JlbW92ZUNsYXNzKCBzZWxlY3RlZS4kZWxlbWVudCwgInVpLXNlbGVjdGluZyIgKQoJCQkJLl9hZGRDbGFzcyggc2VsZWN0ZWUuJGVsZW1lbnQsICJ1aS1zZWxlY3RlZCIgKTsKCQkJc2VsZWN0ZWUuc2VsZWN0aW5nID0gZmFsc2U7CgkJCXNlbGVjdGVlLnNlbGVjdGVkID0gdHJ1ZTsKCQkJc2VsZWN0ZWUuc3RhcnRzZWxlY3RlZCA9IHRydWU7CgkJCXRoYXQuX3RyaWdnZXIoICJzZWxlY3RlZCIsIGV2ZW50LCB7CgkJCQlzZWxlY3RlZDogc2VsZWN0ZWUuZWxlbWVudAoJCQl9ICk7CgkJfSApOwoJCXRoaXMuX3RyaWdnZXIoICJzdG9wIiwgZXZlbnQgKTsKCgkJdGhpcy5oZWxwZXIucmVtb3ZlKCk7CgoJCXJldHVybiBmYWxzZTsKCX0KCn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIFNlbGVjdG1lbnUgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBTZWxlY3RtZW51Ci8vPj5ncm91cDogV2lkZ2V0cwovLyBqc2NzOmRpc2FibGUgbWF4aW11bUxpbmVMZW5ndGgKLy8+PmRlc2NyaXB0aW9uOiBEdXBsaWNhdGVzIGFuZCBleHRlbmRzIHRoZSBmdW5jdGlvbmFsaXR5IG9mIGEgbmF0aXZlIEhUTUwgc2VsZWN0IGVsZW1lbnQsIGFsbG93aW5nIGl0IHRvIGJlIGN1c3RvbWl6YWJsZSBpbiBiZWhhdmlvciBhbmQgYXBwZWFyYW5jZSBmYXIgYmV5b25kIHRoZSBsaW1pdGF0aW9ucyBvZiBhIG5hdGl2ZSBzZWxlY3QuCi8vIGpzY3M6ZW5hYmxlIG1heGltdW1MaW5lTGVuZ3RoCi8vPj5kb2NzOiBodHRwOi8vYXBpLmpxdWVyeXVpLmNvbS9zZWxlY3RtZW51LwovLz4+ZGVtb3M6IGh0dHA6Ly9qcXVlcnl1aS5jb20vc2VsZWN0bWVudS8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9zZWxlY3RtZW51LmNzcywgLi4vLi4vdGhlbWVzL2Jhc2UvYnV0dG9uLmNzcwovLz4+Y3NzLnRoZW1lOiAuLi8uLi90aGVtZXMvYmFzZS90aGVtZS5jc3MKCgoKdmFyIHdpZGdldHNTZWxlY3RtZW51ID0gJC53aWRnZXQoICJ1aS5zZWxlY3RtZW51IiwgWyAkLnVpLmZvcm1SZXNldE1peGluLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCWRlZmF1bHRFbGVtZW50OiAiPHNlbGVjdD4iLAoJb3B0aW9uczogewoJCWFwcGVuZFRvOiBudWxsLAoJCWNsYXNzZXM6IHsKCQkJInVpLXNlbGVjdG1lbnUtYnV0dG9uLW9wZW4iOiAidWktY29ybmVyLXRvcCIsCgkJCSJ1aS1zZWxlY3RtZW51LWJ1dHRvbi1jbG9zZWQiOiAidWktY29ybmVyLWFsbCIKCQl9LAoJCWRpc2FibGVkOiBudWxsLAoJCWljb25zOiB7CgkJCWJ1dHRvbjogInVpLWljb24tdHJpYW5nbGUtMS1zIgoJCX0sCgkJcG9zaXRpb246IHsKCQkJbXk6ICJsZWZ0IHRvcCIsCgkJCWF0OiAibGVmdCBib3R0b20iLAoJCQljb2xsaXNpb246ICJub25lIgoJCX0sCgkJd2lkdGg6IGZhbHNlLAoKCQkvLyBDYWxsYmFja3MKCQljaGFuZ2U6IG51bGwsCgkJY2xvc2U6IG51bGwsCgkJZm9jdXM6IG51bGwsCgkJb3BlbjogbnVsbCwKCQlzZWxlY3Q6IG51bGwKCX0sCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJdmFyIHNlbGVjdG1lbnVJZCA9IHRoaXMuZWxlbWVudC51bmlxdWVJZCgpLmF0dHIoICJpZCIgKTsKCQl0aGlzLmlkcyA9IHsKCQkJZWxlbWVudDogc2VsZWN0bWVudUlkLAoJCQlidXR0b246IHNlbGVjdG1lbnVJZCArICItYnV0dG9uIiwKCQkJbWVudTogc2VsZWN0bWVudUlkICsgIi1tZW51IgoJCX07CgoJCXRoaXMuX2RyYXdCdXR0b24oKTsKCQl0aGlzLl9kcmF3TWVudSgpOwoJCXRoaXMuX2JpbmRGb3JtUmVzZXRIYW5kbGVyKCk7CgoJCXRoaXMuX3JlbmRlcmVkID0gZmFsc2U7CgkJdGhpcy5tZW51SXRlbXMgPSAkKCk7Cgl9LAoKCV9kcmF3QnV0dG9uOiBmdW5jdGlvbigpIHsKCQl2YXIgaWNvbiwKCQkJdGhhdCA9IHRoaXMsCgkJCWl0ZW0gPSB0aGlzLl9wYXJzZU9wdGlvbigKCQkJCXRoaXMuZWxlbWVudC5maW5kKCAib3B0aW9uOnNlbGVjdGVkIiApLAoJCQkJdGhpcy5lbGVtZW50WyAwIF0uc2VsZWN0ZWRJbmRleAoJCQkpOwoKCQkvLyBBc3NvY2lhdGUgZXhpc3RpbmcgbGFiZWwgd2l0aCB0aGUgbmV3IGJ1dHRvbgoJCXRoaXMubGFiZWxzID0gdGhpcy5lbGVtZW50LmxhYmVscygpLmF0dHIoICJmb3IiLCB0aGlzLmlkcy5idXR0b24gKTsKCQl0aGlzLl9vbiggdGhpcy5sYWJlbHMsIHsKCQkJY2xpY2s6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuYnV0dG9uLmZvY3VzKCk7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQl9CgkJfSApOwoKCQkvLyBIaWRlIG9yaWdpbmFsIHNlbGVjdCBlbGVtZW50CgkJdGhpcy5lbGVtZW50LmhpZGUoKTsKCgkJLy8gQ3JlYXRlIGJ1dHRvbgoJCXRoaXMuYnV0dG9uID0gJCggIjxzcGFuPiIsIHsKCQkJdGFiaW5kZXg6IHRoaXMub3B0aW9ucy5kaXNhYmxlZCA/IC0xIDogMCwKCQkJaWQ6IHRoaXMuaWRzLmJ1dHRvbiwKCQkJcm9sZTogImNvbWJvYm94IiwKCQkJImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiLAoJCQkiYXJpYS1hdXRvY29tcGxldGUiOiAibGlzdCIsCgkJCSJhcmlhLW93bnMiOiB0aGlzLmlkcy5tZW51LAoJCQkiYXJpYS1oYXNwb3B1cCI6ICJ0cnVlIiwKCQkJdGl0bGU6IHRoaXMuZWxlbWVudC5hdHRyKCAidGl0bGUiICkKCQl9ICkKCQkJLmluc2VydEFmdGVyKCB0aGlzLmVsZW1lbnQgKTsKCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuYnV0dG9uLCAidWktc2VsZWN0bWVudS1idXR0b24gdWktc2VsZWN0bWVudS1idXR0b24tY2xvc2VkIiwKCQkJInVpLWJ1dHRvbiB1aS13aWRnZXQiICk7CgoJCWljb24gPSAkKCAiPHNwYW4+IiApLmFwcGVuZFRvKCB0aGlzLmJ1dHRvbiApOwoJCXRoaXMuX2FkZENsYXNzKCBpY29uLCAidWktc2VsZWN0bWVudS1pY29uIiwgInVpLWljb24gIiArIHRoaXMub3B0aW9ucy5pY29ucy5idXR0b24gKTsKCQl0aGlzLmJ1dHRvbkl0ZW0gPSB0aGlzLl9yZW5kZXJCdXR0b25JdGVtKCBpdGVtICkKCQkJLmFwcGVuZFRvKCB0aGlzLmJ1dHRvbiApOwoKCQlpZiAoIHRoaXMub3B0aW9ucy53aWR0aCAhPT0gZmFsc2UgKSB7CgkJCXRoaXMuX3Jlc2l6ZUJ1dHRvbigpOwoJCX0KCgkJdGhpcy5fb24oIHRoaXMuYnV0dG9uLCB0aGlzLl9idXR0b25FdmVudHMgKTsKCQl0aGlzLmJ1dHRvbi5vbmUoICJmb2N1c2luIiwgZnVuY3Rpb24oKSB7CgoJCQkvLyBEZWxheSByZW5kZXJpbmcgdGhlIG1lbnUgaXRlbXMgdW50aWwgdGhlIGJ1dHRvbiByZWNlaXZlcyBmb2N1cy4KCQkJLy8gVGhlIG1lbnUgbWF5IGhhdmUgYWxyZWFkeSBiZWVuIHJlbmRlcmVkIHZpYSBhIHByb2dyYW1tYXRpYyBvcGVuLgoJCQlpZiAoICF0aGF0Ll9yZW5kZXJlZCApIHsKCQkJCXRoYXQuX3JlZnJlc2hNZW51KCk7CgkJCX0KCQl9ICk7Cgl9LAoKCV9kcmF3TWVudTogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoKCQkvLyBDcmVhdGUgbWVudQoJCXRoaXMubWVudSA9ICQoICI8dWw+IiwgewoJCQkiYXJpYS1oaWRkZW4iOiAidHJ1ZSIsCgkJCSJhcmlhLWxhYmVsbGVkYnkiOiB0aGlzLmlkcy5idXR0b24sCgkJCWlkOiB0aGlzLmlkcy5tZW51CgkJfSApOwoKCQkvLyBXcmFwIG1lbnUKCQl0aGlzLm1lbnVXcmFwID0gJCggIjxkaXY+IiApLmFwcGVuZCggdGhpcy5tZW51ICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMubWVudVdyYXAsICJ1aS1zZWxlY3RtZW51LW1lbnUiLCAidWktZnJvbnQiICk7CgkJdGhpcy5tZW51V3JhcC5hcHBlbmRUbyggdGhpcy5fYXBwZW5kVG8oKSApOwoKCQkvLyBJbml0aWFsaXplIG1lbnUgd2lkZ2V0CgkJdGhpcy5tZW51SW5zdGFuY2UgPSB0aGlzLm1lbnUKCQkJLm1lbnUoIHsKCQkJCWNsYXNzZXM6IHsKCQkJCQkidWktbWVudSI6ICJ1aS1jb3JuZXItYm90dG9tIgoJCQkJfSwKCQkJCXJvbGU6ICJsaXN0Ym94IiwKCQkJCXNlbGVjdDogZnVuY3Rpb24oIGV2ZW50LCB1aSApIHsKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoKCQkJCQkvLyBTdXBwb3J0OiBJRTgKCQkJCQkvLyBJZiB0aGUgaXRlbSB3YXMgc2VsZWN0ZWQgdmlhIGEgY2xpY2ssIHRoZSB0ZXh0IHNlbGVjdGlvbgoJCQkJCS8vIHdpbGwgYmUgZGVzdHJveWVkIGluIElFCgkJCQkJdGhhdC5fc2V0U2VsZWN0aW9uKCk7CgoJCQkJCXRoYXQuX3NlbGVjdCggdWkuaXRlbS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiApLCBldmVudCApOwoJCQkJfSwKCQkJCWZvY3VzOiBmdW5jdGlvbiggZXZlbnQsIHVpICkgewoJCQkJCXZhciBpdGVtID0gdWkuaXRlbS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiApOwoKCQkJCQkvLyBQcmV2ZW50IGluaXRhbCBmb2N1cyBmcm9tIGZpcmluZyBhbmQgY2hlY2sgaWYgaXRzIGEgbmV3bHkgZm9jdXNlZCBpdGVtCgkJCQkJaWYgKCB0aGF0LmZvY3VzSW5kZXggIT0gbnVsbCAmJiBpdGVtLmluZGV4ICE9PSB0aGF0LmZvY3VzSW5kZXggKSB7CgkJCQkJCXRoYXQuX3RyaWdnZXIoICJmb2N1cyIsIGV2ZW50LCB7IGl0ZW06IGl0ZW0gfSApOwoJCQkJCQlpZiAoICF0aGF0LmlzT3BlbiApIHsKCQkJCQkJCXRoYXQuX3NlbGVjdCggaXRlbSwgZXZlbnQgKTsKCQkJCQkJfQoJCQkJCX0KCQkJCQl0aGF0LmZvY3VzSW5kZXggPSBpdGVtLmluZGV4OwoKCQkJCQl0aGF0LmJ1dHRvbi5hdHRyKCAiYXJpYS1hY3RpdmVkZXNjZW5kYW50IiwKCQkJCQkJdGhhdC5tZW51SXRlbXMuZXEoIGl0ZW0uaW5kZXggKS5hdHRyKCAiaWQiICkgKTsKCQkJCX0KCQkJfSApCgkJCS5tZW51KCAiaW5zdGFuY2UiICk7CgoJCS8vIERvbid0IGNsb3NlIHRoZSBtZW51IG9uIG1vdXNlbGVhdmUKCQl0aGlzLm1lbnVJbnN0YW5jZS5fb2ZmKCB0aGlzLm1lbnUsICJtb3VzZWxlYXZlIiApOwoKCQkvLyBDYW5jZWwgdGhlIG1lbnUncyBjb2xsYXBzZUFsbCBvbiBkb2N1bWVudCBjbGljawoJCXRoaXMubWVudUluc3RhbmNlLl9jbG9zZU9uRG9jdW1lbnRDbGljayA9IGZ1bmN0aW9uKCkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfTsKCgkJLy8gU2VsZWN0cyBvZnRlbiBjb250YWluIGVtcHR5IGl0ZW1zLCBidXQgbmV2ZXIgY29udGFpbiBkaXZpZGVycwoJCXRoaXMubWVudUluc3RhbmNlLl9pc0RpdmlkZXIgPSBmdW5jdGlvbigpIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX07Cgl9LAoKCXJlZnJlc2g6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX3JlZnJlc2hNZW51KCk7CgkJdGhpcy5idXR0b25JdGVtLnJlcGxhY2VXaXRoKAoJCQl0aGlzLmJ1dHRvbkl0ZW0gPSB0aGlzLl9yZW5kZXJCdXR0b25JdGVtKAoKCQkJCS8vIEZhbGwgYmFjayB0byBhbiBlbXB0eSBvYmplY3QgaW4gY2FzZSB0aGVyZSBhcmUgbm8gb3B0aW9ucwoJCQkJdGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCkuZGF0YSggInVpLXNlbGVjdG1lbnUtaXRlbSIgKSB8fCB7fQoJCQkpCgkJKTsKCQlpZiAoIHRoaXMub3B0aW9ucy53aWR0aCA9PT0gbnVsbCApIHsKCQkJdGhpcy5fcmVzaXplQnV0dG9uKCk7CgkJfQoJfSwKCglfcmVmcmVzaE1lbnU6IGZ1bmN0aW9uKCkgewoJCXZhciBpdGVtLAoJCQlvcHRpb25zID0gdGhpcy5lbGVtZW50LmZpbmQoICJvcHRpb24iICk7CgoJCXRoaXMubWVudS5lbXB0eSgpOwoKCQl0aGlzLl9wYXJzZU9wdGlvbnMoIG9wdGlvbnMgKTsKCQl0aGlzLl9yZW5kZXJNZW51KCB0aGlzLm1lbnUsIHRoaXMuaXRlbXMgKTsKCgkJdGhpcy5tZW51SW5zdGFuY2UucmVmcmVzaCgpOwoJCXRoaXMubWVudUl0ZW1zID0gdGhpcy5tZW51LmZpbmQoICJsaSIgKQoJCQkubm90KCAiLnVpLXNlbGVjdG1lbnUtb3B0Z3JvdXAiICkKCQkJCS5maW5kKCAiLnVpLW1lbnUtaXRlbS13cmFwcGVyIiApOwoKCQl0aGlzLl9yZW5kZXJlZCA9IHRydWU7CgoJCWlmICggIW9wdGlvbnMubGVuZ3RoICkgewoJCQlyZXR1cm47CgkJfQoKCQlpdGVtID0gdGhpcy5fZ2V0U2VsZWN0ZWRJdGVtKCk7CgoJCS8vIFVwZGF0ZSB0aGUgbWVudSB0byBoYXZlIHRoZSBjb3JyZWN0IGl0ZW0gZm9jdXNlZAoJCXRoaXMubWVudUluc3RhbmNlLmZvY3VzKCBudWxsLCBpdGVtICk7CgkJdGhpcy5fc2V0QXJpYSggaXRlbS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiApICk7CgoJCS8vIFNldCBkaXNhYmxlZCBzdGF0ZQoJCXRoaXMuX3NldE9wdGlvbiggImRpc2FibGVkIiwgdGhpcy5lbGVtZW50LnByb3AoICJkaXNhYmxlZCIgKSApOwoJfSwKCglvcGVuOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vIElmIHRoaXMgaXMgdGhlIGZpcnN0IHRpbWUgdGhlIG1lbnUgaXMgYmVpbmcgb3BlbmVkLCByZW5kZXIgdGhlIGl0ZW1zCgkJaWYgKCAhdGhpcy5fcmVuZGVyZWQgKSB7CgkJCXRoaXMuX3JlZnJlc2hNZW51KCk7CgkJfSBlbHNlIHsKCgkJCS8vIE1lbnUgY2xlYXJzIGZvY3VzIG9uIGNsb3NlLCByZXNldCBmb2N1cyB0byBzZWxlY3RlZCBpdGVtCgkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLm1lbnUuZmluZCggIi51aS1zdGF0ZS1hY3RpdmUiICksIG51bGwsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCXRoaXMubWVudUluc3RhbmNlLmZvY3VzKCBudWxsLCB0aGlzLl9nZXRTZWxlY3RlZEl0ZW0oKSApOwoJCX0KCgkJLy8gSWYgdGhlcmUgYXJlIG5vIG9wdGlvbnMsIGRvbid0IG9wZW4gdGhlIG1lbnUKCQlpZiAoICF0aGlzLm1lbnVJdGVtcy5sZW5ndGggKSB7CgkJCXJldHVybjsKCQl9CgoJCXRoaXMuaXNPcGVuID0gdHJ1ZTsKCQl0aGlzLl90b2dnbGVBdHRyKCk7CgkJdGhpcy5fcmVzaXplTWVudSgpOwoJCXRoaXMuX3Bvc2l0aW9uKCk7CgoJCXRoaXMuX29uKCB0aGlzLmRvY3VtZW50LCB0aGlzLl9kb2N1bWVudENsaWNrICk7CgoJCXRoaXMuX3RyaWdnZXIoICJvcGVuIiwgZXZlbnQgKTsKCX0sCgoJX3Bvc2l0aW9uOiBmdW5jdGlvbigpIHsKCQl0aGlzLm1lbnVXcmFwLnBvc2l0aW9uKCAkLmV4dGVuZCggeyBvZjogdGhpcy5idXR0b24gfSwgdGhpcy5vcHRpb25zLnBvc2l0aW9uICkgKTsKCX0sCgoJY2xvc2U6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoICF0aGlzLmlzT3BlbiApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy5pc09wZW4gPSBmYWxzZTsKCQl0aGlzLl90b2dnbGVBdHRyKCk7CgoJCXRoaXMucmFuZ2UgPSBudWxsOwoJCXRoaXMuX29mZiggdGhpcy5kb2N1bWVudCApOwoKCQl0aGlzLl90cmlnZ2VyKCAiY2xvc2UiLCBldmVudCApOwoJfSwKCgl3aWRnZXQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLmJ1dHRvbjsKCX0sCgoJbWVudVdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMubWVudTsKCX0sCgoJX3JlbmRlckJ1dHRvbkl0ZW06IGZ1bmN0aW9uKCBpdGVtICkgewoJCXZhciBidXR0b25JdGVtID0gJCggIjxzcGFuPiIgKTsKCgkJdGhpcy5fc2V0VGV4dCggYnV0dG9uSXRlbSwgaXRlbS5sYWJlbCApOwoJCXRoaXMuX2FkZENsYXNzKCBidXR0b25JdGVtLCAidWktc2VsZWN0bWVudS10ZXh0IiApOwoKCQlyZXR1cm4gYnV0dG9uSXRlbTsKCX0sCgoJX3JlbmRlck1lbnU6IGZ1bmN0aW9uKCB1bCwgaXRlbXMgKSB7CgkJdmFyIHRoYXQgPSB0aGlzLAoJCQljdXJyZW50T3B0Z3JvdXAgPSAiIjsKCgkJJC5lYWNoKCBpdGVtcywgZnVuY3Rpb24oIGluZGV4LCBpdGVtICkgewoJCQl2YXIgbGk7CgoJCQlpZiAoIGl0ZW0ub3B0Z3JvdXAgIT09IGN1cnJlbnRPcHRncm91cCApIHsKCQkJCWxpID0gJCggIjxsaT4iLCB7CgkJCQkJdGV4dDogaXRlbS5vcHRncm91cAoJCQkJfSApOwoJCQkJdGhhdC5fYWRkQ2xhc3MoIGxpLCAidWktc2VsZWN0bWVudS1vcHRncm91cCIsICJ1aS1tZW51LWRpdmlkZXIiICsKCQkJCQkoIGl0ZW0uZWxlbWVudC5wYXJlbnQoICJvcHRncm91cCIgKS5wcm9wKCAiZGlzYWJsZWQiICkgPwoJCQkJCQkiIHVpLXN0YXRlLWRpc2FibGVkIiA6CgkJCQkJCSIiICkgKTsKCgkJCQlsaS5hcHBlbmRUbyggdWwgKTsKCgkJCQljdXJyZW50T3B0Z3JvdXAgPSBpdGVtLm9wdGdyb3VwOwoJCQl9CgoJCQl0aGF0Ll9yZW5kZXJJdGVtRGF0YSggdWwsIGl0ZW0gKTsKCQl9ICk7Cgl9LAoKCV9yZW5kZXJJdGVtRGF0YTogZnVuY3Rpb24oIHVsLCBpdGVtICkgewoJCXJldHVybiB0aGlzLl9yZW5kZXJJdGVtKCB1bCwgaXRlbSApLmRhdGEoICJ1aS1zZWxlY3RtZW51LWl0ZW0iLCBpdGVtICk7Cgl9LAoKCV9yZW5kZXJJdGVtOiBmdW5jdGlvbiggdWwsIGl0ZW0gKSB7CgkJdmFyIGxpID0gJCggIjxsaT4iICksCgkJCXdyYXBwZXIgPSAkKCAiPGRpdj4iLCB7CgkJCQl0aXRsZTogaXRlbS5lbGVtZW50LmF0dHIoICJ0aXRsZSIgKQoJCQl9ICk7CgoJCWlmICggaXRlbS5kaXNhYmxlZCApIHsKCQkJdGhpcy5fYWRkQ2xhc3MoIGxpLCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiICk7CgkJfQoJCXRoaXMuX3NldFRleHQoIHdyYXBwZXIsIGl0ZW0ubGFiZWwgKTsKCgkJcmV0dXJuIGxpLmFwcGVuZCggd3JhcHBlciApLmFwcGVuZFRvKCB1bCApOwoJfSwKCglfc2V0VGV4dDogZnVuY3Rpb24oIGVsZW1lbnQsIHZhbHVlICkgewoJCWlmICggdmFsdWUgKSB7CgkJCWVsZW1lbnQudGV4dCggdmFsdWUgKTsKCQl9IGVsc2UgewoJCQllbGVtZW50Lmh0bWwoICImIzE2MDsiICk7CgkJfQoJfSwKCglfbW92ZTogZnVuY3Rpb24oIGRpcmVjdGlvbiwgZXZlbnQgKSB7CgkJdmFyIGl0ZW0sIG5leHQsCgkJCWZpbHRlciA9ICIudWktbWVudS1pdGVtIjsKCgkJaWYgKCB0aGlzLmlzT3BlbiApIHsKCQkJaXRlbSA9IHRoaXMubWVudUl0ZW1zLmVxKCB0aGlzLmZvY3VzSW5kZXggKS5wYXJlbnQoICJsaSIgKTsKCQl9IGVsc2UgewoJCQlpdGVtID0gdGhpcy5tZW51SXRlbXMuZXEoIHRoaXMuZWxlbWVudFsgMCBdLnNlbGVjdGVkSW5kZXggKS5wYXJlbnQoICJsaSIgKTsKCQkJZmlsdGVyICs9ICI6bm90KC51aS1zdGF0ZS1kaXNhYmxlZCkiOwoJCX0KCgkJaWYgKCBkaXJlY3Rpb24gPT09ICJmaXJzdCIgfHwgZGlyZWN0aW9uID09PSAibGFzdCIgKSB7CgkJCW5leHQgPSBpdGVtWyBkaXJlY3Rpb24gPT09ICJmaXJzdCIgPyAicHJldkFsbCIgOiAibmV4dEFsbCIgXSggZmlsdGVyICkuZXEoIC0xICk7CgkJfSBlbHNlIHsKCQkJbmV4dCA9IGl0ZW1bIGRpcmVjdGlvbiArICJBbGwiIF0oIGZpbHRlciApLmVxKCAwICk7CgkJfQoKCQlpZiAoIG5leHQubGVuZ3RoICkgewoJCQl0aGlzLm1lbnVJbnN0YW5jZS5mb2N1cyggZXZlbnQsIG5leHQgKTsKCQl9Cgl9LAoKCV9nZXRTZWxlY3RlZEl0ZW06IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLm1lbnVJdGVtcy5lcSggdGhpcy5lbGVtZW50WyAwIF0uc2VsZWN0ZWRJbmRleCApLnBhcmVudCggImxpIiApOwoJfSwKCglfdG9nZ2xlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdGhpc1sgdGhpcy5pc09wZW4gPyAiY2xvc2UiIDogIm9wZW4iIF0oIGV2ZW50ICk7Cgl9LAoKCV9zZXRTZWxlY3Rpb246IGZ1bmN0aW9uKCkgewoJCXZhciBzZWxlY3Rpb247CgoJCWlmICggIXRoaXMucmFuZ2UgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggd2luZG93LmdldFNlbGVjdGlvbiApIHsKCQkJc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbigpOwoJCQlzZWxlY3Rpb24ucmVtb3ZlQWxsUmFuZ2VzKCk7CgkJCXNlbGVjdGlvbi5hZGRSYW5nZSggdGhpcy5yYW5nZSApOwoKCQkvLyBTdXBwb3J0OiBJRTgKCQl9IGVsc2UgewoJCQl0aGlzLnJhbmdlLnNlbGVjdCgpOwoJCX0KCgkJLy8gU3VwcG9ydDogSUUKCQkvLyBTZXR0aW5nIHRoZSB0ZXh0IHNlbGVjdGlvbiBraWxscyB0aGUgYnV0dG9uIGZvY3VzIGluIElFLCBidXQKCQkvLyByZXN0b3JpbmcgdGhlIGZvY3VzIGRvZXNuJ3Qga2lsbCB0aGUgc2VsZWN0aW9uLgoJCXRoaXMuYnV0dG9uLmZvY3VzKCk7Cgl9LAoKCV9kb2N1bWVudENsaWNrOiB7CgkJbW91c2Vkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCWlmICggIXRoaXMuaXNPcGVuICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQlpZiAoICEkKCBldmVudC50YXJnZXQgKS5jbG9zZXN0KCAiLnVpLXNlbGVjdG1lbnUtbWVudSwgIyIgKwoJCQkJCSQudWkuZXNjYXBlU2VsZWN0b3IoIHRoaXMuaWRzLmJ1dHRvbiApICkubGVuZ3RoICkgewoJCQkJdGhpcy5jbG9zZSggZXZlbnQgKTsKCQkJfQoJCX0KCX0sCgoJX2J1dHRvbkV2ZW50czogewoKCQkvLyBQcmV2ZW50IHRleHQgc2VsZWN0aW9uIGZyb20gYmVpbmcgcmVzZXQgd2hlbiBpbnRlcmFjdGluZyB3aXRoIHRoZSBzZWxlY3RtZW51ICgjMTAxNDQpCgkJbW91c2Vkb3duOiBmdW5jdGlvbigpIHsKCQkJdmFyIHNlbGVjdGlvbjsKCgkJCWlmICggd2luZG93LmdldFNlbGVjdGlvbiApIHsKCQkJCXNlbGVjdGlvbiA9IHdpbmRvdy5nZXRTZWxlY3Rpb24oKTsKCQkJCWlmICggc2VsZWN0aW9uLnJhbmdlQ291bnQgKSB7CgkJCQkJdGhpcy5yYW5nZSA9IHNlbGVjdGlvbi5nZXRSYW5nZUF0KCAwICk7CgkJCQl9CgoJCQkvLyBTdXBwb3J0OiBJRTgKCQkJfSBlbHNlIHsKCQkJCXRoaXMucmFuZ2UgPSBkb2N1bWVudC5zZWxlY3Rpb24uY3JlYXRlUmFuZ2UoKTsKCQkJfQoJCX0sCgoJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXRoaXMuX3NldFNlbGVjdGlvbigpOwoJCQl0aGlzLl90b2dnbGUoIGV2ZW50ICk7CgkJfSwKCgkJa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQl2YXIgcHJldmVudERlZmF1bHQgPSB0cnVlOwoJCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkgewoJCQljYXNlICQudWkua2V5Q29kZS5UQUI6CgkJCWNhc2UgJC51aS5rZXlDb2RlLkVTQ0FQRToKCQkJCXRoaXMuY2xvc2UoIGV2ZW50ICk7CgkJCQlwcmV2ZW50RGVmYXVsdCA9IGZhbHNlOwoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLkVOVEVSOgoJCQkJaWYgKCB0aGlzLmlzT3BlbiApIHsKCQkJCQl0aGlzLl9zZWxlY3RGb2N1c2VkSXRlbSggZXZlbnQgKTsKCQkJCX0KCQkJCWJyZWFrOwoJCQljYXNlICQudWkua2V5Q29kZS5VUDoKCQkJCWlmICggZXZlbnQuYWx0S2V5ICkgewoJCQkJCXRoaXMuX3RvZ2dsZSggZXZlbnQgKTsKCQkJCX0gZWxzZSB7CgkJCQkJdGhpcy5fbW92ZSggInByZXYiLCBldmVudCApOwoJCQkJfQoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLkRPV046CgkJCQlpZiAoIGV2ZW50LmFsdEtleSApIHsKCQkJCQl0aGlzLl90b2dnbGUoIGV2ZW50ICk7CgkJCQl9IGVsc2UgewoJCQkJCXRoaXMuX21vdmUoICJuZXh0IiwgZXZlbnQgKTsKCQkJCX0KCQkJCWJyZWFrOwoJCQljYXNlICQudWkua2V5Q29kZS5TUEFDRToKCQkJCWlmICggdGhpcy5pc09wZW4gKSB7CgkJCQkJdGhpcy5fc2VsZWN0Rm9jdXNlZEl0ZW0oIGV2ZW50ICk7CgkJCQl9IGVsc2UgewoJCQkJCXRoaXMuX3RvZ2dsZSggZXZlbnQgKTsKCQkJCX0KCQkJCWJyZWFrOwoJCQljYXNlICQudWkua2V5Q29kZS5MRUZUOgoJCQkJdGhpcy5fbW92ZSggInByZXYiLCBldmVudCApOwoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLlJJR0hUOgoJCQkJdGhpcy5fbW92ZSggIm5leHQiLCBldmVudCApOwoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLkhPTUU6CgkJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfVVA6CgkJCQl0aGlzLl9tb3ZlKCAiZmlyc3QiLCBldmVudCApOwoJCQkJYnJlYWs7CgkJCWNhc2UgJC51aS5rZXlDb2RlLkVORDoKCQkJY2FzZSAkLnVpLmtleUNvZGUuUEFHRV9ET1dOOgoJCQkJdGhpcy5fbW92ZSggImxhc3QiLCBldmVudCApOwoJCQkJYnJlYWs7CgkJCWRlZmF1bHQ6CgkJCQl0aGlzLm1lbnUudHJpZ2dlciggZXZlbnQgKTsKCQkJCXByZXZlbnREZWZhdWx0ID0gZmFsc2U7CgkJCX0KCgkJCWlmICggcHJldmVudERlZmF1bHQgKSB7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQl9CgkJfQoJfSwKCglfc2VsZWN0Rm9jdXNlZEl0ZW06IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgaXRlbSA9IHRoaXMubWVudUl0ZW1zLmVxKCB0aGlzLmZvY3VzSW5kZXggKS5wYXJlbnQoICJsaSIgKTsKCQlpZiAoICFpdGVtLmhhc0NsYXNzKCAidWktc3RhdGUtZGlzYWJsZWQiICkgKSB7CgkJCXRoaXMuX3NlbGVjdCggaXRlbS5kYXRhKCAidWktc2VsZWN0bWVudS1pdGVtIiApLCBldmVudCApOwoJCX0KCX0sCgoJX3NlbGVjdDogZnVuY3Rpb24oIGl0ZW0sIGV2ZW50ICkgewoJCXZhciBvbGRJbmRleCA9IHRoaXMuZWxlbWVudFsgMCBdLnNlbGVjdGVkSW5kZXg7CgoJCS8vIENoYW5nZSBuYXRpdmUgc2VsZWN0IGVsZW1lbnQKCQl0aGlzLmVsZW1lbnRbIDAgXS5zZWxlY3RlZEluZGV4ID0gaXRlbS5pbmRleDsKCQl0aGlzLmJ1dHRvbkl0ZW0ucmVwbGFjZVdpdGgoIHRoaXMuYnV0dG9uSXRlbSA9IHRoaXMuX3JlbmRlckJ1dHRvbkl0ZW0oIGl0ZW0gKSApOwoJCXRoaXMuX3NldEFyaWEoIGl0ZW0gKTsKCQl0aGlzLl90cmlnZ2VyKCAic2VsZWN0IiwgZXZlbnQsIHsgaXRlbTogaXRlbSB9ICk7CgoJCWlmICggaXRlbS5pbmRleCAhPT0gb2xkSW5kZXggKSB7CgkJCXRoaXMuX3RyaWdnZXIoICJjaGFuZ2UiLCBldmVudCwgeyBpdGVtOiBpdGVtIH0gKTsKCQl9CgoJCXRoaXMuY2xvc2UoIGV2ZW50ICk7Cgl9LAoKCV9zZXRBcmlhOiBmdW5jdGlvbiggaXRlbSApIHsKCQl2YXIgaWQgPSB0aGlzLm1lbnVJdGVtcy5lcSggaXRlbS5pbmRleCApLmF0dHIoICJpZCIgKTsKCgkJdGhpcy5idXR0b24uYXR0ciggewoJCQkiYXJpYS1sYWJlbGxlZGJ5IjogaWQsCgkJCSJhcmlhLWFjdGl2ZWRlc2NlbmRhbnQiOiBpZAoJCX0gKTsKCQl0aGlzLm1lbnUuYXR0ciggImFyaWEtYWN0aXZlZGVzY2VuZGFudCIsIGlkICk7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCWlmICgga2V5ID09PSAiaWNvbnMiICkgewoJCQl2YXIgaWNvbiA9IHRoaXMuYnV0dG9uLmZpbmQoICJzcGFuLnVpLWljb24iICk7CgkJCXRoaXMuX3JlbW92ZUNsYXNzKCBpY29uLCBudWxsLCB0aGlzLm9wdGlvbnMuaWNvbnMuYnV0dG9uICkKCQkJCS5fYWRkQ2xhc3MoIGljb24sIG51bGwsIHZhbHVlLmJ1dHRvbiApOwoJCX0KCgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsKCgkJaWYgKCBrZXkgPT09ICJhcHBlbmRUbyIgKSB7CgkJCXRoaXMubWVudVdyYXAuYXBwZW5kVG8oIHRoaXMuX2FwcGVuZFRvKCkgKTsKCQl9CgoJCWlmICgga2V5ID09PSAid2lkdGgiICkgewoJCQl0aGlzLl9yZXNpemVCdXR0b24oKTsKCQl9Cgl9LAoKCV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIHZhbHVlICkgewoJCXRoaXMuX3N1cGVyKCB2YWx1ZSApOwoKCQl0aGlzLm1lbnVJbnN0YW5jZS5vcHRpb24oICJkaXNhYmxlZCIsIHZhbHVlICk7CgkJdGhpcy5idXR0b24uYXR0ciggImFyaWEtZGlzYWJsZWQiLCB2YWx1ZSApOwoJCXRoaXMuX3RvZ2dsZUNsYXNzKCB0aGlzLmJ1dHRvbiwgbnVsbCwgInVpLXN0YXRlLWRpc2FibGVkIiwgdmFsdWUgKTsKCgkJdGhpcy5lbGVtZW50LnByb3AoICJkaXNhYmxlZCIsIHZhbHVlICk7CgkJaWYgKCB2YWx1ZSApIHsKCQkJdGhpcy5idXR0b24uYXR0ciggInRhYmluZGV4IiwgLTEgKTsKCQkJdGhpcy5jbG9zZSgpOwoJCX0gZWxzZSB7CgkJCXRoaXMuYnV0dG9uLmF0dHIoICJ0YWJpbmRleCIsIDAgKTsKCQl9Cgl9LAoKCV9hcHBlbmRUbzogZnVuY3Rpb24oKSB7CgkJdmFyIGVsZW1lbnQgPSB0aGlzLm9wdGlvbnMuYXBwZW5kVG87CgoJCWlmICggZWxlbWVudCApIHsKCQkJZWxlbWVudCA9IGVsZW1lbnQuanF1ZXJ5IHx8IGVsZW1lbnQubm9kZVR5cGUgPwoJCQkJJCggZWxlbWVudCApIDoKCQkJCXRoaXMuZG9jdW1lbnQuZmluZCggZWxlbWVudCApLmVxKCAwICk7CgkJfQoKCQlpZiAoICFlbGVtZW50IHx8ICFlbGVtZW50WyAwIF0gKSB7CgkJCWVsZW1lbnQgPSB0aGlzLmVsZW1lbnQuY2xvc2VzdCggIi51aS1mcm9udCwgZGlhbG9nIiApOwoJCX0KCgkJaWYgKCAhZWxlbWVudC5sZW5ndGggKSB7CgkJCWVsZW1lbnQgPSB0aGlzLmRvY3VtZW50WyAwIF0uYm9keTsKCQl9CgoJCXJldHVybiBlbGVtZW50OwoJfSwKCglfdG9nZ2xlQXR0cjogZnVuY3Rpb24oKSB7CgkJdGhpcy5idXR0b24uYXR0ciggImFyaWEtZXhwYW5kZWQiLCB0aGlzLmlzT3BlbiApOwoKCQkvLyBXZSBjYW4ndCB1c2UgdHdvIF90b2dnbGVDbGFzcygpIGNhbGxzIGhlcmUsIGJlY2F1c2Ugd2UgbmVlZCB0byBtYWtlIHN1cmUKCQkvLyB3ZSBhbHdheXMgcmVtb3ZlIGNsYXNzZXMgZmlyc3QgYW5kIGFkZCB0aGVtIHNlY29uZCwgb3RoZXJ3aXNlIGlmIGJvdGggY2xhc3NlcyBoYXZlIHRoZQoJCS8vIHNhbWUgdGhlbWUgY2xhc3MsIGl0IHdpbGwgYmUgcmVtb3ZlZCBhZnRlciB3ZSBhZGQgaXQuCgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuYnV0dG9uLCAidWktc2VsZWN0bWVudS1idXR0b24tIiArCgkJCSggdGhpcy5pc09wZW4gPyAiY2xvc2VkIiA6ICJvcGVuIiApICkKCQkJLl9hZGRDbGFzcyggdGhpcy5idXR0b24sICJ1aS1zZWxlY3RtZW51LWJ1dHRvbi0iICsKCQkJCSggdGhpcy5pc09wZW4gPyAib3BlbiIgOiAiY2xvc2VkIiApICkKCQkJLl90b2dnbGVDbGFzcyggdGhpcy5tZW51V3JhcCwgInVpLXNlbGVjdG1lbnUtb3BlbiIsIG51bGwsIHRoaXMuaXNPcGVuICk7CgoJCXRoaXMubWVudS5hdHRyKCAiYXJpYS1oaWRkZW4iLCAhdGhpcy5pc09wZW4gKTsKCX0sCgoJX3Jlc2l6ZUJ1dHRvbjogZnVuY3Rpb24oKSB7CgkJdmFyIHdpZHRoID0gdGhpcy5vcHRpb25zLndpZHRoOwoKCQkvLyBGb3IgYHdpZHRoOiBmYWxzZWAsIGp1c3QgcmVtb3ZlIGlubGluZSBzdHlsZSBhbmQgc3RvcAoJCWlmICggd2lkdGggPT09IGZhbHNlICkgewoJCQl0aGlzLmJ1dHRvbi5jc3MoICJ3aWR0aCIsICIiICk7CgkJCXJldHVybjsKCQl9CgoJCS8vIEZvciBgd2lkdGg6IG51bGxgLCBtYXRjaCB0aGUgd2lkdGggb2YgdGhlIG9yaWdpbmFsIGVsZW1lbnQKCQlpZiAoIHdpZHRoID09PSBudWxsICkgewoJCQl3aWR0aCA9IHRoaXMuZWxlbWVudC5zaG93KCkub3V0ZXJXaWR0aCgpOwoJCQl0aGlzLmVsZW1lbnQuaGlkZSgpOwoJCX0KCgkJdGhpcy5idXR0b24ub3V0ZXJXaWR0aCggd2lkdGggKTsKCX0sCgoJX3Jlc2l6ZU1lbnU6IGZ1bmN0aW9uKCkgewoJCXRoaXMubWVudS5vdXRlcldpZHRoKCBNYXRoLm1heCgKCQkJdGhpcy5idXR0b24ub3V0ZXJXaWR0aCgpLAoKCQkJLy8gU3VwcG9ydDogSUUxMAoJCQkvLyBJRTEwIHdyYXBzIGxvbmcgdGV4dCAocG9zc2libHkgYSByb3VuZGluZyBidWcpCgkJCS8vIHNvIHdlIGFkZCAxcHggdG8gYXZvaWQgdGhlIHdyYXBwaW5nCgkJCXRoaXMubWVudS53aWR0aCggIiIgKS5vdXRlcldpZHRoKCkgKyAxCgkJKSApOwoJfSwKCglfZ2V0Q3JlYXRlT3B0aW9uczogZnVuY3Rpb24oKSB7CgkJdmFyIG9wdGlvbnMgPSB0aGlzLl9zdXBlcigpOwoKCQlvcHRpb25zLmRpc2FibGVkID0gdGhpcy5lbGVtZW50LnByb3AoICJkaXNhYmxlZCIgKTsKCgkJcmV0dXJuIG9wdGlvbnM7Cgl9LAoKCV9wYXJzZU9wdGlvbnM6IGZ1bmN0aW9uKCBvcHRpb25zICkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJZGF0YSA9IFtdOwoJCW9wdGlvbnMuZWFjaCggZnVuY3Rpb24oIGluZGV4LCBpdGVtICkgewoJCQlkYXRhLnB1c2goIHRoYXQuX3BhcnNlT3B0aW9uKCAkKCBpdGVtICksIGluZGV4ICkgKTsKCQl9ICk7CgkJdGhpcy5pdGVtcyA9IGRhdGE7Cgl9LAoKCV9wYXJzZU9wdGlvbjogZnVuY3Rpb24oIG9wdGlvbiwgaW5kZXggKSB7CgkJdmFyIG9wdGdyb3VwID0gb3B0aW9uLnBhcmVudCggIm9wdGdyb3VwIiApOwoKCQlyZXR1cm4gewoJCQllbGVtZW50OiBvcHRpb24sCgkJCWluZGV4OiBpbmRleCwKCQkJdmFsdWU6IG9wdGlvbi52YWwoKSwKCQkJbGFiZWw6IG9wdGlvbi50ZXh0KCksCgkJCW9wdGdyb3VwOiBvcHRncm91cC5hdHRyKCAibGFiZWwiICkgfHwgIiIsCgkJCWRpc2FibGVkOiBvcHRncm91cC5wcm9wKCAiZGlzYWJsZWQiICkgfHwgb3B0aW9uLnByb3AoICJkaXNhYmxlZCIgKQoJCX07Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl0aGlzLl91bmJpbmRGb3JtUmVzZXRIYW5kbGVyKCk7CgkJdGhpcy5tZW51V3JhcC5yZW1vdmUoKTsKCQl0aGlzLmJ1dHRvbi5yZW1vdmUoKTsKCQl0aGlzLmVsZW1lbnQuc2hvdygpOwoJCXRoaXMuZWxlbWVudC5yZW1vdmVVbmlxdWVJZCgpOwoJCXRoaXMubGFiZWxzLmF0dHIoICJmb3IiLCB0aGlzLmlkcy5lbGVtZW50ICk7Cgl9Cn0gXSApOwoKCi8qIQogKiBqUXVlcnkgVUkgU2xpZGVyIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogU2xpZGVyCi8vPj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IERpc3BsYXlzIGEgZmxleGlibGUgc2xpZGVyIHdpdGggcmFuZ2VzIGFuZCBhY2Nlc3NpYmlsaXR5IHZpYSBrZXlib2FyZC4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NsaWRlci8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL3NsaWRlci8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL2NvcmUuY3NzCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9zbGlkZXIuY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgp2YXIgd2lkZ2V0c1NsaWRlciA9ICQud2lkZ2V0KCAidWkuc2xpZGVyIiwgJC51aS5tb3VzZSwgewoJdmVyc2lvbjogIjEuMTIuMSIsCgl3aWRnZXRFdmVudFByZWZpeDogInNsaWRlIiwKCglvcHRpb25zOiB7CgkJYW5pbWF0ZTogZmFsc2UsCgkJY2xhc3NlczogewoJCQkidWktc2xpZGVyIjogInVpLWNvcm5lci1hbGwiLAoJCQkidWktc2xpZGVyLWhhbmRsZSI6ICJ1aS1jb3JuZXItYWxsIiwKCgkJCS8vIE5vdGU6IHVpLXdpZGdldC1oZWFkZXIgaXNuJ3QgdGhlIG1vc3QgZml0dGluZ2x5IHNlbWFudGljIGZyYW1ld29yayBjbGFzcyBmb3IgdGhpcwoJCQkvLyBlbGVtZW50LCBidXQgd29ya2VkIGJlc3QgdmlzdWFsbHkgd2l0aCBhIHZhcmlldHkgb2YgdGhlbWVzCgkJCSJ1aS1zbGlkZXItcmFuZ2UiOiAidWktY29ybmVyLWFsbCB1aS13aWRnZXQtaGVhZGVyIgoJCX0sCgkJZGlzdGFuY2U6IDAsCgkJbWF4OiAxMDAsCgkJbWluOiAwLAoJCW9yaWVudGF0aW9uOiAiaG9yaXpvbnRhbCIsCgkJcmFuZ2U6IGZhbHNlLAoJCXN0ZXA6IDEsCgkJdmFsdWU6IDAsCgkJdmFsdWVzOiBudWxsLAoKCQkvLyBDYWxsYmFja3MKCQljaGFuZ2U6IG51bGwsCgkJc2xpZGU6IG51bGwsCgkJc3RhcnQ6IG51bGwsCgkJc3RvcDogbnVsbAoJfSwKCgkvLyBOdW1iZXIgb2YgcGFnZXMgaW4gYSBzbGlkZXIKCS8vIChob3cgbWFueSB0aW1lcyBjYW4geW91IHBhZ2UgdXAvZG93biB0byBnbyB0aHJvdWdoIHRoZSB3aG9sZSByYW5nZSkKCW51bVBhZ2VzOiA1LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX2tleVNsaWRpbmcgPSBmYWxzZTsKCQl0aGlzLl9tb3VzZVNsaWRpbmcgPSBmYWxzZTsKCQl0aGlzLl9hbmltYXRlT2ZmID0gdHJ1ZTsKCQl0aGlzLl9oYW5kbGVJbmRleCA9IG51bGw7CgkJdGhpcy5fZGV0ZWN0T3JpZW50YXRpb24oKTsKCQl0aGlzLl9tb3VzZUluaXQoKTsKCQl0aGlzLl9jYWxjdWxhdGVOZXdNYXgoKTsKCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1zbGlkZXIgdWktc2xpZGVyLSIgKyB0aGlzLm9yaWVudGF0aW9uLAoJCQkidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IiApOwoKCQl0aGlzLl9yZWZyZXNoKCk7CgoJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsKCX0sCgoJX3JlZnJlc2g6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX2NyZWF0ZVJhbmdlKCk7CgkJdGhpcy5fY3JlYXRlSGFuZGxlcygpOwoJCXRoaXMuX3NldHVwRXZlbnRzKCk7CgkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7Cgl9LAoKCV9jcmVhdGVIYW5kbGVzOiBmdW5jdGlvbigpIHsKCQl2YXIgaSwgaGFuZGxlQ291bnQsCgkJCW9wdGlvbnMgPSB0aGlzLm9wdGlvbnMsCgkJCWV4aXN0aW5nSGFuZGxlcyA9IHRoaXMuZWxlbWVudC5maW5kKCAiLnVpLXNsaWRlci1oYW5kbGUiICksCgkJCWhhbmRsZSA9ICI8c3BhbiB0YWJpbmRleD0nMCc+PC9zcGFuPiIsCgkJCWhhbmRsZXMgPSBbXTsKCgkJaGFuZGxlQ291bnQgPSAoIG9wdGlvbnMudmFsdWVzICYmIG9wdGlvbnMudmFsdWVzLmxlbmd0aCApIHx8IDE7CgoJCWlmICggZXhpc3RpbmdIYW5kbGVzLmxlbmd0aCA+IGhhbmRsZUNvdW50ICkgewoJCQlleGlzdGluZ0hhbmRsZXMuc2xpY2UoIGhhbmRsZUNvdW50ICkucmVtb3ZlKCk7CgkJCWV4aXN0aW5nSGFuZGxlcyA9IGV4aXN0aW5nSGFuZGxlcy5zbGljZSggMCwgaGFuZGxlQ291bnQgKTsKCQl9CgoJCWZvciAoIGkgPSBleGlzdGluZ0hhbmRsZXMubGVuZ3RoOyBpIDwgaGFuZGxlQ291bnQ7IGkrKyApIHsKCQkJaGFuZGxlcy5wdXNoKCBoYW5kbGUgKTsKCQl9CgoJCXRoaXMuaGFuZGxlcyA9IGV4aXN0aW5nSGFuZGxlcy5hZGQoICQoIGhhbmRsZXMuam9pbiggIiIgKSApLmFwcGVuZFRvKCB0aGlzLmVsZW1lbnQgKSApOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5oYW5kbGVzLCAidWktc2xpZGVyLWhhbmRsZSIsICJ1aS1zdGF0ZS1kZWZhdWx0IiApOwoKCQl0aGlzLmhhbmRsZSA9IHRoaXMuaGFuZGxlcy5lcSggMCApOwoKCQl0aGlzLmhhbmRsZXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7CgkJCSQoIHRoaXMgKQoJCQkJLmRhdGEoICJ1aS1zbGlkZXItaGFuZGxlLWluZGV4IiwgaSApCgkJCQkuYXR0ciggInRhYkluZGV4IiwgMCApOwoJCX0gKTsKCX0sCgoJX2NyZWF0ZVJhbmdlOiBmdW5jdGlvbigpIHsKCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9uczsKCgkJaWYgKCBvcHRpb25zLnJhbmdlICkgewoJCQlpZiAoIG9wdGlvbnMucmFuZ2UgPT09IHRydWUgKSB7CgkJCQlpZiAoICFvcHRpb25zLnZhbHVlcyApIHsKCQkJCQlvcHRpb25zLnZhbHVlcyA9IFsgdGhpcy5fdmFsdWVNaW4oKSwgdGhpcy5fdmFsdWVNaW4oKSBdOwoJCQkJfSBlbHNlIGlmICggb3B0aW9ucy52YWx1ZXMubGVuZ3RoICYmIG9wdGlvbnMudmFsdWVzLmxlbmd0aCAhPT0gMiApIHsKCQkJCQlvcHRpb25zLnZhbHVlcyA9IFsgb3B0aW9ucy52YWx1ZXNbIDAgXSwgb3B0aW9ucy52YWx1ZXNbIDAgXSBdOwoJCQkJfSBlbHNlIGlmICggJC5pc0FycmF5KCBvcHRpb25zLnZhbHVlcyApICkgewoJCQkJCW9wdGlvbnMudmFsdWVzID0gb3B0aW9ucy52YWx1ZXMuc2xpY2UoIDAgKTsKCQkJCX0KCQkJfQoKCQkJaWYgKCAhdGhpcy5yYW5nZSB8fCAhdGhpcy5yYW5nZS5sZW5ndGggKSB7CgkJCQl0aGlzLnJhbmdlID0gJCggIjxkaXY+IiApCgkJCQkJLmFwcGVuZFRvKCB0aGlzLmVsZW1lbnQgKTsKCgkJCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5yYW5nZSwgInVpLXNsaWRlci1yYW5nZSIgKTsKCQkJfSBlbHNlIHsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLnJhbmdlLCAidWktc2xpZGVyLXJhbmdlLW1pbiB1aS1zbGlkZXItcmFuZ2UtbWF4IiApOwoKCQkJCS8vIEhhbmRsZSByYW5nZSBzd2l0Y2hpbmcgZnJvbSB0cnVlIHRvIG1pbi9tYXgKCQkJCXRoaXMucmFuZ2UuY3NzKCB7CgkJCQkJImxlZnQiOiAiIiwKCQkJCQkiYm90dG9tIjogIiIKCQkJCX0gKTsKCQkJfQoJCQlpZiAoIG9wdGlvbnMucmFuZ2UgPT09ICJtaW4iIHx8IG9wdGlvbnMucmFuZ2UgPT09ICJtYXgiICkgewoJCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMucmFuZ2UsICJ1aS1zbGlkZXItcmFuZ2UtIiArIG9wdGlvbnMucmFuZ2UgKTsKCQkJfQoJCX0gZWxzZSB7CgkJCWlmICggdGhpcy5yYW5nZSApIHsKCQkJCXRoaXMucmFuZ2UucmVtb3ZlKCk7CgkJCX0KCQkJdGhpcy5yYW5nZSA9IG51bGw7CgkJfQoJfSwKCglfc2V0dXBFdmVudHM6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX29mZiggdGhpcy5oYW5kbGVzICk7CgkJdGhpcy5fb24oIHRoaXMuaGFuZGxlcywgdGhpcy5faGFuZGxlRXZlbnRzICk7CgkJdGhpcy5faG92ZXJhYmxlKCB0aGlzLmhhbmRsZXMgKTsKCQl0aGlzLl9mb2N1c2FibGUoIHRoaXMuaGFuZGxlcyApOwoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdGhpcy5oYW5kbGVzLnJlbW92ZSgpOwoJCWlmICggdGhpcy5yYW5nZSApIHsKCQkJdGhpcy5yYW5nZS5yZW1vdmUoKTsKCQl9CgoJCXRoaXMuX21vdXNlRGVzdHJveSgpOwoJfSwKCglfbW91c2VDYXB0dXJlOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIHBvc2l0aW9uLCBub3JtVmFsdWUsIGRpc3RhbmNlLCBjbG9zZXN0SGFuZGxlLCBpbmRleCwgYWxsb3dlZCwgb2Zmc2V0LCBtb3VzZU92ZXJIYW5kbGUsCgkJCXRoYXQgPSB0aGlzLAoJCQlvID0gdGhpcy5vcHRpb25zOwoKCQlpZiAoIG8uZGlzYWJsZWQgKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgoJCXRoaXMuZWxlbWVudFNpemUgPSB7CgkJCXdpZHRoOiB0aGlzLmVsZW1lbnQub3V0ZXJXaWR0aCgpLAoJCQloZWlnaHQ6IHRoaXMuZWxlbWVudC5vdXRlckhlaWdodCgpCgkJfTsKCQl0aGlzLmVsZW1lbnRPZmZzZXQgPSB0aGlzLmVsZW1lbnQub2Zmc2V0KCk7CgoJCXBvc2l0aW9uID0geyB4OiBldmVudC5wYWdlWCwgeTogZXZlbnQucGFnZVkgfTsKCQlub3JtVmFsdWUgPSB0aGlzLl9ub3JtVmFsdWVGcm9tTW91c2UoIHBvc2l0aW9uICk7CgkJZGlzdGFuY2UgPSB0aGlzLl92YWx1ZU1heCgpIC0gdGhpcy5fdmFsdWVNaW4oKSArIDE7CgkJdGhpcy5oYW5kbGVzLmVhY2goIGZ1bmN0aW9uKCBpICkgewoJCQl2YXIgdGhpc0Rpc3RhbmNlID0gTWF0aC5hYnMoIG5vcm1WYWx1ZSAtIHRoYXQudmFsdWVzKCBpICkgKTsKCQkJaWYgKCAoIGRpc3RhbmNlID4gdGhpc0Rpc3RhbmNlICkgfHwKCQkJCSggZGlzdGFuY2UgPT09IHRoaXNEaXN0YW5jZSAmJgoJCQkJCSggaSA9PT0gdGhhdC5fbGFzdENoYW5nZWRWYWx1ZSB8fCB0aGF0LnZhbHVlcyggaSApID09PSBvLm1pbiApICkgKSB7CgkJCQlkaXN0YW5jZSA9IHRoaXNEaXN0YW5jZTsKCQkJCWNsb3Nlc3RIYW5kbGUgPSAkKCB0aGlzICk7CgkJCQlpbmRleCA9IGk7CgkJCX0KCQl9ICk7CgoJCWFsbG93ZWQgPSB0aGlzLl9zdGFydCggZXZlbnQsIGluZGV4ICk7CgkJaWYgKCBhbGxvd2VkID09PSBmYWxzZSApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCQl0aGlzLl9tb3VzZVNsaWRpbmcgPSB0cnVlOwoKCQl0aGlzLl9oYW5kbGVJbmRleCA9IGluZGV4OwoKCQl0aGlzLl9hZGRDbGFzcyggY2xvc2VzdEhhbmRsZSwgbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQljbG9zZXN0SGFuZGxlLnRyaWdnZXIoICJmb2N1cyIgKTsKCgkJb2Zmc2V0ID0gY2xvc2VzdEhhbmRsZS5vZmZzZXQoKTsKCQltb3VzZU92ZXJIYW5kbGUgPSAhJCggZXZlbnQudGFyZ2V0ICkucGFyZW50cygpLmFkZEJhY2soKS5pcyggIi51aS1zbGlkZXItaGFuZGxlIiApOwoJCXRoaXMuX2NsaWNrT2Zmc2V0ID0gbW91c2VPdmVySGFuZGxlID8geyBsZWZ0OiAwLCB0b3A6IDAgfSA6IHsKCQkJbGVmdDogZXZlbnQucGFnZVggLSBvZmZzZXQubGVmdCAtICggY2xvc2VzdEhhbmRsZS53aWR0aCgpIC8gMiApLAoJCQl0b3A6IGV2ZW50LnBhZ2VZIC0gb2Zmc2V0LnRvcCAtCgkJCQkoIGNsb3Nlc3RIYW5kbGUuaGVpZ2h0KCkgLyAyICkgLQoJCQkJKCBwYXJzZUludCggY2xvc2VzdEhhbmRsZS5jc3MoICJib3JkZXJUb3BXaWR0aCIgKSwgMTAgKSB8fCAwICkgLQoJCQkJKCBwYXJzZUludCggY2xvc2VzdEhhbmRsZS5jc3MoICJib3JkZXJCb3R0b21XaWR0aCIgKSwgMTAgKSB8fCAwICkgKwoJCQkJKCBwYXJzZUludCggY2xvc2VzdEhhbmRsZS5jc3MoICJtYXJnaW5Ub3AiICksIDEwICkgfHwgMCApCgkJfTsKCgkJaWYgKCAhdGhpcy5oYW5kbGVzLmhhc0NsYXNzKCAidWktc3RhdGUtaG92ZXIiICkgKSB7CgkJCXRoaXMuX3NsaWRlKCBldmVudCwgaW5kZXgsIG5vcm1WYWx1ZSApOwoJCX0KCQl0aGlzLl9hbmltYXRlT2ZmID0gdHJ1ZTsKCQlyZXR1cm4gdHJ1ZTsKCX0sCgoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0cnVlOwoJfSwKCglfbW91c2VEcmFnOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIHBvc2l0aW9uID0geyB4OiBldmVudC5wYWdlWCwgeTogZXZlbnQucGFnZVkgfSwKCQkJbm9ybVZhbHVlID0gdGhpcy5fbm9ybVZhbHVlRnJvbU1vdXNlKCBwb3NpdGlvbiApOwoKCQl0aGlzLl9zbGlkZSggZXZlbnQsIHRoaXMuX2hhbmRsZUluZGV4LCBub3JtVmFsdWUgKTsKCgkJcmV0dXJuIGZhbHNlOwoJfSwKCglfbW91c2VTdG9wOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuaGFuZGxlcywgbnVsbCwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQl0aGlzLl9tb3VzZVNsaWRpbmcgPSBmYWxzZTsKCgkJdGhpcy5fc3RvcCggZXZlbnQsIHRoaXMuX2hhbmRsZUluZGV4ICk7CgkJdGhpcy5fY2hhbmdlKCBldmVudCwgdGhpcy5faGFuZGxlSW5kZXggKTsKCgkJdGhpcy5faGFuZGxlSW5kZXggPSBudWxsOwoJCXRoaXMuX2NsaWNrT2Zmc2V0ID0gbnVsbDsKCQl0aGlzLl9hbmltYXRlT2ZmID0gZmFsc2U7CgoJCXJldHVybiBmYWxzZTsKCX0sCgoJX2RldGVjdE9yaWVudGF0aW9uOiBmdW5jdGlvbigpIHsKCQl0aGlzLm9yaWVudGF0aW9uID0gKCB0aGlzLm9wdGlvbnMub3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIgKSA/ICJ2ZXJ0aWNhbCIgOiAiaG9yaXpvbnRhbCI7Cgl9LAoKCV9ub3JtVmFsdWVGcm9tTW91c2U6IGZ1bmN0aW9uKCBwb3NpdGlvbiApIHsKCQl2YXIgcGl4ZWxUb3RhbCwKCQkJcGl4ZWxNb3VzZSwKCQkJcGVyY2VudE1vdXNlLAoJCQl2YWx1ZVRvdGFsLAoJCQl2YWx1ZU1vdXNlOwoKCQlpZiAoIHRoaXMub3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiApIHsKCQkJcGl4ZWxUb3RhbCA9IHRoaXMuZWxlbWVudFNpemUud2lkdGg7CgkJCXBpeGVsTW91c2UgPSBwb3NpdGlvbi54IC0gdGhpcy5lbGVtZW50T2Zmc2V0LmxlZnQgLQoJCQkJKCB0aGlzLl9jbGlja09mZnNldCA/IHRoaXMuX2NsaWNrT2Zmc2V0LmxlZnQgOiAwICk7CgkJfSBlbHNlIHsKCQkJcGl4ZWxUb3RhbCA9IHRoaXMuZWxlbWVudFNpemUuaGVpZ2h0OwoJCQlwaXhlbE1vdXNlID0gcG9zaXRpb24ueSAtIHRoaXMuZWxlbWVudE9mZnNldC50b3AgLQoJCQkJKCB0aGlzLl9jbGlja09mZnNldCA/IHRoaXMuX2NsaWNrT2Zmc2V0LnRvcCA6IDAgKTsKCQl9CgoJCXBlcmNlbnRNb3VzZSA9ICggcGl4ZWxNb3VzZSAvIHBpeGVsVG90YWwgKTsKCQlpZiAoIHBlcmNlbnRNb3VzZSA+IDEgKSB7CgkJCXBlcmNlbnRNb3VzZSA9IDE7CgkJfQoJCWlmICggcGVyY2VudE1vdXNlIDwgMCApIHsKCQkJcGVyY2VudE1vdXNlID0gMDsKCQl9CgkJaWYgKCB0aGlzLm9yaWVudGF0aW9uID09PSAidmVydGljYWwiICkgewoJCQlwZXJjZW50TW91c2UgPSAxIC0gcGVyY2VudE1vdXNlOwoJCX0KCgkJdmFsdWVUb3RhbCA9IHRoaXMuX3ZhbHVlTWF4KCkgLSB0aGlzLl92YWx1ZU1pbigpOwoJCXZhbHVlTW91c2UgPSB0aGlzLl92YWx1ZU1pbigpICsgcGVyY2VudE1vdXNlICogdmFsdWVUb3RhbDsKCgkJcmV0dXJuIHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2YWx1ZU1vdXNlICk7Cgl9LAoKCV91aUhhc2g6IGZ1bmN0aW9uKCBpbmRleCwgdmFsdWUsIHZhbHVlcyApIHsKCQl2YXIgdWlIYXNoID0gewoJCQloYW5kbGU6IHRoaXMuaGFuZGxlc1sgaW5kZXggXSwKCQkJaGFuZGxlSW5kZXg6IGluZGV4LAoJCQl2YWx1ZTogdmFsdWUgIT09IHVuZGVmaW5lZCA/IHZhbHVlIDogdGhpcy52YWx1ZSgpCgkJfTsKCgkJaWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoJCQl1aUhhc2gudmFsdWUgPSB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiB0aGlzLnZhbHVlcyggaW5kZXggKTsKCQkJdWlIYXNoLnZhbHVlcyA9IHZhbHVlcyB8fCB0aGlzLnZhbHVlcygpOwoJCX0KCgkJcmV0dXJuIHVpSGFzaDsKCX0sCgoJX2hhc011bHRpcGxlVmFsdWVzOiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy5vcHRpb25zLnZhbHVlcyAmJiB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aDsKCX0sCgoJX3N0YXJ0OiBmdW5jdGlvbiggZXZlbnQsIGluZGV4ICkgewoJCXJldHVybiB0aGlzLl90cmlnZ2VyKCAic3RhcnQiLCBldmVudCwgdGhpcy5fdWlIYXNoKCBpbmRleCApICk7Cgl9LAoKCV9zbGlkZTogZnVuY3Rpb24oIGV2ZW50LCBpbmRleCwgbmV3VmFsICkgewoJCXZhciBhbGxvd2VkLCBvdGhlclZhbCwKCQkJY3VycmVudFZhbHVlID0gdGhpcy52YWx1ZSgpLAoJCQluZXdWYWx1ZXMgPSB0aGlzLnZhbHVlcygpOwoKCQlpZiAoIHRoaXMuX2hhc011bHRpcGxlVmFsdWVzKCkgKSB7CgkJCW90aGVyVmFsID0gdGhpcy52YWx1ZXMoIGluZGV4ID8gMCA6IDEgKTsKCQkJY3VycmVudFZhbHVlID0gdGhpcy52YWx1ZXMoIGluZGV4ICk7CgoJCQlpZiAoIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoID09PSAyICYmIHRoaXMub3B0aW9ucy5yYW5nZSA9PT0gdHJ1ZSApIHsKCQkJCW5ld1ZhbCA9ICBpbmRleCA9PT0gMCA/IE1hdGgubWluKCBvdGhlclZhbCwgbmV3VmFsICkgOiBNYXRoLm1heCggb3RoZXJWYWwsIG5ld1ZhbCApOwoJCQl9CgoJCQluZXdWYWx1ZXNbIGluZGV4IF0gPSBuZXdWYWw7CgkJfQoKCQlpZiAoIG5ld1ZhbCA9PT0gY3VycmVudFZhbHVlICkgewoJCQlyZXR1cm47CgkJfQoKCQlhbGxvd2VkID0gdGhpcy5fdHJpZ2dlciggInNsaWRlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggaW5kZXgsIG5ld1ZhbCwgbmV3VmFsdWVzICkgKTsKCgkJLy8gQSBzbGlkZSBjYW4gYmUgY2FuY2VsZWQgYnkgcmV0dXJuaW5nIGZhbHNlIGZyb20gdGhlIHNsaWRlIGNhbGxiYWNrCgkJaWYgKCBhbGxvd2VkID09PSBmYWxzZSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoJCQl0aGlzLnZhbHVlcyggaW5kZXgsIG5ld1ZhbCApOwoJCX0gZWxzZSB7CgkJCXRoaXMudmFsdWUoIG5ld1ZhbCApOwoJCX0KCX0sCgoJX3N0b3A6IGZ1bmN0aW9uKCBldmVudCwgaW5kZXggKSB7CgkJdGhpcy5fdHJpZ2dlciggInN0b3AiLCBldmVudCwgdGhpcy5fdWlIYXNoKCBpbmRleCApICk7Cgl9LAoKCV9jaGFuZ2U6IGZ1bmN0aW9uKCBldmVudCwgaW5kZXggKSB7CgkJaWYgKCAhdGhpcy5fa2V5U2xpZGluZyAmJiAhdGhpcy5fbW91c2VTbGlkaW5nICkgewoKCQkJLy9zdG9yZSB0aGUgbGFzdCBjaGFuZ2VkIHZhbHVlIGluZGV4IGZvciByZWZlcmVuY2Ugd2hlbiBoYW5kbGVzIG92ZXJsYXAKCQkJdGhpcy5fbGFzdENoYW5nZWRWYWx1ZSA9IGluZGV4OwoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggaW5kZXggKSApOwoJCX0KCX0sCgoJdmFsdWU6IGZ1bmN0aW9uKCBuZXdWYWx1ZSApIHsKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCXRoaXMub3B0aW9ucy52YWx1ZSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBuZXdWYWx1ZSApOwoJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCQkJdGhpcy5fY2hhbmdlKCBudWxsLCAwICk7CgkJCXJldHVybjsKCQl9CgoJCXJldHVybiB0aGlzLl92YWx1ZSgpOwoJfSwKCgl2YWx1ZXM6IGZ1bmN0aW9uKCBpbmRleCwgbmV3VmFsdWUgKSB7CgkJdmFyIHZhbHMsCgkJCW5ld1ZhbHVlcywKCQkJaTsKCgkJaWYgKCBhcmd1bWVudHMubGVuZ3RoID4gMSApIHsKCQkJdGhpcy5vcHRpb25zLnZhbHVlc1sgaW5kZXggXSA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBuZXdWYWx1ZSApOwoJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCQkJdGhpcy5fY2hhbmdlKCBudWxsLCBpbmRleCApOwoJCQlyZXR1cm47CgkJfQoKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7CgkJCWlmICggJC5pc0FycmF5KCBhcmd1bWVudHNbIDAgXSApICkgewoJCQkJdmFscyA9IHRoaXMub3B0aW9ucy52YWx1ZXM7CgkJCQluZXdWYWx1ZXMgPSBhcmd1bWVudHNbIDAgXTsKCQkJCWZvciAoIGkgPSAwOyBpIDwgdmFscy5sZW5ndGg7IGkgKz0gMSApIHsKCQkJCQl2YWxzWyBpIF0gPSB0aGlzLl90cmltQWxpZ25WYWx1ZSggbmV3VmFsdWVzWyBpIF0gKTsKCQkJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIGkgKTsKCQkJCX0KCQkJCXRoaXMuX3JlZnJlc2hWYWx1ZSgpOwoJCQl9IGVsc2UgewoJCQkJaWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoJCQkJCXJldHVybiB0aGlzLl92YWx1ZXMoIGluZGV4ICk7CgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiB0aGlzLnZhbHVlKCk7CgkJCQl9CgkJCX0KCQl9IGVsc2UgewoJCQlyZXR1cm4gdGhpcy5fdmFsdWVzKCk7CgkJfQoJfSwKCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIgaSwKCQkJdmFsc0xlbmd0aCA9IDA7CgoJCWlmICgga2V5ID09PSAicmFuZ2UiICYmIHRoaXMub3B0aW9ucy5yYW5nZSA9PT0gdHJ1ZSApIHsKCQkJaWYgKCB2YWx1ZSA9PT0gIm1pbiIgKSB7CgkJCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlzLl92YWx1ZXMoIDAgKTsKCQkJCXRoaXMub3B0aW9ucy52YWx1ZXMgPSBudWxsOwoJCQl9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gIm1heCIgKSB7CgkJCQl0aGlzLm9wdGlvbnMudmFsdWUgPSB0aGlzLl92YWx1ZXMoIHRoaXMub3B0aW9ucy52YWx1ZXMubGVuZ3RoIC0gMSApOwoJCQkJdGhpcy5vcHRpb25zLnZhbHVlcyA9IG51bGw7CgkJCX0KCQl9CgoJCWlmICggJC5pc0FycmF5KCB0aGlzLm9wdGlvbnMudmFsdWVzICkgKSB7CgkJCXZhbHNMZW5ndGggPSB0aGlzLm9wdGlvbnMudmFsdWVzLmxlbmd0aDsKCQl9CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCXN3aXRjaCAoIGtleSApIHsKCQkJY2FzZSAib3JpZW50YXRpb24iOgoJCQkJdGhpcy5fZGV0ZWN0T3JpZW50YXRpb24oKTsKCQkJCXRoaXMuX3JlbW92ZUNsYXNzKCAidWktc2xpZGVyLWhvcml6b250YWwgdWktc2xpZGVyLXZlcnRpY2FsIiApCgkJCQkJLl9hZGRDbGFzcyggInVpLXNsaWRlci0iICsgdGhpcy5vcmllbnRhdGlvbiApOwoJCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7CgkJCQlpZiAoIHRoaXMub3B0aW9ucy5yYW5nZSApIHsKCQkJCQl0aGlzLl9yZWZyZXNoUmFuZ2UoIHZhbHVlICk7CgkJCQl9CgoJCQkJLy8gUmVzZXQgcG9zaXRpb25pbmcgZnJvbSBwcmV2aW91cyBvcmllbnRhdGlvbgoJCQkJdGhpcy5oYW5kbGVzLmNzcyggdmFsdWUgPT09ICJob3Jpem9udGFsIiA/ICJib3R0b20iIDogImxlZnQiLCAiIiApOwoJCQkJYnJlYWs7CgkJCWNhc2UgInZhbHVlIjoKCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOwoJCQkJdGhpcy5fcmVmcmVzaFZhbHVlKCk7CgkJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIDAgKTsKCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsKCQkJCWJyZWFrOwoJCQljYXNlICJ2YWx1ZXMiOgoJCQkJdGhpcy5fYW5pbWF0ZU9mZiA9IHRydWU7CgkJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCgkJCQkvLyBTdGFydCBmcm9tIHRoZSBsYXN0IGhhbmRsZSB0byBwcmV2ZW50IHVucmVhY2hhYmxlIGhhbmRsZXMgKCM5MDQ2KQoJCQkJZm9yICggaSA9IHZhbHNMZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJCQl0aGlzLl9jaGFuZ2UoIG51bGwsIGkgKTsKCQkJCX0KCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsKCQkJCWJyZWFrOwoJCQljYXNlICJzdGVwIjoKCQkJY2FzZSAibWluIjoKCQkJY2FzZSAibWF4IjoKCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSB0cnVlOwoJCQkJdGhpcy5fY2FsY3VsYXRlTmV3TWF4KCk7CgkJCQl0aGlzLl9yZWZyZXNoVmFsdWUoKTsKCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsKCQkJCWJyZWFrOwoJCQljYXNlICJyYW5nZSI6CgkJCQl0aGlzLl9hbmltYXRlT2ZmID0gdHJ1ZTsKCQkJCXRoaXMuX3JlZnJlc2goKTsKCQkJCXRoaXMuX2FuaW1hdGVPZmYgPSBmYWxzZTsKCQkJCWJyZWFrOwoJCX0KCX0sCgoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhpcy5fc3VwZXIoIHZhbHVlICk7CgoJCXRoaXMuX3RvZ2dsZUNsYXNzKCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7Cgl9LAoKCS8vaW50ZXJuYWwgdmFsdWUgZ2V0dGVyCgkvLyBfdmFsdWUoKSByZXR1cm5zIHZhbHVlIHRyaW1tZWQgYnkgbWluIGFuZCBtYXgsIGFsaWduZWQgYnkgc3RlcAoJX3ZhbHVlOiBmdW5jdGlvbigpIHsKCQl2YXIgdmFsID0gdGhpcy5vcHRpb25zLnZhbHVlOwoJCXZhbCA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCB2YWwgKTsKCgkJcmV0dXJuIHZhbDsKCX0sCgoJLy9pbnRlcm5hbCB2YWx1ZXMgZ2V0dGVyCgkvLyBfdmFsdWVzKCkgcmV0dXJucyBhcnJheSBvZiB2YWx1ZXMgdHJpbW1lZCBieSBtaW4gYW5kIG1heCwgYWxpZ25lZCBieSBzdGVwCgkvLyBfdmFsdWVzKCBpbmRleCApIHJldHVybnMgc2luZ2xlIHZhbHVlIHRyaW1tZWQgYnkgbWluIGFuZCBtYXgsIGFsaWduZWQgYnkgc3RlcAoJX3ZhbHVlczogZnVuY3Rpb24oIGluZGV4ICkgewoJCXZhciB2YWwsCgkJCXZhbHMsCgkJCWk7CgoJCWlmICggYXJndW1lbnRzLmxlbmd0aCApIHsKCQkJdmFsID0gdGhpcy5vcHRpb25zLnZhbHVlc1sgaW5kZXggXTsKCQkJdmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIHZhbCApOwoKCQkJcmV0dXJuIHZhbDsKCQl9IGVsc2UgaWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoKCQkJLy8gLnNsaWNlKCkgY3JlYXRlcyBhIGNvcHkgb2YgdGhlIGFycmF5CgkJCS8vIHRoaXMgY29weSBnZXRzIHRyaW1tZWQgYnkgbWluIGFuZCBtYXggYW5kIHRoZW4gcmV0dXJuZWQKCQkJdmFscyA9IHRoaXMub3B0aW9ucy52YWx1ZXMuc2xpY2UoKTsKCQkJZm9yICggaSA9IDA7IGkgPCB2YWxzLmxlbmd0aDsgaSArPSAxICkgewoJCQkJdmFsc1sgaSBdID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIHZhbHNbIGkgXSApOwoJCQl9CgoJCQlyZXR1cm4gdmFsczsKCQl9IGVsc2UgewoJCQlyZXR1cm4gW107CgkJfQoJfSwKCgkvLyBSZXR1cm5zIHRoZSBzdGVwLWFsaWduZWQgdmFsdWUgdGhhdCB2YWwgaXMgY2xvc2VzdCB0bywgYmV0d2VlbiAoaW5jbHVzaXZlKSBtaW4gYW5kIG1heAoJX3RyaW1BbGlnblZhbHVlOiBmdW5jdGlvbiggdmFsICkgewoJCWlmICggdmFsIDw9IHRoaXMuX3ZhbHVlTWluKCkgKSB7CgkJCXJldHVybiB0aGlzLl92YWx1ZU1pbigpOwoJCX0KCQlpZiAoIHZhbCA+PSB0aGlzLl92YWx1ZU1heCgpICkgewoJCQlyZXR1cm4gdGhpcy5fdmFsdWVNYXgoKTsKCQl9CgkJdmFyIHN0ZXAgPSAoIHRoaXMub3B0aW9ucy5zdGVwID4gMCApID8gdGhpcy5vcHRpb25zLnN0ZXAgOiAxLAoJCQl2YWxNb2RTdGVwID0gKCB2YWwgLSB0aGlzLl92YWx1ZU1pbigpICkgJSBzdGVwLAoJCQlhbGlnblZhbHVlID0gdmFsIC0gdmFsTW9kU3RlcDsKCgkJaWYgKCBNYXRoLmFicyggdmFsTW9kU3RlcCApICogMiA+PSBzdGVwICkgewoJCQlhbGlnblZhbHVlICs9ICggdmFsTW9kU3RlcCA+IDAgKSA/IHN0ZXAgOiAoIC1zdGVwICk7CgkJfQoKCQkvLyBTaW5jZSBKYXZhU2NyaXB0IGhhcyBwcm9ibGVtcyB3aXRoIGxhcmdlIGZsb2F0cywgcm91bmQKCQkvLyB0aGUgZmluYWwgdmFsdWUgdG8gNSBkaWdpdHMgYWZ0ZXIgdGhlIGRlY2ltYWwgcG9pbnQgKHNlZSAjNDEyNCkKCQlyZXR1cm4gcGFyc2VGbG9hdCggYWxpZ25WYWx1ZS50b0ZpeGVkKCA1ICkgKTsKCX0sCgoJX2NhbGN1bGF0ZU5ld01heDogZnVuY3Rpb24oKSB7CgkJdmFyIG1heCA9IHRoaXMub3B0aW9ucy5tYXgsCgkJCW1pbiA9IHRoaXMuX3ZhbHVlTWluKCksCgkJCXN0ZXAgPSB0aGlzLm9wdGlvbnMuc3RlcCwKCQkJYWJvdmVNaW4gPSBNYXRoLnJvdW5kKCAoIG1heCAtIG1pbiApIC8gc3RlcCApICogc3RlcDsKCQltYXggPSBhYm92ZU1pbiArIG1pbjsKCQlpZiAoIG1heCA+IHRoaXMub3B0aW9ucy5tYXggKSB7CgoJCQkvL0lmIG1heCBpcyBub3QgZGl2aXNpYmxlIGJ5IHN0ZXAsIHJvdW5kaW5nIG9mZiBtYXkgaW5jcmVhc2UgaXRzIHZhbHVlCgkJCW1heCAtPSBzdGVwOwoJCX0KCQl0aGlzLm1heCA9IHBhcnNlRmxvYXQoIG1heC50b0ZpeGVkKCB0aGlzLl9wcmVjaXNpb24oKSApICk7Cgl9LAoKCV9wcmVjaXNpb246IGZ1bmN0aW9uKCkgewoJCXZhciBwcmVjaXNpb24gPSB0aGlzLl9wcmVjaXNpb25PZiggdGhpcy5vcHRpb25zLnN0ZXAgKTsKCQlpZiAoIHRoaXMub3B0aW9ucy5taW4gIT09IG51bGwgKSB7CgkJCXByZWNpc2lvbiA9IE1hdGgubWF4KCBwcmVjaXNpb24sIHRoaXMuX3ByZWNpc2lvbk9mKCB0aGlzLm9wdGlvbnMubWluICkgKTsKCQl9CgkJcmV0dXJuIHByZWNpc2lvbjsKCX0sCgoJX3ByZWNpc2lvbk9mOiBmdW5jdGlvbiggbnVtICkgewoJCXZhciBzdHIgPSBudW0udG9TdHJpbmcoKSwKCQkJZGVjaW1hbCA9IHN0ci5pbmRleE9mKCAiLiIgKTsKCQlyZXR1cm4gZGVjaW1hbCA9PT0gLTEgPyAwIDogc3RyLmxlbmd0aCAtIGRlY2ltYWwgLSAxOwoJfSwKCglfdmFsdWVNaW46IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLm9wdGlvbnMubWluOwoJfSwKCglfdmFsdWVNYXg6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB0aGlzLm1heDsKCX0sCgoJX3JlZnJlc2hSYW5nZTogZnVuY3Rpb24oIG9yaWVudGF0aW9uICkgewoJCWlmICggb3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIgKSB7CgkJCXRoaXMucmFuZ2UuY3NzKCB7ICJ3aWR0aCI6ICIiLCAibGVmdCI6ICIiIH0gKTsKCQl9CgkJaWYgKCBvcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiICkgewoJCQl0aGlzLnJhbmdlLmNzcyggeyAiaGVpZ2h0IjogIiIsICJib3R0b20iOiAiIiB9ICk7CgkJfQoJfSwKCglfcmVmcmVzaFZhbHVlOiBmdW5jdGlvbigpIHsKCQl2YXIgbGFzdFZhbFBlcmNlbnQsIHZhbFBlcmNlbnQsIHZhbHVlLCB2YWx1ZU1pbiwgdmFsdWVNYXgsCgkJCW9SYW5nZSA9IHRoaXMub3B0aW9ucy5yYW5nZSwKCQkJbyA9IHRoaXMub3B0aW9ucywKCQkJdGhhdCA9IHRoaXMsCgkJCWFuaW1hdGUgPSAoICF0aGlzLl9hbmltYXRlT2ZmICkgPyBvLmFuaW1hdGUgOiBmYWxzZSwKCQkJX3NldCA9IHt9OwoKCQlpZiAoIHRoaXMuX2hhc011bHRpcGxlVmFsdWVzKCkgKSB7CgkJCXRoaXMuaGFuZGxlcy5lYWNoKCBmdW5jdGlvbiggaSApIHsKCQkJCXZhbFBlcmNlbnQgPSAoIHRoYXQudmFsdWVzKCBpICkgLSB0aGF0Ll92YWx1ZU1pbigpICkgLyAoIHRoYXQuX3ZhbHVlTWF4KCkgLQoJCQkJCXRoYXQuX3ZhbHVlTWluKCkgKSAqIDEwMDsKCQkJCV9zZXRbIHRoYXQub3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiA/ICJsZWZ0IiA6ICJib3R0b20iIF0gPSB2YWxQZXJjZW50ICsgIiUiOwoJCQkJJCggdGhpcyApLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIF9zZXQsIG8uYW5pbWF0ZSApOwoJCQkJaWYgKCB0aGF0Lm9wdGlvbnMucmFuZ2UgPT09IHRydWUgKSB7CgkJCQkJaWYgKCB0aGF0Lm9yaWVudGF0aW9uID09PSAiaG9yaXpvbnRhbCIgKSB7CgkJCQkJCWlmICggaSA9PT0gMCApIHsKCQkJCQkJCXRoYXQucmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggewoJCQkJCQkJCWxlZnQ6IHZhbFBlcmNlbnQgKyAiJSIKCQkJCQkJCX0sIG8uYW5pbWF0ZSApOwoJCQkJCQl9CgkJCQkJCWlmICggaSA9PT0gMSApIHsKCQkJCQkJCXRoYXQucmFuZ2VbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCB7CgkJCQkJCQkJd2lkdGg6ICggdmFsUGVyY2VudCAtIGxhc3RWYWxQZXJjZW50ICkgKyAiJSIKCQkJCQkJCX0sIHsKCQkJCQkJCQlxdWV1ZTogZmFsc2UsCgkJCQkJCQkJZHVyYXRpb246IG8uYW5pbWF0ZQoJCQkJCQkJfSApOwoJCQkJCQl9CgkJCQkJfSBlbHNlIHsKCQkJCQkJaWYgKCBpID09PSAwICkgewoJCQkJCQkJdGhhdC5yYW5nZS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCB7CgkJCQkJCQkJYm90dG9tOiAoIHZhbFBlcmNlbnQgKSArICIlIgoJCQkJCQkJfSwgby5hbmltYXRlICk7CgkJCQkJCX0KCQkJCQkJaWYgKCBpID09PSAxICkgewoJCQkJCQkJdGhhdC5yYW5nZVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsKCQkJCQkJCQloZWlnaHQ6ICggdmFsUGVyY2VudCAtIGxhc3RWYWxQZXJjZW50ICkgKyAiJSIKCQkJCQkJCX0sIHsKCQkJCQkJCQlxdWV1ZTogZmFsc2UsCgkJCQkJCQkJZHVyYXRpb246IG8uYW5pbWF0ZQoJCQkJCQkJfSApOwoJCQkJCQl9CgkJCQkJfQoJCQkJfQoJCQkJbGFzdFZhbFBlcmNlbnQgPSB2YWxQZXJjZW50OwoJCQl9ICk7CgkJfSBlbHNlIHsKCQkJdmFsdWUgPSB0aGlzLnZhbHVlKCk7CgkJCXZhbHVlTWluID0gdGhpcy5fdmFsdWVNaW4oKTsKCQkJdmFsdWVNYXggPSB0aGlzLl92YWx1ZU1heCgpOwoJCQl2YWxQZXJjZW50ID0gKCB2YWx1ZU1heCAhPT0gdmFsdWVNaW4gKSA/CgkJCQkJKCB2YWx1ZSAtIHZhbHVlTWluICkgLyAoIHZhbHVlTWF4IC0gdmFsdWVNaW4gKSAqIDEwMCA6CgkJCQkJMDsKCQkJX3NldFsgdGhpcy5vcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiID8gImxlZnQiIDogImJvdHRvbSIgXSA9IHZhbFBlcmNlbnQgKyAiJSI7CgkJCXRoaXMuaGFuZGxlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIF9zZXQsIG8uYW5pbWF0ZSApOwoKCQkJaWYgKCBvUmFuZ2UgPT09ICJtaW4iICYmIHRoaXMub3JpZW50YXRpb24gPT09ICJob3Jpem9udGFsIiApIHsKCQkJCXRoaXMucmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggewoJCQkJCXdpZHRoOiB2YWxQZXJjZW50ICsgIiUiCgkJCQl9LCBvLmFuaW1hdGUgKTsKCQkJfQoJCQlpZiAoIG9SYW5nZSA9PT0gIm1heCIgJiYgdGhpcy5vcmllbnRhdGlvbiA9PT0gImhvcml6b250YWwiICkgewoJCQkJdGhpcy5yYW5nZS5zdG9wKCAxLCAxIClbIGFuaW1hdGUgPyAiYW5pbWF0ZSIgOiAiY3NzIiBdKCB7CgkJCQkJd2lkdGg6ICggMTAwIC0gdmFsUGVyY2VudCApICsgIiUiCgkJCQl9LCBvLmFuaW1hdGUgKTsKCQkJfQoJCQlpZiAoIG9SYW5nZSA9PT0gIm1pbiIgJiYgdGhpcy5vcmllbnRhdGlvbiA9PT0gInZlcnRpY2FsIiApIHsKCQkJCXRoaXMucmFuZ2Uuc3RvcCggMSwgMSApWyBhbmltYXRlID8gImFuaW1hdGUiIDogImNzcyIgXSggewoJCQkJCWhlaWdodDogdmFsUGVyY2VudCArICIlIgoJCQkJfSwgby5hbmltYXRlICk7CgkJCX0KCQkJaWYgKCBvUmFuZ2UgPT09ICJtYXgiICYmIHRoaXMub3JpZW50YXRpb24gPT09ICJ2ZXJ0aWNhbCIgKSB7CgkJCQl0aGlzLnJhbmdlLnN0b3AoIDEsIDEgKVsgYW5pbWF0ZSA/ICJhbmltYXRlIiA6ICJjc3MiIF0oIHsKCQkJCQloZWlnaHQ6ICggMTAwIC0gdmFsUGVyY2VudCApICsgIiUiCgkJCQl9LCBvLmFuaW1hdGUgKTsKCQkJfQoJCX0KCX0sCgoJX2hhbmRsZUV2ZW50czogewoJCWtleWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJdmFyIGFsbG93ZWQsIGN1clZhbCwgbmV3VmFsLCBzdGVwLAoJCQkJaW5kZXggPSAkKCBldmVudC50YXJnZXQgKS5kYXRhKCAidWktc2xpZGVyLWhhbmRsZS1pbmRleCIgKTsKCgkJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7CgkJCQljYXNlICQudWkua2V5Q29kZS5IT01FOgoJCQkJY2FzZSAkLnVpLmtleUNvZGUuRU5EOgoJCQkJY2FzZSAkLnVpLmtleUNvZGUuUEFHRV9VUDoKCQkJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfRE9XTjoKCQkJCWNhc2UgJC51aS5rZXlDb2RlLlVQOgoJCQkJY2FzZSAkLnVpLmtleUNvZGUuUklHSFQ6CgkJCQljYXNlICQudWkua2V5Q29kZS5ET1dOOgoJCQkJY2FzZSAkLnVpLmtleUNvZGUuTEVGVDoKCQkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCWlmICggIXRoaXMuX2tleVNsaWRpbmcgKSB7CgkJCQkJCXRoaXMuX2tleVNsaWRpbmcgPSB0cnVlOwoJCQkJCQl0aGlzLl9hZGRDbGFzcyggJCggZXZlbnQudGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCQkJCWFsbG93ZWQgPSB0aGlzLl9zdGFydCggZXZlbnQsIGluZGV4ICk7CgkJCQkJCWlmICggYWxsb3dlZCA9PT0gZmFsc2UgKSB7CgkJCQkJCQlyZXR1cm47CgkJCQkJCX0KCQkJCQl9CgkJCQkJYnJlYWs7CgkJCX0KCgkJCXN0ZXAgPSB0aGlzLm9wdGlvbnMuc3RlcDsKCQkJaWYgKCB0aGlzLl9oYXNNdWx0aXBsZVZhbHVlcygpICkgewoJCQkJY3VyVmFsID0gbmV3VmFsID0gdGhpcy52YWx1ZXMoIGluZGV4ICk7CgkJCX0gZWxzZSB7CgkJCQljdXJWYWwgPSBuZXdWYWwgPSB0aGlzLnZhbHVlKCk7CgkJCX0KCgkJCXN3aXRjaCAoIGV2ZW50LmtleUNvZGUgKSB7CgkJCQljYXNlICQudWkua2V5Q29kZS5IT01FOgoJCQkJCW5ld1ZhbCA9IHRoaXMuX3ZhbHVlTWluKCk7CgkJCQkJYnJlYWs7CgkJCQljYXNlICQudWkua2V5Q29kZS5FTkQ6CgkJCQkJbmV3VmFsID0gdGhpcy5fdmFsdWVNYXgoKTsKCQkJCQlicmVhazsKCQkJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfVVA6CgkJCQkJbmV3VmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoCgkJCQkJCWN1clZhbCArICggKCB0aGlzLl92YWx1ZU1heCgpIC0gdGhpcy5fdmFsdWVNaW4oKSApIC8gdGhpcy5udW1QYWdlcyApCgkJCQkJKTsKCQkJCQlicmVhazsKCQkJCWNhc2UgJC51aS5rZXlDb2RlLlBBR0VfRE9XTjoKCQkJCQluZXdWYWwgPSB0aGlzLl90cmltQWxpZ25WYWx1ZSgKCQkJCQkJY3VyVmFsIC0gKCAoIHRoaXMuX3ZhbHVlTWF4KCkgLSB0aGlzLl92YWx1ZU1pbigpICkgLyB0aGlzLm51bVBhZ2VzICkgKTsKCQkJCQlicmVhazsKCQkJCWNhc2UgJC51aS5rZXlDb2RlLlVQOgoJCQkJY2FzZSAkLnVpLmtleUNvZGUuUklHSFQ6CgkJCQkJaWYgKCBjdXJWYWwgPT09IHRoaXMuX3ZhbHVlTWF4KCkgKSB7CgkJCQkJCXJldHVybjsKCQkJCQl9CgkJCQkJbmV3VmFsID0gdGhpcy5fdHJpbUFsaWduVmFsdWUoIGN1clZhbCArIHN0ZXAgKTsKCQkJCQlicmVhazsKCQkJCWNhc2UgJC51aS5rZXlDb2RlLkRPV046CgkJCQljYXNlICQudWkua2V5Q29kZS5MRUZUOgoJCQkJCWlmICggY3VyVmFsID09PSB0aGlzLl92YWx1ZU1pbigpICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoJCQkJCW5ld1ZhbCA9IHRoaXMuX3RyaW1BbGlnblZhbHVlKCBjdXJWYWwgLSBzdGVwICk7CgkJCQkJYnJlYWs7CgkJCX0KCgkJCXRoaXMuX3NsaWRlKCBldmVudCwgaW5kZXgsIG5ld1ZhbCApOwoJCX0sCgkJa2V5dXA6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJdmFyIGluZGV4ID0gJCggZXZlbnQudGFyZ2V0ICkuZGF0YSggInVpLXNsaWRlci1oYW5kbGUtaW5kZXgiICk7CgoJCQlpZiAoIHRoaXMuX2tleVNsaWRpbmcgKSB7CgkJCQl0aGlzLl9rZXlTbGlkaW5nID0gZmFsc2U7CgkJCQl0aGlzLl9zdG9wKCBldmVudCwgaW5kZXggKTsKCQkJCXRoaXMuX2NoYW5nZSggZXZlbnQsIGluZGV4ICk7CgkJCQl0aGlzLl9yZW1vdmVDbGFzcyggJCggZXZlbnQudGFyZ2V0ICksIG51bGwsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCX0KCQl9Cgl9Cn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIFNvcnRhYmxlIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogU29ydGFibGUKLy8+Pmdyb3VwOiBJbnRlcmFjdGlvbnMKLy8+PmRlc2NyaXB0aW9uOiBFbmFibGVzIGl0ZW1zIGluIGEgbGlzdCB0byBiZSBzb3J0ZWQgdXNpbmcgdGhlIG1vdXNlLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vc29ydGFibGUvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9zb3J0YWJsZS8KLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL3NvcnRhYmxlLmNzcwoKCgp2YXIgd2lkZ2V0c1NvcnRhYmxlID0gJC53aWRnZXQoICJ1aS5zb3J0YWJsZSIsICQudWkubW91c2UsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJd2lkZ2V0RXZlbnRQcmVmaXg6ICJzb3J0IiwKCXJlYWR5OiBmYWxzZSwKCW9wdGlvbnM6IHsKCQlhcHBlbmRUbzogInBhcmVudCIsCgkJYXhpczogZmFsc2UsCgkJY29ubmVjdFdpdGg6IGZhbHNlLAoJCWNvbnRhaW5tZW50OiBmYWxzZSwKCQljdXJzb3I6ICJhdXRvIiwKCQljdXJzb3JBdDogZmFsc2UsCgkJZHJvcE9uRW1wdHk6IHRydWUsCgkJZm9yY2VQbGFjZWhvbGRlclNpemU6IGZhbHNlLAoJCWZvcmNlSGVscGVyU2l6ZTogZmFsc2UsCgkJZ3JpZDogZmFsc2UsCgkJaGFuZGxlOiBmYWxzZSwKCQloZWxwZXI6ICJvcmlnaW5hbCIsCgkJaXRlbXM6ICI+ICoiLAoJCW9wYWNpdHk6IGZhbHNlLAoJCXBsYWNlaG9sZGVyOiBmYWxzZSwKCQlyZXZlcnQ6IGZhbHNlLAoJCXNjcm9sbDogdHJ1ZSwKCQlzY3JvbGxTZW5zaXRpdml0eTogMjAsCgkJc2Nyb2xsU3BlZWQ6IDIwLAoJCXNjb3BlOiAiZGVmYXVsdCIsCgkJdG9sZXJhbmNlOiAiaW50ZXJzZWN0IiwKCQl6SW5kZXg6IDEwMDAsCgoJCS8vIENhbGxiYWNrcwoJCWFjdGl2YXRlOiBudWxsLAoJCWJlZm9yZVN0b3A6IG51bGwsCgkJY2hhbmdlOiBudWxsLAoJCWRlYWN0aXZhdGU6IG51bGwsCgkJb3V0OiBudWxsLAoJCW92ZXI6IG51bGwsCgkJcmVjZWl2ZTogbnVsbCwKCQlyZW1vdmU6IG51bGwsCgkJc29ydDogbnVsbCwKCQlzdGFydDogbnVsbCwKCQlzdG9wOiBudWxsLAoJCXVwZGF0ZTogbnVsbAoJfSwKCglfaXNPdmVyQXhpczogZnVuY3Rpb24oIHgsIHJlZmVyZW5jZSwgc2l6ZSApIHsKCQlyZXR1cm4gKCB4ID49IHJlZmVyZW5jZSApICYmICggeCA8ICggcmVmZXJlbmNlICsgc2l6ZSApICk7Cgl9LAoKCV9pc0Zsb2F0aW5nOiBmdW5jdGlvbiggaXRlbSApIHsKCQlyZXR1cm4gKCAvbGVmdHxyaWdodC8gKS50ZXN0KCBpdGVtLmNzcyggImZsb2F0IiApICkgfHwKCQkJKCAvaW5saW5lfHRhYmxlLWNlbGwvICkudGVzdCggaXRlbS5jc3MoICJkaXNwbGF5IiApICk7Cgl9LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoJCXRoaXMuY29udGFpbmVyQ2FjaGUgPSB7fTsKCQl0aGlzLl9hZGRDbGFzcyggInVpLXNvcnRhYmxlIiApOwoKCQkvL0dldCB0aGUgaXRlbXMKCQl0aGlzLnJlZnJlc2goKTsKCgkJLy9MZXQncyBkZXRlcm1pbmUgdGhlIHBhcmVudCdzIG9mZnNldAoJCXRoaXMub2Zmc2V0ID0gdGhpcy5lbGVtZW50Lm9mZnNldCgpOwoKCQkvL0luaXRpYWxpemUgbW91c2UgZXZlbnRzIGZvciBpbnRlcmFjdGlvbgoJCXRoaXMuX21vdXNlSW5pdCgpOwoKCQl0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKTsKCgkJLy9XZSdyZSByZWFkeSB0byBnbwoJCXRoaXMucmVhZHkgPSB0cnVlOwoKCX0sCgoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJdGhpcy5fc3VwZXIoIGtleSwgdmFsdWUgKTsKCgkJaWYgKCBrZXkgPT09ICJoYW5kbGUiICkgewoJCQl0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKTsKCQl9Cgl9LAoKCV9zZXRIYW5kbGVDbGFzc05hbWU6IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpczsKCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5lbGVtZW50LmZpbmQoICIudWktc29ydGFibGUtaGFuZGxlIiApLCAidWktc29ydGFibGUtaGFuZGxlIiApOwoJCSQuZWFjaCggdGhpcy5pdGVtcywgZnVuY3Rpb24oKSB7CgkJCXRoYXQuX2FkZENsYXNzKAoJCQkJdGhpcy5pbnN0YW5jZS5vcHRpb25zLmhhbmRsZSA/CgkJCQkJdGhpcy5pdGVtLmZpbmQoIHRoaXMuaW5zdGFuY2Uub3B0aW9ucy5oYW5kbGUgKSA6CgkJCQkJdGhpcy5pdGVtLAoJCQkJInVpLXNvcnRhYmxlLWhhbmRsZSIKCQkJKTsKCQl9ICk7Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl0aGlzLl9tb3VzZURlc3Ryb3koKTsKCgkJZm9yICggdmFyIGkgPSB0aGlzLml0ZW1zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgewoJCQl0aGlzLml0ZW1zWyBpIF0uaXRlbS5yZW1vdmVEYXRhKCB0aGlzLndpZGdldE5hbWUgKyAiLWl0ZW0iICk7CgkJfQoKCQlyZXR1cm4gdGhpczsKCX0sCgoJX21vdXNlQ2FwdHVyZTogZnVuY3Rpb24oIGV2ZW50LCBvdmVycmlkZUhhbmRsZSApIHsKCQl2YXIgY3VycmVudEl0ZW0gPSBudWxsLAoJCQl2YWxpZEhhbmRsZSA9IGZhbHNlLAoJCQl0aGF0ID0gdGhpczsKCgkJaWYgKCB0aGlzLnJldmVydGluZyApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJaWYgKCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgfHwgdGhpcy5vcHRpb25zLnR5cGUgPT09ICJzdGF0aWMiICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQkvL1dlIGhhdmUgdG8gcmVmcmVzaCB0aGUgaXRlbXMgZGF0YSBvbmNlIGZpcnN0CgkJdGhpcy5fcmVmcmVzaEl0ZW1zKCBldmVudCApOwoKCQkvL0ZpbmQgb3V0IGlmIHRoZSBjbGlja2VkIG5vZGUgKG9yIG9uZSBvZiBpdHMgcGFyZW50cykgaXMgYSBhY3R1YWwgaXRlbSBpbiB0aGlzLml0ZW1zCgkJJCggZXZlbnQudGFyZ2V0ICkucGFyZW50cygpLmVhY2goIGZ1bmN0aW9uKCkgewoJCQlpZiAoICQuZGF0YSggdGhpcywgdGhhdC53aWRnZXROYW1lICsgIi1pdGVtIiApID09PSB0aGF0ICkgewoJCQkJY3VycmVudEl0ZW0gPSAkKCB0aGlzICk7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQl9ICk7CgkJaWYgKCAkLmRhdGEoIGV2ZW50LnRhcmdldCwgdGhhdC53aWRnZXROYW1lICsgIi1pdGVtIiApID09PSB0aGF0ICkgewoJCQljdXJyZW50SXRlbSA9ICQoIGV2ZW50LnRhcmdldCApOwoJCX0KCgkJaWYgKCAhY3VycmVudEl0ZW0gKSB7CgkJCXJldHVybiBmYWxzZTsKCQl9CgkJaWYgKCB0aGlzLm9wdGlvbnMuaGFuZGxlICYmICFvdmVycmlkZUhhbmRsZSApIHsKCQkJJCggdGhpcy5vcHRpb25zLmhhbmRsZSwgY3VycmVudEl0ZW0gKS5maW5kKCAiKiIgKS5hZGRCYWNrKCkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQlpZiAoIHRoaXMgPT09IGV2ZW50LnRhcmdldCApIHsKCQkJCQl2YWxpZEhhbmRsZSA9IHRydWU7CgkJCQl9CgkJCX0gKTsKCQkJaWYgKCAhdmFsaWRIYW5kbGUgKSB7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQl9CgoJCXRoaXMuY3VycmVudEl0ZW0gPSBjdXJyZW50SXRlbTsKCQl0aGlzLl9yZW1vdmVDdXJyZW50c0Zyb21JdGVtcygpOwoJCXJldHVybiB0cnVlOwoKCX0sCgoJX21vdXNlU3RhcnQ6IGZ1bmN0aW9uKCBldmVudCwgb3ZlcnJpZGVIYW5kbGUsIG5vQWN0aXZhdGlvbiApIHsKCgkJdmFyIGksIGJvZHksCgkJCW8gPSB0aGlzLm9wdGlvbnM7CgoJCXRoaXMuY3VycmVudENvbnRhaW5lciA9IHRoaXM7CgoJCS8vV2Ugb25seSBuZWVkIHRvIGNhbGwgcmVmcmVzaFBvc2l0aW9ucywgYmVjYXVzZSB0aGUgcmVmcmVzaEl0ZW1zIGNhbGwgaGFzIGJlZW4gbW92ZWQgdG8KCQkvLyBtb3VzZUNhcHR1cmUKCQl0aGlzLnJlZnJlc2hQb3NpdGlvbnMoKTsKCgkJLy9DcmVhdGUgYW5kIGFwcGVuZCB0aGUgdmlzaWJsZSBoZWxwZXIKCQl0aGlzLmhlbHBlciA9IHRoaXMuX2NyZWF0ZUhlbHBlciggZXZlbnQgKTsKCgkJLy9DYWNoZSB0aGUgaGVscGVyIHNpemUKCQl0aGlzLl9jYWNoZUhlbHBlclByb3BvcnRpb25zKCk7CgoJCS8qCgkJICogLSBQb3NpdGlvbiBnZW5lcmF0aW9uIC0KCQkgKiBUaGlzIGJsb2NrIGdlbmVyYXRlcyBldmVyeXRoaW5nIHBvc2l0aW9uIHJlbGF0ZWQgLSBpdCdzIHRoZSBjb3JlIG9mIGRyYWdnYWJsZXMuCgkJICovCgoJCS8vQ2FjaGUgdGhlIG1hcmdpbnMgb2YgdGhlIG9yaWdpbmFsIGVsZW1lbnQKCQl0aGlzLl9jYWNoZU1hcmdpbnMoKTsKCgkJLy9HZXQgdGhlIG5leHQgc2Nyb2xsaW5nIHBhcmVudAoJCXRoaXMuc2Nyb2xsUGFyZW50ID0gdGhpcy5oZWxwZXIuc2Nyb2xsUGFyZW50KCk7CgoJCS8vVGhlIGVsZW1lbnQncyBhYnNvbHV0ZSBwb3NpdGlvbiBvbiB0aGUgcGFnZSBtaW51cyBtYXJnaW5zCgkJdGhpcy5vZmZzZXQgPSB0aGlzLmN1cnJlbnRJdGVtLm9mZnNldCgpOwoJCXRoaXMub2Zmc2V0ID0gewoJCQl0b3A6IHRoaXMub2Zmc2V0LnRvcCAtIHRoaXMubWFyZ2lucy50b3AsCgkJCWxlZnQ6IHRoaXMub2Zmc2V0LmxlZnQgLSB0aGlzLm1hcmdpbnMubGVmdAoJCX07CgoJCSQuZXh0ZW5kKCB0aGlzLm9mZnNldCwgewoJCQljbGljazogeyAvL1doZXJlIHRoZSBjbGljayBoYXBwZW5lZCwgcmVsYXRpdmUgdG8gdGhlIGVsZW1lbnQKCQkJCWxlZnQ6IGV2ZW50LnBhZ2VYIC0gdGhpcy5vZmZzZXQubGVmdCwKCQkJCXRvcDogZXZlbnQucGFnZVkgLSB0aGlzLm9mZnNldC50b3AKCQkJfSwKCQkJcGFyZW50OiB0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKSwKCgkJCS8vIFRoaXMgaXMgYSByZWxhdGl2ZSB0byBhYnNvbHV0ZSBwb3NpdGlvbiBtaW51cyB0aGUgYWN0dWFsIHBvc2l0aW9uIGNhbGN1bGF0aW9uIC0KCQkJLy8gb25seSB1c2VkIGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIGhlbHBlcgoJCQlyZWxhdGl2ZTogdGhpcy5fZ2V0UmVsYXRpdmVPZmZzZXQoKQoJCX0gKTsKCgkJLy8gT25seSBhZnRlciB3ZSBnb3QgdGhlIG9mZnNldCwgd2UgY2FuIGNoYW5nZSB0aGUgaGVscGVyJ3MgcG9zaXRpb24gdG8gYWJzb2x1dGUKCQkvLyBUT0RPOiBTdGlsbCBuZWVkIHRvIGZpZ3VyZSBvdXQgYSB3YXkgdG8gbWFrZSByZWxhdGl2ZSBzb3J0aW5nIHBvc3NpYmxlCgkJdGhpcy5oZWxwZXIuY3NzKCAicG9zaXRpb24iLCAiYWJzb2x1dGUiICk7CgkJdGhpcy5jc3NQb3NpdGlvbiA9IHRoaXMuaGVscGVyLmNzcyggInBvc2l0aW9uIiApOwoKCQkvL0dlbmVyYXRlIHRoZSBvcmlnaW5hbCBwb3NpdGlvbgoJCXRoaXMub3JpZ2luYWxQb3NpdGlvbiA9IHRoaXMuX2dlbmVyYXRlUG9zaXRpb24oIGV2ZW50ICk7CgkJdGhpcy5vcmlnaW5hbFBhZ2VYID0gZXZlbnQucGFnZVg7CgkJdGhpcy5vcmlnaW5hbFBhZ2VZID0gZXZlbnQucGFnZVk7CgoJCS8vQWRqdXN0IHRoZSBtb3VzZSBvZmZzZXQgcmVsYXRpdmUgdG8gdGhlIGhlbHBlciBpZiAiY3Vyc29yQXQiIGlzIHN1cHBsaWVkCgkJKCBvLmN1cnNvckF0ICYmIHRoaXMuX2FkanVzdE9mZnNldEZyb21IZWxwZXIoIG8uY3Vyc29yQXQgKSApOwoKCQkvL0NhY2hlIHRoZSBmb3JtZXIgRE9NIHBvc2l0aW9uCgkJdGhpcy5kb21Qb3NpdGlvbiA9IHsKCQkJcHJldjogdGhpcy5jdXJyZW50SXRlbS5wcmV2KClbIDAgXSwKCQkJcGFyZW50OiB0aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpWyAwIF0KCQl9OwoKCQkvLyBJZiB0aGUgaGVscGVyIGlzIG5vdCB0aGUgb3JpZ2luYWwsIGhpZGUgdGhlIG9yaWdpbmFsIHNvIGl0J3Mgbm90IHBsYXlpbmcgYW55IHJvbGUgZHVyaW5nCgkJLy8gdGhlIGRyYWcsIHdvbid0IGNhdXNlIGFueXRoaW5nIGJhZCB0aGlzIHdheQoJCWlmICggdGhpcy5oZWxwZXJbIDAgXSAhPT0gdGhpcy5jdXJyZW50SXRlbVsgMCBdICkgewoJCQl0aGlzLmN1cnJlbnRJdGVtLmhpZGUoKTsKCQl9CgoJCS8vQ3JlYXRlIHRoZSBwbGFjZWhvbGRlcgoJCXRoaXMuX2NyZWF0ZVBsYWNlaG9sZGVyKCk7CgoJCS8vU2V0IGEgY29udGFpbm1lbnQgaWYgZ2l2ZW4gaW4gdGhlIG9wdGlvbnMKCQlpZiAoIG8uY29udGFpbm1lbnQgKSB7CgkJCXRoaXMuX3NldENvbnRhaW5tZW50KCk7CgkJfQoKCQlpZiAoIG8uY3Vyc29yICYmIG8uY3Vyc29yICE9PSAiYXV0byIgKSB7IC8vIGN1cnNvciBvcHRpb24KCQkJYm9keSA9IHRoaXMuZG9jdW1lbnQuZmluZCggImJvZHkiICk7CgoJCQkvLyBTdXBwb3J0OiBJRQoJCQl0aGlzLnN0b3JlZEN1cnNvciA9IGJvZHkuY3NzKCAiY3Vyc29yIiApOwoJCQlib2R5LmNzcyggImN1cnNvciIsIG8uY3Vyc29yICk7CgoJCQl0aGlzLnN0b3JlZFN0eWxlc2hlZXQgPQoJCQkJJCggIjxzdHlsZT4qeyBjdXJzb3I6ICIgKyBvLmN1cnNvciArICIgIWltcG9ydGFudDsgfTwvc3R5bGU+IiApLmFwcGVuZFRvKCBib2R5ICk7CgkJfQoKCQlpZiAoIG8ub3BhY2l0eSApIHsgLy8gb3BhY2l0eSBvcHRpb24KCQkJaWYgKCB0aGlzLmhlbHBlci5jc3MoICJvcGFjaXR5IiApICkgewoJCQkJdGhpcy5fc3RvcmVkT3BhY2l0eSA9IHRoaXMuaGVscGVyLmNzcyggIm9wYWNpdHkiICk7CgkJCX0KCQkJdGhpcy5oZWxwZXIuY3NzKCAib3BhY2l0eSIsIG8ub3BhY2l0eSApOwoJCX0KCgkJaWYgKCBvLnpJbmRleCApIHsgLy8gekluZGV4IG9wdGlvbgoJCQlpZiAoIHRoaXMuaGVscGVyLmNzcyggInpJbmRleCIgKSApIHsKCQkJCXRoaXMuX3N0b3JlZFpJbmRleCA9IHRoaXMuaGVscGVyLmNzcyggInpJbmRleCIgKTsKCQkJfQoJCQl0aGlzLmhlbHBlci5jc3MoICJ6SW5kZXgiLCBvLnpJbmRleCApOwoJCX0KCgkJLy9QcmVwYXJlIHNjcm9sbGluZwoJCWlmICggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdICYmCgkJCQl0aGlzLnNjcm9sbFBhcmVudFsgMCBdLnRhZ05hbWUgIT09ICJIVE1MIiApIHsKCQkJdGhpcy5vdmVyZmxvd09mZnNldCA9IHRoaXMuc2Nyb2xsUGFyZW50Lm9mZnNldCgpOwoJCX0KCgkJLy9DYWxsIGNhbGxiYWNrcwoJCXRoaXMuX3RyaWdnZXIoICJzdGFydCIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOwoKCQkvL1JlY2FjaGUgdGhlIGhlbHBlciBzaXplCgkJaWYgKCAhdGhpcy5fcHJlc2VydmVIZWxwZXJQcm9wb3J0aW9ucyApIHsKCQkJdGhpcy5fY2FjaGVIZWxwZXJQcm9wb3J0aW9ucygpOwoJCX0KCgkJLy9Qb3N0ICJhY3RpdmF0ZSIgZXZlbnRzIHRvIHBvc3NpYmxlIGNvbnRhaW5lcnMKCQlpZiAoICFub0FjdGl2YXRpb24gKSB7CgkJCWZvciAoIGkgPSB0aGlzLmNvbnRhaW5lcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7CgkJCQl0aGlzLmNvbnRhaW5lcnNbIGkgXS5fdHJpZ2dlciggImFjdGl2YXRlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7CgkJCX0KCQl9CgoJCS8vUHJlcGFyZSBwb3NzaWJsZSBkcm9wcGFibGVzCgkJaWYgKCAkLnVpLmRkbWFuYWdlciApIHsKCQkJJC51aS5kZG1hbmFnZXIuY3VycmVudCA9IHRoaXM7CgkJfQoKCQlpZiAoICQudWkuZGRtYW5hZ2VyICYmICFvLmRyb3BCZWhhdmlvdXIgKSB7CgkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKCB0aGlzLCBldmVudCApOwoJCX0KCgkJdGhpcy5kcmFnZ2luZyA9IHRydWU7CgoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmhlbHBlciwgInVpLXNvcnRhYmxlLWhlbHBlciIgKTsKCgkJLy8gRXhlY3V0ZSB0aGUgZHJhZyBvbmNlIC0gdGhpcyBjYXVzZXMgdGhlIGhlbHBlciBub3QgdG8gYmUgdmlzaWJsZWJlZm9yZSBnZXR0aW5nIGl0cwoJCS8vIGNvcnJlY3QgcG9zaXRpb24KCQl0aGlzLl9tb3VzZURyYWcoIGV2ZW50ICk7CgkJcmV0dXJuIHRydWU7CgoJfSwKCglfbW91c2VEcmFnOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJdmFyIGksIGl0ZW0sIGl0ZW1FbGVtZW50LCBpbnRlcnNlY3Rpb24sCgkJCW8gPSB0aGlzLm9wdGlvbnMsCgkJCXNjcm9sbGVkID0gZmFsc2U7CgoJCS8vQ29tcHV0ZSB0aGUgaGVscGVycyBwb3NpdGlvbgoJCXRoaXMucG9zaXRpb24gPSB0aGlzLl9nZW5lcmF0ZVBvc2l0aW9uKCBldmVudCApOwoJCXRoaXMucG9zaXRpb25BYnMgPSB0aGlzLl9jb252ZXJ0UG9zaXRpb25UbyggImFic29sdXRlIiApOwoKCQlpZiAoICF0aGlzLmxhc3RQb3NpdGlvbkFicyApIHsKCQkJdGhpcy5sYXN0UG9zaXRpb25BYnMgPSB0aGlzLnBvc2l0aW9uQWJzOwoJCX0KCgkJLy9EbyBzY3JvbGxpbmcKCQlpZiAoIHRoaXMub3B0aW9ucy5zY3JvbGwgKSB7CgkJCWlmICggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdICYmCgkJCQkJdGhpcy5zY3JvbGxQYXJlbnRbIDAgXS50YWdOYW1lICE9PSAiSFRNTCIgKSB7CgoJCQkJaWYgKCAoIHRoaXMub3ZlcmZsb3dPZmZzZXQudG9wICsgdGhpcy5zY3JvbGxQYXJlbnRbIDAgXS5vZmZzZXRIZWlnaHQgKSAtCgkJCQkJCWV2ZW50LnBhZ2VZIDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsKCQkJCQl0aGlzLnNjcm9sbFBhcmVudFsgMCBdLnNjcm9sbFRvcCA9CgkJCQkJCXNjcm9sbGVkID0gdGhpcy5zY3JvbGxQYXJlbnRbIDAgXS5zY3JvbGxUb3AgKyBvLnNjcm9sbFNwZWVkOwoJCQkJfSBlbHNlIGlmICggZXZlbnQucGFnZVkgLSB0aGlzLm92ZXJmbG93T2Zmc2V0LnRvcCA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7CgkJCQkJdGhpcy5zY3JvbGxQYXJlbnRbIDAgXS5zY3JvbGxUb3AgPQoJCQkJCQlzY3JvbGxlZCA9IHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0uc2Nyb2xsVG9wIC0gby5zY3JvbGxTcGVlZDsKCQkJCX0KCgkJCQlpZiAoICggdGhpcy5vdmVyZmxvd09mZnNldC5sZWZ0ICsgdGhpcy5zY3JvbGxQYXJlbnRbIDAgXS5vZmZzZXRXaWR0aCApIC0KCQkJCQkJZXZlbnQucGFnZVggPCBvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXRoaXMuc2Nyb2xsUGFyZW50WyAwIF0uc2Nyb2xsTGVmdCA9IHNjcm9sbGVkID0KCQkJCQkJdGhpcy5zY3JvbGxQYXJlbnRbIDAgXS5zY3JvbGxMZWZ0ICsgby5zY3JvbGxTcGVlZDsKCQkJCX0gZWxzZSBpZiAoIGV2ZW50LnBhZ2VYIC0gdGhpcy5vdmVyZmxvd09mZnNldC5sZWZ0IDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsKCQkJCQl0aGlzLnNjcm9sbFBhcmVudFsgMCBdLnNjcm9sbExlZnQgPSBzY3JvbGxlZCA9CgkJCQkJCXRoaXMuc2Nyb2xsUGFyZW50WyAwIF0uc2Nyb2xsTGVmdCAtIG8uc2Nyb2xsU3BlZWQ7CgkJCQl9CgoJCQl9IGVsc2UgewoKCQkJCWlmICggZXZlbnQucGFnZVkgLSB0aGlzLmRvY3VtZW50LnNjcm9sbFRvcCgpIDwgby5zY3JvbGxTZW5zaXRpdml0eSApIHsKCQkJCQlzY3JvbGxlZCA9IHRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKCB0aGlzLmRvY3VtZW50LnNjcm9sbFRvcCgpIC0gby5zY3JvbGxTcGVlZCApOwoJCQkJfSBlbHNlIGlmICggdGhpcy53aW5kb3cuaGVpZ2h0KCkgLSAoIGV2ZW50LnBhZ2VZIC0gdGhpcy5kb2N1bWVudC5zY3JvbGxUb3AoKSApIDwKCQkJCQkJby5zY3JvbGxTZW5zaXRpdml0eSApIHsKCQkJCQlzY3JvbGxlZCA9IHRoaXMuZG9jdW1lbnQuc2Nyb2xsVG9wKCB0aGlzLmRvY3VtZW50LnNjcm9sbFRvcCgpICsgby5zY3JvbGxTcGVlZCApOwoJCQkJfQoKCQkJCWlmICggZXZlbnQucGFnZVggLSB0aGlzLmRvY3VtZW50LnNjcm9sbExlZnQoKSA8IG8uc2Nyb2xsU2Vuc2l0aXZpdHkgKSB7CgkJCQkJc2Nyb2xsZWQgPSB0aGlzLmRvY3VtZW50LnNjcm9sbExlZnQoCgkJCQkJCXRoaXMuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpIC0gby5zY3JvbGxTcGVlZAoJCQkJCSk7CgkJCQl9IGVsc2UgaWYgKCB0aGlzLndpbmRvdy53aWR0aCgpIC0gKCBldmVudC5wYWdlWCAtIHRoaXMuZG9jdW1lbnQuc2Nyb2xsTGVmdCgpICkgPAoJCQkJCQlvLnNjcm9sbFNlbnNpdGl2aXR5ICkgewoJCQkJCXNjcm9sbGVkID0gdGhpcy5kb2N1bWVudC5zY3JvbGxMZWZ0KAoJCQkJCQl0aGlzLmRvY3VtZW50LnNjcm9sbExlZnQoKSArIG8uc2Nyb2xsU3BlZWQKCQkJCQkpOwoJCQkJfQoKCQkJfQoKCQkJaWYgKCBzY3JvbGxlZCAhPT0gZmFsc2UgJiYgJC51aS5kZG1hbmFnZXIgJiYgIW8uZHJvcEJlaGF2aW91ciApIHsKCQkJCSQudWkuZGRtYW5hZ2VyLnByZXBhcmVPZmZzZXRzKCB0aGlzLCBldmVudCApOwoJCQl9CgkJfQoKCQkvL1JlZ2VuZXJhdGUgdGhlIGFic29sdXRlIHBvc2l0aW9uIHVzZWQgZm9yIHBvc2l0aW9uIGNoZWNrcwoJCXRoaXMucG9zaXRpb25BYnMgPSB0aGlzLl9jb252ZXJ0UG9zaXRpb25UbyggImFic29sdXRlIiApOwoKCQkvL1NldCB0aGUgaGVscGVyIHBvc2l0aW9uCgkJaWYgKCAhdGhpcy5vcHRpb25zLmF4aXMgfHwgdGhpcy5vcHRpb25zLmF4aXMgIT09ICJ5IiApIHsKCQkJdGhpcy5oZWxwZXJbIDAgXS5zdHlsZS5sZWZ0ID0gdGhpcy5wb3NpdGlvbi5sZWZ0ICsgInB4IjsKCQl9CgkJaWYgKCAhdGhpcy5vcHRpb25zLmF4aXMgfHwgdGhpcy5vcHRpb25zLmF4aXMgIT09ICJ4IiApIHsKCQkJdGhpcy5oZWxwZXJbIDAgXS5zdHlsZS50b3AgPSB0aGlzLnBvc2l0aW9uLnRvcCArICJweCI7CgkJfQoKCQkvL1JlYXJyYW5nZQoJCWZvciAoIGkgPSB0aGlzLml0ZW1zLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgewoKCQkJLy9DYWNoZSB2YXJpYWJsZXMgYW5kIGludGVyc2VjdGlvbiwgY29udGludWUgaWYgbm8gaW50ZXJzZWN0aW9uCgkJCWl0ZW0gPSB0aGlzLml0ZW1zWyBpIF07CgkJCWl0ZW1FbGVtZW50ID0gaXRlbS5pdGVtWyAwIF07CgkJCWludGVyc2VjdGlvbiA9IHRoaXMuX2ludGVyc2VjdHNXaXRoUG9pbnRlciggaXRlbSApOwoJCQlpZiAoICFpbnRlcnNlY3Rpb24gKSB7CgkJCQljb250aW51ZTsKCQkJfQoKCQkJLy8gT25seSBwdXQgdGhlIHBsYWNlaG9sZGVyIGluc2lkZSB0aGUgY3VycmVudCBDb250YWluZXIsIHNraXAgYWxsCgkJCS8vIGl0ZW1zIGZyb20gb3RoZXIgY29udGFpbmVycy4gVGhpcyB3b3JrcyBiZWNhdXNlIHdoZW4gbW92aW5nCgkJCS8vIGFuIGl0ZW0gZnJvbSBvbmUgY29udGFpbmVyIHRvIGFub3RoZXIgdGhlCgkJCS8vIGN1cnJlbnRDb250YWluZXIgaXMgc3dpdGNoZWQgYmVmb3JlIHRoZSBwbGFjZWhvbGRlciBpcyBtb3ZlZC4KCQkJLy8KCQkJLy8gV2l0aG91dCB0aGlzLCBtb3ZpbmcgaXRlbXMgaW4gInN1Yi1zb3J0YWJsZXMiIGNhbiBjYXVzZQoJCQkvLyB0aGUgcGxhY2Vob2xkZXIgdG8gaml0dGVyIGJldHdlZW4gdGhlIG91dGVyIGFuZCBpbm5lciBjb250YWluZXIuCgkJCWlmICggaXRlbS5pbnN0YW5jZSAhPT0gdGhpcy5jdXJyZW50Q29udGFpbmVyICkgewoJCQkJY29udGludWU7CgkJCX0KCgkJCS8vIENhbm5vdCBpbnRlcnNlY3Qgd2l0aCBpdHNlbGYKCQkJLy8gbm8gdXNlbGVzcyBhY3Rpb25zIHRoYXQgaGF2ZSBiZWVuIGRvbmUgYmVmb3JlCgkJCS8vIG5vIGFjdGlvbiBpZiB0aGUgaXRlbSBtb3ZlZCBpcyB0aGUgcGFyZW50IG9mIHRoZSBpdGVtIGNoZWNrZWQKCQkJaWYgKCBpdGVtRWxlbWVudCAhPT0gdGhpcy5jdXJyZW50SXRlbVsgMCBdICYmCgkJCQl0aGlzLnBsYWNlaG9sZGVyWyBpbnRlcnNlY3Rpb24gPT09IDEgPyAibmV4dCIgOiAicHJldiIgXSgpWyAwIF0gIT09IGl0ZW1FbGVtZW50ICYmCgkJCQkhJC5jb250YWlucyggdGhpcy5wbGFjZWhvbGRlclsgMCBdLCBpdGVtRWxlbWVudCApICYmCgkJCQkoIHRoaXMub3B0aW9ucy50eXBlID09PSAic2VtaS1keW5hbWljIiA/CgkJCQkJISQuY29udGFpbnMoIHRoaXMuZWxlbWVudFsgMCBdLCBpdGVtRWxlbWVudCApIDoKCQkJCQl0cnVlCgkJCQkpCgkJCSkgewoKCQkJCXRoaXMuZGlyZWN0aW9uID0gaW50ZXJzZWN0aW9uID09PSAxID8gImRvd24iIDogInVwIjsKCgkJCQlpZiAoIHRoaXMub3B0aW9ucy50b2xlcmFuY2UgPT09ICJwb2ludGVyIiB8fCB0aGlzLl9pbnRlcnNlY3RzV2l0aFNpZGVzKCBpdGVtICkgKSB7CgkJCQkJdGhpcy5fcmVhcnJhbmdlKCBldmVudCwgaXRlbSApOwoJCQkJfSBlbHNlIHsKCQkJCQlicmVhazsKCQkJCX0KCgkJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpICk7CgkJCQlicmVhazsKCQkJfQoJCX0KCgkJLy9Qb3N0IGV2ZW50cyB0byBjb250YWluZXJzCgkJdGhpcy5fY29udGFjdENvbnRhaW5lcnMoIGV2ZW50ICk7CgoJCS8vSW50ZXJjb25uZWN0IHdpdGggZHJvcHBhYmxlcwoJCWlmICggJC51aS5kZG1hbmFnZXIgKSB7CgkJCSQudWkuZGRtYW5hZ2VyLmRyYWcoIHRoaXMsIGV2ZW50ICk7CgkJfQoKCQkvL0NhbGwgY2FsbGJhY2tzCgkJdGhpcy5fdHJpZ2dlciggInNvcnQiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkgKTsKCgkJdGhpcy5sYXN0UG9zaXRpb25BYnMgPSB0aGlzLnBvc2l0aW9uQWJzOwoJCXJldHVybiBmYWxzZTsKCgl9LAoKCV9tb3VzZVN0b3A6IGZ1bmN0aW9uKCBldmVudCwgbm9Qcm9wYWdhdGlvbiApIHsKCgkJaWYgKCAhZXZlbnQgKSB7CgkJCXJldHVybjsKCQl9CgoJCS8vSWYgd2UgYXJlIHVzaW5nIGRyb3BwYWJsZXMsIGluZm9ybSB0aGUgbWFuYWdlciBhYm91dCB0aGUgZHJvcAoJCWlmICggJC51aS5kZG1hbmFnZXIgJiYgIXRoaXMub3B0aW9ucy5kcm9wQmVoYXZpb3VyICkgewoJCQkkLnVpLmRkbWFuYWdlci5kcm9wKCB0aGlzLCBldmVudCApOwoJCX0KCgkJaWYgKCB0aGlzLm9wdGlvbnMucmV2ZXJ0ICkgewoJCQl2YXIgdGhhdCA9IHRoaXMsCgkJCQljdXIgPSB0aGlzLnBsYWNlaG9sZGVyLm9mZnNldCgpLAoJCQkJYXhpcyA9IHRoaXMub3B0aW9ucy5heGlzLAoJCQkJYW5pbWF0aW9uID0ge307CgoJCQlpZiAoICFheGlzIHx8IGF4aXMgPT09ICJ4IiApIHsKCQkJCWFuaW1hdGlvbi5sZWZ0ID0gY3VyLmxlZnQgLSB0aGlzLm9mZnNldC5wYXJlbnQubGVmdCAtIHRoaXMubWFyZ2lucy5sZWZ0ICsKCQkJCQkoIHRoaXMub2Zmc2V0UGFyZW50WyAwIF0gPT09IHRoaXMuZG9jdW1lbnRbIDAgXS5ib2R5ID8KCQkJCQkJMCA6CgkJCQkJCXRoaXMub2Zmc2V0UGFyZW50WyAwIF0uc2Nyb2xsTGVmdAoJCQkJCSk7CgkJCX0KCQkJaWYgKCAhYXhpcyB8fCBheGlzID09PSAieSIgKSB7CgkJCQlhbmltYXRpb24udG9wID0gY3VyLnRvcCAtIHRoaXMub2Zmc2V0LnBhcmVudC50b3AgLSB0aGlzLm1hcmdpbnMudG9wICsKCQkJCQkoIHRoaXMub2Zmc2V0UGFyZW50WyAwIF0gPT09IHRoaXMuZG9jdW1lbnRbIDAgXS5ib2R5ID8KCQkJCQkJMCA6CgkJCQkJCXRoaXMub2Zmc2V0UGFyZW50WyAwIF0uc2Nyb2xsVG9wCgkJCQkJKTsKCQkJfQoJCQl0aGlzLnJldmVydGluZyA9IHRydWU7CgkJCSQoIHRoaXMuaGVscGVyICkuYW5pbWF0ZSgKCQkJCWFuaW1hdGlvbiwKCQkJCXBhcnNlSW50KCB0aGlzLm9wdGlvbnMucmV2ZXJ0LCAxMCApIHx8IDUwMCwKCQkJCWZ1bmN0aW9uKCkgewoJCQkJCXRoYXQuX2NsZWFyKCBldmVudCApOwoJCQkJfQoJCQkpOwoJCX0gZWxzZSB7CgkJCXRoaXMuX2NsZWFyKCBldmVudCwgbm9Qcm9wYWdhdGlvbiApOwoJCX0KCgkJcmV0dXJuIGZhbHNlOwoKCX0sCgoJY2FuY2VsOiBmdW5jdGlvbigpIHsKCgkJaWYgKCB0aGlzLmRyYWdnaW5nICkgewoKCQkJdGhpcy5fbW91c2VVcCggbmV3ICQuRXZlbnQoICJtb3VzZXVwIiwgeyB0YXJnZXQ6IG51bGwgfSApICk7CgoJCQlpZiAoIHRoaXMub3B0aW9ucy5oZWxwZXIgPT09ICJvcmlnaW5hbCIgKSB7CgkJCQl0aGlzLmN1cnJlbnRJdGVtLmNzcyggdGhpcy5fc3RvcmVkQ1NTICk7CgkJCQl0aGlzLl9yZW1vdmVDbGFzcyggdGhpcy5jdXJyZW50SXRlbSwgInVpLXNvcnRhYmxlLWhlbHBlciIgKTsKCQkJfSBlbHNlIHsKCQkJCXRoaXMuY3VycmVudEl0ZW0uc2hvdygpOwoJCQl9CgoJCQkvL1Bvc3QgZGVhY3RpdmF0aW5nIGV2ZW50cyB0byBjb250YWluZXJzCgkJCWZvciAoIHZhciBpID0gdGhpcy5jb250YWluZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgewoJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uX3RyaWdnZXIoICJkZWFjdGl2YXRlIiwgbnVsbCwgdGhpcy5fdWlIYXNoKCB0aGlzICkgKTsKCQkJCWlmICggdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUub3ZlciApIHsKCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGkgXS5fdHJpZ2dlciggIm91dCIsIG51bGwsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7CgkJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUub3ZlciA9IDA7CgkJCQl9CgkJCX0KCgkJfQoKCQlpZiAoIHRoaXMucGxhY2Vob2xkZXIgKSB7CgoJCQkvLyQodGhpcy5wbGFjZWhvbGRlclswXSkucmVtb3ZlKCk7IHdvdWxkIGhhdmUgYmVlbiB0aGUgalF1ZXJ5IHdheSAtIHVuZm9ydHVuYXRlbHksCgkJCS8vIGl0IHVuYmluZHMgQUxMIGV2ZW50cyBmcm9tIHRoZSBvcmlnaW5hbCBub2RlIQoJCQlpZiAoIHRoaXMucGxhY2Vob2xkZXJbIDAgXS5wYXJlbnROb2RlICkgewoJCQkJdGhpcy5wbGFjZWhvbGRlclsgMCBdLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIHRoaXMucGxhY2Vob2xkZXJbIDAgXSApOwoJCQl9CgkJCWlmICggdGhpcy5vcHRpb25zLmhlbHBlciAhPT0gIm9yaWdpbmFsIiAmJiB0aGlzLmhlbHBlciAmJgoJCQkJCXRoaXMuaGVscGVyWyAwIF0ucGFyZW50Tm9kZSApIHsKCQkJCXRoaXMuaGVscGVyLnJlbW92ZSgpOwoJCQl9CgoJCQkkLmV4dGVuZCggdGhpcywgewoJCQkJaGVscGVyOiBudWxsLAoJCQkJZHJhZ2dpbmc6IGZhbHNlLAoJCQkJcmV2ZXJ0aW5nOiBmYWxzZSwKCQkJCV9ub0ZpbmFsU29ydDogbnVsbAoJCQl9ICk7CgoJCQlpZiAoIHRoaXMuZG9tUG9zaXRpb24ucHJldiApIHsKCQkJCSQoIHRoaXMuZG9tUG9zaXRpb24ucHJldiApLmFmdGVyKCB0aGlzLmN1cnJlbnRJdGVtICk7CgkJCX0gZWxzZSB7CgkJCQkkKCB0aGlzLmRvbVBvc2l0aW9uLnBhcmVudCApLnByZXBlbmQoIHRoaXMuY3VycmVudEl0ZW0gKTsKCQkJfQoJCX0KCgkJcmV0dXJuIHRoaXM7CgoJfSwKCglzZXJpYWxpemU6IGZ1bmN0aW9uKCBvICkgewoKCQl2YXIgaXRlbXMgPSB0aGlzLl9nZXRJdGVtc0FzalF1ZXJ5KCBvICYmIG8uY29ubmVjdGVkICksCgkJCXN0ciA9IFtdOwoJCW8gPSBvIHx8IHt9OwoKCQkkKCBpdGVtcyApLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgcmVzID0gKCAkKCBvLml0ZW0gfHwgdGhpcyApLmF0dHIoIG8uYXR0cmlidXRlIHx8ICJpZCIgKSB8fCAiIiApCgkJCQkubWF0Y2goIG8uZXhwcmVzc2lvbiB8fCAoIC8oLispW1wtPV9dKC4rKS8gKSApOwoJCQlpZiAoIHJlcyApIHsKCQkJCXN0ci5wdXNoKAoJCQkJCSggby5rZXkgfHwgcmVzWyAxIF0gKyAiW10iICkgKwoJCQkJCSI9IiArICggby5rZXkgJiYgby5leHByZXNzaW9uID8gcmVzWyAxIF0gOiByZXNbIDIgXSApICk7CgkJCX0KCQl9ICk7CgoJCWlmICggIXN0ci5sZW5ndGggJiYgby5rZXkgKSB7CgkJCXN0ci5wdXNoKCBvLmtleSArICI9IiApOwoJCX0KCgkJcmV0dXJuIHN0ci5qb2luKCAiJiIgKTsKCgl9LAoKCXRvQXJyYXk6IGZ1bmN0aW9uKCBvICkgewoKCQl2YXIgaXRlbXMgPSB0aGlzLl9nZXRJdGVtc0FzalF1ZXJ5KCBvICYmIG8uY29ubmVjdGVkICksCgkJCXJldCA9IFtdOwoKCQlvID0gbyB8fCB7fTsKCgkJaXRlbXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXJldC5wdXNoKCAkKCBvLml0ZW0gfHwgdGhpcyApLmF0dHIoIG8uYXR0cmlidXRlIHx8ICJpZCIgKSB8fCAiIiApOwoJCX0gKTsKCQlyZXR1cm4gcmV0OwoKCX0sCgoJLyogQmUgY2FyZWZ1bCB3aXRoIHRoZSBmb2xsb3dpbmcgY29yZSBmdW5jdGlvbnMgKi8KCV9pbnRlcnNlY3RzV2l0aDogZnVuY3Rpb24oIGl0ZW0gKSB7CgoJCXZhciB4MSA9IHRoaXMucG9zaXRpb25BYnMubGVmdCwKCQkJeDIgPSB4MSArIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGgsCgkJCXkxID0gdGhpcy5wb3NpdGlvbkFicy50b3AsCgkJCXkyID0geTEgKyB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCwKCQkJbCA9IGl0ZW0ubGVmdCwKCQkJciA9IGwgKyBpdGVtLndpZHRoLAoJCQl0ID0gaXRlbS50b3AsCgkJCWIgPSB0ICsgaXRlbS5oZWlnaHQsCgkJCWR5Q2xpY2sgPSB0aGlzLm9mZnNldC5jbGljay50b3AsCgkJCWR4Q2xpY2sgPSB0aGlzLm9mZnNldC5jbGljay5sZWZ0LAoJCQlpc092ZXJFbGVtZW50SGVpZ2h0ID0gKCB0aGlzLm9wdGlvbnMuYXhpcyA9PT0gIngiICkgfHwgKCAoIHkxICsgZHlDbGljayApID4gdCAmJgoJCQkJKCB5MSArIGR5Q2xpY2sgKSA8IGIgKSwKCQkJaXNPdmVyRWxlbWVudFdpZHRoID0gKCB0aGlzLm9wdGlvbnMuYXhpcyA9PT0gInkiICkgfHwgKCAoIHgxICsgZHhDbGljayApID4gbCAmJgoJCQkJKCB4MSArIGR4Q2xpY2sgKSA8IHIgKSwKCQkJaXNPdmVyRWxlbWVudCA9IGlzT3ZlckVsZW1lbnRIZWlnaHQgJiYgaXNPdmVyRWxlbWVudFdpZHRoOwoKCQlpZiAoIHRoaXMub3B0aW9ucy50b2xlcmFuY2UgPT09ICJwb2ludGVyIiB8fAoJCQl0aGlzLm9wdGlvbnMuZm9yY2VQb2ludGVyRm9yQ29udGFpbmVycyB8fAoJCQkoIHRoaXMub3B0aW9ucy50b2xlcmFuY2UgIT09ICJwb2ludGVyIiAmJgoJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9uc1sgdGhpcy5mbG9hdGluZyA/ICJ3aWR0aCIgOiAiaGVpZ2h0IiBdID4KCQkJCWl0ZW1bIHRoaXMuZmxvYXRpbmcgPyAid2lkdGgiIDogImhlaWdodCIgXSApCgkJKSB7CgkJCXJldHVybiBpc092ZXJFbGVtZW50OwoJCX0gZWxzZSB7CgoJCQlyZXR1cm4gKCBsIDwgeDEgKyAoIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLyAyICkgJiYgLy8gUmlnaHQgSGFsZgoJCQkJeDIgLSAoIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLyAyICkgPCByICYmIC8vIExlZnQgSGFsZgoJCQkJdCA8IHkxICsgKCB0aGlzLmhlbHBlclByb3BvcnRpb25zLmhlaWdodCAvIDIgKSAmJiAvLyBCb3R0b20gSGFsZgoJCQkJeTIgLSAoIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC8gMiApIDwgYiApOyAvLyBUb3AgSGFsZgoKCQl9Cgl9LAoKCV9pbnRlcnNlY3RzV2l0aFBvaW50ZXI6IGZ1bmN0aW9uKCBpdGVtICkgewoJCXZhciB2ZXJ0aWNhbERpcmVjdGlvbiwgaG9yaXpvbnRhbERpcmVjdGlvbiwKCQkJaXNPdmVyRWxlbWVudEhlaWdodCA9ICggdGhpcy5vcHRpb25zLmF4aXMgPT09ICJ4IiApIHx8CgkJCQl0aGlzLl9pc092ZXJBeGlzKAoJCQkJCXRoaXMucG9zaXRpb25BYnMudG9wICsgdGhpcy5vZmZzZXQuY2xpY2sudG9wLCBpdGVtLnRvcCwgaXRlbS5oZWlnaHQgKSwKCQkJaXNPdmVyRWxlbWVudFdpZHRoID0gKCB0aGlzLm9wdGlvbnMuYXhpcyA9PT0gInkiICkgfHwKCQkJCXRoaXMuX2lzT3ZlckF4aXMoCgkJCQkJdGhpcy5wb3NpdGlvbkFicy5sZWZ0ICsgdGhpcy5vZmZzZXQuY2xpY2subGVmdCwgaXRlbS5sZWZ0LCBpdGVtLndpZHRoICksCgkJCWlzT3ZlckVsZW1lbnQgPSBpc092ZXJFbGVtZW50SGVpZ2h0ICYmIGlzT3ZlckVsZW1lbnRXaWR0aDsKCgkJaWYgKCAhaXNPdmVyRWxlbWVudCApIHsKCQkJcmV0dXJuIGZhbHNlOwoJCX0KCgkJdmVydGljYWxEaXJlY3Rpb24gPSB0aGlzLl9nZXREcmFnVmVydGljYWxEaXJlY3Rpb24oKTsKCQlob3Jpem9udGFsRGlyZWN0aW9uID0gdGhpcy5fZ2V0RHJhZ0hvcml6b250YWxEaXJlY3Rpb24oKTsKCgkJcmV0dXJuIHRoaXMuZmxvYXRpbmcgPwoJCQkoICggaG9yaXpvbnRhbERpcmVjdGlvbiA9PT0gInJpZ2h0IiB8fCB2ZXJ0aWNhbERpcmVjdGlvbiA9PT0gImRvd24iICkgPyAyIDogMSApCgkJCTogKCB2ZXJ0aWNhbERpcmVjdGlvbiAmJiAoIHZlcnRpY2FsRGlyZWN0aW9uID09PSAiZG93biIgPyAyIDogMSApICk7CgoJfSwKCglfaW50ZXJzZWN0c1dpdGhTaWRlczogZnVuY3Rpb24oIGl0ZW0gKSB7CgoJCXZhciBpc092ZXJCb3R0b21IYWxmID0gdGhpcy5faXNPdmVyQXhpcyggdGhpcy5wb3NpdGlvbkFicy50b3AgKwoJCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wLCBpdGVtLnRvcCArICggaXRlbS5oZWlnaHQgLyAyICksIGl0ZW0uaGVpZ2h0ICksCgkJCWlzT3ZlclJpZ2h0SGFsZiA9IHRoaXMuX2lzT3ZlckF4aXMoIHRoaXMucG9zaXRpb25BYnMubGVmdCArCgkJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0LCBpdGVtLmxlZnQgKyAoIGl0ZW0ud2lkdGggLyAyICksIGl0ZW0ud2lkdGggKSwKCQkJdmVydGljYWxEaXJlY3Rpb24gPSB0aGlzLl9nZXREcmFnVmVydGljYWxEaXJlY3Rpb24oKSwKCQkJaG9yaXpvbnRhbERpcmVjdGlvbiA9IHRoaXMuX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uKCk7CgoJCWlmICggdGhpcy5mbG9hdGluZyAmJiBob3Jpem9udGFsRGlyZWN0aW9uICkgewoJCQlyZXR1cm4gKCAoIGhvcml6b250YWxEaXJlY3Rpb24gPT09ICJyaWdodCIgJiYgaXNPdmVyUmlnaHRIYWxmICkgfHwKCQkJCSggaG9yaXpvbnRhbERpcmVjdGlvbiA9PT0gImxlZnQiICYmICFpc092ZXJSaWdodEhhbGYgKSApOwoJCX0gZWxzZSB7CgkJCXJldHVybiB2ZXJ0aWNhbERpcmVjdGlvbiAmJiAoICggdmVydGljYWxEaXJlY3Rpb24gPT09ICJkb3duIiAmJiBpc092ZXJCb3R0b21IYWxmICkgfHwKCQkJCSggdmVydGljYWxEaXJlY3Rpb24gPT09ICJ1cCIgJiYgIWlzT3ZlckJvdHRvbUhhbGYgKSApOwoJCX0KCgl9LAoKCV9nZXREcmFnVmVydGljYWxEaXJlY3Rpb246IGZ1bmN0aW9uKCkgewoJCXZhciBkZWx0YSA9IHRoaXMucG9zaXRpb25BYnMudG9wIC0gdGhpcy5sYXN0UG9zaXRpb25BYnMudG9wOwoJCXJldHVybiBkZWx0YSAhPT0gMCAmJiAoIGRlbHRhID4gMCA/ICJkb3duIiA6ICJ1cCIgKTsKCX0sCgoJX2dldERyYWdIb3Jpem9udGFsRGlyZWN0aW9uOiBmdW5jdGlvbigpIHsKCQl2YXIgZGVsdGEgPSB0aGlzLnBvc2l0aW9uQWJzLmxlZnQgLSB0aGlzLmxhc3RQb3NpdGlvbkFicy5sZWZ0OwoJCXJldHVybiBkZWx0YSAhPT0gMCAmJiAoIGRlbHRhID4gMCA/ICJyaWdodCIgOiAibGVmdCIgKTsKCX0sCgoJcmVmcmVzaDogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXRoaXMuX3JlZnJlc2hJdGVtcyggZXZlbnQgKTsKCQl0aGlzLl9zZXRIYW5kbGVDbGFzc05hbWUoKTsKCQl0aGlzLnJlZnJlc2hQb3NpdGlvbnMoKTsKCQlyZXR1cm4gdGhpczsKCX0sCgoJX2Nvbm5lY3RXaXRoOiBmdW5jdGlvbigpIHsKCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9uczsKCQlyZXR1cm4gb3B0aW9ucy5jb25uZWN0V2l0aC5jb25zdHJ1Y3RvciA9PT0gU3RyaW5nID8KCQkJWyBvcHRpb25zLmNvbm5lY3RXaXRoIF0gOgoJCQlvcHRpb25zLmNvbm5lY3RXaXRoOwoJfSwKCglfZ2V0SXRlbXNBc2pRdWVyeTogZnVuY3Rpb24oIGNvbm5lY3RlZCApIHsKCgkJdmFyIGksIGosIGN1ciwgaW5zdCwKCQkJaXRlbXMgPSBbXSwKCQkJcXVlcmllcyA9IFtdLAoJCQljb25uZWN0V2l0aCA9IHRoaXMuX2Nvbm5lY3RXaXRoKCk7CgoJCWlmICggY29ubmVjdFdpdGggJiYgY29ubmVjdGVkICkgewoJCQlmb3IgKCBpID0gY29ubmVjdFdpdGgubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0gKSB7CgkJCQljdXIgPSAkKCBjb25uZWN0V2l0aFsgaSBdLCB0aGlzLmRvY3VtZW50WyAwIF0gKTsKCQkJCWZvciAoIGogPSBjdXIubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0gKSB7CgkJCQkJaW5zdCA9ICQuZGF0YSggY3VyWyBqIF0sIHRoaXMud2lkZ2V0RnVsbE5hbWUgKTsKCQkJCQlpZiAoIGluc3QgJiYgaW5zdCAhPT0gdGhpcyAmJiAhaW5zdC5vcHRpb25zLmRpc2FibGVkICkgewoJCQkJCQlxdWVyaWVzLnB1c2goIFsgJC5pc0Z1bmN0aW9uKCBpbnN0Lm9wdGlvbnMuaXRlbXMgKSA/CgkJCQkJCQlpbnN0Lm9wdGlvbnMuaXRlbXMuY2FsbCggaW5zdC5lbGVtZW50ICkgOgoJCQkJCQkJJCggaW5zdC5vcHRpb25zLml0ZW1zLCBpbnN0LmVsZW1lbnQgKQoJCQkJCQkJCS5ub3QoICIudWktc29ydGFibGUtaGVscGVyIiApCgkJCQkJCQkJLm5vdCggIi51aS1zb3J0YWJsZS1wbGFjZWhvbGRlciIgKSwgaW5zdCBdICk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlxdWVyaWVzLnB1c2goIFsgJC5pc0Z1bmN0aW9uKCB0aGlzLm9wdGlvbnMuaXRlbXMgKSA/CgkJCXRoaXMub3B0aW9ucy5pdGVtcwoJCQkJLmNhbGwoIHRoaXMuZWxlbWVudCwgbnVsbCwgeyBvcHRpb25zOiB0aGlzLm9wdGlvbnMsIGl0ZW06IHRoaXMuY3VycmVudEl0ZW0gfSApIDoKCQkJJCggdGhpcy5vcHRpb25zLml0ZW1zLCB0aGlzLmVsZW1lbnQgKQoJCQkJLm5vdCggIi51aS1zb3J0YWJsZS1oZWxwZXIiICkKCQkJCS5ub3QoICIudWktc29ydGFibGUtcGxhY2Vob2xkZXIiICksIHRoaXMgXSApOwoKCQlmdW5jdGlvbiBhZGRJdGVtcygpIHsKCQkJaXRlbXMucHVzaCggdGhpcyApOwoJCX0KCQlmb3IgKCBpID0gcXVlcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJcXVlcmllc1sgaSBdWyAwIF0uZWFjaCggYWRkSXRlbXMgKTsKCQl9CgoJCXJldHVybiAkKCBpdGVtcyApOwoKCX0sCgoJX3JlbW92ZUN1cnJlbnRzRnJvbUl0ZW1zOiBmdW5jdGlvbigpIHsKCgkJdmFyIGxpc3QgPSB0aGlzLmN1cnJlbnRJdGVtLmZpbmQoICI6ZGF0YSgiICsgdGhpcy53aWRnZXROYW1lICsgIi1pdGVtKSIgKTsKCgkJdGhpcy5pdGVtcyA9ICQuZ3JlcCggdGhpcy5pdGVtcywgZnVuY3Rpb24oIGl0ZW0gKSB7CgkJCWZvciAoIHZhciBqID0gMDsgaiA8IGxpc3QubGVuZ3RoOyBqKysgKSB7CgkJCQlpZiAoIGxpc3RbIGogXSA9PT0gaXRlbS5pdGVtWyAwIF0gKSB7CgkJCQkJcmV0dXJuIGZhbHNlOwoJCQkJfQoJCQl9CgkJCXJldHVybiB0cnVlOwoJCX0gKTsKCgl9LAoKCV9yZWZyZXNoSXRlbXM6IGZ1bmN0aW9uKCBldmVudCApIHsKCgkJdGhpcy5pdGVtcyA9IFtdOwoJCXRoaXMuY29udGFpbmVycyA9IFsgdGhpcyBdOwoKCQl2YXIgaSwgaiwgY3VyLCBpbnN0LCB0YXJnZXREYXRhLCBfcXVlcmllcywgaXRlbSwgcXVlcmllc0xlbmd0aCwKCQkJaXRlbXMgPSB0aGlzLml0ZW1zLAoJCQlxdWVyaWVzID0gWyBbICQuaXNGdW5jdGlvbiggdGhpcy5vcHRpb25zLml0ZW1zICkgPwoJCQkJdGhpcy5vcHRpb25zLml0ZW1zLmNhbGwoIHRoaXMuZWxlbWVudFsgMCBdLCBldmVudCwgeyBpdGVtOiB0aGlzLmN1cnJlbnRJdGVtIH0gKSA6CgkJCQkkKCB0aGlzLm9wdGlvbnMuaXRlbXMsIHRoaXMuZWxlbWVudCApLCB0aGlzIF0gXSwKCQkJY29ubmVjdFdpdGggPSB0aGlzLl9jb25uZWN0V2l0aCgpOwoKCQkvL1Nob3VsZG4ndCBiZSBydW4gdGhlIGZpcnN0IHRpbWUgdGhyb3VnaCBkdWUgdG8gbWFzc2l2ZSBzbG93LWRvd24KCQlpZiAoIGNvbm5lY3RXaXRoICYmIHRoaXMucmVhZHkgKSB7CgkJCWZvciAoIGkgPSBjb25uZWN0V2l0aC5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJCWN1ciA9ICQoIGNvbm5lY3RXaXRoWyBpIF0sIHRoaXMuZG9jdW1lbnRbIDAgXSApOwoJCQkJZm9yICggaiA9IGN1ci5sZW5ndGggLSAxOyBqID49IDA7IGotLSApIHsKCQkJCQlpbnN0ID0gJC5kYXRhKCBjdXJbIGogXSwgdGhpcy53aWRnZXRGdWxsTmFtZSApOwoJCQkJCWlmICggaW5zdCAmJiBpbnN0ICE9PSB0aGlzICYmICFpbnN0Lm9wdGlvbnMuZGlzYWJsZWQgKSB7CgkJCQkJCXF1ZXJpZXMucHVzaCggWyAkLmlzRnVuY3Rpb24oIGluc3Qub3B0aW9ucy5pdGVtcyApID8KCQkJCQkJCWluc3Qub3B0aW9ucy5pdGVtcwoJCQkJCQkJCS5jYWxsKCBpbnN0LmVsZW1lbnRbIDAgXSwgZXZlbnQsIHsgaXRlbTogdGhpcy5jdXJyZW50SXRlbSB9ICkgOgoJCQkJCQkJJCggaW5zdC5vcHRpb25zLml0ZW1zLCBpbnN0LmVsZW1lbnQgKSwgaW5zdCBdICk7CgkJCQkJCXRoaXMuY29udGFpbmVycy5wdXNoKCBpbnN0ICk7CgkJCQkJfQoJCQkJfQoJCQl9CgkJfQoKCQlmb3IgKCBpID0gcXVlcmllcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJdGFyZ2V0RGF0YSA9IHF1ZXJpZXNbIGkgXVsgMSBdOwoJCQlfcXVlcmllcyA9IHF1ZXJpZXNbIGkgXVsgMCBdOwoKCQkJZm9yICggaiA9IDAsIHF1ZXJpZXNMZW5ndGggPSBfcXVlcmllcy5sZW5ndGg7IGogPCBxdWVyaWVzTGVuZ3RoOyBqKysgKSB7CgkJCQlpdGVtID0gJCggX3F1ZXJpZXNbIGogXSApOwoKCQkJCS8vIERhdGEgZm9yIHRhcmdldCBjaGVja2luZyAobW91c2UgbWFuYWdlcikKCQkJCWl0ZW0uZGF0YSggdGhpcy53aWRnZXROYW1lICsgIi1pdGVtIiwgdGFyZ2V0RGF0YSApOwoKCQkJCWl0ZW1zLnB1c2goIHsKCQkJCQlpdGVtOiBpdGVtLAoJCQkJCWluc3RhbmNlOiB0YXJnZXREYXRhLAoJCQkJCXdpZHRoOiAwLCBoZWlnaHQ6IDAsCgkJCQkJbGVmdDogMCwgdG9wOiAwCgkJCQl9ICk7CgkJCX0KCQl9CgoJfSwKCglyZWZyZXNoUG9zaXRpb25zOiBmdW5jdGlvbiggZmFzdCApIHsKCgkJLy8gRGV0ZXJtaW5lIHdoZXRoZXIgaXRlbXMgYXJlIGJlaW5nIGRpc3BsYXllZCBob3Jpem9udGFsbHkKCQl0aGlzLmZsb2F0aW5nID0gdGhpcy5pdGVtcy5sZW5ndGggPwoJCQl0aGlzLm9wdGlvbnMuYXhpcyA9PT0gIngiIHx8IHRoaXMuX2lzRmxvYXRpbmcoIHRoaXMuaXRlbXNbIDAgXS5pdGVtICkgOgoJCQlmYWxzZTsKCgkJLy9UaGlzIGhhcyB0byBiZSByZWRvbmUgYmVjYXVzZSBkdWUgdG8gdGhlIGl0ZW0gYmVpbmcgbW92ZWQgb3V0L2ludG8gdGhlIG9mZnNldFBhcmVudCwKCQkvLyB0aGUgb2Zmc2V0UGFyZW50J3MgcG9zaXRpb24gd2lsbCBjaGFuZ2UKCQlpZiAoIHRoaXMub2Zmc2V0UGFyZW50ICYmIHRoaXMuaGVscGVyICkgewoJCQl0aGlzLm9mZnNldC5wYXJlbnQgPSB0aGlzLl9nZXRQYXJlbnRPZmZzZXQoKTsKCQl9CgoJCXZhciBpLCBpdGVtLCB0LCBwOwoKCQlmb3IgKCBpID0gdGhpcy5pdGVtcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJaXRlbSA9IHRoaXMuaXRlbXNbIGkgXTsKCgkJCS8vV2UgaWdub3JlIGNhbGN1bGF0aW5nIHBvc2l0aW9ucyBvZiBhbGwgY29ubmVjdGVkIGNvbnRhaW5lcnMgd2hlbiB3ZSdyZSBub3Qgb3ZlciB0aGVtCgkJCWlmICggaXRlbS5pbnN0YW5jZSAhPT0gdGhpcy5jdXJyZW50Q29udGFpbmVyICYmIHRoaXMuY3VycmVudENvbnRhaW5lciAmJgoJCQkJCWl0ZW0uaXRlbVsgMCBdICE9PSB0aGlzLmN1cnJlbnRJdGVtWyAwIF0gKSB7CgkJCQljb250aW51ZTsKCQkJfQoKCQkJdCA9IHRoaXMub3B0aW9ucy50b2xlcmFuY2VFbGVtZW50ID8KCQkJCSQoIHRoaXMub3B0aW9ucy50b2xlcmFuY2VFbGVtZW50LCBpdGVtLml0ZW0gKSA6CgkJCQlpdGVtLml0ZW07CgoJCQlpZiAoICFmYXN0ICkgewoJCQkJaXRlbS53aWR0aCA9IHQub3V0ZXJXaWR0aCgpOwoJCQkJaXRlbS5oZWlnaHQgPSB0Lm91dGVySGVpZ2h0KCk7CgkJCX0KCgkJCXAgPSB0Lm9mZnNldCgpOwoJCQlpdGVtLmxlZnQgPSBwLmxlZnQ7CgkJCWl0ZW0udG9wID0gcC50b3A7CgkJfQoKCQlpZiAoIHRoaXMub3B0aW9ucy5jdXN0b20gJiYgdGhpcy5vcHRpb25zLmN1c3RvbS5yZWZyZXNoQ29udGFpbmVycyApIHsKCQkJdGhpcy5vcHRpb25zLmN1c3RvbS5yZWZyZXNoQ29udGFpbmVycy5jYWxsKCB0aGlzICk7CgkJfSBlbHNlIHsKCQkJZm9yICggaSA9IHRoaXMuY29udGFpbmVycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSApIHsKCQkJCXAgPSB0aGlzLmNvbnRhaW5lcnNbIGkgXS5lbGVtZW50Lm9mZnNldCgpOwoJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUubGVmdCA9IHAubGVmdDsKCQkJCXRoaXMuY29udGFpbmVyc1sgaSBdLmNvbnRhaW5lckNhY2hlLnRvcCA9IHAudG9wOwoJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUud2lkdGggPQoJCQkJCXRoaXMuY29udGFpbmVyc1sgaSBdLmVsZW1lbnQub3V0ZXJXaWR0aCgpOwoJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUuaGVpZ2h0ID0KCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGkgXS5lbGVtZW50Lm91dGVySGVpZ2h0KCk7CgkJCX0KCQl9CgoJCXJldHVybiB0aGlzOwoJfSwKCglfY3JlYXRlUGxhY2Vob2xkZXI6IGZ1bmN0aW9uKCB0aGF0ICkgewoJCXRoYXQgPSB0aGF0IHx8IHRoaXM7CgkJdmFyIGNsYXNzTmFtZSwKCQkJbyA9IHRoYXQub3B0aW9uczsKCgkJaWYgKCAhby5wbGFjZWhvbGRlciB8fCBvLnBsYWNlaG9sZGVyLmNvbnN0cnVjdG9yID09PSBTdHJpbmcgKSB7CgkJCWNsYXNzTmFtZSA9IG8ucGxhY2Vob2xkZXI7CgkJCW8ucGxhY2Vob2xkZXIgPSB7CgkJCQllbGVtZW50OiBmdW5jdGlvbigpIHsKCgkJCQkJdmFyIG5vZGVOYW1lID0gdGhhdC5jdXJyZW50SXRlbVsgMCBdLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksCgkJCQkJCWVsZW1lbnQgPSAkKCAiPCIgKyBub2RlTmFtZSArICI+IiwgdGhhdC5kb2N1bWVudFsgMCBdICk7CgoJCQkJCQl0aGF0Ll9hZGRDbGFzcyggZWxlbWVudCwgInVpLXNvcnRhYmxlLXBsYWNlaG9sZGVyIiwKCQkJCQkJCQljbGFzc05hbWUgfHwgdGhhdC5jdXJyZW50SXRlbVsgMCBdLmNsYXNzTmFtZSApCgkJCQkJCQkuX3JlbW92ZUNsYXNzKCBlbGVtZW50LCAidWktc29ydGFibGUtaGVscGVyIiApOwoKCQkJCQlpZiAoIG5vZGVOYW1lID09PSAidGJvZHkiICkgewoJCQkJCQl0aGF0Ll9jcmVhdGVUclBsYWNlaG9sZGVyKAoJCQkJCQkJdGhhdC5jdXJyZW50SXRlbS5maW5kKCAidHIiICkuZXEoIDAgKSwKCQkJCQkJCSQoICI8dHI+IiwgdGhhdC5kb2N1bWVudFsgMCBdICkuYXBwZW5kVG8oIGVsZW1lbnQgKQoJCQkJCQkpOwoJCQkJCX0gZWxzZSBpZiAoIG5vZGVOYW1lID09PSAidHIiICkgewoJCQkJCQl0aGF0Ll9jcmVhdGVUclBsYWNlaG9sZGVyKCB0aGF0LmN1cnJlbnRJdGVtLCBlbGVtZW50ICk7CgkJCQkJfSBlbHNlIGlmICggbm9kZU5hbWUgPT09ICJpbWciICkgewoJCQkJCQllbGVtZW50LmF0dHIoICJzcmMiLCB0aGF0LmN1cnJlbnRJdGVtLmF0dHIoICJzcmMiICkgKTsKCQkJCQl9CgoJCQkJCWlmICggIWNsYXNzTmFtZSApIHsKCQkJCQkJZWxlbWVudC5jc3MoICJ2aXNpYmlsaXR5IiwgImhpZGRlbiIgKTsKCQkJCQl9CgoJCQkJCXJldHVybiBlbGVtZW50OwoJCQkJfSwKCQkJCXVwZGF0ZTogZnVuY3Rpb24oIGNvbnRhaW5lciwgcCApIHsKCgkJCQkJLy8gMS4gSWYgYSBjbGFzc05hbWUgaXMgc2V0IGFzICdwbGFjZWhvbGRlciBvcHRpb24sIHdlIGRvbid0IGZvcmNlIHNpemVzIC0KCQkJCQkvLyB0aGUgY2xhc3MgaXMgcmVzcG9uc2libGUgZm9yIHRoYXQKCQkJCQkvLyAyLiBUaGUgb3B0aW9uICdmb3JjZVBsYWNlaG9sZGVyU2l6ZSBjYW4gYmUgZW5hYmxlZCB0byBmb3JjZSBpdCBldmVuIGlmIGEKCQkJCQkvLyBjbGFzcyBuYW1lIGlzIHNwZWNpZmllZAoJCQkJCWlmICggY2xhc3NOYW1lICYmICFvLmZvcmNlUGxhY2Vob2xkZXJTaXplICkgewoJCQkJCQlyZXR1cm47CgkJCQkJfQoKCQkJCQkvL0lmIHRoZSBlbGVtZW50IGRvZXNuJ3QgaGF2ZSBhIGFjdHVhbCBoZWlnaHQgYnkgaXRzZWxmICh3aXRob3V0IHN0eWxlcyBjb21pbmcKCQkJCQkvLyBmcm9tIGEgc3R5bGVzaGVldCksIGl0IHJlY2VpdmVzIHRoZSBpbmxpbmUgaGVpZ2h0IGZyb20gdGhlIGRyYWdnZWQgaXRlbQoJCQkJCWlmICggIXAuaGVpZ2h0KCkgKSB7CgkJCQkJCXAuaGVpZ2h0KAoJCQkJCQkJdGhhdC5jdXJyZW50SXRlbS5pbm5lckhlaWdodCgpIC0KCQkJCQkJCXBhcnNlSW50KCB0aGF0LmN1cnJlbnRJdGVtLmNzcyggInBhZGRpbmdUb3AiICkgfHwgMCwgMTAgKSAtCgkJCQkJCQlwYXJzZUludCggdGhhdC5jdXJyZW50SXRlbS5jc3MoICJwYWRkaW5nQm90dG9tIiApIHx8IDAsIDEwICkgKTsKCQkJCQl9CgkJCQkJaWYgKCAhcC53aWR0aCgpICkgewoJCQkJCQlwLndpZHRoKAoJCQkJCQkJdGhhdC5jdXJyZW50SXRlbS5pbm5lcldpZHRoKCkgLQoJCQkJCQkJcGFyc2VJbnQoIHRoYXQuY3VycmVudEl0ZW0uY3NzKCAicGFkZGluZ0xlZnQiICkgfHwgMCwgMTAgKSAtCgkJCQkJCQlwYXJzZUludCggdGhhdC5jdXJyZW50SXRlbS5jc3MoICJwYWRkaW5nUmlnaHQiICkgfHwgMCwgMTAgKSApOwoJCQkJCX0KCQkJCX0KCQkJfTsKCQl9CgoJCS8vQ3JlYXRlIHRoZSBwbGFjZWhvbGRlcgoJCXRoYXQucGxhY2Vob2xkZXIgPSAkKCBvLnBsYWNlaG9sZGVyLmVsZW1lbnQuY2FsbCggdGhhdC5lbGVtZW50LCB0aGF0LmN1cnJlbnRJdGVtICkgKTsKCgkJLy9BcHBlbmQgaXQgYWZ0ZXIgdGhlIGFjdHVhbCBjdXJyZW50IGl0ZW0KCQl0aGF0LmN1cnJlbnRJdGVtLmFmdGVyKCB0aGF0LnBsYWNlaG9sZGVyICk7CgoJCS8vVXBkYXRlIHRoZSBzaXplIG9mIHRoZSBwbGFjZWhvbGRlciAoVE9ETzogTG9naWMgdG8gZnV6enksIHNlZSBsaW5lIDMxNi8zMTcpCgkJby5wbGFjZWhvbGRlci51cGRhdGUoIHRoYXQsIHRoYXQucGxhY2Vob2xkZXIgKTsKCgl9LAoKCV9jcmVhdGVUclBsYWNlaG9sZGVyOiBmdW5jdGlvbiggc291cmNlVHIsIHRhcmdldFRyICkgewoJCXZhciB0aGF0ID0gdGhpczsKCgkJc291cmNlVHIuY2hpbGRyZW4oKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJJCggIjx0ZD4mIzE2MDs8L3RkPiIsIHRoYXQuZG9jdW1lbnRbIDAgXSApCgkJCQkuYXR0ciggImNvbHNwYW4iLCAkKCB0aGlzICkuYXR0ciggImNvbHNwYW4iICkgfHwgMSApCgkJCQkuYXBwZW5kVG8oIHRhcmdldFRyICk7CgkJfSApOwoJfSwKCglfY29udGFjdENvbnRhaW5lcnM6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgaSwgaiwgZGlzdCwgaXRlbVdpdGhMZWFzdERpc3RhbmNlLCBwb3NQcm9wZXJ0eSwgc2l6ZVByb3BlcnR5LCBjdXIsIG5lYXJCb3R0b20sCgkJCWZsb2F0aW5nLCBheGlzLAoJCQlpbm5lcm1vc3RDb250YWluZXIgPSBudWxsLAoJCQlpbm5lcm1vc3RJbmRleCA9IG51bGw7CgoJCS8vIEdldCBpbm5lcm1vc3QgY29udGFpbmVyIHRoYXQgaW50ZXJzZWN0cyB3aXRoIGl0ZW0KCQlmb3IgKCBpID0gdGhpcy5jb250YWluZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgewoKCQkJLy8gTmV2ZXIgY29uc2lkZXIgYSBjb250YWluZXIgdGhhdCdzIGxvY2F0ZWQgd2l0aGluIHRoZSBpdGVtIGl0c2VsZgoJCQlpZiAoICQuY29udGFpbnMoIHRoaXMuY3VycmVudEl0ZW1bIDAgXSwgdGhpcy5jb250YWluZXJzWyBpIF0uZWxlbWVudFsgMCBdICkgKSB7CgkJCQljb250aW51ZTsKCQkJfQoKCQkJaWYgKCB0aGlzLl9pbnRlcnNlY3RzV2l0aCggdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUgKSApIHsKCgkJCQkvLyBJZiB3ZSd2ZSBhbHJlYWR5IGZvdW5kIGEgY29udGFpbmVyIGFuZCBpdCdzIG1vcmUgImlubmVyIiB0aGFuIHRoaXMsIHRoZW4gY29udGludWUKCQkJCWlmICggaW5uZXJtb3N0Q29udGFpbmVyICYmCgkJCQkJCSQuY29udGFpbnMoCgkJCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGkgXS5lbGVtZW50WyAwIF0sCgkJCQkJCQlpbm5lcm1vc3RDb250YWluZXIuZWxlbWVudFsgMCBdICkgKSB7CgkJCQkJY29udGludWU7CgkJCQl9CgoJCQkJaW5uZXJtb3N0Q29udGFpbmVyID0gdGhpcy5jb250YWluZXJzWyBpIF07CgkJCQlpbm5lcm1vc3RJbmRleCA9IGk7CgoJCQl9IGVsc2UgewoKCQkJCS8vIGNvbnRhaW5lciBkb2Vzbid0IGludGVyc2VjdC4gdHJpZ2dlciAib3V0IiBldmVudCBpZiBuZWNlc3NhcnkKCQkJCWlmICggdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUub3ZlciApIHsKCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGkgXS5fdHJpZ2dlciggIm91dCIsIGV2ZW50LCB0aGlzLl91aUhhc2goIHRoaXMgKSApOwoJCQkJCXRoaXMuY29udGFpbmVyc1sgaSBdLmNvbnRhaW5lckNhY2hlLm92ZXIgPSAwOwoJCQkJfQoJCQl9CgoJCX0KCgkJLy8gSWYgbm8gaW50ZXJzZWN0aW5nIGNvbnRhaW5lcnMgZm91bmQsIHJldHVybgoJCWlmICggIWlubmVybW9zdENvbnRhaW5lciApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gTW92ZSB0aGUgaXRlbSBpbnRvIHRoZSBjb250YWluZXIgaWYgaXQncyBub3QgdGhlcmUgYWxyZWFkeQoJCWlmICggdGhpcy5jb250YWluZXJzLmxlbmd0aCA9PT0gMSApIHsKCQkJaWYgKCAhdGhpcy5jb250YWluZXJzWyBpbm5lcm1vc3RJbmRleCBdLmNvbnRhaW5lckNhY2hlLm92ZXIgKSB7CgkJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uX3RyaWdnZXIoICJvdmVyIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7CgkJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uY29udGFpbmVyQ2FjaGUub3ZlciA9IDE7CgkJCX0KCQl9IGVsc2UgewoKCQkJLy8gV2hlbiBlbnRlcmluZyBhIG5ldyBjb250YWluZXIsIHdlIHdpbGwgZmluZCB0aGUgaXRlbSB3aXRoIHRoZSBsZWFzdCBkaXN0YW5jZSBhbmQKCQkJLy8gYXBwZW5kIG91ciBpdGVtIG5lYXIgaXQKCQkJZGlzdCA9IDEwMDAwOwoJCQlpdGVtV2l0aExlYXN0RGlzdGFuY2UgPSBudWxsOwoJCQlmbG9hdGluZyA9IGlubmVybW9zdENvbnRhaW5lci5mbG9hdGluZyB8fCB0aGlzLl9pc0Zsb2F0aW5nKCB0aGlzLmN1cnJlbnRJdGVtICk7CgkJCXBvc1Byb3BlcnR5ID0gZmxvYXRpbmcgPyAibGVmdCIgOiAidG9wIjsKCQkJc2l6ZVByb3BlcnR5ID0gZmxvYXRpbmcgPyAid2lkdGgiIDogImhlaWdodCI7CgkJCWF4aXMgPSBmbG9hdGluZyA/ICJwYWdlWCIgOiAicGFnZVkiOwoKCQkJZm9yICggaiA9IHRoaXMuaXRlbXMubGVuZ3RoIC0gMTsgaiA+PSAwOyBqLS0gKSB7CgkJCQlpZiAoICEkLmNvbnRhaW5zKAoJCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uZWxlbWVudFsgMCBdLCB0aGlzLml0ZW1zWyBqIF0uaXRlbVsgMCBdICkKCQkJCSkgewoJCQkJCWNvbnRpbnVlOwoJCQkJfQoJCQkJaWYgKCB0aGlzLml0ZW1zWyBqIF0uaXRlbVsgMCBdID09PSB0aGlzLmN1cnJlbnRJdGVtWyAwIF0gKSB7CgkJCQkJY29udGludWU7CgkJCQl9CgoJCQkJY3VyID0gdGhpcy5pdGVtc1sgaiBdLml0ZW0ub2Zmc2V0KClbIHBvc1Byb3BlcnR5IF07CgkJCQluZWFyQm90dG9tID0gZmFsc2U7CgkJCQlpZiAoIGV2ZW50WyBheGlzIF0gLSBjdXIgPiB0aGlzLml0ZW1zWyBqIF1bIHNpemVQcm9wZXJ0eSBdIC8gMiApIHsKCQkJCQluZWFyQm90dG9tID0gdHJ1ZTsKCQkJCX0KCgkJCQlpZiAoIE1hdGguYWJzKCBldmVudFsgYXhpcyBdIC0gY3VyICkgPCBkaXN0ICkgewoJCQkJCWRpc3QgPSBNYXRoLmFicyggZXZlbnRbIGF4aXMgXSAtIGN1ciApOwoJCQkJCWl0ZW1XaXRoTGVhc3REaXN0YW5jZSA9IHRoaXMuaXRlbXNbIGogXTsKCQkJCQl0aGlzLmRpcmVjdGlvbiA9IG5lYXJCb3R0b20gPyAidXAiIDogImRvd24iOwoJCQkJfQoJCQl9CgoJCQkvL0NoZWNrIGlmIGRyb3BPbkVtcHR5IGlzIGVuYWJsZWQKCQkJaWYgKCAhaXRlbVdpdGhMZWFzdERpc3RhbmNlICYmICF0aGlzLm9wdGlvbnMuZHJvcE9uRW1wdHkgKSB7CgkJCQlyZXR1cm47CgkJCX0KCgkJCWlmICggdGhpcy5jdXJyZW50Q29udGFpbmVyID09PSB0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0gKSB7CgkJCQlpZiAoICF0aGlzLmN1cnJlbnRDb250YWluZXIuY29udGFpbmVyQ2FjaGUub3ZlciApIHsKCQkJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uX3RyaWdnZXIoICJvdmVyIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCgpICk7CgkJCQkJdGhpcy5jdXJyZW50Q29udGFpbmVyLmNvbnRhaW5lckNhY2hlLm92ZXIgPSAxOwoJCQkJfQoJCQkJcmV0dXJuOwoJCQl9CgoJCQlpdGVtV2l0aExlYXN0RGlzdGFuY2UgPwoJCQkJdGhpcy5fcmVhcnJhbmdlKCBldmVudCwgaXRlbVdpdGhMZWFzdERpc3RhbmNlLCBudWxsLCB0cnVlICkgOgoJCQkJdGhpcy5fcmVhcnJhbmdlKCBldmVudCwgbnVsbCwgdGhpcy5jb250YWluZXJzWyBpbm5lcm1vc3RJbmRleCBdLmVsZW1lbnQsIHRydWUgKTsKCQkJdGhpcy5fdHJpZ2dlciggImNoYW5nZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOwoJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uX3RyaWdnZXIoICJjaGFuZ2UiLCBldmVudCwgdGhpcy5fdWlIYXNoKCB0aGlzICkgKTsKCQkJdGhpcy5jdXJyZW50Q29udGFpbmVyID0gdGhpcy5jb250YWluZXJzWyBpbm5lcm1vc3RJbmRleCBdOwoKCQkJLy9VcGRhdGUgdGhlIHBsYWNlaG9sZGVyCgkJCXRoaXMub3B0aW9ucy5wbGFjZWhvbGRlci51cGRhdGUoIHRoaXMuY3VycmVudENvbnRhaW5lciwgdGhpcy5wbGFjZWhvbGRlciApOwoKCQkJdGhpcy5jb250YWluZXJzWyBpbm5lcm1vc3RJbmRleCBdLl90cmlnZ2VyKCAib3ZlciIsIGV2ZW50LCB0aGlzLl91aUhhc2goIHRoaXMgKSApOwoJCQl0aGlzLmNvbnRhaW5lcnNbIGlubmVybW9zdEluZGV4IF0uY29udGFpbmVyQ2FjaGUub3ZlciA9IDE7CgkJfQoKCX0sCgoJX2NyZWF0ZUhlbHBlcjogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQl2YXIgbyA9IHRoaXMub3B0aW9ucywKCQkJaGVscGVyID0gJC5pc0Z1bmN0aW9uKCBvLmhlbHBlciApID8KCQkJCSQoIG8uaGVscGVyLmFwcGx5KCB0aGlzLmVsZW1lbnRbIDAgXSwgWyBldmVudCwgdGhpcy5jdXJyZW50SXRlbSBdICkgKSA6CgkJCQkoIG8uaGVscGVyID09PSAiY2xvbmUiID8gdGhpcy5jdXJyZW50SXRlbS5jbG9uZSgpIDogdGhpcy5jdXJyZW50SXRlbSApOwoKCQkvL0FkZCB0aGUgaGVscGVyIHRvIHRoZSBET00gaWYgdGhhdCBkaWRuJ3QgaGFwcGVuIGFscmVhZHkKCQlpZiAoICFoZWxwZXIucGFyZW50cyggImJvZHkiICkubGVuZ3RoICkgewoJCQkkKCBvLmFwcGVuZFRvICE9PSAicGFyZW50IiA/CgkJCQlvLmFwcGVuZFRvIDoKCQkJCXRoaXMuY3VycmVudEl0ZW1bIDAgXS5wYXJlbnROb2RlIClbIDAgXS5hcHBlbmRDaGlsZCggaGVscGVyWyAwIF0gKTsKCQl9CgoJCWlmICggaGVscGVyWyAwIF0gPT09IHRoaXMuY3VycmVudEl0ZW1bIDAgXSApIHsKCQkJdGhpcy5fc3RvcmVkQ1NTID0gewoJCQkJd2lkdGg6IHRoaXMuY3VycmVudEl0ZW1bIDAgXS5zdHlsZS53aWR0aCwKCQkJCWhlaWdodDogdGhpcy5jdXJyZW50SXRlbVsgMCBdLnN0eWxlLmhlaWdodCwKCQkJCXBvc2l0aW9uOiB0aGlzLmN1cnJlbnRJdGVtLmNzcyggInBvc2l0aW9uIiApLAoJCQkJdG9wOiB0aGlzLmN1cnJlbnRJdGVtLmNzcyggInRvcCIgKSwKCQkJCWxlZnQ6IHRoaXMuY3VycmVudEl0ZW0uY3NzKCAibGVmdCIgKQoJCQl9OwoJCX0KCgkJaWYgKCAhaGVscGVyWyAwIF0uc3R5bGUud2lkdGggfHwgby5mb3JjZUhlbHBlclNpemUgKSB7CgkJCWhlbHBlci53aWR0aCggdGhpcy5jdXJyZW50SXRlbS53aWR0aCgpICk7CgkJfQoJCWlmICggIWhlbHBlclsgMCBdLnN0eWxlLmhlaWdodCB8fCBvLmZvcmNlSGVscGVyU2l6ZSApIHsKCQkJaGVscGVyLmhlaWdodCggdGhpcy5jdXJyZW50SXRlbS5oZWlnaHQoKSApOwoJCX0KCgkJcmV0dXJuIGhlbHBlcjsKCgl9LAoKCV9hZGp1c3RPZmZzZXRGcm9tSGVscGVyOiBmdW5jdGlvbiggb2JqICkgewoJCWlmICggdHlwZW9mIG9iaiA9PT0gInN0cmluZyIgKSB7CgkJCW9iaiA9IG9iai5zcGxpdCggIiAiICk7CgkJfQoJCWlmICggJC5pc0FycmF5KCBvYmogKSApIHsKCQkJb2JqID0geyBsZWZ0OiArb2JqWyAwIF0sIHRvcDogK29ialsgMSBdIHx8IDAgfTsKCQl9CgkJaWYgKCAibGVmdCIgaW4gb2JqICkgewoJCQl0aGlzLm9mZnNldC5jbGljay5sZWZ0ID0gb2JqLmxlZnQgKyB0aGlzLm1hcmdpbnMubGVmdDsKCQl9CgkJaWYgKCAicmlnaHQiIGluIG9iaiApIHsKCQkJdGhpcy5vZmZzZXQuY2xpY2subGVmdCA9IHRoaXMuaGVscGVyUHJvcG9ydGlvbnMud2lkdGggLSBvYmoucmlnaHQgKyB0aGlzLm1hcmdpbnMubGVmdDsKCQl9CgkJaWYgKCAidG9wIiBpbiBvYmogKSB7CgkJCXRoaXMub2Zmc2V0LmNsaWNrLnRvcCA9IG9iai50b3AgKyB0aGlzLm1hcmdpbnMudG9wOwoJCX0KCQlpZiAoICJib3R0b20iIGluIG9iaiApIHsKCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wID0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSBvYmouYm90dG9tICsgdGhpcy5tYXJnaW5zLnRvcDsKCQl9Cgl9LAoKCV9nZXRQYXJlbnRPZmZzZXQ6IGZ1bmN0aW9uKCkgewoKCQkvL0dldCB0aGUgb2Zmc2V0UGFyZW50IGFuZCBjYWNoZSBpdHMgcG9zaXRpb24KCQl0aGlzLm9mZnNldFBhcmVudCA9IHRoaXMuaGVscGVyLm9mZnNldFBhcmVudCgpOwoJCXZhciBwbyA9IHRoaXMub2Zmc2V0UGFyZW50Lm9mZnNldCgpOwoKCQkvLyBUaGlzIGlzIGEgc3BlY2lhbCBjYXNlIHdoZXJlIHdlIG5lZWQgdG8gbW9kaWZ5IGEgb2Zmc2V0IGNhbGN1bGF0ZWQgb24gc3RhcnQsIHNpbmNlIHRoZQoJCS8vIGZvbGxvd2luZyBoYXBwZW5lZDoKCQkvLyAxLiBUaGUgcG9zaXRpb24gb2YgdGhlIGhlbHBlciBpcyBhYnNvbHV0ZSwgc28gaXQncyBwb3NpdGlvbiBpcyBjYWxjdWxhdGVkIGJhc2VkIG9uIHRoZQoJCS8vIG5leHQgcG9zaXRpb25lZCBwYXJlbnQKCQkvLyAyLiBUaGUgYWN0dWFsIG9mZnNldCBwYXJlbnQgaXMgYSBjaGlsZCBvZiB0aGUgc2Nyb2xsIHBhcmVudCwgYW5kIHRoZSBzY3JvbGwgcGFyZW50IGlzbid0CgkJLy8gdGhlIGRvY3VtZW50LCB3aGljaCBtZWFucyB0aGF0IHRoZSBzY3JvbGwgaXMgaW5jbHVkZWQgaW4gdGhlIGluaXRpYWwgY2FsY3VsYXRpb24gb2YgdGhlCgkJLy8gb2Zmc2V0IG9mIHRoZSBwYXJlbnQsIGFuZCBuZXZlciByZWNhbGN1bGF0ZWQgdXBvbiBkcmFnCgkJaWYgKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiYWJzb2x1dGUiICYmIHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0gIT09IHRoaXMuZG9jdW1lbnRbIDAgXSAmJgoJCQkJJC5jb250YWlucyggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSwgdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgewoJCQlwby5sZWZ0ICs9IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKTsKCQkJcG8udG9wICs9IHRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpOwoJCX0KCgkJLy8gVGhpcyBuZWVkcyB0byBiZSBhY3R1YWxseSBkb25lIGZvciBhbGwgYnJvd3NlcnMsIHNpbmNlIHBhZ2VYL3BhZ2VZIGluY2x1ZGVzIHRoaXMKCQkvLyBpbmZvcm1hdGlvbiB3aXRoIGFuIHVnbHkgSUUgZml4CgkJaWYgKCB0aGlzLm9mZnNldFBhcmVudFsgMCBdID09PSB0aGlzLmRvY3VtZW50WyAwIF0uYm9keSB8fAoJCQkJKCB0aGlzLm9mZnNldFBhcmVudFsgMCBdLnRhZ05hbWUgJiYKCQkJCXRoaXMub2Zmc2V0UGFyZW50WyAwIF0udGFnTmFtZS50b0xvd2VyQ2FzZSgpID09PSAiaHRtbCIgJiYgJC51aS5pZSApICkgewoJCQlwbyA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07CgkJfQoKCQlyZXR1cm4gewoJCQl0b3A6IHBvLnRvcCArICggcGFyc2VJbnQoIHRoaXMub2Zmc2V0UGFyZW50LmNzcyggImJvcmRlclRvcFdpZHRoIiApLCAxMCApIHx8IDAgKSwKCQkJbGVmdDogcG8ubGVmdCArICggcGFyc2VJbnQoIHRoaXMub2Zmc2V0UGFyZW50LmNzcyggImJvcmRlckxlZnRXaWR0aCIgKSwgMTAgKSB8fCAwICkKCQl9OwoKCX0sCgoJX2dldFJlbGF0aXZlT2Zmc2V0OiBmdW5jdGlvbigpIHsKCgkJaWYgKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAicmVsYXRpdmUiICkgewoJCQl2YXIgcCA9IHRoaXMuY3VycmVudEl0ZW0ucG9zaXRpb24oKTsKCQkJcmV0dXJuIHsKCQkJCXRvcDogcC50b3AgLSAoIHBhcnNlSW50KCB0aGlzLmhlbHBlci5jc3MoICJ0b3AiICksIDEwICkgfHwgMCApICsKCQkJCQl0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSwKCQkJCWxlZnQ6IHAubGVmdCAtICggcGFyc2VJbnQoIHRoaXMuaGVscGVyLmNzcyggImxlZnQiICksIDEwICkgfHwgMCApICsKCQkJCQl0aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxMZWZ0KCkKCQkJfTsKCQl9IGVsc2UgewoJCQlyZXR1cm4geyB0b3A6IDAsIGxlZnQ6IDAgfTsKCQl9CgoJfSwKCglfY2FjaGVNYXJnaW5zOiBmdW5jdGlvbigpIHsKCQl0aGlzLm1hcmdpbnMgPSB7CgkJCWxlZnQ6ICggcGFyc2VJbnQoIHRoaXMuY3VycmVudEl0ZW0uY3NzKCAibWFyZ2luTGVmdCIgKSwgMTAgKSB8fCAwICksCgkJCXRvcDogKCBwYXJzZUludCggdGhpcy5jdXJyZW50SXRlbS5jc3MoICJtYXJnaW5Ub3AiICksIDEwICkgfHwgMCApCgkJfTsKCX0sCgoJX2NhY2hlSGVscGVyUHJvcG9ydGlvbnM6IGZ1bmN0aW9uKCkgewoJCXRoaXMuaGVscGVyUHJvcG9ydGlvbnMgPSB7CgkJCXdpZHRoOiB0aGlzLmhlbHBlci5vdXRlcldpZHRoKCksCgkJCWhlaWdodDogdGhpcy5oZWxwZXIub3V0ZXJIZWlnaHQoKQoJCX07Cgl9LAoKCV9zZXRDb250YWlubWVudDogZnVuY3Rpb24oKSB7CgoJCXZhciBjZSwgY28sIG92ZXIsCgkJCW8gPSB0aGlzLm9wdGlvbnM7CgkJaWYgKCBvLmNvbnRhaW5tZW50ID09PSAicGFyZW50IiApIHsKCQkJby5jb250YWlubWVudCA9IHRoaXMuaGVscGVyWyAwIF0ucGFyZW50Tm9kZTsKCQl9CgkJaWYgKCBvLmNvbnRhaW5tZW50ID09PSAiZG9jdW1lbnQiIHx8IG8uY29udGFpbm1lbnQgPT09ICJ3aW5kb3ciICkgewoJCQl0aGlzLmNvbnRhaW5tZW50ID0gWwoJCQkJMCAtIHRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQgLSB0aGlzLm9mZnNldC5wYXJlbnQubGVmdCwKCQkJCTAgLSB0aGlzLm9mZnNldC5yZWxhdGl2ZS50b3AgLSB0aGlzLm9mZnNldC5wYXJlbnQudG9wLAoJCQkJby5jb250YWlubWVudCA9PT0gImRvY3VtZW50IiA/CgkJCQkJdGhpcy5kb2N1bWVudC53aWR0aCgpIDoKCQkJCQl0aGlzLndpbmRvdy53aWR0aCgpIC0gdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy53aWR0aCAtIHRoaXMubWFyZ2lucy5sZWZ0LAoJCQkJKCBvLmNvbnRhaW5tZW50ID09PSAiZG9jdW1lbnQiID8KCQkJCQkoIHRoaXMuZG9jdW1lbnQuaGVpZ2h0KCkgfHwgZG9jdW1lbnQuYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodCApIDoKCQkJCQl0aGlzLndpbmRvdy5oZWlnaHQoKSB8fCB0aGlzLmRvY3VtZW50WyAwIF0uYm9keS5wYXJlbnROb2RlLnNjcm9sbEhlaWdodAoJCQkJKSAtIHRoaXMuaGVscGVyUHJvcG9ydGlvbnMuaGVpZ2h0IC0gdGhpcy5tYXJnaW5zLnRvcAoJCQldOwoJCX0KCgkJaWYgKCAhKCAvXihkb2N1bWVudHx3aW5kb3d8cGFyZW50KSQvICkudGVzdCggby5jb250YWlubWVudCApICkgewoJCQljZSA9ICQoIG8uY29udGFpbm1lbnQgKVsgMCBdOwoJCQljbyA9ICQoIG8uY29udGFpbm1lbnQgKS5vZmZzZXQoKTsKCQkJb3ZlciA9ICggJCggY2UgKS5jc3MoICJvdmVyZmxvdyIgKSAhPT0gImhpZGRlbiIgKTsKCgkJCXRoaXMuY29udGFpbm1lbnQgPSBbCgkJCQljby5sZWZ0ICsgKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJib3JkZXJMZWZ0V2lkdGgiICksIDEwICkgfHwgMCApICsKCQkJCQkoIHBhcnNlSW50KCAkKCBjZSApLmNzcyggInBhZGRpbmdMZWZ0IiApLCAxMCApIHx8IDAgKSAtIHRoaXMubWFyZ2lucy5sZWZ0LAoJCQkJY28udG9wICsgKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJib3JkZXJUb3BXaWR0aCIgKSwgMTAgKSB8fCAwICkgKwoJCQkJCSggcGFyc2VJbnQoICQoIGNlICkuY3NzKCAicGFkZGluZ1RvcCIgKSwgMTAgKSB8fCAwICkgLSB0aGlzLm1hcmdpbnMudG9wLAoJCQkJY28ubGVmdCArICggb3ZlciA/IE1hdGgubWF4KCBjZS5zY3JvbGxXaWR0aCwgY2Uub2Zmc2V0V2lkdGggKSA6IGNlLm9mZnNldFdpZHRoICkgLQoJCQkJCSggcGFyc2VJbnQoICQoIGNlICkuY3NzKCAiYm9yZGVyTGVmdFdpZHRoIiApLCAxMCApIHx8IDAgKSAtCgkJCQkJKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJwYWRkaW5nUmlnaHQiICksIDEwICkgfHwgMCApIC0KCQkJCQl0aGlzLmhlbHBlclByb3BvcnRpb25zLndpZHRoIC0gdGhpcy5tYXJnaW5zLmxlZnQsCgkJCQljby50b3AgKyAoIG92ZXIgPyBNYXRoLm1heCggY2Uuc2Nyb2xsSGVpZ2h0LCBjZS5vZmZzZXRIZWlnaHQgKSA6IGNlLm9mZnNldEhlaWdodCApIC0KCQkJCQkoIHBhcnNlSW50KCAkKCBjZSApLmNzcyggImJvcmRlclRvcFdpZHRoIiApLCAxMCApIHx8IDAgKSAtCgkJCQkJKCBwYXJzZUludCggJCggY2UgKS5jc3MoICJwYWRkaW5nQm90dG9tIiApLCAxMCApIHx8IDAgKSAtCgkJCQkJdGhpcy5oZWxwZXJQcm9wb3J0aW9ucy5oZWlnaHQgLSB0aGlzLm1hcmdpbnMudG9wCgkJCV07CgkJfQoKCX0sCgoJX2NvbnZlcnRQb3NpdGlvblRvOiBmdW5jdGlvbiggZCwgcG9zICkgewoKCQlpZiAoICFwb3MgKSB7CgkJCXBvcyA9IHRoaXMucG9zaXRpb247CgkJfQoJCXZhciBtb2QgPSBkID09PSAiYWJzb2x1dGUiID8gMSA6IC0xLAoJCQlzY3JvbGwgPSB0aGlzLmNzc1Bvc2l0aW9uID09PSAiYWJzb2x1dGUiICYmCgkJCQkhKCB0aGlzLnNjcm9sbFBhcmVudFsgMCBdICE9PSB0aGlzLmRvY3VtZW50WyAwIF0gJiYKCQkJCSQuY29udGFpbnMoIHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0sIHRoaXMub2Zmc2V0UGFyZW50WyAwIF0gKSApID8KCQkJCQl0aGlzLm9mZnNldFBhcmVudCA6CgkJCQkJdGhpcy5zY3JvbGxQYXJlbnQsCgkJCXNjcm9sbElzUm9vdE5vZGUgPSAoIC8oaHRtbHxib2R5KS9pICkudGVzdCggc2Nyb2xsWyAwIF0udGFnTmFtZSApOwoKCQlyZXR1cm4gewoJCQl0b3A6ICgKCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24KCQkJCXBvcy50b3AJKwoKCQkJCS8vIE9ubHkgZm9yIHJlbGF0aXZlIHBvc2l0aW9uZWQgbm9kZXM6IFJlbGF0aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8gb2Zmc2V0IHBhcmVudAoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUudG9wICogbW9kICsKCgkJCQkvLyBUaGUgb2Zmc2V0UGFyZW50J3Mgb2Zmc2V0IHdpdGhvdXQgYm9yZGVycyAob2Zmc2V0ICsgYm9yZGVyKQoJCQkJdGhpcy5vZmZzZXQucGFyZW50LnRvcCAqIG1vZCAtCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbFRvcCgpIDoKCQkJCQkoIHNjcm9sbElzUm9vdE5vZGUgPyAwIDogc2Nyb2xsLnNjcm9sbFRvcCgpICkgKSAqIG1vZCApCgkJCSksCgkJCWxlZnQ6ICgKCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24KCQkJCXBvcy5sZWZ0ICsKCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQKCQkJCXRoaXMub2Zmc2V0LnJlbGF0aXZlLmxlZnQgKiBtb2QgKwoKCQkJCS8vIFRoZSBvZmZzZXRQYXJlbnQncyBvZmZzZXQgd2l0aG91dCBib3JkZXJzIChvZmZzZXQgKyBib3JkZXIpCgkJCQl0aGlzLm9mZnNldC5wYXJlbnQubGVmdCAqIG1vZAktCgkJCQkoICggdGhpcy5jc3NQb3NpdGlvbiA9PT0gImZpeGVkIiA/CgkJCQkJLXRoaXMuc2Nyb2xsUGFyZW50LnNjcm9sbExlZnQoKSA6IHNjcm9sbElzUm9vdE5vZGUgPyAwIDoKCQkJCQlzY3JvbGwuc2Nyb2xsTGVmdCgpICkgKiBtb2QgKQoJCQkpCgkJfTsKCgl9LAoKCV9nZW5lcmF0ZVBvc2l0aW9uOiBmdW5jdGlvbiggZXZlbnQgKSB7CgoJCXZhciB0b3AsIGxlZnQsCgkJCW8gPSB0aGlzLm9wdGlvbnMsCgkJCXBhZ2VYID0gZXZlbnQucGFnZVgsCgkJCXBhZ2VZID0gZXZlbnQucGFnZVksCgkJCXNjcm9sbCA9IHRoaXMuY3NzUG9zaXRpb24gPT09ICJhYnNvbHV0ZSIgJiYKCQkJCSEoIHRoaXMuc2Nyb2xsUGFyZW50WyAwIF0gIT09IHRoaXMuZG9jdW1lbnRbIDAgXSAmJgoJCQkJJC5jb250YWlucyggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSwgdGhpcy5vZmZzZXRQYXJlbnRbIDAgXSApICkgPwoJCQkJCXRoaXMub2Zmc2V0UGFyZW50IDoKCQkJCQl0aGlzLnNjcm9sbFBhcmVudCwKCQkJCXNjcm9sbElzUm9vdE5vZGUgPSAoIC8oaHRtbHxib2R5KS9pICkudGVzdCggc2Nyb2xsWyAwIF0udGFnTmFtZSApOwoKCQkvLyBUaGlzIGlzIGFub3RoZXIgdmVyeSB3ZWlyZCBzcGVjaWFsIGNhc2UgdGhhdCBvbmx5IGhhcHBlbnMgZm9yIHJlbGF0aXZlIGVsZW1lbnRzOgoJCS8vIDEuIElmIHRoZSBjc3MgcG9zaXRpb24gaXMgcmVsYXRpdmUKCQkvLyAyLiBhbmQgdGhlIHNjcm9sbCBwYXJlbnQgaXMgdGhlIGRvY3VtZW50IG9yIHNpbWlsYXIgdG8gdGhlIG9mZnNldCBwYXJlbnQKCQkvLyB3ZSBoYXZlIHRvIHJlZnJlc2ggdGhlIHJlbGF0aXZlIG9mZnNldCBkdXJpbmcgdGhlIHNjcm9sbCBzbyB0aGVyZSBhcmUgbm8ganVtcHMKCQlpZiAoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJyZWxhdGl2ZSIgJiYgISggdGhpcy5zY3JvbGxQYXJlbnRbIDAgXSAhPT0gdGhpcy5kb2N1bWVudFsgMCBdICYmCgkJCQl0aGlzLnNjcm9sbFBhcmVudFsgMCBdICE9PSB0aGlzLm9mZnNldFBhcmVudFsgMCBdICkgKSB7CgkJCXRoaXMub2Zmc2V0LnJlbGF0aXZlID0gdGhpcy5fZ2V0UmVsYXRpdmVPZmZzZXQoKTsKCQl9CgoJCS8qCgkJICogLSBQb3NpdGlvbiBjb25zdHJhaW5pbmcgLQoJCSAqIENvbnN0cmFpbiB0aGUgcG9zaXRpb24gdG8gYSBtaXggb2YgZ3JpZCwgY29udGFpbm1lbnQuCgkJICovCgoJCWlmICggdGhpcy5vcmlnaW5hbFBvc2l0aW9uICkgeyAvL0lmIHdlIGFyZSBub3QgZHJhZ2dpbmcgeWV0LCB3ZSB3b24ndCBjaGVjayBmb3Igb3B0aW9ucwoKCQkJaWYgKCB0aGlzLmNvbnRhaW5tZW50ICkgewoJCQkJaWYgKCBldmVudC5wYWdlWCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPCB0aGlzLmNvbnRhaW5tZW50WyAwIF0gKSB7CgkJCQkJcGFnZVggPSB0aGlzLmNvbnRhaW5tZW50WyAwIF0gKyB0aGlzLm9mZnNldC5jbGljay5sZWZ0OwoJCQkJfQoJCQkJaWYgKCBldmVudC5wYWdlWSAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA8IHRoaXMuY29udGFpbm1lbnRbIDEgXSApIHsKCQkJCQlwYWdlWSA9IHRoaXMuY29udGFpbm1lbnRbIDEgXSArIHRoaXMub2Zmc2V0LmNsaWNrLnRvcDsKCQkJCX0KCQkJCWlmICggZXZlbnQucGFnZVggLSB0aGlzLm9mZnNldC5jbGljay5sZWZ0ID4gdGhpcy5jb250YWlubWVudFsgMiBdICkgewoJCQkJCXBhZ2VYID0gdGhpcy5jb250YWlubWVudFsgMiBdICsgdGhpcy5vZmZzZXQuY2xpY2subGVmdDsKCQkJCX0KCQkJCWlmICggZXZlbnQucGFnZVkgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPiB0aGlzLmNvbnRhaW5tZW50WyAzIF0gKSB7CgkJCQkJcGFnZVkgPSB0aGlzLmNvbnRhaW5tZW50WyAzIF0gKyB0aGlzLm9mZnNldC5jbGljay50b3A7CgkJCQl9CgkJCX0KCgkJCWlmICggby5ncmlkICkgewoJCQkJdG9wID0gdGhpcy5vcmlnaW5hbFBhZ2VZICsgTWF0aC5yb3VuZCggKCBwYWdlWSAtIHRoaXMub3JpZ2luYWxQYWdlWSApIC8KCQkJCQlvLmdyaWRbIDEgXSApICogby5ncmlkWyAxIF07CgkJCQlwYWdlWSA9IHRoaXMuY29udGFpbm1lbnQgPwoJCQkJCSggKCB0b3AgLSB0aGlzLm9mZnNldC5jbGljay50b3AgPj0gdGhpcy5jb250YWlubWVudFsgMSBdICYmCgkJCQkJCXRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA8PSB0aGlzLmNvbnRhaW5tZW50WyAzIF0gKSA/CgkJCQkJCQl0b3AgOgoJCQkJCQkJKCAoIHRvcCAtIHRoaXMub2Zmc2V0LmNsaWNrLnRvcCA+PSB0aGlzLmNvbnRhaW5tZW50WyAxIF0gKSA/CgkJCQkJCQkJdG9wIC0gby5ncmlkWyAxIF0gOiB0b3AgKyBvLmdyaWRbIDEgXSApICkgOgoJCQkJCQkJCXRvcDsKCgkJCQlsZWZ0ID0gdGhpcy5vcmlnaW5hbFBhZ2VYICsgTWF0aC5yb3VuZCggKCBwYWdlWCAtIHRoaXMub3JpZ2luYWxQYWdlWCApIC8KCQkJCQlvLmdyaWRbIDAgXSApICogby5ncmlkWyAwIF07CgkJCQlwYWdlWCA9IHRoaXMuY29udGFpbm1lbnQgPwoJCQkJCSggKCBsZWZ0IC0gdGhpcy5vZmZzZXQuY2xpY2subGVmdCA+PSB0aGlzLmNvbnRhaW5tZW50WyAwIF0gJiYKCQkJCQkJbGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPD0gdGhpcy5jb250YWlubWVudFsgMiBdICkgPwoJCQkJCQkJbGVmdCA6CgkJCQkJCQkoICggbGVmdCAtIHRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgPj0gdGhpcy5jb250YWlubWVudFsgMCBdICkgPwoJCQkJCQkJCWxlZnQgLSBvLmdyaWRbIDAgXSA6IGxlZnQgKyBvLmdyaWRbIDAgXSApICkgOgoJCQkJCQkJCWxlZnQ7CgkJCX0KCgkJfQoKCQlyZXR1cm4gewoJCQl0b3A6ICgKCgkJCQkvLyBUaGUgYWJzb2x1dGUgbW91c2UgcG9zaXRpb24KCQkJCXBhZ2VZIC0KCgkJCQkvLyBDbGljayBvZmZzZXQgKHJlbGF0aXZlIHRvIHRoZSBlbGVtZW50KQoJCQkJdGhpcy5vZmZzZXQuY2xpY2sudG9wIC0KCgkJCQkvLyBPbmx5IGZvciByZWxhdGl2ZSBwb3NpdGlvbmVkIG5vZGVzOiBSZWxhdGl2ZSBvZmZzZXQgZnJvbSBlbGVtZW50IHRvIG9mZnNldCBwYXJlbnQKCQkJCXRoaXMub2Zmc2V0LnJlbGF0aXZlLnRvcCAtCgoJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikKCQkJCXRoaXMub2Zmc2V0LnBhcmVudC50b3AgKwoJCQkJKCAoIHRoaXMuY3NzUG9zaXRpb24gPT09ICJmaXhlZCIgPwoJCQkJCS10aGlzLnNjcm9sbFBhcmVudC5zY3JvbGxUb3AoKSA6CgkJCQkJKCBzY3JvbGxJc1Jvb3ROb2RlID8gMCA6IHNjcm9sbC5zY3JvbGxUb3AoKSApICkgKQoJCQkpLAoJCQlsZWZ0OiAoCgoJCQkJLy8gVGhlIGFic29sdXRlIG1vdXNlIHBvc2l0aW9uCgkJCQlwYWdlWCAtCgoJCQkJLy8gQ2xpY2sgb2Zmc2V0IChyZWxhdGl2ZSB0byB0aGUgZWxlbWVudCkKCQkJCXRoaXMub2Zmc2V0LmNsaWNrLmxlZnQgLQoKCQkJCS8vIE9ubHkgZm9yIHJlbGF0aXZlIHBvc2l0aW9uZWQgbm9kZXM6IFJlbGF0aXZlIG9mZnNldCBmcm9tIGVsZW1lbnQgdG8gb2Zmc2V0IHBhcmVudAoJCQkJdGhpcy5vZmZzZXQucmVsYXRpdmUubGVmdCAtCgoJCQkJLy8gVGhlIG9mZnNldFBhcmVudCdzIG9mZnNldCB3aXRob3V0IGJvcmRlcnMgKG9mZnNldCArIGJvcmRlcikKCQkJCXRoaXMub2Zmc2V0LnBhcmVudC5sZWZ0ICsKCQkJCSggKCB0aGlzLmNzc1Bvc2l0aW9uID09PSAiZml4ZWQiID8KCQkJCQktdGhpcy5zY3JvbGxQYXJlbnQuc2Nyb2xsTGVmdCgpIDoKCQkJCQlzY3JvbGxJc1Jvb3ROb2RlID8gMCA6IHNjcm9sbC5zY3JvbGxMZWZ0KCkgKSApCgkJCSkKCQl9OwoKCX0sCgoJX3JlYXJyYW5nZTogZnVuY3Rpb24oIGV2ZW50LCBpLCBhLCBoYXJkUmVmcmVzaCApIHsKCgkJYSA/IGFbIDAgXS5hcHBlbmRDaGlsZCggdGhpcy5wbGFjZWhvbGRlclsgMCBdICkgOgoJCQlpLml0ZW1bIDAgXS5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggdGhpcy5wbGFjZWhvbGRlclsgMCBdLAoJCQkJKCB0aGlzLmRpcmVjdGlvbiA9PT0gImRvd24iID8gaS5pdGVtWyAwIF0gOiBpLml0ZW1bIDAgXS5uZXh0U2libGluZyApICk7CgoJCS8vVmFyaW91cyB0aGluZ3MgZG9uZSBoZXJlIHRvIGltcHJvdmUgdGhlIHBlcmZvcm1hbmNlOgoJCS8vIDEuIHdlIGNyZWF0ZSBhIHNldFRpbWVvdXQsIHRoYXQgY2FsbHMgcmVmcmVzaFBvc2l0aW9ucwoJCS8vIDIuIG9uIHRoZSBpbnN0YW5jZSwgd2UgaGF2ZSBhIGNvdW50ZXIgdmFyaWFibGUsIHRoYXQgZ2V0J3MgaGlnaGVyIGFmdGVyIGV2ZXJ5IGFwcGVuZAoJCS8vIDMuIG9uIHRoZSBsb2NhbCBzY29wZSwgd2UgY29weSB0aGUgY291bnRlciB2YXJpYWJsZSwgYW5kIGNoZWNrIGluIHRoZSB0aW1lb3V0LAoJCS8vIGlmIGl0J3Mgc3RpbGwgdGhlIHNhbWUKCQkvLyA0LiB0aGlzIGxldHMgb25seSB0aGUgbGFzdCBhZGRpdGlvbiB0byB0aGUgdGltZW91dCBzdGFjayB0aHJvdWdoCgkJdGhpcy5jb3VudGVyID0gdGhpcy5jb3VudGVyID8gKyt0aGlzLmNvdW50ZXIgOiAxOwoJCXZhciBjb3VudGVyID0gdGhpcy5jb3VudGVyOwoKCQl0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgkJCWlmICggY291bnRlciA9PT0gdGhpcy5jb3VudGVyICkgewoKCQkJCS8vUHJlY29tcHV0ZSBhZnRlciBlYWNoIERPTSBpbnNlcnRpb24sIE5PVCBvbiBtb3VzZW1vdmUKCQkJCXRoaXMucmVmcmVzaFBvc2l0aW9ucyggIWhhcmRSZWZyZXNoICk7CgkJCX0KCQl9ICk7CgoJfSwKCglfY2xlYXI6IGZ1bmN0aW9uKCBldmVudCwgbm9Qcm9wYWdhdGlvbiApIHsKCgkJdGhpcy5yZXZlcnRpbmcgPSBmYWxzZTsKCgkJLy8gV2UgZGVsYXkgYWxsIGV2ZW50cyB0aGF0IGhhdmUgdG8gYmUgdHJpZ2dlcmVkIHRvIGFmdGVyIHRoZSBwb2ludCB3aGVyZSB0aGUgcGxhY2Vob2xkZXIKCQkvLyBoYXMgYmVlbiByZW1vdmVkIGFuZCBldmVyeXRoaW5nIGVsc2Ugbm9ybWFsaXplZCBhZ2FpbgoJCXZhciBpLAoJCQlkZWxheWVkVHJpZ2dlcnMgPSBbXTsKCgkJLy8gV2UgZmlyc3QgaGF2ZSB0byB1cGRhdGUgdGhlIGRvbSBwb3NpdGlvbiBvZiB0aGUgYWN0dWFsIGN1cnJlbnRJdGVtCgkJLy8gTm90ZTogZG9uJ3QgZG8gaXQgaWYgdGhlIGN1cnJlbnQgaXRlbSBpcyBhbHJlYWR5IHJlbW92ZWQgKGJ5IGEgdXNlciksIG9yIGl0IGdldHMKCQkvLyByZWFwcGVuZGVkIChzZWUgIzQwODgpCgkJaWYgKCAhdGhpcy5fbm9GaW5hbFNvcnQgJiYgdGhpcy5jdXJyZW50SXRlbS5wYXJlbnQoKS5sZW5ndGggKSB7CgkJCXRoaXMucGxhY2Vob2xkZXIuYmVmb3JlKCB0aGlzLmN1cnJlbnRJdGVtICk7CgkJfQoJCXRoaXMuX25vRmluYWxTb3J0ID0gbnVsbDsKCgkJaWYgKCB0aGlzLmhlbHBlclsgMCBdID09PSB0aGlzLmN1cnJlbnRJdGVtWyAwIF0gKSB7CgkJCWZvciAoIGkgaW4gdGhpcy5fc3RvcmVkQ1NTICkgewoJCQkJaWYgKCB0aGlzLl9zdG9yZWRDU1NbIGkgXSA9PT0gImF1dG8iIHx8IHRoaXMuX3N0b3JlZENTU1sgaSBdID09PSAic3RhdGljIiApIHsKCQkJCQl0aGlzLl9zdG9yZWRDU1NbIGkgXSA9ICIiOwoJCQkJfQoJCQl9CgkJCXRoaXMuY3VycmVudEl0ZW0uY3NzKCB0aGlzLl9zdG9yZWRDU1MgKTsKCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIHRoaXMuY3VycmVudEl0ZW0sICJ1aS1zb3J0YWJsZS1oZWxwZXIiICk7CgkJfSBlbHNlIHsKCQkJdGhpcy5jdXJyZW50SXRlbS5zaG93KCk7CgkJfQoKCQlpZiAoIHRoaXMuZnJvbU91dHNpZGUgJiYgIW5vUHJvcGFnYXRpb24gKSB7CgkJCWRlbGF5ZWRUcmlnZ2Vycy5wdXNoKCBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQl0aGlzLl90cmlnZ2VyKCAicmVjZWl2ZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goIHRoaXMuZnJvbU91dHNpZGUgKSApOwoJCQl9ICk7CgkJfQoJCWlmICggKCB0aGlzLmZyb21PdXRzaWRlIHx8CgkJCQl0aGlzLmRvbVBvc2l0aW9uLnByZXYgIT09CgkJCQl0aGlzLmN1cnJlbnRJdGVtLnByZXYoKS5ub3QoICIudWktc29ydGFibGUtaGVscGVyIiApWyAwIF0gfHwKCQkJCXRoaXMuZG9tUG9zaXRpb24ucGFyZW50ICE9PSB0aGlzLmN1cnJlbnRJdGVtLnBhcmVudCgpWyAwIF0gKSAmJiAhbm9Qcm9wYWdhdGlvbiApIHsKCgkJCS8vIFRyaWdnZXIgdXBkYXRlIGNhbGxiYWNrIGlmIHRoZSBET00gcG9zaXRpb24gaGFzIGNoYW5nZWQKCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goIGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCXRoaXMuX3RyaWdnZXIoICJ1cGRhdGUiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkgKTsKCQkJfSApOwoJCX0KCgkJLy8gQ2hlY2sgaWYgdGhlIGl0ZW1zIENvbnRhaW5lciBoYXMgQ2hhbmdlZCBhbmQgdHJpZ2dlciBhcHByb3ByaWF0ZQoJCS8vIGV2ZW50cy4KCQlpZiAoIHRoaXMgIT09IHRoaXMuY3VycmVudENvbnRhaW5lciApIHsKCQkJaWYgKCAhbm9Qcm9wYWdhdGlvbiApIHsKCQkJCWRlbGF5ZWRUcmlnZ2Vycy5wdXNoKCBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQkJdGhpcy5fdHJpZ2dlciggInJlbW92ZSIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOwoJCQkJfSApOwoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goICggZnVuY3Rpb24oIGMgKSB7CgkJCQkJcmV0dXJuIGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCQkJYy5fdHJpZ2dlciggInJlY2VpdmUiLCBldmVudCwgdGhpcy5fdWlIYXNoKCB0aGlzICkgKTsKCQkJCQl9OwoJCQkJfSApLmNhbGwoIHRoaXMsIHRoaXMuY3VycmVudENvbnRhaW5lciApICk7CgkJCQlkZWxheWVkVHJpZ2dlcnMucHVzaCggKCBmdW5jdGlvbiggYyApIHsKCQkJCQlyZXR1cm4gZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJCQljLl90cmlnZ2VyKCAidXBkYXRlIiwgZXZlbnQsIHRoaXMuX3VpSGFzaCggdGhpcyApICk7CgkJCQkJfTsKCQkJCX0gKS5jYWxsKCB0aGlzLCB0aGlzLmN1cnJlbnRDb250YWluZXIgKSApOwoJCQl9CgkJfQoKCQkvL1Bvc3QgZXZlbnRzIHRvIGNvbnRhaW5lcnMKCQlmdW5jdGlvbiBkZWxheUV2ZW50KCB0eXBlLCBpbnN0YW5jZSwgY29udGFpbmVyICkgewoJCQlyZXR1cm4gZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJY29udGFpbmVyLl90cmlnZ2VyKCB0eXBlLCBldmVudCwgaW5zdGFuY2UuX3VpSGFzaCggaW5zdGFuY2UgKSApOwoJCQl9OwoJCX0KCQlmb3IgKCBpID0gdGhpcy5jb250YWluZXJzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tICkgewoJCQlpZiAoICFub1Byb3BhZ2F0aW9uICkgewoJCQkJZGVsYXllZFRyaWdnZXJzLnB1c2goIGRlbGF5RXZlbnQoICJkZWFjdGl2YXRlIiwgdGhpcywgdGhpcy5jb250YWluZXJzWyBpIF0gKSApOwoJCQl9CgkJCWlmICggdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUub3ZlciApIHsKCQkJCWRlbGF5ZWRUcmlnZ2Vycy5wdXNoKCBkZWxheUV2ZW50KCAib3V0IiwgdGhpcywgdGhpcy5jb250YWluZXJzWyBpIF0gKSApOwoJCQkJdGhpcy5jb250YWluZXJzWyBpIF0uY29udGFpbmVyQ2FjaGUub3ZlciA9IDA7CgkJCX0KCQl9CgoJCS8vRG8gd2hhdCB3YXMgb3JpZ2luYWxseSBpbiBwbHVnaW5zCgkJaWYgKCB0aGlzLnN0b3JlZEN1cnNvciApIHsKCQkJdGhpcy5kb2N1bWVudC5maW5kKCAiYm9keSIgKS5jc3MoICJjdXJzb3IiLCB0aGlzLnN0b3JlZEN1cnNvciApOwoJCQl0aGlzLnN0b3JlZFN0eWxlc2hlZXQucmVtb3ZlKCk7CgkJfQoJCWlmICggdGhpcy5fc3RvcmVkT3BhY2l0eSApIHsKCQkJdGhpcy5oZWxwZXIuY3NzKCAib3BhY2l0eSIsIHRoaXMuX3N0b3JlZE9wYWNpdHkgKTsKCQl9CgkJaWYgKCB0aGlzLl9zdG9yZWRaSW5kZXggKSB7CgkJCXRoaXMuaGVscGVyLmNzcyggInpJbmRleCIsIHRoaXMuX3N0b3JlZFpJbmRleCA9PT0gImF1dG8iID8gIiIgOiB0aGlzLl9zdG9yZWRaSW5kZXggKTsKCQl9CgoJCXRoaXMuZHJhZ2dpbmcgPSBmYWxzZTsKCgkJaWYgKCAhbm9Qcm9wYWdhdGlvbiApIHsKCQkJdGhpcy5fdHJpZ2dlciggImJlZm9yZVN0b3AiLCBldmVudCwgdGhpcy5fdWlIYXNoKCkgKTsKCQl9CgoJCS8vJCh0aGlzLnBsYWNlaG9sZGVyWzBdKS5yZW1vdmUoKTsgd291bGQgaGF2ZSBiZWVuIHRoZSBqUXVlcnkgd2F5IC0gdW5mb3J0dW5hdGVseSwKCQkvLyBpdCB1bmJpbmRzIEFMTCBldmVudHMgZnJvbSB0aGUgb3JpZ2luYWwgbm9kZSEKCQl0aGlzLnBsYWNlaG9sZGVyWyAwIF0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggdGhpcy5wbGFjZWhvbGRlclsgMCBdICk7CgoJCWlmICggIXRoaXMuY2FuY2VsSGVscGVyUmVtb3ZhbCApIHsKCQkJaWYgKCB0aGlzLmhlbHBlclsgMCBdICE9PSB0aGlzLmN1cnJlbnRJdGVtWyAwIF0gKSB7CgkJCQl0aGlzLmhlbHBlci5yZW1vdmUoKTsKCQkJfQoJCQl0aGlzLmhlbHBlciA9IG51bGw7CgkJfQoKCQlpZiAoICFub1Byb3BhZ2F0aW9uICkgewoJCQlmb3IgKCBpID0gMDsgaSA8IGRlbGF5ZWRUcmlnZ2Vycy5sZW5ndGg7IGkrKyApIHsKCgkJCQkvLyBUcmlnZ2VyIGFsbCBkZWxheWVkIGV2ZW50cwoJCQkJZGVsYXllZFRyaWdnZXJzWyBpIF0uY2FsbCggdGhpcywgZXZlbnQgKTsKCQkJfQoJCQl0aGlzLl90cmlnZ2VyKCAic3RvcCIsIGV2ZW50LCB0aGlzLl91aUhhc2goKSApOwoJCX0KCgkJdGhpcy5mcm9tT3V0c2lkZSA9IGZhbHNlOwoJCXJldHVybiAhdGhpcy5jYW5jZWxIZWxwZXJSZW1vdmFsOwoKCX0sCgoJX3RyaWdnZXI6IGZ1bmN0aW9uKCkgewoJCWlmICggJC5XaWRnZXQucHJvdG90eXBlLl90cmlnZ2VyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSA9PT0gZmFsc2UgKSB7CgkJCXRoaXMuY2FuY2VsKCk7CgkJfQoJfSwKCglfdWlIYXNoOiBmdW5jdGlvbiggX2luc3QgKSB7CgkJdmFyIGluc3QgPSBfaW5zdCB8fCB0aGlzOwoJCXJldHVybiB7CgkJCWhlbHBlcjogaW5zdC5oZWxwZXIsCgkJCXBsYWNlaG9sZGVyOiBpbnN0LnBsYWNlaG9sZGVyIHx8ICQoIFtdICksCgkJCXBvc2l0aW9uOiBpbnN0LnBvc2l0aW9uLAoJCQlvcmlnaW5hbFBvc2l0aW9uOiBpbnN0Lm9yaWdpbmFsUG9zaXRpb24sCgkJCW9mZnNldDogaW5zdC5wb3NpdGlvbkFicywKCQkJaXRlbTogaW5zdC5jdXJyZW50SXRlbSwKCQkJc2VuZGVyOiBfaW5zdCA/IF9pbnN0LmVsZW1lbnQgOiBudWxsCgkJfTsKCX0KCn0gKTsKCgovKiEKICogalF1ZXJ5IFVJIFNwaW5uZXIgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBTcGlubmVyCi8vPj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IERpc3BsYXlzIGJ1dHRvbnMgdG8gZWFzaWx5IGlucHV0IG51bWJlcnMgdmlhIHRoZSBrZXlib2FyZCBvciBtb3VzZS4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3NwaW5uZXIvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS9zcGlubmVyLwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvY29yZS5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL3NwaW5uZXIuY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgpmdW5jdGlvbiBzcGlubmVyTW9kaWZlciggZm4gKSB7CglyZXR1cm4gZnVuY3Rpb24oKSB7CgkJdmFyIHByZXZpb3VzID0gdGhpcy5lbGVtZW50LnZhbCgpOwoJCWZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTsKCQl0aGlzLl9yZWZyZXNoKCk7CgkJaWYgKCBwcmV2aW91cyAhPT0gdGhpcy5lbGVtZW50LnZhbCgpICkgewoJCQl0aGlzLl90cmlnZ2VyKCAiY2hhbmdlIiApOwoJCX0KCX07Cn0KCiQud2lkZ2V0KCAidWkuc3Bpbm5lciIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJZGVmYXVsdEVsZW1lbnQ6ICI8aW5wdXQ+IiwKCXdpZGdldEV2ZW50UHJlZml4OiAic3BpbiIsCglvcHRpb25zOiB7CgkJY2xhc3NlczogewoJCQkidWktc3Bpbm5lciI6ICJ1aS1jb3JuZXItYWxsIiwKCQkJInVpLXNwaW5uZXItZG93biI6ICJ1aS1jb3JuZXItYnIiLAoJCQkidWktc3Bpbm5lci11cCI6ICJ1aS1jb3JuZXItdHIiCgkJfSwKCQljdWx0dXJlOiBudWxsLAoJCWljb25zOiB7CgkJCWRvd246ICJ1aS1pY29uLXRyaWFuZ2xlLTEtcyIsCgkJCXVwOiAidWktaWNvbi10cmlhbmdsZS0xLW4iCgkJfSwKCQlpbmNyZW1lbnRhbDogdHJ1ZSwKCQltYXg6IG51bGwsCgkJbWluOiBudWxsLAoJCW51bWJlckZvcm1hdDogbnVsbCwKCQlwYWdlOiAxMCwKCQlzdGVwOiAxLAoKCQljaGFuZ2U6IG51bGwsCgkJc3BpbjogbnVsbCwKCQlzdGFydDogbnVsbCwKCQlzdG9wOiBudWxsCgl9LAoKCV9jcmVhdGU6IGZ1bmN0aW9uKCkgewoKCQkvLyBoYW5kbGUgc3RyaW5nIHZhbHVlcyB0aGF0IG5lZWQgdG8gYmUgcGFyc2VkCgkJdGhpcy5fc2V0T3B0aW9uKCAibWF4IiwgdGhpcy5vcHRpb25zLm1heCApOwoJCXRoaXMuX3NldE9wdGlvbiggIm1pbiIsIHRoaXMub3B0aW9ucy5taW4gKTsKCQl0aGlzLl9zZXRPcHRpb24oICJzdGVwIiwgdGhpcy5vcHRpb25zLnN0ZXAgKTsKCgkJLy8gT25seSBmb3JtYXQgaWYgdGhlcmUgaXMgYSB2YWx1ZSwgcHJldmVudHMgdGhlIGZpZWxkIGZyb20gYmVpbmcgbWFya2VkCgkJLy8gYXMgaW52YWxpZCBpbiBGaXJlZm94LCBzZWUgIzk1NzMuCgkJaWYgKCB0aGlzLnZhbHVlKCkgIT09ICIiICkgewoKCQkJLy8gRm9ybWF0IHRoZSB2YWx1ZSwgYnV0IGRvbid0IGNvbnN0cmFpbi4KCQkJdGhpcy5fdmFsdWUoIHRoaXMuZWxlbWVudC52YWwoKSwgdHJ1ZSApOwoJCX0KCgkJdGhpcy5fZHJhdygpOwoJCXRoaXMuX29uKCB0aGlzLl9ldmVudHMgKTsKCQl0aGlzLl9yZWZyZXNoKCk7CgoJCS8vIFR1cm5pbmcgb2ZmIGF1dG9jb21wbGV0ZSBwcmV2ZW50cyB0aGUgYnJvd3NlciBmcm9tIHJlbWVtYmVyaW5nIHRoZQoJCS8vIHZhbHVlIHdoZW4gbmF2aWdhdGluZyB0aHJvdWdoIGhpc3RvcnksIHNvIHdlIHJlLWVuYWJsZSBhdXRvY29tcGxldGUKCQkvLyBpZiB0aGUgcGFnZSBpcyB1bmxvYWRlZCBiZWZvcmUgdGhlIHdpZGdldCBpcyBkZXN0cm95ZWQuICM3NzkwCgkJdGhpcy5fb24oIHRoaXMud2luZG93LCB7CgkJCWJlZm9yZXVubG9hZDogZnVuY3Rpb24oKSB7CgkJCQl0aGlzLmVsZW1lbnQucmVtb3ZlQXR0ciggImF1dG9jb21wbGV0ZSIgKTsKCQkJfQoJCX0gKTsKCX0sCgoJX2dldENyZWF0ZU9wdGlvbnM6IGZ1bmN0aW9uKCkgewoJCXZhciBvcHRpb25zID0gdGhpcy5fc3VwZXIoKTsKCQl2YXIgZWxlbWVudCA9IHRoaXMuZWxlbWVudDsKCgkJJC5lYWNoKCBbICJtaW4iLCAibWF4IiwgInN0ZXAiIF0sIGZ1bmN0aW9uKCBpLCBvcHRpb24gKSB7CgkJCXZhciB2YWx1ZSA9IGVsZW1lbnQuYXR0ciggb3B0aW9uICk7CgkJCWlmICggdmFsdWUgIT0gbnVsbCAmJiB2YWx1ZS5sZW5ndGggKSB7CgkJCQlvcHRpb25zWyBvcHRpb24gXSA9IHZhbHVlOwoJCQl9CgkJfSApOwoKCQlyZXR1cm4gb3B0aW9uczsKCX0sCgoJX2V2ZW50czogewoJCWtleWRvd246IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJaWYgKCB0aGlzLl9zdGFydCggZXZlbnQgKSAmJiB0aGlzLl9rZXlkb3duKCBldmVudCApICkgewoJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJfQoJCX0sCgkJa2V5dXA6ICJfc3RvcCIsCgkJZm9jdXM6IGZ1bmN0aW9uKCkgewoJCQl0aGlzLnByZXZpb3VzID0gdGhpcy5lbGVtZW50LnZhbCgpOwoJCX0sCgkJYmx1cjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCQlpZiAoIHRoaXMuY2FuY2VsQmx1ciApIHsKCQkJCWRlbGV0ZSB0aGlzLmNhbmNlbEJsdXI7CgkJCQlyZXR1cm47CgkJCX0KCgkJCXRoaXMuX3N0b3AoKTsKCQkJdGhpcy5fcmVmcmVzaCgpOwoJCQlpZiAoIHRoaXMucHJldmlvdXMgIT09IHRoaXMuZWxlbWVudC52YWwoKSApIHsKCQkJCXRoaXMuX3RyaWdnZXIoICJjaGFuZ2UiLCBldmVudCApOwoJCQl9CgkJfSwKCQltb3VzZXdoZWVsOiBmdW5jdGlvbiggZXZlbnQsIGRlbHRhICkgewoJCQlpZiAoICFkZWx0YSApIHsKCQkJCXJldHVybjsKCQkJfQoJCQlpZiAoICF0aGlzLnNwaW5uaW5nICYmICF0aGlzLl9zdGFydCggZXZlbnQgKSApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoKCQkJdGhpcy5fc3BpbiggKCBkZWx0YSA+IDAgPyAxIDogLTEgKSAqIHRoaXMub3B0aW9ucy5zdGVwLCBldmVudCApOwoJCQljbGVhclRpbWVvdXQoIHRoaXMubW91c2V3aGVlbFRpbWVyICk7CgkJCXRoaXMubW91c2V3aGVlbFRpbWVyID0gdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgewoJCQkJaWYgKCB0aGlzLnNwaW5uaW5nICkgewoJCQkJCXRoaXMuX3N0b3AoIGV2ZW50ICk7CgkJCQl9CgkJCX0sIDEwMCApOwoJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCX0sCgkJIm1vdXNlZG93biAudWktc3Bpbm5lci1idXR0b24iOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCXZhciBwcmV2aW91czsKCgkJCS8vIFdlIG5ldmVyIHdhbnQgdGhlIGJ1dHRvbnMgdG8gaGF2ZSBmb2N1czsgd2hlbmV2ZXIgdGhlIHVzZXIgaXMKCQkJLy8gaW50ZXJhY3Rpbmcgd2l0aCB0aGUgc3Bpbm5lciwgdGhlIGZvY3VzIHNob3VsZCBiZSBvbiB0aGUgaW5wdXQuCgkJCS8vIElmIHRoZSBpbnB1dCBpcyBmb2N1c2VkIHRoZW4gdGhpcy5wcmV2aW91cyBpcyBwcm9wZXJseSBzZXQgZnJvbQoJCQkvLyB3aGVuIHRoZSBpbnB1dCBmaXJzdCByZWNlaXZlZCBmb2N1cy4gSWYgdGhlIGlucHV0IGlzIG5vdCBmb2N1c2VkCgkJCS8vIHRoZW4gd2UgbmVlZCB0byBzZXQgdGhpcy5wcmV2aW91cyBiYXNlZCBvbiB0aGUgdmFsdWUgYmVmb3JlIHNwaW5uaW5nLgoJCQlwcmV2aW91cyA9IHRoaXMuZWxlbWVudFsgMCBdID09PSAkLnVpLnNhZmVBY3RpdmVFbGVtZW50KCB0aGlzLmRvY3VtZW50WyAwIF0gKSA/CgkJCQl0aGlzLnByZXZpb3VzIDogdGhpcy5lbGVtZW50LnZhbCgpOwoJCQlmdW5jdGlvbiBjaGVja0ZvY3VzKCkgewoJCQkJdmFyIGlzQWN0aXZlID0gdGhpcy5lbGVtZW50WyAwIF0gPT09ICQudWkuc2FmZUFjdGl2ZUVsZW1lbnQoIHRoaXMuZG9jdW1lbnRbIDAgXSApOwoJCQkJaWYgKCAhaXNBY3RpdmUgKSB7CgkJCQkJdGhpcy5lbGVtZW50LnRyaWdnZXIoICJmb2N1cyIgKTsKCQkJCQl0aGlzLnByZXZpb3VzID0gcHJldmlvdXM7CgoJCQkJCS8vIHN1cHBvcnQ6IElFCgkJCQkJLy8gSUUgc2V0cyBmb2N1cyBhc3luY2hyb25vdXNseSwgc28gd2UgbmVlZCB0byBjaGVjayBpZiBmb2N1cwoJCQkJCS8vIG1vdmVkIG9mZiBvZiB0aGUgaW5wdXQgYmVjYXVzZSB0aGUgdXNlciBjbGlja2VkIG9uIHRoZSBidXR0b24uCgkJCQkJdGhpcy5fZGVsYXkoIGZ1bmN0aW9uKCkgewoJCQkJCQl0aGlzLnByZXZpb3VzID0gcHJldmlvdXM7CgkJCQkJfSApOwoJCQkJfQoJCQl9CgoJCQkvLyBFbnN1cmUgZm9jdXMgaXMgb24gKG9yIHN0YXlzIG9uKSB0aGUgdGV4dCBmaWVsZAoJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQljaGVja0ZvY3VzLmNhbGwoIHRoaXMgKTsKCgkJCS8vIFN1cHBvcnQ6IElFCgkJCS8vIElFIGRvZXNuJ3QgcHJldmVudCBtb3ZpbmcgZm9jdXMgZXZlbiB3aXRoIGV2ZW50LnByZXZlbnREZWZhdWx0KCkKCQkJLy8gc28gd2Ugc2V0IGEgZmxhZyB0byBrbm93IHdoZW4gd2Ugc2hvdWxkIGlnbm9yZSB0aGUgYmx1ciBldmVudAoJCQkvLyBhbmQgY2hlY2sgKGFnYWluKSBpZiBmb2N1cyBtb3ZlZCBvZmYgb2YgdGhlIGlucHV0LgoJCQl0aGlzLmNhbmNlbEJsdXIgPSB0cnVlOwoJCQl0aGlzLl9kZWxheSggZnVuY3Rpb24oKSB7CgkJCQlkZWxldGUgdGhpcy5jYW5jZWxCbHVyOwoJCQkJY2hlY2tGb2N1cy5jYWxsKCB0aGlzICk7CgkJCX0gKTsKCgkJCWlmICggdGhpcy5fc3RhcnQoIGV2ZW50ICkgPT09IGZhbHNlICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQl0aGlzLl9yZXBlYXQoIG51bGwsICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKQoJCQkJLmhhc0NsYXNzKCAidWktc3Bpbm5lci11cCIgKSA/IDEgOiAtMSwgZXZlbnQgKTsKCQl9LAoJCSJtb3VzZXVwIC51aS1zcGlubmVyLWJ1dHRvbiI6ICJfc3RvcCIsCgkJIm1vdXNlZW50ZXIgLnVpLXNwaW5uZXItYnV0dG9uIjogZnVuY3Rpb24oIGV2ZW50ICkgewoKCQkJLy8gYnV0dG9uIHdpbGwgYWRkIHVpLXN0YXRlLWFjdGl2ZSBpZiBtb3VzZSB3YXMgZG93biB3aGlsZSBtb3VzZWxlYXZlIGFuZCBrZXB0IGRvd24KCQkJaWYgKCAhJCggZXZlbnQuY3VycmVudFRhcmdldCApLmhhc0NsYXNzKCAidWktc3RhdGUtYWN0aXZlIiApICkgewoJCQkJcmV0dXJuOwoJCQl9CgoJCQlpZiAoIHRoaXMuX3N0YXJ0KCBldmVudCApID09PSBmYWxzZSApIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCQl0aGlzLl9yZXBlYXQoIG51bGwsICQoIGV2ZW50LmN1cnJlbnRUYXJnZXQgKQoJCQkJLmhhc0NsYXNzKCAidWktc3Bpbm5lci11cCIgKSA/IDEgOiAtMSwgZXZlbnQgKTsKCQl9LAoKCQkvLyBUT0RPOiBkbyB3ZSByZWFsbHkgd2FudCB0byBjb25zaWRlciB0aGlzIGEgc3RvcD8KCQkvLyBzaG91bGRuJ3Qgd2UganVzdCBzdG9wIHRoZSByZXBlYXRlciBhbmQgd2FpdCB1bnRpbCBtb3VzZXVwIGJlZm9yZQoJCS8vIHdlIHRyaWdnZXIgdGhlIHN0b3AgZXZlbnQ/CgkJIm1vdXNlbGVhdmUgLnVpLXNwaW5uZXItYnV0dG9uIjogIl9zdG9wIgoJfSwKCgkvLyBTdXBwb3J0IG1vYmlsZSBlbmhhbmNlZCBvcHRpb24gYW5kIG1ha2UgYmFja2NvbXBhdCBtb3JlIHNhbmUKCV9lbmhhbmNlOiBmdW5jdGlvbigpIHsKCQl0aGlzLnVpU3Bpbm5lciA9IHRoaXMuZWxlbWVudAoJCQkuYXR0ciggImF1dG9jb21wbGV0ZSIsICJvZmYiICkKCQkJLndyYXAoICI8c3Bhbj4iICkKCQkJLnBhcmVudCgpCgoJCQkJLy8gQWRkIGJ1dHRvbnMKCQkJCS5hcHBlbmQoCgkJCQkJIjxhPjwvYT48YT48L2E+IgoJCQkJKTsKCX0sCgoJX2RyYXc6IGZ1bmN0aW9uKCkgewoJCXRoaXMuX2VuaGFuY2UoKTsKCgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudWlTcGlubmVyLCAidWktc3Bpbm5lciIsICJ1aS13aWRnZXQgdWktd2lkZ2V0LWNvbnRlbnQiICk7CgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS1zcGlubmVyLWlucHV0IiApOwoKCQl0aGlzLmVsZW1lbnQuYXR0ciggInJvbGUiLCAic3BpbmJ1dHRvbiIgKTsKCgkJLy8gQnV0dG9uIGJpbmRpbmdzCgkJdGhpcy5idXR0b25zID0gdGhpcy51aVNwaW5uZXIuY2hpbGRyZW4oICJhIiApCgkJCS5hdHRyKCAidGFiSW5kZXgiLCAtMSApCgkJCS5hdHRyKCAiYXJpYS1oaWRkZW4iLCB0cnVlICkKCQkJLmJ1dHRvbiggewoJCQkJY2xhc3NlczogewoJCQkJCSJ1aS1idXR0b24iOiAiIgoJCQkJfQoJCQl9ICk7CgoJCS8vIFRPRE86IFJpZ2h0IG5vdyBidXR0b24gZG9lcyBub3Qgc3VwcG9ydCBjbGFzc2VzIHRoaXMgaXMgYWxyZWFkeSB1cGRhdGVkIGluIGJ1dHRvbiBQUgoJCXRoaXMuX3JlbW92ZUNsYXNzKCB0aGlzLmJ1dHRvbnMsICJ1aS1jb3JuZXItYWxsIiApOwoKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5idXR0b25zLmZpcnN0KCksICJ1aS1zcGlubmVyLWJ1dHRvbiB1aS1zcGlubmVyLXVwIiApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmJ1dHRvbnMubGFzdCgpLCAidWktc3Bpbm5lci1idXR0b24gdWktc3Bpbm5lci1kb3duIiApOwoJCXRoaXMuYnV0dG9ucy5maXJzdCgpLmJ1dHRvbiggewoJCQkiaWNvbiI6IHRoaXMub3B0aW9ucy5pY29ucy51cCwKCQkJInNob3dMYWJlbCI6IGZhbHNlCgkJfSApOwoJCXRoaXMuYnV0dG9ucy5sYXN0KCkuYnV0dG9uKCB7CgkJCSJpY29uIjogdGhpcy5vcHRpb25zLmljb25zLmRvd24sCgkJCSJzaG93TGFiZWwiOiBmYWxzZQoJCX0gKTsKCgkJLy8gSUUgNiBkb2Vzbid0IHVuZGVyc3RhbmQgaGVpZ2h0OiA1MCUgZm9yIHRoZSBidXR0b25zCgkJLy8gdW5sZXNzIHRoZSB3cmFwcGVyIGhhcyBhbiBleHBsaWNpdCBoZWlnaHQKCQlpZiAoIHRoaXMuYnV0dG9ucy5oZWlnaHQoKSA+IE1hdGguY2VpbCggdGhpcy51aVNwaW5uZXIuaGVpZ2h0KCkgKiAwLjUgKSAmJgoJCQkJdGhpcy51aVNwaW5uZXIuaGVpZ2h0KCkgPiAwICkgewoJCQl0aGlzLnVpU3Bpbm5lci5oZWlnaHQoIHRoaXMudWlTcGlubmVyLmhlaWdodCgpICk7CgkJfQoJfSwKCglfa2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zLAoJCQlrZXlDb2RlID0gJC51aS5rZXlDb2RlOwoKCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkgewoJCWNhc2Uga2V5Q29kZS5VUDoKCQkJdGhpcy5fcmVwZWF0KCBudWxsLCAxLCBldmVudCApOwoJCQlyZXR1cm4gdHJ1ZTsKCQljYXNlIGtleUNvZGUuRE9XTjoKCQkJdGhpcy5fcmVwZWF0KCBudWxsLCAtMSwgZXZlbnQgKTsKCQkJcmV0dXJuIHRydWU7CgkJY2FzZSBrZXlDb2RlLlBBR0VfVVA6CgkJCXRoaXMuX3JlcGVhdCggbnVsbCwgb3B0aW9ucy5wYWdlLCBldmVudCApOwoJCQlyZXR1cm4gdHJ1ZTsKCQljYXNlIGtleUNvZGUuUEFHRV9ET1dOOgoJCQl0aGlzLl9yZXBlYXQoIG51bGwsIC1vcHRpb25zLnBhZ2UsIGV2ZW50ICk7CgkJCXJldHVybiB0cnVlOwoJCX0KCgkJcmV0dXJuIGZhbHNlOwoJfSwKCglfc3RhcnQ6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoICF0aGlzLnNwaW5uaW5nICYmIHRoaXMuX3RyaWdnZXIoICJzdGFydCIsIGV2ZW50ICkgPT09IGZhbHNlICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQlpZiAoICF0aGlzLmNvdW50ZXIgKSB7CgkJCXRoaXMuY291bnRlciA9IDE7CgkJfQoJCXRoaXMuc3Bpbm5pbmcgPSB0cnVlOwoJCXJldHVybiB0cnVlOwoJfSwKCglfcmVwZWF0OiBmdW5jdGlvbiggaSwgc3RlcHMsIGV2ZW50ICkgewoJCWkgPSBpIHx8IDUwMDsKCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7CgkJdGhpcy50aW1lciA9IHRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJdGhpcy5fcmVwZWF0KCA0MCwgc3RlcHMsIGV2ZW50ICk7CgkJfSwgaSApOwoKCQl0aGlzLl9zcGluKCBzdGVwcyAqIHRoaXMub3B0aW9ucy5zdGVwLCBldmVudCApOwoJfSwKCglfc3BpbjogZnVuY3Rpb24oIHN0ZXAsIGV2ZW50ICkgewoJCXZhciB2YWx1ZSA9IHRoaXMudmFsdWUoKSB8fCAwOwoKCQlpZiAoICF0aGlzLmNvdW50ZXIgKSB7CgkJCXRoaXMuY291bnRlciA9IDE7CgkJfQoKCQl2YWx1ZSA9IHRoaXMuX2FkanVzdFZhbHVlKCB2YWx1ZSArIHN0ZXAgKiB0aGlzLl9pbmNyZW1lbnQoIHRoaXMuY291bnRlciApICk7CgoJCWlmICggIXRoaXMuc3Bpbm5pbmcgfHwgdGhpcy5fdHJpZ2dlciggInNwaW4iLCBldmVudCwgeyB2YWx1ZTogdmFsdWUgfSApICE9PSBmYWxzZSApIHsKCQkJdGhpcy5fdmFsdWUoIHZhbHVlICk7CgkJCXRoaXMuY291bnRlcisrOwoJCX0KCX0sCgoJX2luY3JlbWVudDogZnVuY3Rpb24oIGkgKSB7CgkJdmFyIGluY3JlbWVudGFsID0gdGhpcy5vcHRpb25zLmluY3JlbWVudGFsOwoKCQlpZiAoIGluY3JlbWVudGFsICkgewoJCQlyZXR1cm4gJC5pc0Z1bmN0aW9uKCBpbmNyZW1lbnRhbCApID8KCQkJCWluY3JlbWVudGFsKCBpICkgOgoJCQkJTWF0aC5mbG9vciggaSAqIGkgKiBpIC8gNTAwMDAgLSBpICogaSAvIDUwMCArIDE3ICogaSAvIDIwMCArIDEgKTsKCQl9CgoJCXJldHVybiAxOwoJfSwKCglfcHJlY2lzaW9uOiBmdW5jdGlvbigpIHsKCQl2YXIgcHJlY2lzaW9uID0gdGhpcy5fcHJlY2lzaW9uT2YoIHRoaXMub3B0aW9ucy5zdGVwICk7CgkJaWYgKCB0aGlzLm9wdGlvbnMubWluICE9PSBudWxsICkgewoJCQlwcmVjaXNpb24gPSBNYXRoLm1heCggcHJlY2lzaW9uLCB0aGlzLl9wcmVjaXNpb25PZiggdGhpcy5vcHRpb25zLm1pbiApICk7CgkJfQoJCXJldHVybiBwcmVjaXNpb247Cgl9LAoKCV9wcmVjaXNpb25PZjogZnVuY3Rpb24oIG51bSApIHsKCQl2YXIgc3RyID0gbnVtLnRvU3RyaW5nKCksCgkJCWRlY2ltYWwgPSBzdHIuaW5kZXhPZiggIi4iICk7CgkJcmV0dXJuIGRlY2ltYWwgPT09IC0xID8gMCA6IHN0ci5sZW5ndGggLSBkZWNpbWFsIC0gMTsKCX0sCgoJX2FkanVzdFZhbHVlOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdmFyIGJhc2UsIGFib3ZlTWluLAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQkvLyBNYWtlIHN1cmUgd2UncmUgYXQgYSB2YWxpZCBzdGVwCgkJLy8gLSBmaW5kIG91dCB3aGVyZSB3ZSBhcmUgcmVsYXRpdmUgdG8gdGhlIGJhc2UgKG1pbiBvciAwKQoJCWJhc2UgPSBvcHRpb25zLm1pbiAhPT0gbnVsbCA/IG9wdGlvbnMubWluIDogMDsKCQlhYm92ZU1pbiA9IHZhbHVlIC0gYmFzZTsKCgkJLy8gLSByb3VuZCB0byB0aGUgbmVhcmVzdCBzdGVwCgkJYWJvdmVNaW4gPSBNYXRoLnJvdW5kKCBhYm92ZU1pbiAvIG9wdGlvbnMuc3RlcCApICogb3B0aW9ucy5zdGVwOwoKCQkvLyAtIHJvdW5kaW5nIGlzIGJhc2VkIG9uIDAsIHNvIGFkanVzdCBiYWNrIHRvIG91ciBiYXNlCgkJdmFsdWUgPSBiYXNlICsgYWJvdmVNaW47CgoJCS8vIEZpeCBwcmVjaXNpb24gZnJvbSBiYWQgSlMgZmxvYXRpbmcgcG9pbnQgbWF0aAoJCXZhbHVlID0gcGFyc2VGbG9hdCggdmFsdWUudG9GaXhlZCggdGhpcy5fcHJlY2lzaW9uKCkgKSApOwoKCQkvLyBDbGFtcCB0aGUgdmFsdWUKCQlpZiAoIG9wdGlvbnMubWF4ICE9PSBudWxsICYmIHZhbHVlID4gb3B0aW9ucy5tYXggKSB7CgkJCXJldHVybiBvcHRpb25zLm1heDsKCQl9CgkJaWYgKCBvcHRpb25zLm1pbiAhPT0gbnVsbCAmJiB2YWx1ZSA8IG9wdGlvbnMubWluICkgewoJCQlyZXR1cm4gb3B0aW9ucy5taW47CgkJfQoKCQlyZXR1cm4gdmFsdWU7Cgl9LAoKCV9zdG9wOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCAhdGhpcy5zcGlubmluZyApIHsKCQkJcmV0dXJuOwoJCX0KCgkJY2xlYXJUaW1lb3V0KCB0aGlzLnRpbWVyICk7CgkJY2xlYXJUaW1lb3V0KCB0aGlzLm1vdXNld2hlZWxUaW1lciApOwoJCXRoaXMuY291bnRlciA9IDA7CgkJdGhpcy5zcGlubmluZyA9IGZhbHNlOwoJCXRoaXMuX3RyaWdnZXIoICJzdG9wIiwgZXZlbnQgKTsKCX0sCgoJX3NldE9wdGlvbjogZnVuY3Rpb24oIGtleSwgdmFsdWUgKSB7CgkJdmFyIHByZXZWYWx1ZSwgZmlyc3QsIGxhc3Q7CgoJCWlmICgga2V5ID09PSAiY3VsdHVyZSIgfHwga2V5ID09PSAibnVtYmVyRm9ybWF0IiApIHsKCQkJcHJldlZhbHVlID0gdGhpcy5fcGFyc2UoIHRoaXMuZWxlbWVudC52YWwoKSApOwoJCQl0aGlzLm9wdGlvbnNbIGtleSBdID0gdmFsdWU7CgkJCXRoaXMuZWxlbWVudC52YWwoIHRoaXMuX2Zvcm1hdCggcHJldlZhbHVlICkgKTsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCBrZXkgPT09ICJtYXgiIHx8IGtleSA9PT0gIm1pbiIgfHwga2V5ID09PSAic3RlcCIgKSB7CgkJCWlmICggdHlwZW9mIHZhbHVlID09PSAic3RyaW5nIiApIHsKCQkJCXZhbHVlID0gdGhpcy5fcGFyc2UoIHZhbHVlICk7CgkJCX0KCQl9CgkJaWYgKCBrZXkgPT09ICJpY29ucyIgKSB7CgkJCWZpcnN0ID0gdGhpcy5idXR0b25zLmZpcnN0KCkuZmluZCggIi51aS1pY29uIiApOwoJCQl0aGlzLl9yZW1vdmVDbGFzcyggZmlyc3QsIG51bGwsIHRoaXMub3B0aW9ucy5pY29ucy51cCApOwoJCQl0aGlzLl9hZGRDbGFzcyggZmlyc3QsIG51bGwsIHZhbHVlLnVwICk7CgkJCWxhc3QgPSB0aGlzLmJ1dHRvbnMubGFzdCgpLmZpbmQoICIudWktaWNvbiIgKTsKCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGxhc3QsIG51bGwsIHRoaXMub3B0aW9ucy5pY29ucy5kb3duICk7CgkJCXRoaXMuX2FkZENsYXNzKCBsYXN0LCBudWxsLCB2YWx1ZS5kb3duICk7CgkJfQoKCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOwoJfSwKCglfc2V0T3B0aW9uRGlzYWJsZWQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHsKCQl0aGlzLl9zdXBlciggdmFsdWUgKTsKCgkJdGhpcy5fdG9nZ2xlQ2xhc3MoIHRoaXMudWlTcGlubmVyLCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiLCAhIXZhbHVlICk7CgkJdGhpcy5lbGVtZW50LnByb3AoICJkaXNhYmxlZCIsICEhdmFsdWUgKTsKCQl0aGlzLmJ1dHRvbnMuYnV0dG9uKCB2YWx1ZSA/ICJkaXNhYmxlIiA6ICJlbmFibGUiICk7Cgl9LAoKCV9zZXRPcHRpb25zOiBzcGlubmVyTW9kaWZlciggZnVuY3Rpb24oIG9wdGlvbnMgKSB7CgkJdGhpcy5fc3VwZXIoIG9wdGlvbnMgKTsKCX0gKSwKCglfcGFyc2U6IGZ1bmN0aW9uKCB2YWwgKSB7CgkJaWYgKCB0eXBlb2YgdmFsID09PSAic3RyaW5nIiAmJiB2YWwgIT09ICIiICkgewoJCQl2YWwgPSB3aW5kb3cuR2xvYmFsaXplICYmIHRoaXMub3B0aW9ucy5udW1iZXJGb3JtYXQgPwoJCQkJR2xvYmFsaXplLnBhcnNlRmxvYXQoIHZhbCwgMTAsIHRoaXMub3B0aW9ucy5jdWx0dXJlICkgOiArdmFsOwoJCX0KCQlyZXR1cm4gdmFsID09PSAiIiB8fCBpc05hTiggdmFsICkgPyBudWxsIDogdmFsOwoJfSwKCglfZm9ybWF0OiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJaWYgKCB2YWx1ZSA9PT0gIiIgKSB7CgkJCXJldHVybiAiIjsKCQl9CgkJcmV0dXJuIHdpbmRvdy5HbG9iYWxpemUgJiYgdGhpcy5vcHRpb25zLm51bWJlckZvcm1hdCA/CgkJCUdsb2JhbGl6ZS5mb3JtYXQoIHZhbHVlLCB0aGlzLm9wdGlvbnMubnVtYmVyRm9ybWF0LCB0aGlzLm9wdGlvbnMuY3VsdHVyZSApIDoKCQkJdmFsdWU7Cgl9LAoKCV9yZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl0aGlzLmVsZW1lbnQuYXR0ciggewoJCQkiYXJpYS12YWx1ZW1pbiI6IHRoaXMub3B0aW9ucy5taW4sCgkJCSJhcmlhLXZhbHVlbWF4IjogdGhpcy5vcHRpb25zLm1heCwKCgkJCS8vIFRPRE86IHdoYXQgc2hvdWxkIHdlIGRvIHdpdGggdmFsdWVzIHRoYXQgY2FuJ3QgYmUgcGFyc2VkPwoJCQkiYXJpYS12YWx1ZW5vdyI6IHRoaXMuX3BhcnNlKCB0aGlzLmVsZW1lbnQudmFsKCkgKQoJCX0gKTsKCX0sCgoJaXNWYWxpZDogZnVuY3Rpb24oKSB7CgkJdmFyIHZhbHVlID0gdGhpcy52YWx1ZSgpOwoKCQkvLyBOdWxsIGlzIGludmFsaWQKCQlpZiAoIHZhbHVlID09PSBudWxsICkgewoJCQlyZXR1cm4gZmFsc2U7CgkJfQoKCQkvLyBJZiB2YWx1ZSBnZXRzIGFkanVzdGVkLCBpdCdzIGludmFsaWQKCQlyZXR1cm4gdmFsdWUgPT09IHRoaXMuX2FkanVzdFZhbHVlKCB2YWx1ZSApOwoJfSwKCgkvLyBVcGRhdGUgdGhlIHZhbHVlIHdpdGhvdXQgdHJpZ2dlcmluZyBjaGFuZ2UKCV92YWx1ZTogZnVuY3Rpb24oIHZhbHVlLCBhbGxvd0FueSApIHsKCQl2YXIgcGFyc2VkOwoJCWlmICggdmFsdWUgIT09ICIiICkgewoJCQlwYXJzZWQgPSB0aGlzLl9wYXJzZSggdmFsdWUgKTsKCQkJaWYgKCBwYXJzZWQgIT09IG51bGwgKSB7CgkJCQlpZiAoICFhbGxvd0FueSApIHsKCQkJCQlwYXJzZWQgPSB0aGlzLl9hZGp1c3RWYWx1ZSggcGFyc2VkICk7CgkJCQl9CgkJCQl2YWx1ZSA9IHRoaXMuX2Zvcm1hdCggcGFyc2VkICk7CgkJCX0KCQl9CgkJdGhpcy5lbGVtZW50LnZhbCggdmFsdWUgKTsKCQl0aGlzLl9yZWZyZXNoKCk7Cgl9LAoKCV9kZXN0cm95OiBmdW5jdGlvbigpIHsKCQl0aGlzLmVsZW1lbnQKCQkJLnByb3AoICJkaXNhYmxlZCIsIGZhbHNlICkKCQkJLnJlbW92ZUF0dHIoICJhdXRvY29tcGxldGUgcm9sZSBhcmlhLXZhbHVlbWluIGFyaWEtdmFsdWVtYXggYXJpYS12YWx1ZW5vdyIgKTsKCgkJdGhpcy51aVNwaW5uZXIucmVwbGFjZVdpdGgoIHRoaXMuZWxlbWVudCApOwoJfSwKCglzdGVwVXA6IHNwaW5uZXJNb2RpZmVyKCBmdW5jdGlvbiggc3RlcHMgKSB7CgkJdGhpcy5fc3RlcFVwKCBzdGVwcyApOwoJfSApLAoJX3N0ZXBVcDogZnVuY3Rpb24oIHN0ZXBzICkgewoJCWlmICggdGhpcy5fc3RhcnQoKSApIHsKCQkJdGhpcy5fc3BpbiggKCBzdGVwcyB8fCAxICkgKiB0aGlzLm9wdGlvbnMuc3RlcCApOwoJCQl0aGlzLl9zdG9wKCk7CgkJfQoJfSwKCglzdGVwRG93bjogc3Bpbm5lck1vZGlmZXIoIGZ1bmN0aW9uKCBzdGVwcyApIHsKCQl0aGlzLl9zdGVwRG93biggc3RlcHMgKTsKCX0gKSwKCV9zdGVwRG93bjogZnVuY3Rpb24oIHN0ZXBzICkgewoJCWlmICggdGhpcy5fc3RhcnQoKSApIHsKCQkJdGhpcy5fc3BpbiggKCBzdGVwcyB8fCAxICkgKiAtdGhpcy5vcHRpb25zLnN0ZXAgKTsKCQkJdGhpcy5fc3RvcCgpOwoJCX0KCX0sCgoJcGFnZVVwOiBzcGlubmVyTW9kaWZlciggZnVuY3Rpb24oIHBhZ2VzICkgewoJCXRoaXMuX3N0ZXBVcCggKCBwYWdlcyB8fCAxICkgKiB0aGlzLm9wdGlvbnMucGFnZSApOwoJfSApLAoKCXBhZ2VEb3duOiBzcGlubmVyTW9kaWZlciggZnVuY3Rpb24oIHBhZ2VzICkgewoJCXRoaXMuX3N0ZXBEb3duKCAoIHBhZ2VzIHx8IDEgKSAqIHRoaXMub3B0aW9ucy5wYWdlICk7Cgl9ICksCgoJdmFsdWU6IGZ1bmN0aW9uKCBuZXdWYWwgKSB7CgkJaWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHsKCQkJcmV0dXJuIHRoaXMuX3BhcnNlKCB0aGlzLmVsZW1lbnQudmFsKCkgKTsKCQl9CgkJc3Bpbm5lck1vZGlmZXIoIHRoaXMuX3ZhbHVlICkuY2FsbCggdGhpcywgbmV3VmFsICk7Cgl9LAoKCXdpZGdldDogZnVuY3Rpb24oKSB7CgkJcmV0dXJuIHRoaXMudWlTcGlubmVyOwoJfQp9ICk7CgovLyBERVBSRUNBVEVECi8vIFRPRE86IHN3aXRjaCByZXR1cm4gYmFjayB0byB3aWRnZXQgZGVjbGFyYXRpb24gYXQgdG9wIG9mIGZpbGUgd2hlbiB0aGlzIGlzIHJlbW92ZWQKaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgKSB7CgoJLy8gQmFja2NvbXBhdCBmb3Igc3Bpbm5lciBodG1sIGV4dGVuc2lvbiBwb2ludHMKCSQud2lkZ2V0KCAidWkuc3Bpbm5lciIsICQudWkuc3Bpbm5lciwgewoJCV9lbmhhbmNlOiBmdW5jdGlvbigpIHsKCQkJdGhpcy51aVNwaW5uZXIgPSB0aGlzLmVsZW1lbnQKCQkJCS5hdHRyKCAiYXV0b2NvbXBsZXRlIiwgIm9mZiIgKQoJCQkJLndyYXAoIHRoaXMuX3VpU3Bpbm5lckh0bWwoKSApCgkJCQkucGFyZW50KCkKCgkJCQkJLy8gQWRkIGJ1dHRvbnMKCQkJCQkuYXBwZW5kKCB0aGlzLl9idXR0b25IdG1sKCkgKTsKCQl9LAoJCV91aVNwaW5uZXJIdG1sOiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuICI8c3Bhbj4iOwoJCX0sCgoJCV9idXR0b25IdG1sOiBmdW5jdGlvbigpIHsKCQkJcmV0dXJuICI8YT48L2E+PGE+PC9hPiI7CgkJfQoJfSApOwp9Cgp2YXIgd2lkZ2V0c1NwaW5uZXIgPSAkLnVpLnNwaW5uZXI7CgoKLyohCiAqIGpRdWVyeSBVSSBUYWJzIDEuMTIuMQogKiBodHRwOi8vanF1ZXJ5dWkuY29tCiAqCiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZQogKi8KCi8vPj5sYWJlbDogVGFicwovLz4+Z3JvdXA6IFdpZGdldHMKLy8+PmRlc2NyaXB0aW9uOiBUcmFuc2Zvcm1zIGEgc2V0IG9mIGNvbnRhaW5lciBlbGVtZW50cyBpbnRvIGEgdGFiIHN0cnVjdHVyZS4KLy8+PmRvY3M6IGh0dHA6Ly9hcGkuanF1ZXJ5dWkuY29tL3RhYnMvCi8vPj5kZW1vczogaHR0cDovL2pxdWVyeXVpLmNvbS90YWJzLwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvY29yZS5jc3MKLy8+PmNzcy5zdHJ1Y3R1cmU6IC4uLy4uL3RoZW1lcy9iYXNlL3RhYnMuY3NzCi8vPj5jc3MudGhlbWU6IC4uLy4uL3RoZW1lcy9iYXNlL3RoZW1lLmNzcwoKCgokLndpZGdldCggInVpLnRhYnMiLCB7Cgl2ZXJzaW9uOiAiMS4xMi4xIiwKCWRlbGF5OiAzMDAsCglvcHRpb25zOiB7CgkJYWN0aXZlOiBudWxsLAoJCWNsYXNzZXM6IHsKCQkJInVpLXRhYnMiOiAidWktY29ybmVyLWFsbCIsCgkJCSJ1aS10YWJzLW5hdiI6ICJ1aS1jb3JuZXItYWxsIiwKCQkJInVpLXRhYnMtcGFuZWwiOiAidWktY29ybmVyLWJvdHRvbSIsCgkJCSJ1aS10YWJzLXRhYiI6ICJ1aS1jb3JuZXItdG9wIgoJCX0sCgkJY29sbGFwc2libGU6IGZhbHNlLAoJCWV2ZW50OiAiY2xpY2siLAoJCWhlaWdodFN0eWxlOiAiY29udGVudCIsCgkJaGlkZTogbnVsbCwKCQlzaG93OiBudWxsLAoKCQkvLyBDYWxsYmFja3MKCQlhY3RpdmF0ZTogbnVsbCwKCQliZWZvcmVBY3RpdmF0ZTogbnVsbCwKCQliZWZvcmVMb2FkOiBudWxsLAoJCWxvYWQ6IG51bGwKCX0sCgoJX2lzTG9jYWw6ICggZnVuY3Rpb24oKSB7CgkJdmFyIHJoYXNoID0gLyMuKiQvOwoKCQlyZXR1cm4gZnVuY3Rpb24oIGFuY2hvciApIHsKCQkJdmFyIGFuY2hvclVybCwgbG9jYXRpb25Vcmw7CgoJCQlhbmNob3JVcmwgPSBhbmNob3IuaHJlZi5yZXBsYWNlKCByaGFzaCwgIiIgKTsKCQkJbG9jYXRpb25VcmwgPSBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoIHJoYXNoLCAiIiApOwoKCQkJLy8gRGVjb2RpbmcgbWF5IHRocm93IGFuIGVycm9yIGlmIHRoZSBVUkwgaXNuJ3QgVVRGLTggKCM5NTE4KQoJCQl0cnkgewoJCQkJYW5jaG9yVXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KCBhbmNob3JVcmwgKTsKCQkJfSBjYXRjaCAoIGVycm9yICkge30KCQkJdHJ5IHsKCQkJCWxvY2F0aW9uVXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KCBsb2NhdGlvblVybCApOwoJCQl9IGNhdGNoICggZXJyb3IgKSB7fQoKCQkJcmV0dXJuIGFuY2hvci5oYXNoLmxlbmd0aCA+IDEgJiYgYW5jaG9yVXJsID09PSBsb2NhdGlvblVybDsKCQl9OwoJfSApKCksCgoJX2NyZWF0ZTogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlzLAoJCQlvcHRpb25zID0gdGhpcy5vcHRpb25zOwoKCQl0aGlzLnJ1bm5pbmcgPSBmYWxzZTsKCgkJdGhpcy5fYWRkQ2xhc3MoICJ1aS10YWJzIiwgInVpLXdpZGdldCB1aS13aWRnZXQtY29udGVudCIgKTsKCQl0aGlzLl90b2dnbGVDbGFzcyggInVpLXRhYnMtY29sbGFwc2libGUiLCBudWxsLCBvcHRpb25zLmNvbGxhcHNpYmxlICk7CgoJCXRoaXMuX3Byb2Nlc3NUYWJzKCk7CgkJb3B0aW9ucy5hY3RpdmUgPSB0aGlzLl9pbml0aWFsQWN0aXZlKCk7CgoJCS8vIFRha2UgZGlzYWJsaW5nIHRhYnMgdmlhIGNsYXNzIGF0dHJpYnV0ZSBmcm9tIEhUTUwKCQkvLyBpbnRvIGFjY291bnQgYW5kIHVwZGF0ZSBvcHRpb24gcHJvcGVybHkuCgkJaWYgKCAkLmlzQXJyYXkoIG9wdGlvbnMuZGlzYWJsZWQgKSApIHsKCQkJb3B0aW9ucy5kaXNhYmxlZCA9ICQudW5pcXVlKCBvcHRpb25zLmRpc2FibGVkLmNvbmNhdCgKCQkJCSQubWFwKCB0aGlzLnRhYnMuZmlsdGVyKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApLCBmdW5jdGlvbiggbGkgKSB7CgkJCQkJcmV0dXJuIHRoYXQudGFicy5pbmRleCggbGkgKTsKCQkJCX0gKQoJCQkpICkuc29ydCgpOwoJCX0KCgkJLy8gQ2hlY2sgZm9yIGxlbmd0aCBhdm9pZHMgZXJyb3Igd2hlbiBpbml0aWFsaXppbmcgZW1wdHkgbGlzdAoJCWlmICggdGhpcy5vcHRpb25zLmFjdGl2ZSAhPT0gZmFsc2UgJiYgdGhpcy5hbmNob3JzLmxlbmd0aCApIHsKCQkJdGhpcy5hY3RpdmUgPSB0aGlzLl9maW5kQWN0aXZlKCBvcHRpb25zLmFjdGl2ZSApOwoJCX0gZWxzZSB7CgkJCXRoaXMuYWN0aXZlID0gJCgpOwoJCX0KCgkJdGhpcy5fcmVmcmVzaCgpOwoKCQlpZiAoIHRoaXMuYWN0aXZlLmxlbmd0aCApIHsKCQkJdGhpcy5sb2FkKCBvcHRpb25zLmFjdGl2ZSApOwoJCX0KCX0sCgoJX2luaXRpYWxBY3RpdmU6IGZ1bmN0aW9uKCkgewoJCXZhciBhY3RpdmUgPSB0aGlzLm9wdGlvbnMuYWN0aXZlLAoJCQljb2xsYXBzaWJsZSA9IHRoaXMub3B0aW9ucy5jb2xsYXBzaWJsZSwKCQkJbG9jYXRpb25IYXNoID0gbG9jYXRpb24uaGFzaC5zdWJzdHJpbmcoIDEgKTsKCgkJaWYgKCBhY3RpdmUgPT09IG51bGwgKSB7CgoJCQkvLyBjaGVjayB0aGUgZnJhZ21lbnQgaWRlbnRpZmllciBpbiB0aGUgVVJMCgkJCWlmICggbG9jYXRpb25IYXNoICkgewoJCQkJdGhpcy50YWJzLmVhY2goIGZ1bmN0aW9uKCBpLCB0YWIgKSB7CgkJCQkJaWYgKCAkKCB0YWIgKS5hdHRyKCAiYXJpYS1jb250cm9scyIgKSA9PT0gbG9jYXRpb25IYXNoICkgewoJCQkJCQlhY3RpdmUgPSBpOwoJCQkJCQlyZXR1cm4gZmFsc2U7CgkJCQkJfQoJCQkJfSApOwoJCQl9CgoJCQkvLyBDaGVjayBmb3IgYSB0YWIgbWFya2VkIGFjdGl2ZSB2aWEgYSBjbGFzcwoJCQlpZiAoIGFjdGl2ZSA9PT0gbnVsbCApIHsKCQkJCWFjdGl2ZSA9IHRoaXMudGFicy5pbmRleCggdGhpcy50YWJzLmZpbHRlciggIi51aS10YWJzLWFjdGl2ZSIgKSApOwoJCQl9CgoJCQkvLyBObyBhY3RpdmUgdGFiLCBzZXQgdG8gZmFsc2UKCQkJaWYgKCBhY3RpdmUgPT09IG51bGwgfHwgYWN0aXZlID09PSAtMSApIHsKCQkJCWFjdGl2ZSA9IHRoaXMudGFicy5sZW5ndGggPyAwIDogZmFsc2U7CgkJCX0KCQl9CgoJCS8vIEhhbmRsZSBudW1iZXJzOiBuZWdhdGl2ZSwgb3V0IG9mIHJhbmdlCgkJaWYgKCBhY3RpdmUgIT09IGZhbHNlICkgewoJCQlhY3RpdmUgPSB0aGlzLnRhYnMuaW5kZXgoIHRoaXMudGFicy5lcSggYWN0aXZlICkgKTsKCQkJaWYgKCBhY3RpdmUgPT09IC0xICkgewoJCQkJYWN0aXZlID0gY29sbGFwc2libGUgPyBmYWxzZSA6IDA7CgkJCX0KCQl9CgoJCS8vIERvbid0IGFsbG93IGNvbGxhcHNpYmxlOiBmYWxzZSBhbmQgYWN0aXZlOiBmYWxzZQoJCWlmICggIWNvbGxhcHNpYmxlICYmIGFjdGl2ZSA9PT0gZmFsc2UgJiYgdGhpcy5hbmNob3JzLmxlbmd0aCApIHsKCQkJYWN0aXZlID0gMDsKCQl9CgoJCXJldHVybiBhY3RpdmU7Cgl9LAoKCV9nZXRDcmVhdGVFdmVudERhdGE6IGZ1bmN0aW9uKCkgewoJCXJldHVybiB7CgkJCXRhYjogdGhpcy5hY3RpdmUsCgkJCXBhbmVsOiAhdGhpcy5hY3RpdmUubGVuZ3RoID8gJCgpIDogdGhpcy5fZ2V0UGFuZWxGb3JUYWIoIHRoaXMuYWN0aXZlICkKCQl9OwoJfSwKCglfdGFiS2V5ZG93bjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBmb2N1c2VkVGFiID0gJCggJC51aS5zYWZlQWN0aXZlRWxlbWVudCggdGhpcy5kb2N1bWVudFsgMCBdICkgKS5jbG9zZXN0KCAibGkiICksCgkJCXNlbGVjdGVkSW5kZXggPSB0aGlzLnRhYnMuaW5kZXgoIGZvY3VzZWRUYWIgKSwKCQkJZ29pbmdGb3J3YXJkID0gdHJ1ZTsKCgkJaWYgKCB0aGlzLl9oYW5kbGVQYWdlTmF2KCBldmVudCApICkgewoJCQlyZXR1cm47CgkJfQoKCQlzd2l0Y2ggKCBldmVudC5rZXlDb2RlICkgewoJCWNhc2UgJC51aS5rZXlDb2RlLlJJR0hUOgoJCWNhc2UgJC51aS5rZXlDb2RlLkRPV046CgkJCXNlbGVjdGVkSW5kZXgrKzsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuVVA6CgkJY2FzZSAkLnVpLmtleUNvZGUuTEVGVDoKCQkJZ29pbmdGb3J3YXJkID0gZmFsc2U7CgkJCXNlbGVjdGVkSW5kZXgtLTsKCQkJYnJlYWs7CgkJY2FzZSAkLnVpLmtleUNvZGUuRU5EOgoJCQlzZWxlY3RlZEluZGV4ID0gdGhpcy5hbmNob3JzLmxlbmd0aCAtIDE7CgkJCWJyZWFrOwoJCWNhc2UgJC51aS5rZXlDb2RlLkhPTUU6CgkJCXNlbGVjdGVkSW5kZXggPSAwOwoJCQlicmVhazsKCQljYXNlICQudWkua2V5Q29kZS5TUEFDRToKCgkJCS8vIEFjdGl2YXRlIG9ubHksIG5vIGNvbGxhcHNpbmcKCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJY2xlYXJUaW1lb3V0KCB0aGlzLmFjdGl2YXRpbmcgKTsKCQkJdGhpcy5fYWN0aXZhdGUoIHNlbGVjdGVkSW5kZXggKTsKCQkJcmV0dXJuOwoJCWNhc2UgJC51aS5rZXlDb2RlLkVOVEVSOgoKCQkJLy8gVG9nZ2xlIChjYW5jZWwgZGVsYXllZCBhY3RpdmF0aW9uLCBhbGxvdyBjb2xsYXBzaW5nKQoJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQljbGVhclRpbWVvdXQoIHRoaXMuYWN0aXZhdGluZyApOwoKCQkJLy8gRGV0ZXJtaW5lIGlmIHdlIHNob3VsZCBjb2xsYXBzZSBvciBhY3RpdmF0ZQoJCQl0aGlzLl9hY3RpdmF0ZSggc2VsZWN0ZWRJbmRleCA9PT0gdGhpcy5vcHRpb25zLmFjdGl2ZSA/IGZhbHNlIDogc2VsZWN0ZWRJbmRleCApOwoJCQlyZXR1cm47CgkJZGVmYXVsdDoKCQkJcmV0dXJuOwoJCX0KCgkJLy8gRm9jdXMgdGhlIGFwcHJvcHJpYXRlIHRhYiwgYmFzZWQgb24gd2hpY2gga2V5IHdhcyBwcmVzc2VkCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQljbGVhclRpbWVvdXQoIHRoaXMuYWN0aXZhdGluZyApOwoJCXNlbGVjdGVkSW5kZXggPSB0aGlzLl9mb2N1c05leHRUYWIoIHNlbGVjdGVkSW5kZXgsIGdvaW5nRm9yd2FyZCApOwoKCQkvLyBOYXZpZ2F0aW5nIHdpdGggY29udHJvbC9jb21tYW5kIGtleSB3aWxsIHByZXZlbnQgYXV0b21hdGljIGFjdGl2YXRpb24KCQlpZiAoICFldmVudC5jdHJsS2V5ICYmICFldmVudC5tZXRhS2V5ICkgewoKCQkJLy8gVXBkYXRlIGFyaWEtc2VsZWN0ZWQgaW1tZWRpYXRlbHkgc28gdGhhdCBBVCB0aGluayB0aGUgdGFiIGlzIGFscmVhZHkgc2VsZWN0ZWQuCgkJCS8vIE90aGVyd2lzZSBBVCBtYXkgY29uZnVzZSB0aGUgdXNlciBieSBzdGF0aW5nIHRoYXQgdGhleSBuZWVkIHRvIGFjdGl2YXRlIHRoZSB0YWIsCgkJCS8vIGJ1dCB0aGUgdGFiIHdpbGwgYWxyZWFkeSBiZSBhY3RpdmF0ZWQgYnkgdGhlIHRpbWUgdGhlIGFubm91bmNlbWVudCBmaW5pc2hlcy4KCQkJZm9jdXNlZFRhYi5hdHRyKCAiYXJpYS1zZWxlY3RlZCIsICJmYWxzZSIgKTsKCQkJdGhpcy50YWJzLmVxKCBzZWxlY3RlZEluZGV4ICkuYXR0ciggImFyaWEtc2VsZWN0ZWQiLCAidHJ1ZSIgKTsKCgkJCXRoaXMuYWN0aXZhdGluZyA9IHRoaXMuX2RlbGF5KCBmdW5jdGlvbigpIHsKCQkJCXRoaXMub3B0aW9uKCAiYWN0aXZlIiwgc2VsZWN0ZWRJbmRleCApOwoJCQl9LCB0aGlzLmRlbGF5ICk7CgkJfQoJfSwKCglfcGFuZWxLZXlkb3duOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJaWYgKCB0aGlzLl9oYW5kbGVQYWdlTmF2KCBldmVudCApICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBDdHJsK3VwIG1vdmVzIGZvY3VzIHRvIHRoZSBjdXJyZW50IHRhYgoJCWlmICggZXZlbnQuY3RybEtleSAmJiBldmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuVVAgKSB7CgkJCWV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgkJCXRoaXMuYWN0aXZlLnRyaWdnZXIoICJmb2N1cyIgKTsKCQl9Cgl9LAoKCS8vIEFsdCtwYWdlIHVwL2Rvd24gbW92ZXMgZm9jdXMgdG8gdGhlIHByZXZpb3VzL25leHQgdGFiIChhbmQgYWN0aXZhdGVzKQoJX2hhbmRsZVBhZ2VOYXY6IGZ1bmN0aW9uKCBldmVudCApIHsKCQlpZiAoIGV2ZW50LmFsdEtleSAmJiBldmVudC5rZXlDb2RlID09PSAkLnVpLmtleUNvZGUuUEFHRV9VUCApIHsKCQkJdGhpcy5fYWN0aXZhdGUoIHRoaXMuX2ZvY3VzTmV4dFRhYiggdGhpcy5vcHRpb25zLmFjdGl2ZSAtIDEsIGZhbHNlICkgKTsKCQkJcmV0dXJuIHRydWU7CgkJfQoJCWlmICggZXZlbnQuYWx0S2V5ICYmIGV2ZW50LmtleUNvZGUgPT09ICQudWkua2V5Q29kZS5QQUdFX0RPV04gKSB7CgkJCXRoaXMuX2FjdGl2YXRlKCB0aGlzLl9mb2N1c05leHRUYWIoIHRoaXMub3B0aW9ucy5hY3RpdmUgKyAxLCB0cnVlICkgKTsKCQkJcmV0dXJuIHRydWU7CgkJfQoJfSwKCglfZmluZE5leHRUYWI6IGZ1bmN0aW9uKCBpbmRleCwgZ29pbmdGb3J3YXJkICkgewoJCXZhciBsYXN0VGFiSW5kZXggPSB0aGlzLnRhYnMubGVuZ3RoIC0gMTsKCgkJZnVuY3Rpb24gY29uc3RyYWluKCkgewoJCQlpZiAoIGluZGV4ID4gbGFzdFRhYkluZGV4ICkgewoJCQkJaW5kZXggPSAwOwoJCQl9CgkJCWlmICggaW5kZXggPCAwICkgewoJCQkJaW5kZXggPSBsYXN0VGFiSW5kZXg7CgkJCX0KCQkJcmV0dXJuIGluZGV4OwoJCX0KCgkJd2hpbGUgKCAkLmluQXJyYXkoIGNvbnN0cmFpbigpLCB0aGlzLm9wdGlvbnMuZGlzYWJsZWQgKSAhPT0gLTEgKSB7CgkJCWluZGV4ID0gZ29pbmdGb3J3YXJkID8gaW5kZXggKyAxIDogaW5kZXggLSAxOwoJCX0KCgkJcmV0dXJuIGluZGV4OwoJfSwKCglfZm9jdXNOZXh0VGFiOiBmdW5jdGlvbiggaW5kZXgsIGdvaW5nRm9yd2FyZCApIHsKCQlpbmRleCA9IHRoaXMuX2ZpbmROZXh0VGFiKCBpbmRleCwgZ29pbmdGb3J3YXJkICk7CgkJdGhpcy50YWJzLmVxKCBpbmRleCApLnRyaWdnZXIoICJmb2N1cyIgKTsKCQlyZXR1cm4gaW5kZXg7Cgl9LAoKCV9zZXRPcHRpb246IGZ1bmN0aW9uKCBrZXksIHZhbHVlICkgewoJCWlmICgga2V5ID09PSAiYWN0aXZlIiApIHsKCgkJCS8vIF9hY3RpdmF0ZSgpIHdpbGwgaGFuZGxlIGludmFsaWQgdmFsdWVzIGFuZCB1cGRhdGUgdGhpcy5vcHRpb25zCgkJCXRoaXMuX2FjdGl2YXRlKCB2YWx1ZSApOwoJCQlyZXR1cm47CgkJfQoKCQl0aGlzLl9zdXBlcigga2V5LCB2YWx1ZSApOwoKCQlpZiAoIGtleSA9PT0gImNvbGxhcHNpYmxlIiApIHsKCQkJdGhpcy5fdG9nZ2xlQ2xhc3MoICJ1aS10YWJzLWNvbGxhcHNpYmxlIiwgbnVsbCwgdmFsdWUgKTsKCgkJCS8vIFNldHRpbmcgY29sbGFwc2libGU6IGZhbHNlIHdoaWxlIGNvbGxhcHNlZDsgb3BlbiBmaXJzdCBwYW5lbAoJCQlpZiAoICF2YWx1ZSAmJiB0aGlzLm9wdGlvbnMuYWN0aXZlID09PSBmYWxzZSApIHsKCQkJCXRoaXMuX2FjdGl2YXRlKCAwICk7CgkJCX0KCQl9CgoJCWlmICgga2V5ID09PSAiZXZlbnQiICkgewoJCQl0aGlzLl9zZXR1cEV2ZW50cyggdmFsdWUgKTsKCQl9CgoJCWlmICgga2V5ID09PSAiaGVpZ2h0U3R5bGUiICkgewoJCQl0aGlzLl9zZXR1cEhlaWdodFN0eWxlKCB2YWx1ZSApOwoJCX0KCX0sCgoJX3Nhbml0aXplU2VsZWN0b3I6IGZ1bmN0aW9uKCBoYXNoICkgewoJCXJldHVybiBoYXNoID8gaGFzaC5yZXBsYWNlKCAvWyEiJCUmJygpKissLlwvOjs8PT4/QFxbXF1cXmB7fH1+XS9nLCAiXFwkJiIgKSA6ICIiOwoJfSwKCglyZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl2YXIgb3B0aW9ucyA9IHRoaXMub3B0aW9ucywKCQkJbGlzID0gdGhpcy50YWJsaXN0LmNoaWxkcmVuKCAiOmhhcyhhW2hyZWZdKSIgKTsKCgkJLy8gR2V0IGRpc2FibGVkIHRhYnMgZnJvbSBjbGFzcyBhdHRyaWJ1dGUgZnJvbSBIVE1MCgkJLy8gdGhpcyB3aWxsIGdldCBjb252ZXJ0ZWQgdG8gYSBib29sZWFuIGlmIG5lZWRlZCBpbiBfcmVmcmVzaCgpCgkJb3B0aW9ucy5kaXNhYmxlZCA9ICQubWFwKCBsaXMuZmlsdGVyKCAiLnVpLXN0YXRlLWRpc2FibGVkIiApLCBmdW5jdGlvbiggdGFiICkgewoJCQlyZXR1cm4gbGlzLmluZGV4KCB0YWIgKTsKCQl9ICk7CgoJCXRoaXMuX3Byb2Nlc3NUYWJzKCk7CgoJCS8vIFdhcyBjb2xsYXBzZWQgb3Igbm8gdGFicwoJCWlmICggb3B0aW9ucy5hY3RpdmUgPT09IGZhbHNlIHx8ICF0aGlzLmFuY2hvcnMubGVuZ3RoICkgewoJCQlvcHRpb25zLmFjdGl2ZSA9IGZhbHNlOwoJCQl0aGlzLmFjdGl2ZSA9ICQoKTsKCgkJLy8gd2FzIGFjdGl2ZSwgYnV0IGFjdGl2ZSB0YWIgaXMgZ29uZQoJCX0gZWxzZSBpZiAoIHRoaXMuYWN0aXZlLmxlbmd0aCAmJiAhJC5jb250YWlucyggdGhpcy50YWJsaXN0WyAwIF0sIHRoaXMuYWN0aXZlWyAwIF0gKSApIHsKCgkJCS8vIGFsbCByZW1haW5pbmcgdGFicyBhcmUgZGlzYWJsZWQKCQkJaWYgKCB0aGlzLnRhYnMubGVuZ3RoID09PSBvcHRpb25zLmRpc2FibGVkLmxlbmd0aCApIHsKCQkJCW9wdGlvbnMuYWN0aXZlID0gZmFsc2U7CgkJCQl0aGlzLmFjdGl2ZSA9ICQoKTsKCgkJCS8vIGFjdGl2YXRlIHByZXZpb3VzIHRhYgoJCQl9IGVsc2UgewoJCQkJdGhpcy5fYWN0aXZhdGUoIHRoaXMuX2ZpbmROZXh0VGFiKCBNYXRoLm1heCggMCwgb3B0aW9ucy5hY3RpdmUgLSAxICksIGZhbHNlICkgKTsKCQkJfQoKCQkvLyB3YXMgYWN0aXZlLCBhY3RpdmUgdGFiIHN0aWxsIGV4aXN0cwoJCX0gZWxzZSB7CgoJCQkvLyBtYWtlIHN1cmUgYWN0aXZlIGluZGV4IGlzIGNvcnJlY3QKCQkJb3B0aW9ucy5hY3RpdmUgPSB0aGlzLnRhYnMuaW5kZXgoIHRoaXMuYWN0aXZlICk7CgkJfQoKCQl0aGlzLl9yZWZyZXNoKCk7Cgl9LAoKCV9yZWZyZXNoOiBmdW5jdGlvbigpIHsKCQl0aGlzLl9zZXRPcHRpb25EaXNhYmxlZCggdGhpcy5vcHRpb25zLmRpc2FibGVkICk7CgkJdGhpcy5fc2V0dXBFdmVudHMoIHRoaXMub3B0aW9ucy5ldmVudCApOwoJCXRoaXMuX3NldHVwSGVpZ2h0U3R5bGUoIHRoaXMub3B0aW9ucy5oZWlnaHRTdHlsZSApOwoKCQl0aGlzLnRhYnMubm90KCB0aGlzLmFjdGl2ZSApLmF0dHIoIHsKCQkJImFyaWEtc2VsZWN0ZWQiOiAiZmFsc2UiLAoJCQkiYXJpYS1leHBhbmRlZCI6ICJmYWxzZSIsCgkJCXRhYkluZGV4OiAtMQoJCX0gKTsKCQl0aGlzLnBhbmVscy5ub3QoIHRoaXMuX2dldFBhbmVsRm9yVGFiKCB0aGlzLmFjdGl2ZSApICkKCQkJLmhpZGUoKQoJCQkuYXR0ciggewoJCQkJImFyaWEtaGlkZGVuIjogInRydWUiCgkJCX0gKTsKCgkJLy8gTWFrZSBzdXJlIG9uZSB0YWIgaXMgaW4gdGhlIHRhYiBvcmRlcgoJCWlmICggIXRoaXMuYWN0aXZlLmxlbmd0aCApIHsKCQkJdGhpcy50YWJzLmVxKCAwICkuYXR0ciggInRhYkluZGV4IiwgMCApOwoJCX0gZWxzZSB7CgkJCXRoaXMuYWN0aXZlCgkJCQkuYXR0ciggewoJCQkJCSJhcmlhLXNlbGVjdGVkIjogInRydWUiLAoJCQkJCSJhcmlhLWV4cGFuZGVkIjogInRydWUiLAoJCQkJCXRhYkluZGV4OiAwCgkJCQl9ICk7CgkJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmFjdGl2ZSwgInVpLXRhYnMtYWN0aXZlIiwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCQkJdGhpcy5fZ2V0UGFuZWxGb3JUYWIoIHRoaXMuYWN0aXZlICkKCQkJCS5zaG93KCkKCQkJCS5hdHRyKCB7CgkJCQkJImFyaWEtaGlkZGVuIjogImZhbHNlIgoJCQkJfSApOwoJCX0KCX0sCgoJX3Byb2Nlc3NUYWJzOiBmdW5jdGlvbigpIHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCXByZXZUYWJzID0gdGhpcy50YWJzLAoJCQlwcmV2QW5jaG9ycyA9IHRoaXMuYW5jaG9ycywKCQkJcHJldlBhbmVscyA9IHRoaXMucGFuZWxzOwoKCQl0aGlzLnRhYmxpc3QgPSB0aGlzLl9nZXRMaXN0KCkuYXR0ciggInJvbGUiLCAidGFibGlzdCIgKTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy50YWJsaXN0LCAidWktdGFicy1uYXYiLAoJCQkidWktaGVscGVyLXJlc2V0IHVpLWhlbHBlci1jbGVhcmZpeCB1aS13aWRnZXQtaGVhZGVyIiApOwoKCQkvLyBQcmV2ZW50IHVzZXJzIGZyb20gZm9jdXNpbmcgZGlzYWJsZWQgdGFicyB2aWEgY2xpY2sKCQl0aGlzLnRhYmxpc3QKCQkJLm9uKCAibW91c2Vkb3duIiArIHRoaXMuZXZlbnROYW1lc3BhY2UsICI+IGxpIiwgZnVuY3Rpb24oIGV2ZW50ICkgewoJCQkJaWYgKCAkKCB0aGlzICkuaXMoICIudWktc3RhdGUtZGlzYWJsZWQiICkgKSB7CgkJCQkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCQkJCX0KCQkJfSApCgoJCQkvLyBTdXBwb3J0OiBJRSA8OQoJCQkvLyBQcmV2ZW50aW5nIHRoZSBkZWZhdWx0IGFjdGlvbiBpbiBtb3VzZWRvd24gZG9lc24ndCBwcmV2ZW50IElFCgkJCS8vIGZyb20gZm9jdXNpbmcgdGhlIGVsZW1lbnQsIHNvIGlmIHRoZSBhbmNob3IgZ2V0cyBmb2N1c2VkLCBibHVyLgoJCQkvLyBXZSBkb24ndCBoYXZlIHRvIHdvcnJ5IGFib3V0IGZvY3VzaW5nIHRoZSBwcmV2aW91c2x5IGZvY3VzZWQKCQkJLy8gZWxlbWVudCBzaW5jZSBjbGlja2luZyBvbiBhIG5vbi1mb2N1c2FibGUgZWxlbWVudCBzaG91bGQgZm9jdXMKCQkJLy8gdGhlIGJvZHkgYW55d2F5LgoJCQkub24oICJmb2N1cyIgKyB0aGlzLmV2ZW50TmFtZXNwYWNlLCAiLnVpLXRhYnMtYW5jaG9yIiwgZnVuY3Rpb24oKSB7CgkJCQlpZiAoICQoIHRoaXMgKS5jbG9zZXN0KCAibGkiICkuaXMoICIudWktc3RhdGUtZGlzYWJsZWQiICkgKSB7CgkJCQkJdGhpcy5ibHVyKCk7CgkJCQl9CgkJCX0gKTsKCgkJdGhpcy50YWJzID0gdGhpcy50YWJsaXN0LmZpbmQoICI+IGxpOmhhcyhhW2hyZWZdKSIgKQoJCQkuYXR0ciggewoJCQkJcm9sZTogInRhYiIsCgkJCQl0YWJJbmRleDogLTEKCQkJfSApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLnRhYnMsICJ1aS10YWJzLXRhYiIsICJ1aS1zdGF0ZS1kZWZhdWx0IiApOwoKCQl0aGlzLmFuY2hvcnMgPSB0aGlzLnRhYnMubWFwKCBmdW5jdGlvbigpIHsKCQkJcmV0dXJuICQoICJhIiwgdGhpcyApWyAwIF07CgkJfSApCgkJCS5hdHRyKCB7CgkJCQlyb2xlOiAicHJlc2VudGF0aW9uIiwKCQkJCXRhYkluZGV4OiAtMQoJCQl9ICk7CgkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMuYW5jaG9ycywgInVpLXRhYnMtYW5jaG9yIiApOwoKCQl0aGlzLnBhbmVscyA9ICQoKTsKCgkJdGhpcy5hbmNob3JzLmVhY2goIGZ1bmN0aW9uKCBpLCBhbmNob3IgKSB7CgkJCXZhciBzZWxlY3RvciwgcGFuZWwsIHBhbmVsSWQsCgkJCQlhbmNob3JJZCA9ICQoIGFuY2hvciApLnVuaXF1ZUlkKCkuYXR0ciggImlkIiApLAoJCQkJdGFiID0gJCggYW5jaG9yICkuY2xvc2VzdCggImxpIiApLAoJCQkJb3JpZ2luYWxBcmlhQ29udHJvbHMgPSB0YWIuYXR0ciggImFyaWEtY29udHJvbHMiICk7CgoJCQkvLyBJbmxpbmUgdGFiCgkJCWlmICggdGhhdC5faXNMb2NhbCggYW5jaG9yICkgKSB7CgkJCQlzZWxlY3RvciA9IGFuY2hvci5oYXNoOwoJCQkJcGFuZWxJZCA9IHNlbGVjdG9yLnN1YnN0cmluZyggMSApOwoJCQkJcGFuZWwgPSB0aGF0LmVsZW1lbnQuZmluZCggdGhhdC5fc2FuaXRpemVTZWxlY3Rvciggc2VsZWN0b3IgKSApOwoKCQkJLy8gcmVtb3RlIHRhYgoJCQl9IGVsc2UgewoKCQkJCS8vIElmIHRoZSB0YWIgZG9lc24ndCBhbHJlYWR5IGhhdmUgYXJpYS1jb250cm9scywKCQkJCS8vIGdlbmVyYXRlIGFuIGlkIGJ5IHVzaW5nIGEgdGhyb3ctYXdheSBlbGVtZW50CgkJCQlwYW5lbElkID0gdGFiLmF0dHIoICJhcmlhLWNvbnRyb2xzIiApIHx8ICQoIHt9ICkudW5pcXVlSWQoKVsgMCBdLmlkOwoJCQkJc2VsZWN0b3IgPSAiIyIgKyBwYW5lbElkOwoJCQkJcGFuZWwgPSB0aGF0LmVsZW1lbnQuZmluZCggc2VsZWN0b3IgKTsKCQkJCWlmICggIXBhbmVsLmxlbmd0aCApIHsKCQkJCQlwYW5lbCA9IHRoYXQuX2NyZWF0ZVBhbmVsKCBwYW5lbElkICk7CgkJCQkJcGFuZWwuaW5zZXJ0QWZ0ZXIoIHRoYXQucGFuZWxzWyBpIC0gMSBdIHx8IHRoYXQudGFibGlzdCApOwoJCQkJfQoJCQkJcGFuZWwuYXR0ciggImFyaWEtbGl2ZSIsICJwb2xpdGUiICk7CgkJCX0KCgkJCWlmICggcGFuZWwubGVuZ3RoICkgewoJCQkJdGhhdC5wYW5lbHMgPSB0aGF0LnBhbmVscy5hZGQoIHBhbmVsICk7CgkJCX0KCQkJaWYgKCBvcmlnaW5hbEFyaWFDb250cm9scyApIHsKCQkJCXRhYi5kYXRhKCAidWktdGFicy1hcmlhLWNvbnRyb2xzIiwgb3JpZ2luYWxBcmlhQ29udHJvbHMgKTsKCQkJfQoJCQl0YWIuYXR0ciggewoJCQkJImFyaWEtY29udHJvbHMiOiBwYW5lbElkLAoJCQkJImFyaWEtbGFiZWxsZWRieSI6IGFuY2hvcklkCgkJCX0gKTsKCQkJcGFuZWwuYXR0ciggImFyaWEtbGFiZWxsZWRieSIsIGFuY2hvcklkICk7CgkJfSApOwoKCQl0aGlzLnBhbmVscy5hdHRyKCAicm9sZSIsICJ0YWJwYW5lbCIgKTsKCQl0aGlzLl9hZGRDbGFzcyggdGhpcy5wYW5lbHMsICJ1aS10YWJzLXBhbmVsIiwgInVpLXdpZGdldC1jb250ZW50IiApOwoKCQkvLyBBdm9pZCBtZW1vcnkgbGVha3MgKCMxMDA1NikKCQlpZiAoIHByZXZUYWJzICkgewoJCQl0aGlzLl9vZmYoIHByZXZUYWJzLm5vdCggdGhpcy50YWJzICkgKTsKCQkJdGhpcy5fb2ZmKCBwcmV2QW5jaG9ycy5ub3QoIHRoaXMuYW5jaG9ycyApICk7CgkJCXRoaXMuX29mZiggcHJldlBhbmVscy5ub3QoIHRoaXMucGFuZWxzICkgKTsKCQl9Cgl9LAoKCS8vIEFsbG93IG92ZXJyaWRpbmcgaG93IHRvIGZpbmQgdGhlIGxpc3QgZm9yIHJhcmUgdXNhZ2Ugc2NlbmFyaW9zICgjNzcxNSkKCV9nZXRMaXN0OiBmdW5jdGlvbigpIHsKCQlyZXR1cm4gdGhpcy50YWJsaXN0IHx8IHRoaXMuZWxlbWVudC5maW5kKCAib2wsIHVsIiApLmVxKCAwICk7Cgl9LAoKCV9jcmVhdGVQYW5lbDogZnVuY3Rpb24oIGlkICkgewoJCXJldHVybiAkKCAiPGRpdj4iICkKCQkJLmF0dHIoICJpZCIsIGlkICkKCQkJLmRhdGEoICJ1aS10YWJzLWRlc3Ryb3kiLCB0cnVlICk7Cgl9LAoKCV9zZXRPcHRpb25EaXNhYmxlZDogZnVuY3Rpb24oIGRpc2FibGVkICkgewoJCXZhciBjdXJyZW50SXRlbSwgbGksIGk7CgoJCWlmICggJC5pc0FycmF5KCBkaXNhYmxlZCApICkgewoJCQlpZiAoICFkaXNhYmxlZC5sZW5ndGggKSB7CgkJCQlkaXNhYmxlZCA9IGZhbHNlOwoJCQl9IGVsc2UgaWYgKCBkaXNhYmxlZC5sZW5ndGggPT09IHRoaXMuYW5jaG9ycy5sZW5ndGggKSB7CgkJCQlkaXNhYmxlZCA9IHRydWU7CgkJCX0KCQl9CgoJCS8vIERpc2FibGUgdGFicwoJCWZvciAoIGkgPSAwOyAoIGxpID0gdGhpcy50YWJzWyBpIF0gKTsgaSsrICkgewoJCQljdXJyZW50SXRlbSA9ICQoIGxpICk7CgkJCWlmICggZGlzYWJsZWQgPT09IHRydWUgfHwgJC5pbkFycmF5KCBpLCBkaXNhYmxlZCApICE9PSAtMSApIHsKCQkJCWN1cnJlbnRJdGVtLmF0dHIoICJhcmlhLWRpc2FibGVkIiwgInRydWUiICk7CgkJCQl0aGlzLl9hZGRDbGFzcyggY3VycmVudEl0ZW0sIG51bGwsICJ1aS1zdGF0ZS1kaXNhYmxlZCIgKTsKCQkJfSBlbHNlIHsKCQkJCWN1cnJlbnRJdGVtLnJlbW92ZUF0dHIoICJhcmlhLWRpc2FibGVkIiApOwoJCQkJdGhpcy5fcmVtb3ZlQ2xhc3MoIGN1cnJlbnRJdGVtLCBudWxsLCAidWktc3RhdGUtZGlzYWJsZWQiICk7CgkJCX0KCQl9CgoJCXRoaXMub3B0aW9ucy5kaXNhYmxlZCA9IGRpc2FibGVkOwoKCQl0aGlzLl90b2dnbGVDbGFzcyggdGhpcy53aWRnZXQoKSwgdGhpcy53aWRnZXRGdWxsTmFtZSArICItZGlzYWJsZWQiLCBudWxsLAoJCQlkaXNhYmxlZCA9PT0gdHJ1ZSApOwoJfSwKCglfc2V0dXBFdmVudHM6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgZXZlbnRzID0ge307CgkJaWYgKCBldmVudCApIHsKCQkJJC5lYWNoKCBldmVudC5zcGxpdCggIiAiICksIGZ1bmN0aW9uKCBpbmRleCwgZXZlbnROYW1lICkgewoJCQkJZXZlbnRzWyBldmVudE5hbWUgXSA9ICJfZXZlbnRIYW5kbGVyIjsKCQkJfSApOwoJCX0KCgkJdGhpcy5fb2ZmKCB0aGlzLmFuY2hvcnMuYWRkKCB0aGlzLnRhYnMgKS5hZGQoIHRoaXMucGFuZWxzICkgKTsKCgkJLy8gQWx3YXlzIHByZXZlbnQgdGhlIGRlZmF1bHQgYWN0aW9uLCBldmVuIHdoZW4gZGlzYWJsZWQKCQl0aGlzLl9vbiggdHJ1ZSwgdGhpcy5hbmNob3JzLCB7CgkJCWNsaWNrOiBmdW5jdGlvbiggZXZlbnQgKSB7CgkJCQlldmVudC5wcmV2ZW50RGVmYXVsdCgpOwoJCQl9CgkJfSApOwoJCXRoaXMuX29uKCB0aGlzLmFuY2hvcnMsIGV2ZW50cyApOwoJCXRoaXMuX29uKCB0aGlzLnRhYnMsIHsga2V5ZG93bjogIl90YWJLZXlkb3duIiB9ICk7CgkJdGhpcy5fb24oIHRoaXMucGFuZWxzLCB7IGtleWRvd246ICJfcGFuZWxLZXlkb3duIiB9ICk7CgoJCXRoaXMuX2ZvY3VzYWJsZSggdGhpcy50YWJzICk7CgkJdGhpcy5faG92ZXJhYmxlKCB0aGlzLnRhYnMgKTsKCX0sCgoJX3NldHVwSGVpZ2h0U3R5bGU6IGZ1bmN0aW9uKCBoZWlnaHRTdHlsZSApIHsKCQl2YXIgbWF4SGVpZ2h0LAoJCQlwYXJlbnQgPSB0aGlzLmVsZW1lbnQucGFyZW50KCk7CgoJCWlmICggaGVpZ2h0U3R5bGUgPT09ICJmaWxsIiApIHsKCQkJbWF4SGVpZ2h0ID0gcGFyZW50LmhlaWdodCgpOwoJCQltYXhIZWlnaHQgLT0gdGhpcy5lbGVtZW50Lm91dGVySGVpZ2h0KCkgLSB0aGlzLmVsZW1lbnQuaGVpZ2h0KCk7CgoJCQl0aGlzLmVsZW1lbnQuc2libGluZ3MoICI6dmlzaWJsZSIgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCXZhciBlbGVtID0gJCggdGhpcyApLAoJCQkJCXBvc2l0aW9uID0gZWxlbS5jc3MoICJwb3NpdGlvbiIgKTsKCgkJCQlpZiAoIHBvc2l0aW9uID09PSAiYWJzb2x1dGUiIHx8IHBvc2l0aW9uID09PSAiZml4ZWQiICkgewoJCQkJCXJldHVybjsKCQkJCX0KCQkJCW1heEhlaWdodCAtPSBlbGVtLm91dGVySGVpZ2h0KCB0cnVlICk7CgkJCX0gKTsKCgkJCXRoaXMuZWxlbWVudC5jaGlsZHJlbigpLm5vdCggdGhpcy5wYW5lbHMgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJCW1heEhlaWdodCAtPSAkKCB0aGlzICkub3V0ZXJIZWlnaHQoIHRydWUgKTsKCQkJfSApOwoKCQkJdGhpcy5wYW5lbHMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQkkKCB0aGlzICkuaGVpZ2h0KCBNYXRoLm1heCggMCwgbWF4SGVpZ2h0IC0KCQkJCQkkKCB0aGlzICkuaW5uZXJIZWlnaHQoKSArICQoIHRoaXMgKS5oZWlnaHQoKSApICk7CgkJCX0gKQoJCQkJLmNzcyggIm92ZXJmbG93IiwgImF1dG8iICk7CgkJfSBlbHNlIGlmICggaGVpZ2h0U3R5bGUgPT09ICJhdXRvIiApIHsKCQkJbWF4SGVpZ2h0ID0gMDsKCQkJdGhpcy5wYW5lbHMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQltYXhIZWlnaHQgPSBNYXRoLm1heCggbWF4SGVpZ2h0LCAkKCB0aGlzICkuaGVpZ2h0KCAiIiApLmhlaWdodCgpICk7CgkJCX0gKS5oZWlnaHQoIG1heEhlaWdodCApOwoJCX0KCX0sCgoJX2V2ZW50SGFuZGxlcjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciBvcHRpb25zID0gdGhpcy5vcHRpb25zLAoJCQlhY3RpdmUgPSB0aGlzLmFjdGl2ZSwKCQkJYW5jaG9yID0gJCggZXZlbnQuY3VycmVudFRhcmdldCApLAoJCQl0YWIgPSBhbmNob3IuY2xvc2VzdCggImxpIiApLAoJCQljbGlja2VkSXNBY3RpdmUgPSB0YWJbIDAgXSA9PT0gYWN0aXZlWyAwIF0sCgkJCWNvbGxhcHNpbmcgPSBjbGlja2VkSXNBY3RpdmUgJiYgb3B0aW9ucy5jb2xsYXBzaWJsZSwKCQkJdG9TaG93ID0gY29sbGFwc2luZyA/ICQoKSA6IHRoaXMuX2dldFBhbmVsRm9yVGFiKCB0YWIgKSwKCQkJdG9IaWRlID0gIWFjdGl2ZS5sZW5ndGggPyAkKCkgOiB0aGlzLl9nZXRQYW5lbEZvclRhYiggYWN0aXZlICksCgkJCWV2ZW50RGF0YSA9IHsKCQkJCW9sZFRhYjogYWN0aXZlLAoJCQkJb2xkUGFuZWw6IHRvSGlkZSwKCQkJCW5ld1RhYjogY29sbGFwc2luZyA/ICQoKSA6IHRhYiwKCQkJCW5ld1BhbmVsOiB0b1Nob3cKCQkJfTsKCgkJZXZlbnQucHJldmVudERlZmF1bHQoKTsKCgkJaWYgKCB0YWIuaGFzQ2xhc3MoICJ1aS1zdGF0ZS1kaXNhYmxlZCIgKSB8fAoKCQkJCS8vIHRhYiBpcyBhbHJlYWR5IGxvYWRpbmcKCQkJCXRhYi5oYXNDbGFzcyggInVpLXRhYnMtbG9hZGluZyIgKSB8fAoKCQkJCS8vIGNhbid0IHN3aXRjaCBkdXJuaW5nIGFuIGFuaW1hdGlvbgoJCQkJdGhpcy5ydW5uaW5nIHx8CgoJCQkJLy8gY2xpY2sgb24gYWN0aXZlIGhlYWRlciwgYnV0IG5vdCBjb2xsYXBzaWJsZQoJCQkJKCBjbGlja2VkSXNBY3RpdmUgJiYgIW9wdGlvbnMuY29sbGFwc2libGUgKSB8fAoKCQkJCS8vIGFsbG93IGNhbmNlbGluZyBhY3RpdmF0aW9uCgkJCQkoIHRoaXMuX3RyaWdnZXIoICJiZWZvcmVBY3RpdmF0ZSIsIGV2ZW50LCBldmVudERhdGEgKSA9PT0gZmFsc2UgKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJb3B0aW9ucy5hY3RpdmUgPSBjb2xsYXBzaW5nID8gZmFsc2UgOiB0aGlzLnRhYnMuaW5kZXgoIHRhYiApOwoKCQl0aGlzLmFjdGl2ZSA9IGNsaWNrZWRJc0FjdGl2ZSA/ICQoKSA6IHRhYjsKCQlpZiAoIHRoaXMueGhyICkgewoJCQl0aGlzLnhoci5hYm9ydCgpOwoJCX0KCgkJaWYgKCAhdG9IaWRlLmxlbmd0aCAmJiAhdG9TaG93Lmxlbmd0aCApIHsKCQkJJC5lcnJvciggImpRdWVyeSBVSSBUYWJzOiBNaXNtYXRjaGluZyBmcmFnbWVudCBpZGVudGlmaWVyLiIgKTsKCQl9CgoJCWlmICggdG9TaG93Lmxlbmd0aCApIHsKCQkJdGhpcy5sb2FkKCB0aGlzLnRhYnMuaW5kZXgoIHRhYiApLCBldmVudCApOwoJCX0KCQl0aGlzLl90b2dnbGUoIGV2ZW50LCBldmVudERhdGEgKTsKCX0sCgoJLy8gSGFuZGxlcyBzaG93L2hpZGUgZm9yIHNlbGVjdGluZyB0YWJzCglfdG9nZ2xlOiBmdW5jdGlvbiggZXZlbnQsIGV2ZW50RGF0YSApIHsKCQl2YXIgdGhhdCA9IHRoaXMsCgkJCXRvU2hvdyA9IGV2ZW50RGF0YS5uZXdQYW5lbCwKCQkJdG9IaWRlID0gZXZlbnREYXRhLm9sZFBhbmVsOwoKCQl0aGlzLnJ1bm5pbmcgPSB0cnVlOwoKCQlmdW5jdGlvbiBjb21wbGV0ZSgpIHsKCQkJdGhhdC5ydW5uaW5nID0gZmFsc2U7CgkJCXRoYXQuX3RyaWdnZXIoICJhY3RpdmF0ZSIsIGV2ZW50LCBldmVudERhdGEgKTsKCQl9CgoJCWZ1bmN0aW9uIHNob3coKSB7CgkJCXRoYXQuX2FkZENsYXNzKCBldmVudERhdGEubmV3VGFiLmNsb3Nlc3QoICJsaSIgKSwgInVpLXRhYnMtYWN0aXZlIiwgInVpLXN0YXRlLWFjdGl2ZSIgKTsKCgkJCWlmICggdG9TaG93Lmxlbmd0aCAmJiB0aGF0Lm9wdGlvbnMuc2hvdyApIHsKCQkJCXRoYXQuX3Nob3coIHRvU2hvdywgdGhhdC5vcHRpb25zLnNob3csIGNvbXBsZXRlICk7CgkJCX0gZWxzZSB7CgkJCQl0b1Nob3cuc2hvdygpOwoJCQkJY29tcGxldGUoKTsKCQkJfQoJCX0KCgkJLy8gU3RhcnQgb3V0IGJ5IGhpZGluZywgdGhlbiBzaG93aW5nLCB0aGVuIGNvbXBsZXRpbmcKCQlpZiAoIHRvSGlkZS5sZW5ndGggJiYgdGhpcy5vcHRpb25zLmhpZGUgKSB7CgkJCXRoaXMuX2hpZGUoIHRvSGlkZSwgdGhpcy5vcHRpb25zLmhpZGUsIGZ1bmN0aW9uKCkgewoJCQkJdGhhdC5fcmVtb3ZlQ2xhc3MoIGV2ZW50RGF0YS5vbGRUYWIuY2xvc2VzdCggImxpIiApLAoJCQkJCSJ1aS10YWJzLWFjdGl2ZSIsICJ1aS1zdGF0ZS1hY3RpdmUiICk7CgkJCQlzaG93KCk7CgkJCX0gKTsKCQl9IGVsc2UgewoJCQl0aGlzLl9yZW1vdmVDbGFzcyggZXZlbnREYXRhLm9sZFRhYi5jbG9zZXN0KCAibGkiICksCgkJCQkidWktdGFicy1hY3RpdmUiLCAidWktc3RhdGUtYWN0aXZlIiApOwoJCQl0b0hpZGUuaGlkZSgpOwoJCQlzaG93KCk7CgkJfQoKCQl0b0hpZGUuYXR0ciggImFyaWEtaGlkZGVuIiwgInRydWUiICk7CgkJZXZlbnREYXRhLm9sZFRhYi5hdHRyKCB7CgkJCSJhcmlhLXNlbGVjdGVkIjogImZhbHNlIiwKCQkJImFyaWEtZXhwYW5kZWQiOiAiZmFsc2UiCgkJfSApOwoKCQkvLyBJZiB3ZSdyZSBzd2l0Y2hpbmcgdGFicywgcmVtb3ZlIHRoZSBvbGQgdGFiIGZyb20gdGhlIHRhYiBvcmRlci4KCQkvLyBJZiB3ZSdyZSBvcGVuaW5nIGZyb20gY29sbGFwc2VkIHN0YXRlLCByZW1vdmUgdGhlIHByZXZpb3VzIHRhYiBmcm9tIHRoZSB0YWIgb3JkZXIuCgkJLy8gSWYgd2UncmUgY29sbGFwc2luZywgdGhlbiBrZWVwIHRoZSBjb2xsYXBzaW5nIHRhYiBpbiB0aGUgdGFiIG9yZGVyLgoJCWlmICggdG9TaG93Lmxlbmd0aCAmJiB0b0hpZGUubGVuZ3RoICkgewoJCQlldmVudERhdGEub2xkVGFiLmF0dHIoICJ0YWJJbmRleCIsIC0xICk7CgkJfSBlbHNlIGlmICggdG9TaG93Lmxlbmd0aCApIHsKCQkJdGhpcy50YWJzLmZpbHRlciggZnVuY3Rpb24oKSB7CgkJCQlyZXR1cm4gJCggdGhpcyApLmF0dHIoICJ0YWJJbmRleCIgKSA9PT0gMDsKCQkJfSApCgkJCQkuYXR0ciggInRhYkluZGV4IiwgLTEgKTsKCQl9CgoJCXRvU2hvdy5hdHRyKCAiYXJpYS1oaWRkZW4iLCAiZmFsc2UiICk7CgkJZXZlbnREYXRhLm5ld1RhYi5hdHRyKCB7CgkJCSJhcmlhLXNlbGVjdGVkIjogInRydWUiLAoJCQkiYXJpYS1leHBhbmRlZCI6ICJ0cnVlIiwKCQkJdGFiSW5kZXg6IDAKCQl9ICk7Cgl9LAoKCV9hY3RpdmF0ZTogZnVuY3Rpb24oIGluZGV4ICkgewoJCXZhciBhbmNob3IsCgkJCWFjdGl2ZSA9IHRoaXMuX2ZpbmRBY3RpdmUoIGluZGV4ICk7CgoJCS8vIFRyeWluZyB0byBhY3RpdmF0ZSB0aGUgYWxyZWFkeSBhY3RpdmUgcGFuZWwKCQlpZiAoIGFjdGl2ZVsgMCBdID09PSB0aGlzLmFjdGl2ZVsgMCBdICkgewoJCQlyZXR1cm47CgkJfQoKCQkvLyBUcnlpbmcgdG8gY29sbGFwc2UsIHNpbXVsYXRlIGEgY2xpY2sgb24gdGhlIGN1cnJlbnQgYWN0aXZlIGhlYWRlcgoJCWlmICggIWFjdGl2ZS5sZW5ndGggKSB7CgkJCWFjdGl2ZSA9IHRoaXMuYWN0aXZlOwoJCX0KCgkJYW5jaG9yID0gYWN0aXZlLmZpbmQoICIudWktdGFicy1hbmNob3IiIClbIDAgXTsKCQl0aGlzLl9ldmVudEhhbmRsZXIoIHsKCQkJdGFyZ2V0OiBhbmNob3IsCgkJCWN1cnJlbnRUYXJnZXQ6IGFuY2hvciwKCQkJcHJldmVudERlZmF1bHQ6ICQubm9vcAoJCX0gKTsKCX0sCgoJX2ZpbmRBY3RpdmU6IGZ1bmN0aW9uKCBpbmRleCApIHsKCQlyZXR1cm4gaW5kZXggPT09IGZhbHNlID8gJCgpIDogdGhpcy50YWJzLmVxKCBpbmRleCApOwoJfSwKCglfZ2V0SW5kZXg6IGZ1bmN0aW9uKCBpbmRleCApIHsKCgkJLy8gbWV0YS1mdW5jdGlvbiB0byBnaXZlIHVzZXJzIG9wdGlvbiB0byBwcm92aWRlIGEgaHJlZiBzdHJpbmcgaW5zdGVhZCBvZiBhIG51bWVyaWNhbCBpbmRleC4KCQlpZiAoIHR5cGVvZiBpbmRleCA9PT0gInN0cmluZyIgKSB7CgkJCWluZGV4ID0gdGhpcy5hbmNob3JzLmluZGV4KCB0aGlzLmFuY2hvcnMuZmlsdGVyKCAiW2hyZWYkPSciICsKCQkJCSQudWkuZXNjYXBlU2VsZWN0b3IoIGluZGV4ICkgKyAiJ10iICkgKTsKCQl9CgoJCXJldHVybiBpbmRleDsKCX0sCgoJX2Rlc3Ryb3k6IGZ1bmN0aW9uKCkgewoJCWlmICggdGhpcy54aHIgKSB7CgkJCXRoaXMueGhyLmFib3J0KCk7CgkJfQoKCQl0aGlzLnRhYmxpc3QKCQkJLnJlbW92ZUF0dHIoICJyb2xlIiApCgkJCS5vZmYoIHRoaXMuZXZlbnROYW1lc3BhY2UgKTsKCgkJdGhpcy5hbmNob3JzCgkJCS5yZW1vdmVBdHRyKCAicm9sZSB0YWJJbmRleCIgKQoJCQkucmVtb3ZlVW5pcXVlSWQoKTsKCgkJdGhpcy50YWJzLmFkZCggdGhpcy5wYW5lbHMgKS5lYWNoKCBmdW5jdGlvbigpIHsKCQkJaWYgKCAkLmRhdGEoIHRoaXMsICJ1aS10YWJzLWRlc3Ryb3kiICkgKSB7CgkJCQkkKCB0aGlzICkucmVtb3ZlKCk7CgkJCX0gZWxzZSB7CgkJCQkkKCB0aGlzICkucmVtb3ZlQXR0ciggInJvbGUgdGFiSW5kZXggIiArCgkJCQkJImFyaWEtbGl2ZSBhcmlhLWJ1c3kgYXJpYS1zZWxlY3RlZCBhcmlhLWxhYmVsbGVkYnkgYXJpYS1oaWRkZW4gYXJpYS1leHBhbmRlZCIgKTsKCQkJfQoJCX0gKTsKCgkJdGhpcy50YWJzLmVhY2goIGZ1bmN0aW9uKCkgewoJCQl2YXIgbGkgPSAkKCB0aGlzICksCgkJCQlwcmV2ID0gbGkuZGF0YSggInVpLXRhYnMtYXJpYS1jb250cm9scyIgKTsKCQkJaWYgKCBwcmV2ICkgewoJCQkJbGkKCQkJCQkuYXR0ciggImFyaWEtY29udHJvbHMiLCBwcmV2ICkKCQkJCQkucmVtb3ZlRGF0YSggInVpLXRhYnMtYXJpYS1jb250cm9scyIgKTsKCQkJfSBlbHNlIHsKCQkJCWxpLnJlbW92ZUF0dHIoICJhcmlhLWNvbnRyb2xzIiApOwoJCQl9CgkJfSApOwoKCQl0aGlzLnBhbmVscy5zaG93KCk7CgoJCWlmICggdGhpcy5vcHRpb25zLmhlaWdodFN0eWxlICE9PSAiY29udGVudCIgKSB7CgkJCXRoaXMucGFuZWxzLmNzcyggImhlaWdodCIsICIiICk7CgkJfQoJfSwKCgllbmFibGU6IGZ1bmN0aW9uKCBpbmRleCApIHsKCQl2YXIgZGlzYWJsZWQgPSB0aGlzLm9wdGlvbnMuZGlzYWJsZWQ7CgkJaWYgKCBkaXNhYmxlZCA9PT0gZmFsc2UgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggaW5kZXggPT09IHVuZGVmaW5lZCApIHsKCQkJZGlzYWJsZWQgPSBmYWxzZTsKCQl9IGVsc2UgewoJCQlpbmRleCA9IHRoaXMuX2dldEluZGV4KCBpbmRleCApOwoJCQlpZiAoICQuaXNBcnJheSggZGlzYWJsZWQgKSApIHsKCQkJCWRpc2FibGVkID0gJC5tYXAoIGRpc2FibGVkLCBmdW5jdGlvbiggbnVtICkgewoJCQkJCXJldHVybiBudW0gIT09IGluZGV4ID8gbnVtIDogbnVsbDsKCQkJCX0gKTsKCQkJfSBlbHNlIHsKCQkJCWRpc2FibGVkID0gJC5tYXAoIHRoaXMudGFicywgZnVuY3Rpb24oIGxpLCBudW0gKSB7CgkJCQkJcmV0dXJuIG51bSAhPT0gaW5kZXggPyBudW0gOiBudWxsOwoJCQkJfSApOwoJCQl9CgkJfQoJCXRoaXMuX3NldE9wdGlvbkRpc2FibGVkKCBkaXNhYmxlZCApOwoJfSwKCglkaXNhYmxlOiBmdW5jdGlvbiggaW5kZXggKSB7CgkJdmFyIGRpc2FibGVkID0gdGhpcy5vcHRpb25zLmRpc2FibGVkOwoJCWlmICggZGlzYWJsZWQgPT09IHRydWUgKSB7CgkJCXJldHVybjsKCQl9CgoJCWlmICggaW5kZXggPT09IHVuZGVmaW5lZCApIHsKCQkJZGlzYWJsZWQgPSB0cnVlOwoJCX0gZWxzZSB7CgkJCWluZGV4ID0gdGhpcy5fZ2V0SW5kZXgoIGluZGV4ICk7CgkJCWlmICggJC5pbkFycmF5KCBpbmRleCwgZGlzYWJsZWQgKSAhPT0gLTEgKSB7CgkJCQlyZXR1cm47CgkJCX0KCQkJaWYgKCAkLmlzQXJyYXkoIGRpc2FibGVkICkgKSB7CgkJCQlkaXNhYmxlZCA9ICQubWVyZ2UoIFsgaW5kZXggXSwgZGlzYWJsZWQgKS5zb3J0KCk7CgkJCX0gZWxzZSB7CgkJCQlkaXNhYmxlZCA9IFsgaW5kZXggXTsKCQkJfQoJCX0KCQl0aGlzLl9zZXRPcHRpb25EaXNhYmxlZCggZGlzYWJsZWQgKTsKCX0sCgoJbG9hZDogZnVuY3Rpb24oIGluZGV4LCBldmVudCApIHsKCQlpbmRleCA9IHRoaXMuX2dldEluZGV4KCBpbmRleCApOwoJCXZhciB0aGF0ID0gdGhpcywKCQkJdGFiID0gdGhpcy50YWJzLmVxKCBpbmRleCApLAoJCQlhbmNob3IgPSB0YWIuZmluZCggIi51aS10YWJzLWFuY2hvciIgKSwKCQkJcGFuZWwgPSB0aGlzLl9nZXRQYW5lbEZvclRhYiggdGFiICksCgkJCWV2ZW50RGF0YSA9IHsKCQkJCXRhYjogdGFiLAoJCQkJcGFuZWw6IHBhbmVsCgkJCX0sCgkJCWNvbXBsZXRlID0gZnVuY3Rpb24oIGpxWEhSLCBzdGF0dXMgKSB7CgkJCQlpZiAoIHN0YXR1cyA9PT0gImFib3J0IiApIHsKCQkJCQl0aGF0LnBhbmVscy5zdG9wKCBmYWxzZSwgdHJ1ZSApOwoJCQkJfQoKCQkJCXRoYXQuX3JlbW92ZUNsYXNzKCB0YWIsICJ1aS10YWJzLWxvYWRpbmciICk7CgkJCQlwYW5lbC5yZW1vdmVBdHRyKCAiYXJpYS1idXN5IiApOwoKCQkJCWlmICgganFYSFIgPT09IHRoYXQueGhyICkgewoJCQkJCWRlbGV0ZSB0aGF0LnhocjsKCQkJCX0KCQkJfTsKCgkJLy8gTm90IHJlbW90ZQoJCWlmICggdGhpcy5faXNMb2NhbCggYW5jaG9yWyAwIF0gKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJdGhpcy54aHIgPSAkLmFqYXgoIHRoaXMuX2FqYXhTZXR0aW5ncyggYW5jaG9yLCBldmVudCwgZXZlbnREYXRhICkgKTsKCgkJLy8gU3VwcG9ydDogalF1ZXJ5IDwxLjgKCQkvLyBqUXVlcnkgPDEuOCByZXR1cm5zIGZhbHNlIGlmIHRoZSByZXF1ZXN0IGlzIGNhbmNlbGVkIGluIGJlZm9yZVNlbmQsCgkJLy8gYnV0IGFzIG9mIDEuOCwgJC5hamF4KCkgYWx3YXlzIHJldHVybnMgYSBqcVhIUiBvYmplY3QuCgkJaWYgKCB0aGlzLnhociAmJiB0aGlzLnhoci5zdGF0dXNUZXh0ICE9PSAiY2FuY2VsZWQiICkgewoJCQl0aGlzLl9hZGRDbGFzcyggdGFiLCAidWktdGFicy1sb2FkaW5nIiApOwoJCQlwYW5lbC5hdHRyKCAiYXJpYS1idXN5IiwgInRydWUiICk7CgoJCQl0aGlzLnhocgoJCQkJLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZSwgc3RhdHVzLCBqcVhIUiApIHsKCgkJCQkJLy8gc3VwcG9ydDogalF1ZXJ5IDwxLjgKCQkJCQkvLyBodHRwOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMTc3OAoJCQkJCXNldFRpbWVvdXQoIGZ1bmN0aW9uKCkgewoJCQkJCQlwYW5lbC5odG1sKCByZXNwb25zZSApOwoJCQkJCQl0aGF0Ll90cmlnZ2VyKCAibG9hZCIsIGV2ZW50LCBldmVudERhdGEgKTsKCgkJCQkJCWNvbXBsZXRlKCBqcVhIUiwgc3RhdHVzICk7CgkJCQkJfSwgMSApOwoJCQkJfSApCgkJCQkuZmFpbCggZnVuY3Rpb24oIGpxWEhSLCBzdGF0dXMgKSB7CgoJCQkJCS8vIHN1cHBvcnQ6IGpRdWVyeSA8MS44CgkJCQkJLy8gaHR0cDovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTE3NzgKCQkJCQlzZXRUaW1lb3V0KCBmdW5jdGlvbigpIHsKCQkJCQkJY29tcGxldGUoIGpxWEhSLCBzdGF0dXMgKTsKCQkJCQl9LCAxICk7CgkJCQl9ICk7CgkJfQoJfSwKCglfYWpheFNldHRpbmdzOiBmdW5jdGlvbiggYW5jaG9yLCBldmVudCwgZXZlbnREYXRhICkgewoJCXZhciB0aGF0ID0gdGhpczsKCQlyZXR1cm4gewoKCQkJLy8gU3VwcG9ydDogSUUgPDExIG9ubHkKCQkJLy8gU3RyaXAgYW55IGhhc2ggdGhhdCBleGlzdHMgdG8gcHJldmVudCBlcnJvcnMgd2l0aCB0aGUgQWpheCByZXF1ZXN0CgkJCXVybDogYW5jaG9yLmF0dHIoICJocmVmIiApLnJlcGxhY2UoIC8jLiokLywgIiIgKSwKCQkJYmVmb3JlU2VuZDogZnVuY3Rpb24oIGpxWEhSLCBzZXR0aW5ncyApIHsKCQkJCXJldHVybiB0aGF0Ll90cmlnZ2VyKCAiYmVmb3JlTG9hZCIsIGV2ZW50LAoJCQkJCSQuZXh0ZW5kKCB7IGpxWEhSOiBqcVhIUiwgYWpheFNldHRpbmdzOiBzZXR0aW5ncyB9LCBldmVudERhdGEgKSApOwoJCQl9CgkJfTsKCX0sCgoJX2dldFBhbmVsRm9yVGFiOiBmdW5jdGlvbiggdGFiICkgewoJCXZhciBpZCA9ICQoIHRhYiApLmF0dHIoICJhcmlhLWNvbnRyb2xzIiApOwoJCXJldHVybiB0aGlzLmVsZW1lbnQuZmluZCggdGhpcy5fc2FuaXRpemVTZWxlY3RvciggIiMiICsgaWQgKSApOwoJfQp9ICk7CgovLyBERVBSRUNBVEVECi8vIFRPRE86IFN3aXRjaCByZXR1cm4gYmFjayB0byB3aWRnZXQgZGVjbGFyYXRpb24gYXQgdG9wIG9mIGZpbGUgd2hlbiB0aGlzIGlzIHJlbW92ZWQKaWYgKCAkLnVpQmFja0NvbXBhdCAhPT0gZmFsc2UgKSB7CgoJLy8gQmFja2NvbXBhdCBmb3IgdWktdGFiIGNsYXNzIChub3cgdWktdGFicy10YWIpCgkkLndpZGdldCggInVpLnRhYnMiLCAkLnVpLnRhYnMsIHsKCQlfcHJvY2Vzc1RhYnM6IGZ1bmN0aW9uKCkgewoJCQl0aGlzLl9zdXBlckFwcGx5KCBhcmd1bWVudHMgKTsKCQkJdGhpcy5fYWRkQ2xhc3MoIHRoaXMudGFicywgInVpLXRhYiIgKTsKCQl9Cgl9ICk7Cn0KCnZhciB3aWRnZXRzVGFicyA9ICQudWkudGFiczsKCgovKiEKICogalF1ZXJ5IFVJIFRvb2x0aXAgMS4xMi4xCiAqIGh0dHA6Ly9qcXVlcnl1aS5jb20KICoKICogQ29weXJpZ2h0IGpRdWVyeSBGb3VuZGF0aW9uIGFuZCBvdGhlciBjb250cmlidXRvcnMKICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlLgogKiBodHRwOi8vanF1ZXJ5Lm9yZy9saWNlbnNlCiAqLwoKLy8+PmxhYmVsOiBUb29sdGlwCi8vPj5ncm91cDogV2lkZ2V0cwovLz4+ZGVzY3JpcHRpb246IFNob3dzIGFkZGl0aW9uYWwgaW5mb3JtYXRpb24gZm9yIGFueSBlbGVtZW50IG9uIGhvdmVyIG9yIGZvY3VzLgovLz4+ZG9jczogaHR0cDovL2FwaS5qcXVlcnl1aS5jb20vdG9vbHRpcC8KLy8+PmRlbW9zOiBodHRwOi8vanF1ZXJ5dWkuY29tL3Rvb2x0aXAvCi8vPj5jc3Muc3RydWN0dXJlOiAuLi8uLi90aGVtZXMvYmFzZS9jb3JlLmNzcwovLz4+Y3NzLnN0cnVjdHVyZTogLi4vLi4vdGhlbWVzL2Jhc2UvdG9vbHRpcC5jc3MKLy8+PmNzcy50aGVtZTogLi4vLi4vdGhlbWVzL2Jhc2UvdGhlbWUuY3NzCgoKCiQud2lkZ2V0KCAidWkudG9vbHRpcCIsIHsKCXZlcnNpb246ICIxLjEyLjEiLAoJb3B0aW9uczogewoJCWNsYXNzZXM6IHsKCQkJInVpLXRvb2x0aXAiOiAidWktY29ybmVyLWFsbCB1aS13aWRnZXQtc2hhZG93IgoJCX0sCgkJY29udGVudDogZnVuY3Rpb24oKSB7CgoJCQkvLyBzdXBwb3J0OiBJRTw5LCBPcGVyYSBpbiBqUXVlcnkgPDEuNwoJCQkvLyAudGV4dCgpIGNhbid0IGFjY2VwdCB1bmRlZmluZWQsIHNvIGNvZXJjZSB0byBhIHN0cmluZwoJCQl2YXIgdGl0bGUgPSAkKCB0aGlzICkuYXR0ciggInRpdGxlIiApIHx8ICIiOwoKCQkJLy8gRXNjYXBlIHRpdGxlLCBzaW5jZSB3ZSdyZSBnb2luZyBmcm9tIGFuIGF0dHJpYnV0ZSB0byByYXcgSFRNTAoJCQlyZXR1cm4gJCggIjxhPiIgKS50ZXh0KCB0aXRsZSApLmh0bWwoKTsKCQl9LAoJCWhpZGU6IHRydWUsCgoJCS8vIERpc2FibGVkIGVsZW1lbnRzIGhhdmUgaW5jb25zaXN0ZW50IGJlaGF2aW9yIGFjcm9zcyBicm93c2VycyAoIzg2NjEpCgkJaXRlbXM6ICJbdGl0bGVdOm5vdChbZGlzYWJsZWRdKSIsCgkJcG9zaXRpb246IHsKCQkJbXk6ICJsZWZ0IHRvcCsxNSIsCgkJCWF0OiAibGVmdCBib3R0b20iLAoJCQljb2xsaXNpb246ICJmbGlwZml0IGZsaXAiCgkJfSwKCQlzaG93OiB0cnVlLAoJCXRyYWNrOiBmYWxzZSwKCgkJLy8gQ2FsbGJhY2tzCgkJY2xvc2U6IG51bGwsCgkJb3BlbjogbnVsbAoJfSwKCglfYWRkRGVzY3JpYmVkQnk6IGZ1bmN0aW9uKCBlbGVtLCBpZCApIHsKCQl2YXIgZGVzY3JpYmVkYnkgPSAoIGVsZW0uYXR0ciggImFyaWEtZGVzY3JpYmVkYnkiICkgfHwgIiIgKS5zcGxpdCggL1xzKy8gKTsKCQlkZXNjcmliZWRieS5wdXNoKCBpZCApOwoJCWVsZW0KCQkJLmRhdGEoICJ1aS10b29sdGlwLWlkIiwgaWQgKQoJCQkuYXR0ciggImFyaWEtZGVzY3JpYmVkYnkiLCAkLnRyaW0oIGRlc2NyaWJlZGJ5LmpvaW4oICIgIiApICkgKTsKCX0sCgoJX3JlbW92ZURlc2NyaWJlZEJ5OiBmdW5jdGlvbiggZWxlbSApIHsKCQl2YXIgaWQgPSBlbGVtLmRhdGEoICJ1aS10b29sdGlwLWlkIiApLAoJCQlkZXNjcmliZWRieSA9ICggZWxlbS5hdHRyKCAiYXJpYS1kZXNjcmliZWRieSIgKSB8fCAiIiApLnNwbGl0KCAvXHMrLyApLAoJCQlpbmRleCA9ICQuaW5BcnJheSggaWQsIGRlc2NyaWJlZGJ5ICk7CgoJCWlmICggaW5kZXggIT09IC0xICkgewoJCQlkZXNjcmliZWRieS5zcGxpY2UoIGluZGV4LCAxICk7CgkJfQoKCQllbGVtLnJlbW92ZURhdGEoICJ1aS10b29sdGlwLWlkIiApOwoJCWRlc2NyaWJlZGJ5ID0gJC50cmltKCBkZXNjcmliZWRieS5qb2luKCAiICIgKSApOwoJCWlmICggZGVzY3JpYmVkYnkgKSB7CgkJCWVsZW0uYXR0ciggImFyaWEtZGVzY3JpYmVkYnkiLCBkZXNjcmliZWRieSApOwoJCX0gZWxzZSB7CgkJCWVsZW0ucmVtb3ZlQXR0ciggImFyaWEtZGVzY3JpYmVkYnkiICk7CgkJfQoJfSwKCglfY3JlYXRlOiBmdW5jdGlvbigpIHsKCQl0aGlzLl9vbiggewoJCQltb3VzZW92ZXI6ICJvcGVuIiwKCQkJZm9jdXNpbjogIm9wZW4iCgkJfSApOwoKCQkvLyBJRHMgb2YgZ2VuZXJhdGVkIHRvb2x0aXBzLCBuZWVkZWQgZm9yIGRlc3Ryb3kKCQl0aGlzLnRvb2x0aXBzID0ge307CgoJCS8vIElEcyBvZiBwYXJlbnQgdG9vbHRpcHMgd2hlcmUgd2UgcmVtb3ZlZCB0aGUgdGl0bGUgYXR0cmlidXRlCgkJdGhpcy5wYXJlbnRzID0ge307CgoJCS8vIEFwcGVuZCB0aGUgYXJpYS1saXZlIHJlZ2lvbiBzbyB0b29sdGlwcyBhbm5vdW5jZSBjb3JyZWN0bHkKCQl0aGlzLmxpdmVSZWdpb24gPSAkKCAiPGRpdj4iICkKCQkJLmF0dHIoIHsKCQkJCXJvbGU6ICJsb2ciLAoJCQkJImFyaWEtbGl2ZSI6ICJhc3NlcnRpdmUiLAoJCQkJImFyaWEtcmVsZXZhbnQiOiAiYWRkaXRpb25zIgoJCQl9ICkKCQkJLmFwcGVuZFRvKCB0aGlzLmRvY3VtZW50WyAwIF0uYm9keSApOwoJCXRoaXMuX2FkZENsYXNzKCB0aGlzLmxpdmVSZWdpb24sIG51bGwsICJ1aS1oZWxwZXItaGlkZGVuLWFjY2Vzc2libGUiICk7CgoJCXRoaXMuZGlzYWJsZWRUaXRsZXMgPSAkKCBbXSApOwoJfSwKCglfc2V0T3B0aW9uOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHsKCQl2YXIgdGhhdCA9IHRoaXM7CgoJCXRoaXMuX3N1cGVyKCBrZXksIHZhbHVlICk7CgoJCWlmICgga2V5ID09PSAiY29udGVudCIgKSB7CgkJCSQuZWFjaCggdGhpcy50b29sdGlwcywgZnVuY3Rpb24oIGlkLCB0b29sdGlwRGF0YSApIHsKCQkJCXRoYXQuX3VwZGF0ZUNvbnRlbnQoIHRvb2x0aXBEYXRhLmVsZW1lbnQgKTsKCQkJfSApOwoJCX0KCX0sCgoJX3NldE9wdGlvbkRpc2FibGVkOiBmdW5jdGlvbiggdmFsdWUgKSB7CgkJdGhpc1sgdmFsdWUgPyAiX2Rpc2FibGUiIDogIl9lbmFibGUiIF0oKTsKCX0sCgoJX2Rpc2FibGU6IGZ1bmN0aW9uKCkgewoJCXZhciB0aGF0ID0gdGhpczsKCgkJLy8gQ2xvc2Ugb3BlbiB0b29sdGlwcwoJCSQuZWFjaCggdGhpcy50b29sdGlwcywgZnVuY3Rpb24oIGlkLCB0b29sdGlwRGF0YSApIHsKCQkJdmFyIGV2ZW50ID0gJC5FdmVudCggImJsdXIiICk7CgkJCWV2ZW50LnRhcmdldCA9IGV2ZW50LmN1cnJlbnRUYXJnZXQgPSB0b29sdGlwRGF0YS5lbGVtZW50WyAwIF07CgkJCXRoYXQuY2xvc2UoIGV2ZW50LCB0cnVlICk7CgkJfSApOwoKCQkvLyBSZW1vdmUgdGl0bGUgYXR0cmlidXRlcyB0byBwcmV2ZW50IG5hdGl2ZSB0b29sdGlwcwoJCXRoaXMuZGlzYWJsZWRUaXRsZXMgPSB0aGlzLmRpc2FibGVkVGl0bGVzLmFkZCgKCQkJdGhpcy5lbGVtZW50LmZpbmQoIHRoaXMub3B0aW9ucy5pdGVtcyApLmFkZEJhY2soKQoJCQkJLmZpbHRlciggZnVuY3Rpb24oKSB7CgkJCQkJdmFyIGVsZW1lbnQgPSAkKCB0aGlzICk7CgkJCQkJaWYgKCBlbGVtZW50LmlzKCAiW3RpdGxlXSIgKSApIHsKCQkJCQkJcmV0dXJuIGVsZW1lbnQKCQkJCQkJCS5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIsIGVsZW1lbnQuYXR0ciggInRpdGxlIiApICkKCQkJCQkJCS5yZW1vdmVBdHRyKCAidGl0bGUiICk7CgkJCQkJfQoJCQkJfSApCgkJKTsKCX0sCgoJX2VuYWJsZTogZnVuY3Rpb24oKSB7CgoJCS8vIHJlc3RvcmUgdGl0bGUgYXR0cmlidXRlcwoJCXRoaXMuZGlzYWJsZWRUaXRsZXMuZWFjaCggZnVuY3Rpb24oKSB7CgkJCXZhciBlbGVtZW50ID0gJCggdGhpcyApOwoJCQlpZiAoIGVsZW1lbnQuZGF0YSggInVpLXRvb2x0aXAtdGl0bGUiICkgKSB7CgkJCQllbGVtZW50LmF0dHIoICJ0aXRsZSIsIGVsZW1lbnQuZGF0YSggInVpLXRvb2x0aXAtdGl0bGUiICkgKTsKCQkJfQoJCX0gKTsKCQl0aGlzLmRpc2FibGVkVGl0bGVzID0gJCggW10gKTsKCX0sCgoJb3BlbjogZnVuY3Rpb24oIGV2ZW50ICkgewoJCXZhciB0aGF0ID0gdGhpcywKCQkJdGFyZ2V0ID0gJCggZXZlbnQgPyBldmVudC50YXJnZXQgOiB0aGlzLmVsZW1lbnQgKQoKCQkJCS8vIHdlIG5lZWQgY2xvc2VzdCBoZXJlIGR1ZSB0byBtb3VzZW92ZXIgYnViYmxpbmcsCgkJCQkvLyBidXQgYWx3YXlzIHBvaW50aW5nIGF0IHRoZSBzYW1lIGV2ZW50IHRhcmdldAoJCQkJLmNsb3Nlc3QoIHRoaXMub3B0aW9ucy5pdGVtcyApOwoKCQkvLyBObyBlbGVtZW50IHRvIHNob3cgYSB0b29sdGlwIGZvciBvciB0aGUgdG9vbHRpcCBpcyBhbHJlYWR5IG9wZW4KCQlpZiAoICF0YXJnZXQubGVuZ3RoIHx8IHRhcmdldC5kYXRhKCAidWktdG9vbHRpcC1pZCIgKSApIHsKCQkJcmV0dXJuOwoJCX0KCgkJaWYgKCB0YXJnZXQuYXR0ciggInRpdGxlIiApICkgewoJCQl0YXJnZXQuZGF0YSggInVpLXRvb2x0aXAtdGl0bGUiLCB0YXJnZXQuYXR0ciggInRpdGxlIiApICk7CgkJfQoKCQl0YXJnZXQuZGF0YSggInVpLXRvb2x0aXAtb3BlbiIsIHRydWUgKTsKCgkJLy8gS2lsbCBwYXJlbnQgdG9vbHRpcHMsIGN1c3RvbSBvciBuYXRpdmUsIGZvciBob3ZlcgoJCWlmICggZXZlbnQgJiYgZXZlbnQudHlwZSA9PT0gIm1vdXNlb3ZlciIgKSB7CgkJCXRhcmdldC5wYXJlbnRzKCkuZWFjaCggZnVuY3Rpb24oKSB7CgkJCQl2YXIgcGFyZW50ID0gJCggdGhpcyApLAoJCQkJCWJsdXJFdmVudDsKCQkJCWlmICggcGFyZW50LmRhdGEoICJ1aS10b29sdGlwLW9wZW4iICkgKSB7CgkJCQkJYmx1ckV2ZW50ID0gJC5FdmVudCggImJsdXIiICk7CgkJCQkJYmx1ckV2ZW50LnRhcmdldCA9IGJsdXJFdmVudC5jdXJyZW50VGFyZ2V0ID0gdGhpczsKCQkJCQl0aGF0LmNsb3NlKCBibHVyRXZlbnQsIHRydWUgKTsKCQkJCX0KCQkJCWlmICggcGFyZW50LmF0dHIoICJ0aXRsZSIgKSApIHsKCQkJCQlwYXJlbnQudW5pcXVlSWQoKTsKCQkJCQl0aGF0LnBhcmVudHNbIHRoaXMuaWQgXSA9IHsKCQkJCQkJZWxlbWVudDogdGhpcywKCQkJCQkJdGl0bGU6IHBhcmVudC5hdHRyKCAidGl0bGUiICkKCQkJCQl9OwoJCQkJCXBhcmVudC5hdHRyKCAidGl0bGUiLCAiIiApOwoJCQkJfQoJCQl9ICk7CgkJfQoKCQl0aGlzLl9yZWdpc3RlckNsb3NlSGFuZGxlcnMoIGV2ZW50LCB0YXJnZXQgKTsKCQl0aGlzLl91cGRhdGVDb250ZW50KCB0YXJnZXQsIGV2ZW50ICk7Cgl9LAoKCV91cGRhdGVDb250ZW50OiBmdW5jdGlvbiggdGFyZ2V0LCBldmVudCApIHsKCQl2YXIgY29udGVudCwKCQkJY29udGVudE9wdGlvbiA9IHRoaXMub3B0aW9ucy5jb250ZW50LAoJCQl0aGF0ID0gdGhpcywKCQkJZXZlbnRUeXBlID0gZXZlbnQgPyBldmVudC50eXBlIDogbnVsbDsKCgkJaWYgKCB0eXBlb2YgY29udGVudE9wdGlvbiA9PT0gInN0cmluZyIgfHwgY29udGVudE9wdGlvbi5ub2RlVHlwZSB8fAoJCQkJY29udGVudE9wdGlvbi5qcXVlcnkgKSB7CgkJCXJldHVybiB0aGlzLl9vcGVuKCBldmVudCwgdGFyZ2V0LCBjb250ZW50T3B0aW9uICk7CgkJfQoKCQljb250ZW50ID0gY29udGVudE9wdGlvbi5jYWxsKCB0YXJnZXRbIDAgXSwgZnVuY3Rpb24oIHJlc3BvbnNlICkgewoKCQkJLy8gSUUgbWF5IGluc3RhbnRseSBzZXJ2ZSBhIGNhY2hlZCByZXNwb25zZSBmb3IgYWpheCByZXF1ZXN0cwoJCQkvLyBkZWxheSB0aGlzIGNhbGwgdG8gX29wZW4gc28gdGhlIG90aGVyIGNhbGwgdG8gX29wZW4gcnVucyBmaXJzdAoJCQl0aGF0Ll9kZWxheSggZnVuY3Rpb24oKSB7CgoJCQkJLy8gSWdub3JlIGFzeW5jIHJlc3BvbnNlIGlmIHRvb2x0aXAgd2FzIGNsb3NlZCBhbHJlYWR5CgkJCQlpZiAoICF0YXJnZXQuZGF0YSggInVpLXRvb2x0aXAtb3BlbiIgKSApIHsKCQkJCQlyZXR1cm47CgkJCQl9CgoJCQkJLy8gSlF1ZXJ5IGNyZWF0ZXMgYSBzcGVjaWFsIGV2ZW50IGZvciBmb2N1c2luIHdoZW4gaXQgZG9lc24ndAoJCQkJLy8gZXhpc3QgbmF0aXZlbHkuIFRvIGltcHJvdmUgcGVyZm9ybWFuY2UsIHRoZSBuYXRpdmUgZXZlbnQKCQkJCS8vIG9iamVjdCBpcyByZXVzZWQgYW5kIHRoZSB0eXBlIGlzIGNoYW5nZWQuIFRoZXJlZm9yZSwgd2UgY2FuJ3QKCQkJCS8vIHJlbHkgb24gdGhlIHR5cGUgYmVpbmcgY29ycmVjdCBhZnRlciB0aGUgZXZlbnQgZmluaXNoZWQKCQkJCS8vIGJ1YmJsaW5nLCBzbyB3ZSBzZXQgaXQgYmFjayB0byB0aGUgcHJldmlvdXMgdmFsdWUuICgjODc0MCkKCQkJCWlmICggZXZlbnQgKSB7CgkJCQkJZXZlbnQudHlwZSA9IGV2ZW50VHlwZTsKCQkJCX0KCQkJCXRoaXMuX29wZW4oIGV2ZW50LCB0YXJnZXQsIHJlc3BvbnNlICk7CgkJCX0gKTsKCQl9ICk7CgkJaWYgKCBjb250ZW50ICkgewoJCQl0aGlzLl9vcGVuKCBldmVudCwgdGFyZ2V0LCBjb250ZW50ICk7CgkJfQoJfSwKCglfb3BlbjogZnVuY3Rpb24oIGV2ZW50LCB0YXJnZXQsIGNvbnRlbnQgKSB7CgkJdmFyIHRvb2x0aXBEYXRhLCB0b29sdGlwLCBkZWxheWVkU2hvdywgYTExeUNvbnRlbnQsCgkJCXBvc2l0aW9uT3B0aW9uID0gJC5leHRlbmQoIHt9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKTsKCgkJaWYgKCAhY29udGVudCApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gQ29udGVudCBjYW4gYmUgdXBkYXRlZCBtdWx0aXBsZSB0aW1lcy4gSWYgdGhlIHRvb2x0aXAgYWxyZWFkeQoJCS8vIGV4aXN0cywgdGhlbiBqdXN0IHVwZGF0ZSB0aGUgY29udGVudCBhbmQgYmFpbC4KCQl0b29sdGlwRGF0YSA9IHRoaXMuX2ZpbmQoIHRhcmdldCApOwoJCWlmICggdG9vbHRpcERhdGEgKSB7CgkJCXRvb2x0aXBEYXRhLnRvb2x0aXAuZmluZCggIi51aS10b29sdGlwLWNvbnRlbnQiICkuaHRtbCggY29udGVudCApOwoJCQlyZXR1cm47CgkJfQoKCQkvLyBJZiB3ZSBoYXZlIGEgdGl0bGUsIGNsZWFyIGl0IHRvIHByZXZlbnQgdGhlIG5hdGl2ZSB0b29sdGlwCgkJLy8gd2UgaGF2ZSB0byBjaGVjayBmaXJzdCB0byBhdm9pZCBkZWZpbmluZyBhIHRpdGxlIGlmIG5vbmUgZXhpc3RzCgkJLy8gKHdlIGRvbid0IHdhbnQgdG8gY2F1c2UgYW4gZWxlbWVudCB0byBzdGFydCBtYXRjaGluZyBbdGl0bGVdKQoJCS8vCgkJLy8gV2UgdXNlIHJlbW92ZUF0dHIgb25seSBmb3Iga2V5IGV2ZW50cywgdG8gYWxsb3cgSUUgdG8gZXhwb3J0IHRoZSBjb3JyZWN0CgkJLy8gYWNjZXNzaWJsZSBhdHRyaWJ1dGVzLiBGb3IgbW91c2UgZXZlbnRzLCBzZXQgdG8gZW1wdHkgc3RyaW5nIHRvIGF2b2lkCgkJLy8gbmF0aXZlIHRvb2x0aXAgc2hvd2luZyB1cCAoaGFwcGVucyBvbmx5IHdoZW4gcmVtb3ZpbmcgaW5zaWRlIG1vdXNlb3ZlcikuCgkJaWYgKCB0YXJnZXQuaXMoICJbdGl0bGVdIiApICkgewoJCQlpZiAoIGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICJtb3VzZW92ZXIiICkgewoJCQkJdGFyZ2V0LmF0dHIoICJ0aXRsZSIsICIiICk7CgkJCX0gZWxzZSB7CgkJCQl0YXJnZXQucmVtb3ZlQXR0ciggInRpdGxlIiApOwoJCQl9CgkJfQoKCQl0b29sdGlwRGF0YSA9IHRoaXMuX3Rvb2x0aXAoIHRhcmdldCApOwoJCXRvb2x0aXAgPSB0b29sdGlwRGF0YS50b29sdGlwOwoJCXRoaXMuX2FkZERlc2NyaWJlZEJ5KCB0YXJnZXQsIHRvb2x0aXAuYXR0ciggImlkIiApICk7CgkJdG9vbHRpcC5maW5kKCAiLnVpLXRvb2x0aXAtY29udGVudCIgKS5odG1sKCBjb250ZW50ICk7CgoJCS8vIFN1cHBvcnQ6IFZvaWNlb3ZlciBvbiBPUyBYLCBKQVdTIG9uIElFIDw9IDkKCQkvLyBKQVdTIGFubm91bmNlcyBkZWxldGlvbnMgZXZlbiB3aGVuIGFyaWEtcmVsZXZhbnQ9ImFkZGl0aW9ucyIKCQkvLyBWb2ljZW92ZXIgd2lsbCBzb21ldGltZXMgcmUtcmVhZCB0aGUgZW50aXJlIGxvZyByZWdpb24ncyBjb250ZW50cyBmcm9tIHRoZSBiZWdpbm5pbmcKCQl0aGlzLmxpdmVSZWdpb24uY2hpbGRyZW4oKS5oaWRlKCk7CgkJYTExeUNvbnRlbnQgPSAkKCAiPGRpdj4iICkuaHRtbCggdG9vbHRpcC5maW5kKCAiLnVpLXRvb2x0aXAtY29udGVudCIgKS5odG1sKCkgKTsKCQlhMTF5Q29udGVudC5yZW1vdmVBdHRyKCAibmFtZSIgKS5maW5kKCAiW25hbWVdIiApLnJlbW92ZUF0dHIoICJuYW1lIiApOwoJCWExMXlDb250ZW50LnJlbW92ZUF0dHIoICJpZCIgKS5maW5kKCAiW2lkXSIgKS5yZW1vdmVBdHRyKCAiaWQiICk7CgkJYTExeUNvbnRlbnQuYXBwZW5kVG8oIHRoaXMubGl2ZVJlZ2lvbiApOwoKCQlmdW5jdGlvbiBwb3NpdGlvbiggZXZlbnQgKSB7CgkJCXBvc2l0aW9uT3B0aW9uLm9mID0gZXZlbnQ7CgkJCWlmICggdG9vbHRpcC5pcyggIjpoaWRkZW4iICkgKSB7CgkJCQlyZXR1cm47CgkJCX0KCQkJdG9vbHRpcC5wb3NpdGlvbiggcG9zaXRpb25PcHRpb24gKTsKCQl9CgkJaWYgKCB0aGlzLm9wdGlvbnMudHJhY2sgJiYgZXZlbnQgJiYgL15tb3VzZS8udGVzdCggZXZlbnQudHlwZSApICkgewoJCQl0aGlzLl9vbiggdGhpcy5kb2N1bWVudCwgewoJCQkJbW91c2Vtb3ZlOiBwb3NpdGlvbgoJCQl9ICk7CgoJCQkvLyB0cmlnZ2VyIG9uY2UgdG8gb3ZlcnJpZGUgZWxlbWVudC1yZWxhdGl2ZSBwb3NpdGlvbmluZwoJCQlwb3NpdGlvbiggZXZlbnQgKTsKCQl9IGVsc2UgewoJCQl0b29sdGlwLnBvc2l0aW9uKCAkLmV4dGVuZCggewoJCQkJb2Y6IHRhcmdldAoJCQl9LCB0aGlzLm9wdGlvbnMucG9zaXRpb24gKSApOwoJCX0KCgkJdG9vbHRpcC5oaWRlKCk7CgoJCXRoaXMuX3Nob3coIHRvb2x0aXAsIHRoaXMub3B0aW9ucy5zaG93ICk7CgoJCS8vIEhhbmRsZSB0cmFja2luZyB0b29sdGlwcyB0aGF0IGFyZSBzaG93biB3aXRoIGEgZGVsYXkgKCM4NjQ0KS4gQXMgc29vbgoJCS8vIGFzIHRoZSB0b29sdGlwIGlzIHZpc2libGUsIHBvc2l0aW9uIHRoZSB0b29sdGlwIHVzaW5nIHRoZSBtb3N0IHJlY2VudAoJCS8vIGV2ZW50LgoJCS8vIEFkZHMgdGhlIGNoZWNrIHRvIGFkZCB0aGUgdGltZXJzIG9ubHkgd2hlbiBib3RoIGRlbGF5IGFuZCB0cmFjayBvcHRpb25zIGFyZSBzZXQgKCMxNDY4MikKCQlpZiAoIHRoaXMub3B0aW9ucy50cmFjayAmJiB0aGlzLm9wdGlvbnMuc2hvdyAmJiB0aGlzLm9wdGlvbnMuc2hvdy5kZWxheSApIHsKCQkJZGVsYXllZFNob3cgPSB0aGlzLmRlbGF5ZWRTaG93ID0gc2V0SW50ZXJ2YWwoIGZ1bmN0aW9uKCkgewoJCQkJaWYgKCB0b29sdGlwLmlzKCAiOnZpc2libGUiICkgKSB7CgkJCQkJcG9zaXRpb24oIHBvc2l0aW9uT3B0aW9uLm9mICk7CgkJCQkJY2xlYXJJbnRlcnZhbCggZGVsYXllZFNob3cgKTsKCQkJCX0KCQkJfSwgJC5meC5pbnRlcnZhbCApOwoJCX0KCgkJdGhpcy5fdHJpZ2dlciggIm9wZW4iLCBldmVudCwgeyB0b29sdGlwOiB0b29sdGlwIH0gKTsKCX0sCgoJX3JlZ2lzdGVyQ2xvc2VIYW5kbGVyczogZnVuY3Rpb24oIGV2ZW50LCB0YXJnZXQgKSB7CgkJdmFyIGV2ZW50cyA9IHsKCQkJa2V5dXA6IGZ1bmN0aW9uKCBldmVudCApIHsKCQkJCWlmICggZXZlbnQua2V5Q29kZSA9PT0gJC51aS5rZXlDb2RlLkVTQ0FQRSApIHsKCQkJCQl2YXIgZmFrZUV2ZW50ID0gJC5FdmVudCggZXZlbnQgKTsKCQkJCQlmYWtlRXZlbnQuY3VycmVudFRhcmdldCA9IHRhcmdldFsgMCBdOwoJCQkJCXRoaXMuY2xvc2UoIGZha2VFdmVudCwgdHJ1ZSApOwoJCQkJfQoJCQl9CgkJfTsKCgkJLy8gT25seSBiaW5kIHJlbW92ZSBoYW5kbGVyIGZvciBkZWxlZ2F0ZWQgdGFyZ2V0cy4gTm9uLWRlbGVnYXRlZAoJCS8vIHRvb2x0aXBzIHdpbGwgaGFuZGxlIHRoaXMgaW4gZGVzdHJveS4KCQlpZiAoIHRhcmdldFsgMCBdICE9PSB0aGlzLmVsZW1lbnRbIDAgXSApIHsKCQkJZXZlbnRzLnJlbW92ZSA9IGZ1bmN0aW9uKCkgewoJCQkJdGhpcy5fcmVtb3ZlVG9vbHRpcCggdGhpcy5fZmluZCggdGFyZ2V0ICkudG9vbHRpcCApOwoJCQl9OwoJCX0KCgkJaWYgKCAhZXZlbnQgfHwgZXZlbnQudHlwZSA9PT0gIm1vdXNlb3ZlciIgKSB7CgkJCWV2ZW50cy5tb3VzZWxlYXZlID0gImNsb3NlIjsKCQl9CgkJaWYgKCAhZXZlbnQgfHwgZXZlbnQudHlwZSA9PT0gImZvY3VzaW4iICkgewoJCQlldmVudHMuZm9jdXNvdXQgPSAiY2xvc2UiOwoJCX0KCQl0aGlzLl9vbiggdHJ1ZSwgdGFyZ2V0LCBldmVudHMgKTsKCX0sCgoJY2xvc2U6IGZ1bmN0aW9uKCBldmVudCApIHsKCQl2YXIgdG9vbHRpcCwKCQkJdGhhdCA9IHRoaXMsCgkJCXRhcmdldCA9ICQoIGV2ZW50ID8gZXZlbnQuY3VycmVudFRhcmdldCA6IHRoaXMuZWxlbWVudCApLAoJCQl0b29sdGlwRGF0YSA9IHRoaXMuX2ZpbmQoIHRhcmdldCApOwoKCQkvLyBUaGUgdG9vbHRpcCBtYXkgYWxyZWFkeSBiZSBjbG9zZWQKCQlpZiAoICF0b29sdGlwRGF0YSApIHsKCgkJCS8vIFdlIHNldCB1aS10b29sdGlwLW9wZW4gaW1tZWRpYXRlbHkgdXBvbiBvcGVuIChpbiBvcGVuKCkpLCBidXQgb25seSBzZXQgdGhlCgkJCS8vIGFkZGl0aW9uYWwgZGF0YSBvbmNlIHRoZXJlJ3MgYWN0dWFsbHkgY29udGVudCB0byBzaG93IChpbiBfb3BlbigpKS4gU28gZXZlbiBpZiB0aGUKCQkJLy8gdG9vbHRpcCBkb2Vzbid0IGhhdmUgZnVsbCBkYXRhLCB3ZSBhbHdheXMgcmVtb3ZlIHVpLXRvb2x0aXAtb3BlbiBpbiBjYXNlIHdlJ3JlIGluCgkJCS8vIHRoZSBwZXJpb2QgYmV0d2VlbiBvcGVuKCkgYW5kIF9vcGVuKCkuCgkJCXRhcmdldC5yZW1vdmVEYXRhKCAidWktdG9vbHRpcC1vcGVuIiApOwoJCQlyZXR1cm47CgkJfQoKCQl0b29sdGlwID0gdG9vbHRpcERhdGEudG9vbHRpcDsKCgkJLy8gRGlzYWJsaW5nIGNsb3NlcyB0aGUgdG9vbHRpcCwgc28gd2UgbmVlZCB0byB0cmFjayB3aGVuIHdlJ3JlIGNsb3NpbmcKCQkvLyB0byBhdm9pZCBhbiBpbmZpbml0ZSBsb29wIGluIGNhc2UgdGhlIHRvb2x0aXAgYmVjb21lcyBkaXNhYmxlZCBvbiBjbG9zZQoJCWlmICggdG9vbHRpcERhdGEuY2xvc2luZyApIHsKCQkJcmV0dXJuOwoJCX0KCgkJLy8gQ2xlYXIgdGhlIGludGVydmFsIGZvciBkZWxheWVkIHRyYWNraW5nIHRvb2x0aXBzCgkJY2xlYXJJbnRlcnZhbCggdGhpcy5kZWxheWVkU2hvdyApOwoKCQkvLyBPbmx5IHNldCB0aXRsZSBpZiB3ZSBoYWQgb25lIGJlZm9yZSAoc2VlIGNvbW1lbnQgaW4gX29wZW4oKSkKCQkvLyBJZiB0aGUgdGl0bGUgYXR0cmlidXRlIGhhcyBjaGFuZ2VkIHNpbmNlIG9wZW4oKSwgZG9uJ3QgcmVzdG9yZQoJCWlmICggdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiApICYmICF0YXJnZXQuYXR0ciggInRpdGxlIiApICkgewoJCQl0YXJnZXQuYXR0ciggInRpdGxlIiwgdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiApICk7CgkJfQoKCQl0aGlzLl9yZW1vdmVEZXNjcmliZWRCeSggdGFyZ2V0ICk7CgoJCXRvb2x0aXBEYXRhLmhpZGluZyA9IHRydWU7CgkJdG9vbHRpcC5zdG9wKCB0cnVlICk7CgkJdGhpcy5faGlkZSggdG9vbHRpcCwgdGhpcy5vcHRpb25zLmhpZGUsIGZ1bmN0aW9uKCkgewoJCQl0aGF0Ll9yZW1vdmVUb29sdGlwKCAkKCB0aGlzICkgKTsKCQl9ICk7CgoJCXRhcmdldC5yZW1vdmVEYXRhKCAidWktdG9vbHRpcC1vcGVuIiApOwoJCXRoaXMuX29mZiggdGFyZ2V0LCAibW91c2VsZWF2ZSBmb2N1c291dCBrZXl1cCIgKTsKCgkJLy8gUmVtb3ZlICdyZW1vdmUnIGJpbmRpbmcgb25seSBvbiBkZWxlZ2F0ZWQgdGFyZ2V0cwoJCWlmICggdGFyZ2V0WyAwIF0gIT09IHRoaXMuZWxlbWVudFsgMCBdICkgewoJCQl0aGlzLl9vZmYoIHRhcmdldCwgInJlbW92ZSIgKTsKCQl9CgkJdGhpcy5fb2ZmKCB0aGlzLmRvY3VtZW50LCAibW91c2Vtb3ZlIiApOwoKCQlpZiAoIGV2ZW50ICYmIGV2ZW50LnR5cGUgPT09ICJtb3VzZWxlYXZlIiApIHsKCQkJJC5lYWNoKCB0aGlzLnBhcmVudHMsIGZ1bmN0aW9uKCBpZCwgcGFyZW50ICkgewoJCQkJJCggcGFyZW50LmVsZW1lbnQgKS5hdHRyKCAidGl0bGUiLCBwYXJlbnQudGl0bGUgKTsKCQkJCWRlbGV0ZSB0aGF0LnBhcmVudHNbIGlkIF07CgkJCX0gKTsKCQl9CgoJCXRvb2x0aXBEYXRhLmNsb3NpbmcgPSB0cnVlOwoJCXRoaXMuX3RyaWdnZXIoICJjbG9zZSIsIGV2ZW50LCB7IHRvb2x0aXA6IHRvb2x0aXAgfSApOwoJCWlmICggIXRvb2x0aXBEYXRhLmhpZGluZyApIHsKCQkJdG9vbHRpcERhdGEuY2xvc2luZyA9IGZhbHNlOwoJCX0KCX0sCgoJX3Rvb2x0aXA6IGZ1bmN0aW9uKCBlbGVtZW50ICkgewoJCXZhciB0b29sdGlwID0gJCggIjxkaXY+IiApLmF0dHIoICJyb2xlIiwgInRvb2x0aXAiICksCgkJCWNvbnRlbnQgPSAkKCAiPGRpdj4iICkuYXBwZW5kVG8oIHRvb2x0aXAgKSwKCQkJaWQgPSB0b29sdGlwLnVuaXF1ZUlkKCkuYXR0ciggImlkIiApOwoKCQl0aGlzLl9hZGRDbGFzcyggY29udGVudCwgInVpLXRvb2x0aXAtY29udGVudCIgKTsKCQl0aGlzLl9hZGRDbGFzcyggdG9vbHRpcCwgInVpLXRvb2x0aXAiLCAidWktd2lkZ2V0IHVpLXdpZGdldC1jb250ZW50IiApOwoKCQl0b29sdGlwLmFwcGVuZFRvKCB0aGlzLl9hcHBlbmRUbyggZWxlbWVudCApICk7CgoJCXJldHVybiB0aGlzLnRvb2x0aXBzWyBpZCBdID0gewoJCQllbGVtZW50OiBlbGVtZW50LAoJCQl0b29sdGlwOiB0b29sdGlwCgkJfTsKCX0sCgoJX2ZpbmQ6IGZ1bmN0aW9uKCB0YXJnZXQgKSB7CgkJdmFyIGlkID0gdGFyZ2V0LmRhdGEoICJ1aS10b29sdGlwLWlkIiApOwoJCXJldHVybiBpZCA/IHRoaXMudG9vbHRpcHNbIGlkIF0gOiBudWxsOwoJfSwKCglfcmVtb3ZlVG9vbHRpcDogZnVuY3Rpb24oIHRvb2x0aXAgKSB7CgkJdG9vbHRpcC5yZW1vdmUoKTsKCQlkZWxldGUgdGhpcy50b29sdGlwc1sgdG9vbHRpcC5hdHRyKCAiaWQiICkgXTsKCX0sCgoJX2FwcGVuZFRvOiBmdW5jdGlvbiggdGFyZ2V0ICkgewoJCXZhciBlbGVtZW50ID0gdGFyZ2V0LmNsb3Nlc3QoICIudWktZnJvbnQsIGRpYWxvZyIgKTsKCgkJaWYgKCAhZWxlbWVudC5sZW5ndGggKSB7CgkJCWVsZW1lbnQgPSB0aGlzLmRvY3VtZW50WyAwIF0uYm9keTsKCQl9CgoJCXJldHVybiBlbGVtZW50OwoJfSwKCglfZGVzdHJveTogZnVuY3Rpb24oKSB7CgkJdmFyIHRoYXQgPSB0aGlzOwoKCQkvLyBDbG9zZSBvcGVuIHRvb2x0aXBzCgkJJC5lYWNoKCB0aGlzLnRvb2x0aXBzLCBmdW5jdGlvbiggaWQsIHRvb2x0aXBEYXRhICkgewoKCQkJLy8gRGVsZWdhdGUgdG8gY2xvc2UgbWV0aG9kIHRvIGhhbmRsZSBjb21tb24gY2xlYW51cAoJCQl2YXIgZXZlbnQgPSAkLkV2ZW50KCAiYmx1ciIgKSwKCQkJCWVsZW1lbnQgPSB0b29sdGlwRGF0YS5lbGVtZW50OwoJCQlldmVudC50YXJnZXQgPSBldmVudC5jdXJyZW50VGFyZ2V0ID0gZWxlbWVudFsgMCBdOwoJCQl0aGF0LmNsb3NlKCBldmVudCwgdHJ1ZSApOwoKCQkJLy8gUmVtb3ZlIGltbWVkaWF0ZWx5OyBkZXN0cm95aW5nIGFuIG9wZW4gdG9vbHRpcCBkb2Vzbid0IHVzZSB0aGUKCQkJLy8gaGlkZSBhbmltYXRpb24KCQkJJCggIiMiICsgaWQgKS5yZW1vdmUoKTsKCgkJCS8vIFJlc3RvcmUgdGhlIHRpdGxlCgkJCWlmICggZWxlbWVudC5kYXRhKCAidWktdG9vbHRpcC10aXRsZSIgKSApIHsKCgkJCQkvLyBJZiB0aGUgdGl0bGUgYXR0cmlidXRlIGhhcyBjaGFuZ2VkIHNpbmNlIG9wZW4oKSwgZG9uJ3QgcmVzdG9yZQoJCQkJaWYgKCAhZWxlbWVudC5hdHRyKCAidGl0bGUiICkgKSB7CgkJCQkJZWxlbWVudC5hdHRyKCAidGl0bGUiLCBlbGVtZW50LmRhdGEoICJ1aS10b29sdGlwLXRpdGxlIiApICk7CgkJCQl9CgkJCQllbGVtZW50LnJlbW92ZURhdGEoICJ1aS10b29sdGlwLXRpdGxlIiApOwoJCQl9CgkJfSApOwoJCXRoaXMubGl2ZVJlZ2lvbi5yZW1vdmUoKTsKCX0KfSApOwoKLy8gREVQUkVDQVRFRAovLyBUT0RPOiBTd2l0Y2ggcmV0dXJuIGJhY2sgdG8gd2lkZ2V0IGRlY2xhcmF0aW9uIGF0IHRvcCBvZiBmaWxlIHdoZW4gdGhpcyBpcyByZW1vdmVkCmlmICggJC51aUJhY2tDb21wYXQgIT09IGZhbHNlICkgewoKCS8vIEJhY2tjb21wYXQgZm9yIHRvb2x0aXBDbGFzcyBvcHRpb24KCSQud2lkZ2V0KCAidWkudG9vbHRpcCIsICQudWkudG9vbHRpcCwgewoJCW9wdGlvbnM6IHsKCQkJdG9vbHRpcENsYXNzOiBudWxsCgkJfSwKCQlfdG9vbHRpcDogZnVuY3Rpb24oKSB7CgkJCXZhciB0b29sdGlwRGF0YSA9IHRoaXMuX3N1cGVyQXBwbHkoIGFyZ3VtZW50cyApOwoJCQlpZiAoIHRoaXMub3B0aW9ucy50b29sdGlwQ2xhc3MgKSB7CgkJCQl0b29sdGlwRGF0YS50b29sdGlwLmFkZENsYXNzKCB0aGlzLm9wdGlvbnMudG9vbHRpcENsYXNzICk7CgkJCX0KCQkJcmV0dXJuIHRvb2x0aXBEYXRhOwoJCX0KCX0gKTsKfQoKdmFyIHdpZGdldHNUb29sdGlwID0gJC51aS50b29sdGlwOwoKCgoKfSkpOw==`,
  ``,
  `I2hlYWRlciB7DQoJcG9zaXRpb246Zml4ZWQ7DQoJZm9udDogMTRweCBzYW5zLXNlcmlmOw0KCWZvbnQtd2VpZ2h0OiBib2xkOw0KCWJhY2tncm91bmQ6ICNmZmZmZmY7DQoJYm9yZGVyLXJhZGl1czogM3B4OyANCglib3JkZXI6IDFweCBzb2xpZCAjMDA2Njk5OyANCgl3aGl0ZS1zcGFjZTpub3dyYXA7DQoJcGFkZGluZzogM3B4Ow0KfQ0KI2hlYWRlciB0YWJsZXsNCglib3JkZXItc3BhY2luZzogMHB4Ow0KfQ0KI2JvZHkgew0KCWZvbnQ6IDE0cHggc2Fucy1zZXJpZjsNCglmb250LXdlaWdodDogbm9ybWFsOw0KCWJhY2tncm91bmQ6ICNmZmZmZmY7DQoJd2hpdGUtc3BhY2U6bm93cmFwOw0KCXBhZGRpbmc6IDNweDsNCn0NCi51aS10ZXh0ZmllbGQgew0KICAgIGZvbnQ6IGluaGVyaXQ7DQogICAgY29sb3I6IGluaGVyaXQ7DQogICAgYmFja2dyb3VuZDogbm9uZTsNCiAgICB0ZXh0LWFsaWduOiBpbmhlcml0Ow0KICAgIG91dGxpbmU6IG5vbmU7DQogICAgY3Vyc29yOiB0ZXh0Ow0KfQ0KI1BsYW50YWZlbCB7DQoJcGFkZGluZy10b3A6IDEuN2VtOyANCn0NCi5BdWZ0cmFnIHsNCglib3JkZXI6IDFweCBzb2xpZCAjOTk5OTk5Ow0KfQ0KLkF1ZnRyYWdTdGFydCB7DQoJYmFja2dyb3VuZDogZ3JlZW47DQoJYm9yZGVyOiAxcHggc29saWQgIzk5OTk5OTsNCgljb2xvcjogd2hpdGU7DQp9DQouQXVmdHJhZ0FuZHJ1Y2sgew0KCWJhY2tncm91bmQ6IG9yYW5nZTsNCglib3JkZXI6IDFweCBzb2xpZCAjOTk5OTk5Ow0KfQ0KLkF1ZnRyYWdQcmludFN0YXJ0IHsNCgliYWNrZ3JvdW5kOiByZWQ7DQoJYm9yZGVyOiAxcHggc29saWQgIzk5OTk5OTsNCn0NCi51aS10b29sdGlwIHsNCglmb250LXNpemU6IDEycHg7DQoJZm9udC13ZWlnaHQ6IG5vcm1hbDsgDQp9DQojTGF5b3V0SW5mb3Mgew0KCWZvbnQ6IDEycHggc2Fucy1zZXJpZjsNCgliYWNrZ3JvdW5kOiAjZmZmZmZmOw0KfQ0KLnVpLWRpYWxvZyAudWktZGlhbG9nLWNvbnRlbnQgew0KCXBhZGRpbmc6IDBlbSAwZW07DQp9DQoudWktdGFicyAudWktdGFicy1wYW5lbCB7DQoJcGFkZGluZzogMGVtIDBlbTsNCn0JDQoudWktYWNjb3JkaW9uIC51aS1hY2NvcmRpb24tY29udGVudCB7DQoJcGFkZGluZzogMC41ZW0gMC41ZW07DQp9DQoudWktYXV0b2NvbXBsZXRlIHsNCiAgICBtYXgtaGVpZ2h0OiAxMDBweDsNCiAgICBvdmVyZmxvdy15OiBhdXRvOw0KICAgIC8qIHByZXZlbnQgaG9yaXpvbnRhbCBzY3JvbGxiYXIgKi8NCiAgICBvdmVyZmxvdy14OiBoaWRkZW47DQogIH0NCiAgLyogSUUgNiBkb2Vzbid0IHN1cHBvcnQgbWF4LWhlaWdodA0KICAgKiB3ZSB1c2UgaGVpZ2h0IGluc3RlYWQsIGJ1dCB0aGlzIGZvcmNlcyB0aGUgbWVudSB0byBhbHdheXMgYmUgdGhpcyB0YWxsDQogICAqLw0KICAqIGh0bWwgLnVpLWF1dG9jb21wbGV0ZSB7DQogICAgaGVpZ2h0OiAxMDBweDsNCn0NCiN2b25EYXR1bSB7DQoJd2lkdGg6IDUuNWVtOw0KfQ0KI0FidGVpbHVuZy1idXR0b24gew0KCXdpZHRoOiA1ZW07CQ0KfQ0KI2F1dG91cGRhdGUtYnV0dG9uIHsNCgl3aWR0aDogNmVtOwkNCn0NCiN2aWV3VHlwLWJ1dHRvbiB7DQoJd2lkdGg6IDllbTsJDQp9DQoNCiAgDQo=`,
  ``,
  ``,
  `iVBORw0KGgoAAAANSUhEUgAAAQAAAADwCAMAAADYSUr5AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAABLFBMVEV3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diB3diDPBZfVAAAAY3RSTlMAWEd8IjKY4b3Ld2acsomqpVpOeudAQGVmhVOLRpGUY2NhTaBobXqbc6W/fcC8463l6eSBjl3f3eC51tvSxNXU12LacP4Nzplp+DgqFhzFedHjp4FYyJPQ2K/wzZCniLC7x6vHwZbrAAAAAWJLR0QAiAUdSAAAAAd0SU1FB+AHDQUaNuOGGEYAAA+BSURBVHja7V0LYxvFEd67iyQsxycZJGgDCYrBKSR1WjdJX5RCGiJICzFpmxCamFLm//+H7t5rZ2f2oeNk6Wzv58T23D7nu9m9md09WYiIiIgeIIFk213Ysv7QcwY6dy8Bv/4JZkBl3iwhxAJBwSSA9sdIV6kJvgLAGgBPA6R88etGTYJaICcgof0x0ukdZATQ4rwBljnZIAOs/3YVPOmcQUFy+2u3ZU68mdYKZsG8i/QGcwvx3mFuAZ4ObN4C7KSwLvoIYKWBmYindmKCm58DVuDjTJ8CdAht/imwdVx2RygiIiIiIiKixzhzT3DLflDCojWgzntCS9DsRoCfsAZ86wFsQUjWvlFKLB1gBLAMNLsZLiasAUqAJ7pUtW8yGGL9t/fYk2xZUUk8xUVgCRAKAja2HMAtWNhs1ojWVlgPSMzafCNq2xZgReLpcff1AD5CtjoHhHHRnwIREREREREREdtDN8c/6JoG6+8ceHSsAPh2KrTI3bl//DgA61CgNvBf4eqRZOBZzOLgSrM34O2AJdXfvq0GH0EsnVXGNODNAUkER2LNKKuPFABX4grt83AZQgTwBSDwaxAu7sliKljlJmtWZnZaoZc/aw6vCXkHkLBZCGHcUtxvouEW2qgXHOOWM0TgTw/USG4HBG9IoAEQ1jbdqdt+Cpxx+fBjMiIiIiIiIuKyovux1I5uRmI5je6u0uaHBreqAs2368BKDfjjeba3aukAShd4c2oFr05ldgcnYN3e551kVbrbt8S3VAFf3WC9qYgfgbcneW8th90TLwGBs+HCamY+Brz8JZblnsDygxHO1uFwfYHtnRMLYuGwJRpnr2yIFTpgT7UyTGqn5S024C7OCGA94N0z0+kQCxNg74DzFq6UzAJmNwHWvXW+Q++8AWwIkCESHAL2UZ44czCGvYcDeB6LgQmzAsF26AMEkEmQpLJpKbSCQ9u33CN/sr0XDgJXCd4DFsAz93s9YNvvx0RERERERPQaZ/sU544KeVXWUmK9jkW4OmiXvaX+wK/g6M9aArO20n450ZhmBqfIdnb8G1/tAey0uOk7lnuTnrfDA66+JQMwhYURfXoJAXudXQlwv99dJHk+H8C2nmHuV7P++oKDuiy4iq+dgDrcdBGQWMJh3nVPPMXTbbvTQFLBnxnWSEFi6SELdwGbKHjHsKU2uiDiPbNiJYAOibWHd3pSU4sJLDoz3++3pBPBNuwxIYyfACEhwrvDXNFh0Sl5YyQQvYYOAYXWH/zrRxcQF12/iIiIiIiLjfScP8gsbgf4tquoN/xz9O/TVoB1m8X0vtLgbiCkpFKvKESvNkPY0WWB4hWlagopCobM+C6F0gJ0fmHdAmcE9mXYAI9e6PF6qb8RnRkEQEmCEc9SEeubQL8IsGy/c4JSIlMC8E9hid3QtaQZYn0ZAitYAMtvntgoCXJYAD2vUNPdG/2ZjmwOIDmsKzSpthI6B1gOyPTG/HWfDAn/cEz5KH9qVwgsvyls8LMyWzDA6Wh3k+gz0IekhwR0RRv9IyIiIiIuFzLlJ2Sr578ykLiyqd4NZedGQ1+ONwKeG+yUrpJLxYwmZ34+rogxwFhcIRWgErtS3BUOmSaKqxVIgVol2MvzIXL2it8NQgq3aMJPP9fitNJwaujb9JjKbGdrt0qvez0Yw2AA44HRAcGCCXrW1iqUFya2FpsgLc/ztAQhZGQQgBgAZaID3eKOQYCsel+icaWhtgDXfndZna5wAIM333wLMAGz2cz/BobABIgAAbsGgaBURxckIQkmpOygSfh8/vZ87rIAGAL6oRqu5gBAHTR6PC+KzzUBb77zi18aBFy7do0dj3fL5AIlQOn/LibANCmQ+ps2Bu+l6gs1eE3BaQH7SnUY7ut1gKyw/4YAVT9aYiur0xXKIXD9Oh4CMyFvgfzeFMiKr59JgNL/6o133QQk5IK8kiT7CQph4P3Fwj0HwL5kQOqPCSj+NQQUkyAi4KYqffNmfeGgnAQPiDqoACeAvaIhCAEf4PWJyfSq/J67CKANwocFUIOHh4egTZRZQLY/HMpveggUspuAwxLVhWQM74zHt2CM3xFCQ0he+FXxhfUdUAIGhAAwLGCi9fcQ0FT3UQFicoOGAGoB2X6B+hYxGdQcOwRjTI7HzVNgXLc/dloAJyA0BHB6OQfmTeaGgMxsr6mu9APgDeEAsQD62MtY/ZPyHuAqMv3oBq5wYNL7uBA/Fo4LlICCgVysD1k2LdDC12Mcmq5LODu0Wq6h2F2r/hERERERPcft2/70FLzr2gC2o48EmQ537xSPqTu1WAXbTYw9qeRJU7Z0TXZXloX4NelP7n2uyWhrTi7JxzbWP8s0AyPlRR6Nh9oP2ZFdnuw0jpyVikxfv1O54jUDsrAC2WkyPZuxcgVXlsv70WiQK2cubZ7tqeJ2gu/pXYC7RH/luC20/so3b6JfejqcOWYCfiO/9nCHMnmfM5Tf2BuksYX4rTgWv8Px7VgKY0MWpvz24G0kq/5Pp64OQuXsV3JtcMjiZGenae251isWTXTFCShXBxAB927ef3DjJlo2yqR9Z7g/XgJ+D3+QX3/ECirXn8g4+JCx8QClT80OVs58am/vdi2ieWAEe1PJQSnsVM56tuMioJoFkAXswZ/gtu6Q1B8t2YUt4M/iE/EXvaR0SCzgkFjAobKAuZanRuwhR0A5STXxLWnv01L6tOlgEcxrAygC1AzpGybg3s0PPpRfdv0rTx0TkEKx6lTLf4XP5Nfn6MSEMcYL+S0io/Ri/Ep86CCgju5So0PEfgSGOcvDYCgWRrxICMgIw0T/5kSESQCSH35ybXTtb48qeb+ubnc1eWrePcGGQCVj8e5dLSvbb9Y7rQQIAnlBrQ+6j9CQRe47VYf1U0AdMRKuIaGGO6nOLwuiPw/gU6y/uP+FnP4mX9xvCJDjP/WUZ4pO2CRqLrKyRX7iB9BlbyLbPgHGJ0+p/vQxKMpDXTq52BG4mjflgdVgYCzOIfIWAb7hA0VEREREbAFDvDCtXDk4ZHke61/P+GhhsRXhffpBlx6ksJTfl/jRfATI1XwXvvzyq6/gEerOntK/gPzl1g24dw9u3KrTy9gNc1liSGR6oQneqN80htFw+MRgwP/hYiFMZV1jFG2CZGBJvfGF9rz+rvAP7Youh7KCKQtumnQjNmUvWVfBq84jXcdMBjt6c7BM0MGVcoyX8MRyWvZnEqBcLVRC6V78Nw1AE/D1N48ff/O17s9QQD7V7honoIxG6p2mYjEKHXhIRblUkWpfO1PrMYiAB2qvDje4VKy7CKDhJVeXpJe7e9qiloWs9U/N/FDY+m5T/KlMGiF3FQbkQIZZvtgHRRlABZ4ynhPYAiYTfF59fHKiwktNgNRfoCUwyjgNFuwiMfGm/7UNIP3LO1jPAZ/BrgQ8bTLkuVEe5n4CDuSvB+pfnawMbAgLZAEken3wYP/BCRw1FT5RvRutjwBqAd8W8jNTf63geFlgYRbXhEH63nw+Nwio7mz5Y7FYvP9wsXhIDjwsnXPAyYkaAHgSfDIcjtY4CZI54NtqDqgYUPrnRjh6S/V3oYsv9+AIMaAqOkDTXgYmAR99VP0jBuKcA4bZyckJnGAG6GNw3U+BZ+IZjv9p6LacTPSClZwB5b9UMwDGj/rX3foCfQwqiyjhmANgqIAJsN3DLgQQpMW9f1b7AZYzguYMK63lSapmysd16j//9W/zY11EMWtU0iBTS3pZfWCjvR+wfRw8f36AxOme4ip93DBGO2w8BiMiIiI6Y4hPR7/4Tk0x373Ydqc2iJcALxvh+3rW/X7b3doYrit1r1fCi/KJo75rG5jBDBf4j8WZEes7eTYr+J91r2hVvFQBVG0CrzQBr5ocxG2w+RG5poRtPdALVIaZeqbPvPWfIa6XCl9HjVPXg/UnpRdybRTl5i1SkF6YwuvBa3N3ljW3SQLkDKBC6JdG42YfJnhjrNRfby/mpv62o7vTdIr1ey2/vTYyzLZIQF7f79xNQE6GPMBxitOw/jYCUsNkioPmAyOcNgjIYDabbc7T1Qq7CeBlkP5Sd2NS7GwBm50ECwMoX5opdHiuCXiOMuX+CnB65zlgs9EanfTua/E+zkQKEQYMfjo/BYTY4BQ40wqXPTitxVOsI50DsJSv//T5VoP1H9SyLDz9YZt96NNqRURERERExBkjB5941oARcWRWekOiC3Z2qP7gEc+eACAUGAQUaSnOkI9S9c3IoELmWp6UmdzhbU5855wlQ7FDtkECTApMAsq0ps/F7ZHq0QwGATidE0CDRb4YYB7G3QgB+DAwJaBY/qg6WfwY4T5XGTABI4tOYY0NcZ1/P2AlAjZoASsRsGEL2OwcQLH1OWDDTwG+3rHlp0APsF0/ICIiIiLicsP/HtlFR/pfAT8+RGc3pZdydIk+J1e9Rwo/5uh9hnH+1PICRe2b0M8/aCv3Dkv4nyRAoNPJipURY4C+WarP67eT+4YUjoX4MRfH+G3r5UJGtOb7tVqRwXwg/zXHt2FunmdXMpjyQH0NeureZtW5+SN9h8ZTUKft9xwEFB+NluzXn68HCSSJulDL++pLf/6eSpdXkv2eElBYgMQxvuNqXlgap5MRAY9KNCbeUu4dRsUzcIrOvMhgdAiLoYOACzcJjgGOj47xtF8uR+iQFNb8Fy77hvFLeX9ensu35iMiIiIiOoO+HxCS6SGqtnLb9rrKIdD3A0IyPUbXVm7bXlc5eP+hwYtVZHqQsq3ctr2uchD0/YBXuoJaPlW+4Wkll0dpi/TnjQxUFs70Vzr9lbN9Ad50daKTpAvaf4Hfd/ABdAPQyHUlotoNPj3Fu8Oh/Dyd5ddb5LZ0vHtm/wlGf8RPP/0kzP4IcbLi/hqgd3odshq9p6TDuEMsv2AK+fMTAoL9EfV/h3xS6r8+AqboM+gsBNh+tlEo2L7FQnwWcCJK/VcmIDwE1KdvtTHx0BCBEIHeISVIfipLBk6a/EHQ9wMsk1o9CepJjE5SQGX3pGqdJGn7dJI102t+XLIaA40cxKYfY10fo23lMDbtyHR1pNrKYWzale3qSreVIyIiIiIiIjyoHIczk3sP8vcDw/IFJAD8BBRfWEHhJ0DQP3rYb5QfSQgemRAE9TeXTP78Xd8RLeDSzwGX/SkQERERERERsW4k58cTCJ6ChKz9QdeE/H2gPiMRgb6uQAC93+dJ/3VYANX3XOlvWkBxvL34chDQ7L2Z+hocqtIXdg7Iapj64zte6n9+bKCrBZT5z6/+XS3g3Ovf9Sng0P/CzgEBaP3Pjw0ELaANlN71/4iInuP/VPKCJpghgS4AAAAldEVYdGRhdGU6Y3JlYXRlADIwMTYtMDktMTRUMTM6MzM6MTYtMDQ6MDAhDQ4CAAAAJXRFWHRkYXRlOm1vZGlmeQAyMDE2LTA3LTEzVDA1OjI2OjU0LTA0OjAwMExtoQAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAAASUVORK5CYII=`,
  ``,
  `iVBORw0KGgoAAAANSUhEUgAAAQAAAADwCAMAAADYSUr5AAAABGdBTUEAALGPC/xhBQAAASxQTFRFzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAzAAAoXhTiAAAAGN0Uk5TABkQMwQIUL+CmS8iVXFAZmAaFDLMDQ0hIjwWQhBISyAgHhNaIycxUyxghTSHgMNqyM/GOEUcvLi+fKu1pYyqqK0fsin9AZ5RJO8KBgIDjzGiw2I4GZRKoK9t35xHYz9vf5FoIacOFAAAAAFiS0dEAIgFHUgAAAAHdElNRQfgBw0FGjbjhhhGAAAPgUlEQVR42u1dC2MbxRHeu4skLMcnGSRoAwmKwSkkdVo3SV+UQhoiSAsxaZsQmphS5v//h+7ea2dn9qHjZOls7+fE9tw+57vZvZndPVmIiIiIHiCBZNtd2LL+0HMGOncvAb/+CWZAZd4sIcQCQcEkgPbHSFepCb4CwBoATwOkfPHrRk2CWiAnIKH9MdLpHWQE0OK8AZY52SADrP92FTzpnEFBcvtrt2VOvJnWCmbBvIv0BnML8d5hbgGeDmzeAuyksC76CGClgZmIp3ZigpufA1bg40yfAnQIbf4psHVcdkcoIiIiIiIiosc4c09wy35QwqI1oM57QkvQ7EaAn7AGfOsBbEFI1r5RSiwdYASwDDS7GS4mrAFKgCe6VLVvMhhi/bf32JNsWVFJPMVFYAkQCgI2thzALVjYbNaI1lZYD0jM2nwjatsWYEXi6XH39QA+QrY6B4Rx0Z8CERERERERERHbQzfHP+iaBuvvHHh0rAD4diq0yN25f/w4AOtQoDbwX+HqkWTgWczi4EqzN+DtgCXV376tBh9BLJ1VxjTgzQFJBEdizSirjxQAV+IK7fNwGUIE8AUg8GsQLu7JYipY5SZrVmZ2WqGXP2sOrwl5B5CwWQhh3FLcb6LhFtqoFxzjljNE4E8P1EhuBwRvSKABENY23anbfgqccfnwYzIiIiIiIiLisqL7sdSObkZiOY3urtLmhwa3qgLNt+vASg3443m2t2rpAEoXeHNqBa9OZXYHJ2Dd3uedZFW627fEt1QBX91gvamIH4G3J3lvLYfdEy8BgbPhwmpmPga8/CWW5Z7A8oMRztbhcH2B7Z0TC2LhsCUaZ69siBU6YE+1Mkxqp+UtNuAuzghgPeDdM9PpEAsTYO+A8xaulMwCZjcB1r11vkPvvAFsCJAhEhwC9lGeOHMwhr2HA3gei4EJswLBdugDBJBJkKSyaSm0gkPbt9wjf7K9Fw4CVwneAxbAM/d7PWDb78dERERERET0Gmf7FOeOCnlV1lJivY5FuDpol72l/sCv4OjPWgKzttJ+OdGYZganyHZ2/Btf7QHstLjpO5Z7k563wwOuviUDMIWFEX16CQF7nV0JcL/fXSR5Ph/Atp5h7lez/vqCg7osuIqvnYA63HQRkFjCYd51TzzF022700BSwZ8Z1khBYukhC3cBmyh4x7ClNrog4j2zYiWADom1h3d6UlOLCSw6M9/vt6QTwTbsMSGMnwAhIcK7w1zRYdEpeWMkEL2GDgGF1h/860cXEBddv4iIiIiIi430nD/ILG4H+LarqDf8c/Tv01aAdZvF9L7S4G4gpKRSryhErzZD2NFlgeIVpWoKKQqGzPguhdICdH5h3QJnBPZl2ACPXujxeqm/EZ0ZBEBJghHPUhHrm0C/CLBsv3OCUiJTAvBPYYnd0LWkGWJ9GQIrWADLb57YKAlyWAA9r1DT3Rv9mY5sDiA5rCs0qbYSOgdYDsj0xvx1nwwJ/3BM+Sh/alcILL8pbPCzMlswwOlod5PoM9CHpIcEdEUb/SMiIiIiLhcy5Sdkq+e/MpC4sqneDWXnRkNfjjcCnhvslK6SS8WMJmd+Pq6IMcBYXCEVoBK7UtwVDpkmiqsVSIFaJdjL8yFy9orfDUIKt2jCTz/X4rTScGro2/SYymxna7dKr3s9GMNgAOOB0QHBggl61tYqlBcmthabIC3P87QEIWRkEIAYAGWiA93ijkGArHpfonGlobYA1353WZ2ucACDN998CzABs9nM/waGwASIAAG7BoGgVEcXJCEJJqTsoEn4fP72fO6yABgC+qEaruYAQB00ejwvis81AW++84tfGgRcu3aNHY93y+QCJUDp/y4mwDQpkPqbNgbvpeoLNXhNwWkB+0p1GO7rdYCssP+GAFU/WmIrq9MVyiFw/ToeAjMhb4H83hTIiq+fSYDS/+qNd90EJOSCvJIk+wkKYeD9xcI9B8C+ZEDqjwko/jUEFJMgIuCmKn3zZn3hoJwED4g6qAAngL2iIQgBH+D1icn0qvyeuwigDcKHBVCDh4eHoE2UWUC2PxzKb3oIFLKbgMMS1YVkDO+Mx7dgjN8RQkNIXvhV8YX1HVACBoQAMCxgovX3ENBU91EBYnKDhgBqAdl+gfoWMRnUHDsEY0yOx81TYFy3P3ZaACcgNARwejkH5k3mhoDMbK+prvQD4A3hALEA+tjLWP2T8h7gKjL96AaucGDS+7gQPxaOC5SAgoFcrA9ZNi3QwtdjHJquSzg7tFquodhdq/4RERERET3H7dv+9BS869oAtqOPBJkOd+8Uj6k7tVgF202MPankSVO2dE12V5aF+DXpT+59rsloa04uycc21j/LNAMj5UUejYfaD9mRXZ7sNI6clYpMX79TueI1A7KwAtlpMj2bsXIFV5bL+9FokCtnLm2e7anidoLv6V2Au0R/5bgttP7KN2+iX3o6nDlmAn4jv/ZwhzJ5nzOU39gbpLGF+K04Fr/D8e1YCmNDFqb89uBtJKv+T6euDkLl7FdybXDI4mRnp2ntudYrFk10xQkoVwcQAfdu3n9w4yZaNsqkfWe4P14Cfg9/kF9/xAoq15/IOPiQsfEApU/NDlbOfGpv73YtonlgBHtTyUEp7FTOerbjIqCaBZAF7MGf4LbukNQfLdmFLeDP4hPxF72kdEgs4JBYwKGygLmWp0bsIUdAOUk18S1p79NS+rTpYBHMawMoAtQM6Rsm4N7NDz6UX3b9K08dE5BCsepUy3+Fz+TX5+jEhDHGC/ktIqP0YvxKfOggoI7uUqNDxH4EhjnLw2AoFka8SAjICMNE/+ZEhEkAkh9+cm107W+PKnm/rm53NXlq3j3BhkAlY/HuXS0r22/WO60ECAJ5Qa0Puo/QkEXuO1WH9VNAHTESriGhhjupzi8Loj8P4FOsv7j/hZz+Jl/cbwiQ4z/1lGeKTtgkai6yskV+4gfQZW8i2z4BxidPqf70MSjKQ106udgRuJo35YHVYGAsziHyFgG+4QNFRERERGwBQ7wwrVw5OGR5Hutfz/hoYbEV4X36QZcepLCU35f40XwEyNV8F7788quv4BHqzp7Sv4D85dYNuHcPbtyq08vYDXNZYkhkeqEJ3qjfNIbRcPjEYMD/4WIhTGVdYxRtgmRgSb3xhfa8/q7wD+2KLoeygikLbpp0IzZlL1lXwavOI13HTAY7enOwTNDBlXKMl/DEclr2ZxKgXC1UQule/DcNQBPw9TePH3/zte7PUEA+1e4aJ6CMRuqdpmIxCh14SEW5VJFqXztT6zGIgAdqrw43uFSsuwig4SVXl6SXu3vaopaFrPVPzfxQ2PpuU/ypTBohdxUG5ECGWb7YB0UZQAWeMp4T2AImE3xefXxyosJLTYDUX6AlMMo4DRbsIjHxpv+1DSD9yztYzwGfwa4EPG0y5LlRHuZ+Ag7krwfqX52sDGwIC2QBJHp98GD/wQkcNRU+Ub0brY8AagHfFvIzU3+t4HhZYGEW14RB+t58PjcIqO5s+WOxWLz/cLF4SA48LJ1zwMmJGgB4EnwyHI7WOAmSOeDbag6oGFD650Y4ekv1d6GLL/fgCDGgKjpA014GJgEffVT9IwbinAOG2cnJCZxgBuhjcN1PgWfiGY7/aei2nEz0gpWcAeW/VDMAxo/61936An0MKoso4ZgDYKiACbDdwy4EEKTFvX9W+wGWM4LmDCut5UmqZsrHdeo///Vv82NdRDFrVNIgU0t6WX1go70fsH0cPH9+gMTpnuIqfdwwRjtsPAYjIiIiOmOIT0e/+E5NMd+92HanNoiXAC8b4ft61v1+293aGK4rda9XwovyiaO+axuYwQwX+I/FmRHrO3k2K/ifda9oVbxUAVRtAq80Aa+aHMRtsPkRuaaEbT3QC1SGmXqmz7z1nyGulwpfR41T14P1J6UXcm0U5eYtUpBemMLrwWtzd5Y1t0kC5AygQuiXRuNmHyZ4Y6zUX28v5qb+tqO703SK9Xstv702Msy2SEBe3+/cTUBOhjzAcYrTsP42AlLDZIqD5gMjnDYIyGA2m23O09UKuwngZZD+UndjUuxsAZudBAsDKF+aKXR4rgl4jjLl/gpweuc5YLPRGp307mvxPs5EChEGDH46PwWE2OAUONMKlz04rcVTrCOdA7CUr//0+VaD9R/Usiw8/WGbfejTakVERERERMQZIwefeNaAEXFkVnpDogt2dqj+4BHPngAgFBgEFGkpzpCPUvXNyKBC5lqelJnc4W1OfOecJUOxQ7ZBAkwKTALKtKbPxe2R6tEMBgE4nRNAg0W+GGAext0IAfgwMCWgWP6oOln8GOE+VxkwASOLTmGNDXGdfz9gJQI2aAErEbBhC9jsHECx9Tlgw08Bvt6x5adAD7BdPyAiIiIi4nLD/x7ZRUf6XwE/PkRnN6WXcnSJPidXvUcKP+bofYZx/tTyAkXtm9DPP2gr9w5L+J8kQKDTyYqVEWOAvlmqz+u3k/uGFI6F+DEXx/ht6+VCRrTm+7VakcF8IP81x7dhbp5nVzKY8kB9DXrq3mbVufkjfYfGU1Cn7fccBBQfjZbs15+vBwkkibpQy/vqS3/+nkqXV5L9nhJQWIDEMb7jal5YGqeTEQGPSjQm3lLuHUbFM3CKzrzIYHQIi6GDgAs3CY4Bjo+O8bRfLkfokBTW/Bcu+4bxS3l/Xp7Lt+YjIiIiIjqDvh8QkukhqrZy2/a6yiHQ9wNCMj1G11Zu215XOXj/ocGLVWR6kLKt3La9rnIQ9P2AV7qCWj5VvuFpJZdHaYv0540MVBbO9Fc6/ZWzfQHedHWik6QL2n+B33fwAXQD0Mh1JaLaDT49xbvDofw8neXXW+S2dLx7Zv8JRn/ETz/9JMz+CHGy4v4aoHd6HbIavaekw7hDLL9gCvnzEwKC/RH1f4d8Uuq/PgKm6DPoLATYfrZRKNi+xUJ8FnAiSv1XJiA8BNSnb7Ux8dAQgRCB3iElSH4qSwZOmvxB0PcDLJNaPQnqSYxOUkBl96RqnSRp+3SSNdNrflyyGgONHMSmH2NdH6Nt5TA27ch0daTaymFs2pXt6kq3lSMiIiIiIiI8qByHM5N7D/L3A8PyBSQA/AQUX1hB4SdA0D962G+UH0kIHpkQBPU3l0z+/F3fES3g0s8Bl/0pEBEREREREbFuJOfHEwiegoSs/UHXhPx9oD4jEYG+rkAAvd/nSf91WADV91zpb1pAcby9+HIQ0Oy9mfoaHKrSF3YOyGqY+uM7Xup/fmygqwWU+c+v/l0t4Nzr3/Up4ND/ws4BAWj9z48NBC2gDZTe9f+IiJ7j/1TygiaYIYEuAAAAJXRFWHRkYXRlOmNyZWF0ZQAyMDE2LTA5LTE0VDEzOjMzOjE2LTA0OjAwIQ0OAgAAACV0RVh0ZGF0ZTptb2RpZnkAMjAxNi0wNy0xM1QwNToyNjo1NC0wNDowMDBMbaEAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAAAElFTkSuQmCC`,
  ``,
  ``,
  `LmRhdGFncmlkIHsNCglmb250OiBub3JtYWwgMTJweC8xNTAlIEFyaWFsOyANCgliYWNrZ3JvdW5kOiAjZjBmMGYwOyBvdmVyZmxvdzogaGlkZGVuOyANCglib3JkZXI6IDFweCBzb2xpZCAjMDA2Njk5OyANCgktd2Via2l0LWJvcmRlci1yYWRpdXM6IDNweDsgDQoJLW1vei1ib3JkZXItcmFkaXVzOiAzcHg7IA0KCWJvcmRlci1yYWRpdXM6IDNweDsgDQp9DQouZGF0YWdyaWQgdGFibGUgdGQsIA0KLmRhdGFncmlkIHRhYmxlIHRoIHsgDQoJcGFkZGluZzogM3B4IDVweDsgDQp9DQouZGF0YWdyaWQgdGFibGUgdGhlYWQgdGggew0KCWJhY2tncm91bmQ6LXdlYmtpdC1ncmFkaWVudCggbGluZWFyLCBsZWZ0IHRvcCwgbGVmdCBib3R0b20sIGNvbG9yLXN0b3AoMC4wNSwgIzAwNjY5OSksIGNvbG9yLXN0b3AoMSwgIzAwNTU3RikgKTsNCgliYWNrZ3JvdW5kOi1tb3otbGluZWFyLWdyYWRpZW50KCBjZW50ZXIgdG9wLCAjMDA2Njk5IDUlLCAjMDA1NTdGIDEwMCUgKTsNCglmaWx0ZXI6cHJvZ2lkOkRYSW1hZ2VUcmFuc2Zvcm0uTWljcm9zb2Z0LmdyYWRpZW50KHN0YXJ0Q29sb3JzdHI9JyMwMDY2OTknLCBlbmRDb2xvcnN0cj0nIzAwNTU3RicpOw0KCWJhY2tncm91bmQtY29sb3I6IzAwNjY5OTsgY29sb3I6I2YwZjBmMDsgZm9udC1zaXplOiAxNXB4OyBmb250LXdlaWdodDogYm9sZDsgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjMDA3MEE4OyANCn0gDQouZGF0YWdyaWQgdGFibGUgdGhlYWQgdGg6Zmlyc3QtY2hpbGQgeyANCglib3JkZXI6IG5vbmU7IA0KfQ0KLmRhdGFncmlkIHRhYmxlIHRib2R5IHRkIHsNCgljb2xvcjogIzAwNDk2QjsgDQoJYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjRTFFRUY0Ow0KCWZvbnQtc2l6ZTogMTJweDsNCglmb250LXdlaWdodDogbm9ybWFsOw0KfQ0KLmRhdGFncmlkIHRkIHsNCgl2ZXJ0aWNhbC1hbGlnbjogdG9wOw0KfQ0KLmRhdGFncmlkIHRhYmxlIHRib2R5IA0KLmFsdCB0ZCB7IA0KCWJhY2tncm91bmQ6ICNFMUVFRjQ7IA0KCWNvbG9yOiAjMDA0OTZCOw0KfQ0KLmRhdGFncmlkIHRhYmxlIHRib2R5IHRkOmZpcnN0LWNoaWxkIHsgDQoJYm9yZGVyLWxlZnQ6IG5vbmU7IA0KfQ0KLmRhdGFncmlkIHRhYmxlIHRib2R5IHRyOmxhc3QtY2hpbGQgdGQgeyANCglib3JkZXItYm90dG9tOiBub25lOw0KfQ0KLmRhdGFncmlkIHRyOm50aC1jaGlsZChldmVuKSB7DQoJYmFja2dyb3VuZC1jb2xvcjogbGlnaHRncmVlbjsNCn0NCi5kYXRhZ3JpZCB0cjpudGgtY2hpbGQob2RkKSB7DQoJYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlOw0KfQ0KLmRhdGFncmlkIHAgew0KCW1hcmdpbjogMXB4Ow0KCXBhZGRpbmc6IDNweDsNCn0NCg0K`,
  }
